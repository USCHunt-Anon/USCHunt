
Begin IERC20.is_proxy (Slither line:1425)


End IERC20.is_proxy (Slither line:1428)


Begin IERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20 

End IERC20.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin SafeERC20.is_proxy (Slither line:1425)


End SafeERC20.is_proxy (Slither line:1428)


Begin SafeERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeERC20 

End SafeERC20.is_upgradeable_proxy (Slither line:1407)


Begin Initializable.is_proxy (Slither line:1425)


End Initializable.is_proxy (Slither line:1428)


Begin Initializable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Initializable 

End Initializable.is_upgradeable_proxy (Slither line:1407)


Begin IStrategy.is_proxy (Slither line:1425)


End IStrategy.is_proxy (Slither line:1428)


Begin IStrategy.is_upgradeable_proxy (Slither line:1136)

Checking contract: IStrategy 

End IStrategy.is_upgradeable_proxy (Slither line:1407)


Begin Governable.is_proxy (Slither line:1425)


End Governable.is_proxy (Slither line:1428)


Begin Governable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Governable 

End Governable.is_upgradeable_proxy (Slither line:1407)


Begin InitializableERC20Detailed.is_proxy (Slither line:1425)


End InitializableERC20Detailed.is_proxy (Slither line:1428)


Begin InitializableERC20Detailed.is_upgradeable_proxy (Slither line:1136)

Checking contract: InitializableERC20Detailed 

End InitializableERC20Detailed.is_upgradeable_proxy (Slither line:1407)


Begin StableMath.is_proxy (Slither line:1425)


End StableMath.is_proxy (Slither line:1428)


Begin StableMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: StableMath 

End StableMath.is_upgradeable_proxy (Slither line:1407)


Begin OUSD.is_proxy (Slither line:1425)


End OUSD.is_proxy (Slither line:1428)


Begin OUSD.is_upgradeable_proxy (Slither line:1136)

Checking contract: OUSD 

End OUSD.is_upgradeable_proxy (Slither line:1407)


Begin IBasicToken.is_proxy (Slither line:1425)


End IBasicToken.is_proxy (Slither line:1428)


Begin IBasicToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBasicToken 

End IBasicToken.is_upgradeable_proxy (Slither line:1407)


Begin Helpers.is_proxy (Slither line:1425)


End Helpers.is_proxy (Slither line:1428)


Begin Helpers.is_upgradeable_proxy (Slither line:1136)

Checking contract: Helpers 

End Helpers.is_upgradeable_proxy (Slither line:1407)


Begin VaultStorage.is_proxy (Slither line:1425)


End VaultStorage.is_proxy (Slither line:1428)


Begin VaultStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: VaultStorage 

End VaultStorage.is_upgradeable_proxy (Slither line:1407)


Begin IOracle.is_proxy (Slither line:1425)


End IOracle.is_proxy (Slither line:1428)


Begin IOracle.is_upgradeable_proxy (Slither line:1136)

Checking contract: IOracle 

End IOracle.is_upgradeable_proxy (Slither line:1407)


Begin IVault.is_proxy (Slither line:1425)


End IVault.is_proxy (Slither line:1428)


Begin IVault.is_upgradeable_proxy (Slither line:1136)

Checking contract: IVault 

End IVault.is_upgradeable_proxy (Slither line:1407)


Begin IBuyback.is_proxy (Slither line:1425)


End IBuyback.is_proxy (Slither line:1428)


Begin IBuyback.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBuyback 

End IBuyback.is_upgradeable_proxy (Slither line:1407)


Begin VaultCore.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin VaultCore.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), sload(slot), 0, calldatasize(), 0, 0) (Slither line:1576)
sload from variable: slot (Slither line:1599)
Found storage slot: adminImplPosition
Setting VaultCore._delegate_variable = VaultCore._proxy_impl_slot (Slither line:1609)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'slot'
Looking for corresponding Variable
Current function: fallback

End VaultCore.find_delegatecall_in_asm (Slither line:1637)


End VaultCore.is_proxy (Slither line:1476)


Begin VaultCore.is_upgradeable_proxy (Slither line:1136)

Checking contract: VaultCore 
Call destination adminImplPosition is constant (Slither line:1146)

adminImplPosition is the implementation storage slot (Slither line:1149)

VaultCore is delegating to adminImplPosition
Looking for setter (Slither line:1200)

Looking for setter in VaultStorage (Slither line:1204)


Begin VaultStorage.find_setter_in_contract (Slither line:3119)

Expression: 0xa2bd3d3cf188a41358c8b401076eb59066b09dec5775650c0de4c55187d17bd9 (Slither line:3122)
Checking function: setAdminImpl(address) returns() (Slither line:3127)
Visibility: external
setAdminImpl contains assembly (Slither line:3153)
msg.sender == _governor()
(codehash != accountHash && codehash != 0x0)
require(bool,string)(Address.isContract(newImpl),new implementation is not a contract)
{ sstore(position, newImpl) } (Slither line:3163)
setAdminImpl reads and/or writes to variable position (Slither line:3170)
setAdminImpl reads and/or writes to variable Address (Slither line:3170)
setAdminImpl reads and/or writes to variable adminImplPosition (Slither line:3170)
setAdminImpl reads and/or writes to variable newImpl (Slither line:3170)

End VaultStorage.find_setter_in_contract (Slither line:3345)


Implementation set by function: setAdminImpl in contract: VaultStorage (Slither line:1264)
Looking for getter (Slither line:1273)


Begin VaultStorage.find_getter_in_contract (Slither line:2974)

adminImplPosition is a Variable object
0xa2bd3d3cf188a41358c8b401076eb59066b09dec5775650c0de4c55187d17bd9
Checking function: constructor (Slither line:2988)
Checking function: governor (Slither line:2988)
governor returns address variable  (Slither line:3008)
RETURN node expression: _governor() (Slither line:3028)
Checking function: _governor (Slither line:2988)
_governor returns address variable called governorOut (Slither line:3008)
Checking function: _pendingGovernor (Slither line:2988)
_pendingGovernor returns address variable called pendingGovernor (Slither line:3008)
Checking function: isGovernor (Slither line:2988)
isGovernor returns bool variable  (Slither line:3008)
RETURN node expression: msg.sender == _governor() (Slither line:3028)
Checking function: _setGovernor (Slither line:2988)
Checking function: _setPendingGovernor (Slither line:2988)
Checking function: transferGovernance (Slither line:2988)
Checking function: claimGovernance (Slither line:2988)
Checking function: _changeGovernor (Slither line:2988)
Checking function: isConstructor (Slither line:2988)
isConstructor returns bool variable  (Slither line:3008)
RETURN node expression: cs == 0 (Slither line:3028)
Checking function: setAdminImpl (Slither line:2988)
Checking function: slitherConstructorVariables (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End VaultStorage.find_getter_in_contract (Slither line:3083)


Begin VaultCore.find_getter_in_contract (Slither line:2974)

adminImplPosition is a Variable object
0xa2bd3d3cf188a41358c8b401076eb59066b09dec5775650c0de4c55187d17bd9
Checking function: setAdminImpl (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: governor (Slither line:2988)
governor returns address variable  (Slither line:3008)
RETURN node expression: _governor() (Slither line:3028)
Checking function: _governor (Slither line:2988)
_governor returns address variable called governorOut (Slither line:3008)
_governor contains assembly (Slither line:3051)
_governor contains assembly (Slither line:3051)
_governor contains assembly (Slither line:3051)
Checking function: _pendingGovernor (Slither line:2988)
_pendingGovernor returns address variable called pendingGovernor (Slither line:3008)
_pendingGovernor contains assembly (Slither line:3051)
_pendingGovernor contains assembly (Slither line:3051)
_pendingGovernor contains assembly (Slither line:3051)
Checking function: isGovernor (Slither line:2988)
isGovernor returns bool variable  (Slither line:3008)
RETURN node expression: msg.sender == _governor() (Slither line:3028)
Checking function: _setGovernor (Slither line:2988)
Checking function: _setPendingGovernor (Slither line:2988)
Checking function: transferGovernance (Slither line:2988)
Checking function: claimGovernance (Slither line:2988)
Checking function: _changeGovernor (Slither line:2988)
Checking function: isConstructor (Slither line:2988)
isConstructor returns bool variable  (Slither line:3008)
isConstructor contains assembly (Slither line:3051)
RETURN node expression: cs == 0 (Slither line:3028)
isConstructor contains assembly (Slither line:3051)
isConstructor contains assembly (Slither line:3051)
isConstructor contains assembly (Slither line:3051)
isConstructor contains assembly (Slither line:3051)
Checking function: mint (Slither line:2988)
Checking function: mintMultiple (Slither line:2988)
Checking function: redeem (Slither line:2988)
Checking function: _redeem (Slither line:2988)
Checking function: redeemAll (Slither line:2988)
Checking function: allocate (Slither line:2988)
Checking function: _allocate (Slither line:2988)
Checking function: rebase (Slither line:2988)
Checking function: _rebase (Slither line:2988)
Checking function: totalValue (Slither line:2988)
totalValue returns uint256 variable called value (Slither line:3008)
Checking function: _totalValue (Slither line:2988)
_totalValue returns uint256 variable called value (Slither line:3008)
RETURN node expression: _totalValueInVault().add(_totalValueInStrategies()) (Slither line:3028)
Checking function: _totalValueInVault (Slither line:2988)
_totalValueInVault returns uint256 variable called value (Slither line:3008)
Checking function: _totalValueInStrategies (Slither line:2988)
_totalValueInStrategies returns uint256 variable called value (Slither line:3008)
Checking function: _totalValueInStrategy (Slither line:2988)
_totalValueInStrategy returns uint256 variable called value (Slither line:3008)
Checking function: checkBalance (Slither line:2988)
checkBalance returns uint256 variable  (Slither line:3008)
RETURN node expression: _checkBalance(_asset) (Slither line:3028)
Checking function: _checkBalance (Slither line:2988)
_checkBalance returns uint256 variable called balance (Slither line:3008)
Checking function: _checkBalance (Slither line:2988)
_checkBalance returns uint256 variable called balance (Slither line:3008)
Checking function: calculateRedeemOutputs (Slither line:2988)
calculateRedeemOutputs returns uint256[] variable  (Slither line:3008)
RETURN node expression: _calculateRedeemOutputs(_amount) (Slither line:3028)
Checking function: _calculateRedeemOutputs (Slither line:2988)
_calculateRedeemOutputs returns uint256[] variable called outputs (Slither line:3008)
Checking function: _getAssetPrices (Slither line:2988)
_getAssetPrices returns uint256[] variable called assetPrices (Slither line:3008)
Checking function: getAssetCount (Slither line:2988)
getAssetCount returns uint256 variable  (Slither line:3008)
RETURN node expression: allAssets.length (Slither line:3028)
Checking function: getAllAssets (Slither line:2988)
getAllAssets returns address[] variable  (Slither line:3008)
RETURN node expression: allAssets (Slither line:3028)
Checking function: getStrategyCount (Slither line:2988)
getStrategyCount returns uint256 variable  (Slither line:3008)
RETURN node expression: allStrategies.length (Slither line:3028)
Checking function: isSupportedAsset (Slither line:2988)
isSupportedAsset returns bool variable  (Slither line:3008)
RETURN node expression: assets[_asset].isSupported (Slither line:3028)
Checking function: fallback (Slither line:2988)
Checking function: slitherConstructorVariables (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End VaultCore.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in VaultCore (Slither line:1305)
or in VaultStorage (Slither line:1319)
Checking for adminImplPosition at slot 20 in contract OUSD (Slither line:1355)
Checking for None at slot 20 in contract VaultStorage (Slither line:1355)
Found adminImplPosition at slot 20 in contract VaultStorage (Slither line:1362)

Begin VaultStorage.find_getter_in_contract (Slither line:2974)

adminImplPosition is a Variable object
0xa2bd3d3cf188a41358c8b401076eb59066b09dec5775650c0de4c55187d17bd9
Checking function: constructor (Slither line:2988)
Checking function: governor (Slither line:2988)
governor returns address variable  (Slither line:3008)
RETURN node expression: _governor() (Slither line:3028)
Checking function: _governor (Slither line:2988)
_governor returns address variable called governorOut (Slither line:3008)
Checking function: _pendingGovernor (Slither line:2988)
_pendingGovernor returns address variable called pendingGovernor (Slither line:3008)
Checking function: isGovernor (Slither line:2988)
isGovernor returns bool variable  (Slither line:3008)
RETURN node expression: msg.sender == _governor() (Slither line:3028)
Checking function: _setGovernor (Slither line:2988)
Checking function: _setPendingGovernor (Slither line:2988)
Checking function: transferGovernance (Slither line:2988)
Checking function: claimGovernance (Slither line:2988)
Checking function: _changeGovernor (Slither line:2988)
Checking function: isConstructor (Slither line:2988)
isConstructor returns bool variable  (Slither line:3008)
RETURN node expression: cs == 0 (Slither line:3028)
Checking function: setAdminImpl (Slither line:2988)
Checking function: slitherConstructorVariables (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End VaultStorage.find_getter_in_contract (Slither line:3083)

detect_storage_slot: VaultCore
Setter found in contract VaultStorage
impl_address_from_contract_call: 0xa2bd3d3cf188a41358c8b401076eb59066b09dec5775650c0de4c55187d17bd9
impl_address_from_contract_call: StateVariable adminImplPosition
impl_address_from_contract_call: getter is None
Checking external function setAdminImpl
Found 'msg.sender ==' in expression: msg.sender == _governor()
Checking external function setAdminImpl
Found 'msg.sender ==' in expression: msg.sender == _governor()
Checking public function governor
Checking public function isGovernor
Found 'msg.sender ==' in expression: msg.sender == _governor()
Checking external function transferGovernance
Found 'msg.sender ==' in expression: msg.sender == _governor()
Checking external function claimGovernance
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == _pendingGovernor(),Only the pending Governor can complete the claim)
Checking external function mint
Checking external function mintMultiple
Checking public function redeem
Checking external function redeemAll
Checking public function allocate
Checking public function rebase
Checking external function totalValue
Checking external function checkBalance
Checking external function calculateRedeemOutputs
Checking public function getAssetCount
Checking external function getAllAssets
Checking external function getStrategyCount
Checking external function isSupportedAsset
Checking external function fallback
functions_writing_to_variable: adminImplPosition
functions_writing_to_variable: checking function VaultCore.transferGovernance (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore._pendingGovernor (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = governorPosition = 0x7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: governorPosition = 0x7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a (proxy_features line:912)
functions_writing_to_variable: exp = pendingGovernorPosition = 0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: pendingGovernorPosition = 0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db (proxy_features line:912)
functions_writing_to_variable: exp = reentryStatusPosition = 0x53bf423e48ed90e97d02ab0ebab13b2a235a6bfbe9c321847d5c175333ac4535 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: reentryStatusPosition = 0x53bf423e48ed90e97d02ab0ebab13b2a235a6bfbe9c321847d5c175333ac4535 (proxy_features line:912)
functions_writing_to_variable: exp = _NOT_ENTERED = 1 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: _NOT_ENTERED = 1 (proxy_features line:912)
functions_writing_to_variable: exp = _ENTERED = 2 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: _ENTERED = 2 (proxy_features line:912)
functions_writing_to_variable: exp = adminImplPosition = 0xa2bd3d3cf188a41358c8b401076eb59066b09dec5775650c0de4c55187d17bd9 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: adminImplPosition = 0xa2bd3d3cf188a41358c8b401076eb59066b09dec5775650c0de4c55187d17bd9 (proxy_features line:912)
functions_writing_to_variable: Identifier: adminImplPosition (proxy_features line:924)
get_value_assigned: adminImplPosition = 0xa2bd3d3cf188a41358c8b401076eb59066b09dec5775650c0de4c55187d17bd9
functions_writing_to_variable: exp = MAX_UINT = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: MAX_UINT = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff (proxy_features line:912)
functions_writing_to_variable: checking function VaultStorage.transferGovernance (proxy_features line:898)
functions_writing_to_variable: checking function VaultStorage._pendingGovernor (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore._rebase (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.mintMultiple (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.getStrategyCount (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore._checkBalance (proxy_features line:898)
functions_writing_to_variable: checking function VaultStorage.setAdminImpl (proxy_features line:898)
functions_writing_to_variable: found sstore:
{ sstore(position, newImpl) }
(proxy_features line:953)
newImpl
functions_writing_to_variable: setAdminImpl writes newImpl to adminImplPosition w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function VaultCore.totalValue (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.redeem (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.claimGovernance (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.isSupportedAsset (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.isGovernor (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore._checkBalance (proxy_features line:898)
functions_writing_to_variable: checking function VaultStorage.claimGovernance (proxy_features line:898)
functions_writing_to_variable: checking function VaultStorage.isGovernor (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.setAdminImpl (proxy_features line:898)
functions_writing_to_variable: found sstore:
{ sstore(position, newImpl) }
(proxy_features line:953)
newImpl
functions_writing_to_variable: setAdminImpl writes newImpl to adminImplPosition w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function VaultCore.constructor (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore._totalValue (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore._redeem (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.fallback (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.calculateRedeemOutputs (proxy_features line:898)
functions_writing_to_variable: checking function VaultStorage.slitherConstructorVariables (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore._changeGovernor (proxy_features line:898)
functions_writing_to_variable: checking function VaultStorage.constructor (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore._setGovernor (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore._totalValueInVault (proxy_features line:898)
functions_writing_to_variable: checking function VaultStorage._changeGovernor (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.redeemAll (proxy_features line:898)
functions_writing_to_variable: checking function VaultStorage._setGovernor (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore._calculateRedeemOutputs (proxy_features line:898)
functions_writing_to_variable: checking function VaultStorage.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = governorPosition = 0x7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: governorPosition = 0x7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a (proxy_features line:912)
functions_writing_to_variable: exp = pendingGovernorPosition = 0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: pendingGovernorPosition = 0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db (proxy_features line:912)
functions_writing_to_variable: exp = reentryStatusPosition = 0x53bf423e48ed90e97d02ab0ebab13b2a235a6bfbe9c321847d5c175333ac4535 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: reentryStatusPosition = 0x53bf423e48ed90e97d02ab0ebab13b2a235a6bfbe9c321847d5c175333ac4535 (proxy_features line:912)
functions_writing_to_variable: exp = _NOT_ENTERED = 1 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: _NOT_ENTERED = 1 (proxy_features line:912)
functions_writing_to_variable: exp = _ENTERED = 2 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: _ENTERED = 2 (proxy_features line:912)
functions_writing_to_variable: exp = adminImplPosition = 0xa2bd3d3cf188a41358c8b401076eb59066b09dec5775650c0de4c55187d17bd9 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: adminImplPosition = 0xa2bd3d3cf188a41358c8b401076eb59066b09dec5775650c0de4c55187d17bd9 (proxy_features line:912)
functions_writing_to_variable: Identifier: adminImplPosition (proxy_features line:924)
get_value_assigned: adminImplPosition = 0xa2bd3d3cf188a41358c8b401076eb59066b09dec5775650c0de4c55187d17bd9
functions_writing_to_variable: checking function VaultCore.governor (proxy_features line:898)
functions_writing_to_variable: checking function VaultStorage.governor (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.isConstructor (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore._totalValueInStrategies (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.allocate (proxy_features line:898)
functions_writing_to_variable: checking function VaultStorage.isConstructor (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore._getAssetPrices (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.slitherConstructorVariables (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore._governor (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore._setPendingGovernor (proxy_features line:898)
functions_writing_to_variable: checking function VaultStorage._governor (proxy_features line:898)
functions_writing_to_variable: checking function VaultStorage._setPendingGovernor (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore._allocate (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore._totalValueInStrategy (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.getAssetCount (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.mint (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.rebase (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.checkBalance (proxy_features line:898)
functions_writing_to_variable: checking function VaultCore.getAllAssets (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: checking external function setAdminImpl
require(bool,string)(Address.isContract(newImpl),new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImpl)
check_condition_from_expression: modifier calls: ['onlyGovernor()']
require(bool,string)(isGovernor(),Caller is not the Governor)
has_compatibility_checks: condition isGovernor()
has_compatibility_checks: checking external function setAdminImpl
require(bool,string)(Address.isContract(newImpl),new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImpl)
check_condition_from_expression: modifier calls: ['onlyGovernor()']
require(bool,string)(isGovernor(),Caller is not the Governor)
has_compatibility_checks: condition isGovernor()
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), sload(slot), 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: slot = adminImplPosition
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
Found external function: setAdminImpl
has_time_delay: (node.type) RETURN
(Expression) msg.sender == _governor()
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = adminImplPosition
has_time_delay: (node.type) RETURN
(Expression) (codehash != accountHash && codehash != 0x0)
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = governorPosition
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(Address.isContract(newImpl),new implementation is not a contract)
has_time_delay: (node.type) NEW VARIABLE
(Expression) accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(isGovernor(),Caller is not the Governor)
has_time_delay: (node.type) EXPRESSION
(Expression) onlyGovernor()
