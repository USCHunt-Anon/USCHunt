
Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin Governable.is_proxy (Slither line:1425)


End Governable.is_proxy (Slither line:1428)


Begin Governable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Governable 

End Governable.is_upgradeable_proxy (Slither line:1407)


Begin InitializeGovernedUpgradeabilityProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin InitializeGovernedUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:2802)
Expression called: calldatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
0
calldatasize()()

End InitializeGovernedUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin InitializeGovernedUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_impl,0,calldatasize()(),0,0) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2817)
Args:
gas()()
_impl
0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2824)

Destination is _impl (Slither line:2828)
dest.value: _impl (Slither line:2831)
Expression: None (Slither line:2836)

Begin InitializeGovernedUpgradeabilityProxy.find_delegate_variable_from_name
Searching for _impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking governorPosition (Slither line:1689)
Checking pendingGovernorPosition (Slither line:1689)
Checking reentryStatusPosition (Slither line:1689)
Checking _NOT_ENTERED (Slither line:1689)
Checking _ENTERED (Slither line:1689)
Checking IMPLEMENTATION_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking _impl (Slither line:1800)
_impl is a Parameter in InitializeGovernedUpgradeabilityProxy._delegate (Slither line:1805)
CallExpression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:1819)
AssignmentOperation: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_impl,0,calldatasize()(),0,0) (Slither line:1811)
CallExpression: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_impl,0,calldatasize()(),0,0) (Slither line:1819)
AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
CallExpression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:1819)
AssignmentOperation: result__delegate_asm_0 (Slither line:1811)
AssignmentOperation: sload(uint256)(slot) (Slither line:1811)
CallExpression: sload(uint256)(slot) (Slither line:1819)
CallExpression: _fallback() (Slither line:1819)
CallExpression: _willFallback() (Slither line:1819)
CallExpression: revert(uint256,uint256)(0,returndatasize()()) (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin InitializeGovernedUpgradeabilityProxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
AssignmentOperation: impl = sload(uint256)(slot) (Slither line:2117)
CallExpression: sload(uint256) (Slither line:2123)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2140)
_implementation returns a variable of type address   called impl (Slither line:2193)
_implementation contains assembly - looking for sload (Slither line:2199)

End InitializeGovernedUpgradeabilityProxy.find_delegate_from_call_exp (Slither line:2328)

CallExpression: return(uint256,uint256)(0,returndatasize()()) (Slither line:1819)
_delegate contains assembly, searching for sload (Slither line:1875)

End InitializeGovernedUpgradeabilityProxy.find_delegate_variable_from_name (Slither line:1949)


End InitializeGovernedUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2858)

Setting InitializeGovernedUpgradeabilityProxy._delegate_variable = InitializeGovernedUpgradeabilityProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End InitializeGovernedUpgradeabilityProxy.is_proxy (Slither line:1476)


Begin InitializeGovernedUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: InitializeGovernedUpgradeabilityProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

InitializeGovernedUpgradeabilityProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)


Begin InitializeGovernedUpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: initialize(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
_governor()
governorOut = sload(uint256)(position)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
impl = sload(uint256)(slot)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_implementation()
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
sstore(uint256,uint256)(slot,newImplementation)
sstore(uint256,uint256)

End InitializeGovernedUpgradeabilityProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: InitializeGovernedUpgradeabilityProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin InitializeGovernedUpgradeabilityProxy.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: constructor (Slither line:2988)
Checking function: governor (Slither line:2988)
governor returns address variable  (Slither line:3008)
RETURN node expression: _governor() (Slither line:3028)
Checking function: _governor (Slither line:2988)
_governor returns address variable called governorOut (Slither line:3008)
_governor contains assembly (Slither line:3051)
_governor contains assembly (Slither line:3051)
_governor contains assembly (Slither line:3051)
_governor contains assembly (Slither line:3051)
Checking function: _pendingGovernor (Slither line:2988)
_pendingGovernor returns address variable called pendingGovernor (Slither line:3008)
_pendingGovernor contains assembly (Slither line:3051)
_pendingGovernor contains assembly (Slither line:3051)
_pendingGovernor contains assembly (Slither line:3051)
_pendingGovernor contains assembly (Slither line:3051)
Checking function: isGovernor (Slither line:2988)
isGovernor returns bool variable  (Slither line:3008)
RETURN node expression: msg.sender == _governor() (Slither line:3028)
Checking function: _setGovernor (Slither line:2988)
Checking function: _setPendingGovernor (Slither line:2988)
Checking function: transferGovernance (Slither line:2988)
Checking function: claimGovernance (Slither line:2988)
Checking function: _changeGovernor (Slither line:2988)
Checking function: initialize (Slither line:2988)
Checking function: admin (Slither line:2988)
admin returns address variable  (Slither line:3008)
RETURN node expression: _governor() (Slither line:3028)
Checking function: implementation (Slither line:2988)
implementation returns address variable  (Slither line:3008)
RETURN node expression: _implementation() (Slither line:3028)
Checking function: upgradeTo (Slither line:2988)
Checking function: upgradeToAndCall (Slither line:2988)
Checking function: fallback (Slither line:2988)
Checking function: _delegate (Slither line:2988)
Checking function: _willFallback (Slither line:2988)
Checking function: _fallback (Slither line:2988)
Checking function: _implementation (Slither line:2988)
_implementation returns address variable called impl (Slither line:3008)
_implementation contains assembly (Slither line:3051)
_implementation contains assembly (Slither line:3051)

End InitializeGovernedUpgradeabilityProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: _implementation in contract: InitializeGovernedUpgradeabilityProxy (Slither line:1285)

End InitializeGovernedUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: InitializeGovernedUpgradeabilityProxy
Setter found in contract InitializeGovernedUpgradeabilityProxy
Checking public function governor
Checking public function isGovernor
Found 'msg.sender ==' in expression: msg.sender == _governor()
Checking external function transferGovernance
Found 'msg.sender ==' in expression: msg.sender == _governor()
Checking external function claimGovernance
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == _pendingGovernor(),Only the pending Governor can complete the claim)
Checking public function initialize
Found 'msg.sender ==' in expression: msg.sender == _governor()
Checking external function admin
Checking external function implementation
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _governor()
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _governor()
Checking external function fallback
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy.transferGovernance (proxy_features line:898)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy._pendingGovernor (proxy_features line:898)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy.upgradeTo (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(slot,newImplementation)
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT using sstore (proxy_features line:998)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy._upgradeTo (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(slot,newImplementation)
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT using sstore (proxy_features line:998)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy.upgradeToAndCall (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(slot,newImplementation)
functions_writing_to_variable: upgradeToAndCall writes newImplementation to IMPLEMENTATION_SLOT using sstore (proxy_features line:998)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy.claimGovernance (proxy_features line:898)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy._setImplementation (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(slot,newImplementation)
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT using sstore (proxy_features line:998)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy.isGovernor (proxy_features line:898)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy.constructor (proxy_features line:898)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy._changeGovernor (proxy_features line:898)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy._setGovernor (proxy_features line:898)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy.governor (proxy_features line:898)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy.initialize (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(slot,newImplementation)
functions_writing_to_variable: initialize writes newImplementation to IMPLEMENTATION_SLOT using sstore (proxy_features line:998)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy._governor (proxy_features line:898)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy._setPendingGovernor (proxy_features line:898)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function InitializeGovernedUpgradeabilityProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = governorPosition = 0x7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: governorPosition = 0x7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a (proxy_features line:912)
functions_writing_to_variable: exp = pendingGovernorPosition = 0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: pendingGovernorPosition = 0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db (proxy_features line:912)
functions_writing_to_variable: exp = reentryStatusPosition = 0x53bf423e48ed90e97d02ab0ebab13b2a235a6bfbe9c321847d5c175333ac4535 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: reentryStatusPosition = 0x53bf423e48ed90e97d02ab0ebab13b2a235a6bfbe9c321847d5c175333ac4535 (proxy_features line:912)
functions_writing_to_variable: exp = _NOT_ENTERED = 1 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: _NOT_ENTERED = 1 (proxy_features line:912)
functions_writing_to_variable: exp = _ENTERED = 2 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: _ENTERED = 2 (proxy_features line:912)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:924)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
has_compatibility_checks: dependencies: []
has_compatibility_checks: checking external function upgradeTo
require(bool,string)(isGovernor(),Caller is not the Governor)
has_compatibility_checks: condition isGovernor()
require(bool,string)(Address.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['onlyGovernor()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: checking external function upgradeToAndCall
require(bool,string)(isGovernor(),Caller is not the Governor)
has_compatibility_checks: condition isGovernor()
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(Address.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['onlyGovernor()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: checking public function initialize
require(bool,string)(isGovernor(),Caller is not the Governor)
has_compatibility_checks: condition isGovernor()
require(bool,string)(_newGovernor != address(0),New Governor is address(0))
has_compatibility_checks: condition _newGovernor != address(0)
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
has_compatibility_checks: IF node exp = _data.length > 0
require(bool,string)(Address.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['onlyGovernor()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_impl,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
Found public function: constructor
Found public function: governor
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) EXPRESSION
(Expression) sstore(uint256,uint256)(slot,newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(isGovernor(),Caller is not the Governor)
has_time_delay: (node.type) EXPRESSION
(Expression) onlyGovernor()
has_time_delay: (node.type) EXPRESSION
(Expression) governorOut = sload(uint256)(position)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) RETURN
(Expression) msg.sender == _governor()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(Address.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = governorPosition
