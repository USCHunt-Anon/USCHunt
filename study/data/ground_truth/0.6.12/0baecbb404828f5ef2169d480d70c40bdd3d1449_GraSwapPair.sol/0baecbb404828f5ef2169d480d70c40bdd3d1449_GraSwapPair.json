{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "GraSwapPairProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.12/0baecbb404828f5ef2169d480d70c40bdd3d1449_GraSwapPair.sol/0baecbb404828f5ef2169d480d70c40bdd3d1449_GraSwapPair.sol#1653-1724)",
        "elements": [],
        "description": "GraSwapPairProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.12/0baecbb404828f5ef2169d480d70c40bdd3d1449_GraSwapPair.sol/0baecbb404828f5ef2169d480d70c40bdd3d1449_GraSwapPair.sol#1653-1724) may be an upgradeable proxy.\nimpl is declared in the proxy.\nGraSwapPairProxy.fallback().impl (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.12/0baecbb404828f5ef2169d480d70c40bdd3d1449_GraSwapPair.sol/0baecbb404828f5ef2169d480d70c40bdd3d1449_GraSwapPair.sol#1696) gets value from a cross-contract call: IGraSwapFactory(address(_immuFactory)).pairLogic()\nIGraSwapFactory appears to be a Beacon contract for the proxy\nNo setter functions found to search for compatibility checks.\n",
        "id": "ca58d09e235d20092017486b07d0260b318214c916d2983d6b21b7ad9c423b2a",
        "features": {
          "upgradeable": "maybe",
          "impl_address_variable": "GraSwapPairProxy.fallback().impl",
          "impl_address_setter": "not found",
          "impl_address_getter": "not found",
          "impl_address_location": "GraSwapPairProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.12/0baecbb404828f5ef2169d480d70c40bdd3d1449_GraSwapPair.sol/0baecbb404828f5ef2169d480d70c40bdd3d1449_GraSwapPair.sol#1653-1724)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "IGraSwapFactory(address(_immuFactory)).pairLogic()",
          "beacon": "IGraSwapFactory",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": "no setters found"
          },
          "can_remove_upgradeability": false
        }
      }
    ]
  }
}