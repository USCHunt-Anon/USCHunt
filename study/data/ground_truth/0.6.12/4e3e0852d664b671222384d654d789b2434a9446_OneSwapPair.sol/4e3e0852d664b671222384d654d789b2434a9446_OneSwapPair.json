{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "OneSwapPairProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.12/4e3e0852d664b671222384d654d789b2434a9446_OneSwapPair.sol/4e3e0852d664b671222384d654d789b2434a9446_OneSwapPair.sol#1660-1731)",
        "elements": [],
        "description": "OneSwapPairProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.12/4e3e0852d664b671222384d654d789b2434a9446_OneSwapPair.sol/4e3e0852d664b671222384d654d789b2434a9446_OneSwapPair.sol#1660-1731) may be an upgradeable proxy.\nimpl is declared in the proxy.\nOneSwapPairProxy.fallback().impl (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.12/4e3e0852d664b671222384d654d789b2434a9446_OneSwapPair.sol/4e3e0852d664b671222384d654d789b2434a9446_OneSwapPair.sol#1703) gets value from a cross-contract call: IOneSwapFactory(address(_immuFactory)).pairLogic()\nIOneSwapFactory appears to be a Beacon contract for the proxy\nNo setter functions found to search for compatibility checks.\n",
        "id": "9c0b20f03051f8df495a36362629948f01ab19c1d9efd548935b584945dfdf51",
        "features": {
          "upgradeable": "maybe",
          "impl_address_variable": "OneSwapPairProxy.fallback().impl",
          "impl_address_setter": "not found",
          "impl_address_getter": "not found",
          "impl_address_location": "OneSwapPairProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.12/4e3e0852d664b671222384d654d789b2434a9446_OneSwapPair.sol/4e3e0852d664b671222384d654d789b2434a9446_OneSwapPair.sol#1660-1731)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "IOneSwapFactory(address(_immuFactory)).pairLogic()",
          "beacon": "IOneSwapFactory",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": "no setters found"
          },
          "can_remove_upgradeability": false
        }
      }
    ]
  }
}