
Begin ERC20Basic.is_proxy (Slither line:1425)


End ERC20Basic.is_proxy (Slither line:1428)


Begin ERC20Basic.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20Basic 

End ERC20Basic.is_upgradeable_proxy (Slither line:1407)


Begin ERC20.is_proxy (Slither line:1425)


End ERC20.is_proxy (Slither line:1428)


Begin ERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20 

End ERC20.is_upgradeable_proxy (Slither line:1407)


Begin DetailedERC20.is_proxy (Slither line:1425)


End DetailedERC20.is_proxy (Slither line:1428)


Begin DetailedERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: DetailedERC20 

End DetailedERC20.is_upgradeable_proxy (Slither line:1407)


Begin IAMB.is_proxy (Slither line:1425)


End IAMB.is_proxy (Slither line:1428)


Begin IAMB.is_upgradeable_proxy (Slither line:1136)

Checking contract: IAMB 

End IAMB.is_upgradeable_proxy (Slither line:1407)


Begin ERC677.is_proxy (Slither line:1425)


End ERC677.is_proxy (Slither line:1428)


Begin ERC677.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC677 

End ERC677.is_upgradeable_proxy (Slither line:1407)


Begin LegacyERC20.is_proxy (Slither line:1425)


End LegacyERC20.is_proxy (Slither line:1428)


Begin LegacyERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: LegacyERC20 

End LegacyERC20.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin EternalStorage.is_proxy (Slither line:1425)


End EternalStorage.is_proxy (Slither line:1428)


Begin EternalStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: EternalStorage 

End EternalStorage.is_upgradeable_proxy (Slither line:1407)


Begin IUpgradeabilityOwnerStorage.is_proxy (Slither line:1425)


End IUpgradeabilityOwnerStorage.is_proxy (Slither line:1428)


Begin IUpgradeabilityOwnerStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: IUpgradeabilityOwnerStorage 

End IUpgradeabilityOwnerStorage.is_upgradeable_proxy (Slither line:1407)


Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin BasicMultiTokenBridge.is_proxy (Slither line:1425)


End BasicMultiTokenBridge.is_proxy (Slither line:1428)


Begin BasicMultiTokenBridge.is_upgradeable_proxy (Slither line:1136)

Checking contract: BasicMultiTokenBridge 

End BasicMultiTokenBridge.is_upgradeable_proxy (Slither line:1407)


Begin Bytes.is_proxy (Slither line:1425)


End Bytes.is_proxy (Slither line:1428)


Begin Bytes.is_upgradeable_proxy (Slither line:1136)

Checking contract: Bytes 

End Bytes.is_upgradeable_proxy (Slither line:1407)


Begin AddressUtils.is_proxy (Slither line:1425)


End AddressUtils.is_proxy (Slither line:1428)


Begin AddressUtils.is_upgradeable_proxy (Slither line:1136)

Checking contract: AddressUtils 

End AddressUtils.is_upgradeable_proxy (Slither line:1407)


Begin BasicAMBMediator.is_proxy (Slither line:1425)


End BasicAMBMediator.is_proxy (Slither line:1428)


Begin BasicAMBMediator.is_upgradeable_proxy (Slither line:1136)

Checking contract: BasicAMBMediator 

End BasicAMBMediator.is_upgradeable_proxy (Slither line:1407)


Begin ChooseReceiverHelper.is_proxy (Slither line:1425)


End ChooseReceiverHelper.is_proxy (Slither line:1428)


Begin ChooseReceiverHelper.is_upgradeable_proxy (Slither line:1136)

Checking contract: ChooseReceiverHelper 

End ChooseReceiverHelper.is_upgradeable_proxy (Slither line:1407)


Begin TransferInfoStorage.is_proxy (Slither line:1425)


End TransferInfoStorage.is_proxy (Slither line:1428)


Begin TransferInfoStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: TransferInfoStorage 

End TransferInfoStorage.is_upgradeable_proxy (Slither line:1407)


Begin MultiTokenBridgeMediator.is_proxy (Slither line:1425)


End MultiTokenBridgeMediator.is_proxy (Slither line:1428)


Begin MultiTokenBridgeMediator.is_upgradeable_proxy (Slither line:1136)

Checking contract: MultiTokenBridgeMediator 

End MultiTokenBridgeMediator.is_upgradeable_proxy (Slither line:1407)


Begin Initializable.is_proxy (Slither line:1425)


End Initializable.is_proxy (Slither line:1428)


Begin Initializable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Initializable 

End Initializable.is_upgradeable_proxy (Slither line:1407)


Begin ReentrancyGuard.is_proxy (Slither line:1425)


End ReentrancyGuard.is_proxy (Slither line:1428)


Begin ReentrancyGuard.is_upgradeable_proxy (Slither line:1136)

Checking contract: ReentrancyGuard 

End ReentrancyGuard.is_upgradeable_proxy (Slither line:1407)


Begin Upgradeable.is_proxy (Slither line:1425)


End Upgradeable.is_proxy (Slither line:1428)


Begin Upgradeable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Upgradeable 

End Upgradeable.is_upgradeable_proxy (Slither line:1407)


Begin Sacrifice.is_proxy (Slither line:1425)


End Sacrifice.is_proxy (Slither line:1428)


Begin Sacrifice.is_upgradeable_proxy (Slither line:1136)

Checking contract: Sacrifice 

End Sacrifice.is_upgradeable_proxy (Slither line:1407)


Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin SafeERC20.is_proxy (Slither line:1425)


End SafeERC20.is_proxy (Slither line:1428)


Begin SafeERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeERC20 

End SafeERC20.is_upgradeable_proxy (Slither line:1407)


Begin Claimable.is_proxy (Slither line:1425)


End Claimable.is_proxy (Slither line:1428)


Begin Claimable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Claimable 

End Claimable.is_upgradeable_proxy (Slither line:1407)


Begin VersionableBridge.is_proxy (Slither line:1425)


End VersionableBridge.is_proxy (Slither line:1428)


Begin VersionableBridge.is_upgradeable_proxy (Slither line:1136)

Checking contract: VersionableBridge 

End VersionableBridge.is_upgradeable_proxy (Slither line:1407)


Begin BasicMultiAMBErc20ToErc677.is_proxy (Slither line:1425)


End BasicMultiAMBErc20ToErc677.is_proxy (Slither line:1428)


Begin BasicMultiAMBErc20ToErc677.is_upgradeable_proxy (Slither line:1136)

Checking contract: BasicMultiAMBErc20ToErc677 

End BasicMultiAMBErc20ToErc677.is_upgradeable_proxy (Slither line:1407)


Begin Proxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool)(_impl != address(0)) (Slither line:2802)
Expression called: require(bool)
Type of call: tuple() (Slither line:2817)
Args:
_impl != address(0)

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let ptr := mload(0x40) (Slither line:1576)
    calldatacopy(ptr, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called '_impl'
Looking for corresponding Variable
Current function: fallback

Begin Proxy.find_delegate_variable_from_name
Searching for _impl (Slither line:1674)

Searching State Variables (Slither line:1687)

Searching Local Variables (Slither line:1698)
Checking _impl (Slither line:1703)
_impl is a Local Variable in Proxy.fallback (Slither line:1707)
Expression: implementation() (Slither line:1719)

Begin Proxy.find_delegate_from_call_exp

implementation() (Slither line:2003)
called = implementation (Slither line:2010)
Got abstract function, looking for overriding function (Slither line:2025)
Failure (Slither line:2033)
implementation returns a variable of type address   (Slither line:2193)
Return value is LocalVariable:  (Slither line:2266)
has no expression (Slither line:2326)

End Proxy.find_delegate_from_call_exp (Slither line:2328)

Call Expression
End Proxy.find_delegate_variable_by_name (Slither line:1739)


Begin Proxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2683)


End Proxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2710)


End Proxy.find_delegatecall_in_asm (Slither line:1637)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 

End Proxy.is_upgradeable_proxy (Slither line:1407)


Begin IBridgeMediator.is_proxy (Slither line:1425)


End IBridgeMediator.is_proxy (Slither line:1428)


Begin IBridgeMediator.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBridgeMediator 

End IBridgeMediator.is_upgradeable_proxy (Slither line:1407)


Begin IPermittableTokenVersion.is_proxy (Slither line:1425)


End IPermittableTokenVersion.is_proxy (Slither line:1428)


Begin IPermittableTokenVersion.is_upgradeable_proxy (Slither line:1136)

Checking contract: IPermittableTokenVersion 

End IPermittableTokenVersion.is_upgradeable_proxy (Slither line:1407)


Begin TokenProxy.is_proxy (Slither line:1425)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin TokenProxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool)(_impl != address(0)) (Slither line:2802)
Expression called: require(bool)
Type of call: tuple() (Slither line:2817)
Args:
_impl != address(0)

End TokenProxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin TokenProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let ptr := mload(0x40) (Slither line:1576)
    calldatacopy(ptr, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called '_impl'
Looking for corresponding Variable
Current function: fallback

Begin TokenProxy.find_delegate_variable_from_name
Searching for _impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking name (Slither line:1689)
Checking symbol (Slither line:1689)
Checking decimals (Slither line:1689)
Checking balances (Slither line:1689)
Checking totalSupply (Slither line:1689)
Checking allowed (Slither line:1689)
Checking owner (Slither line:1689)
Checking mintingFinished (Slither line:1689)
Checking bridgeContractAddr (Slither line:1689)
Checking DOMAIN_SEPARATOR (Slither line:1689)
Checking nonces (Slither line:1689)
Checking expirations (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking _impl (Slither line:1703)
_impl is a Local Variable in TokenProxy.fallback (Slither line:1707)
Expression: implementation() (Slither line:1719)

Begin TokenProxy.find_delegate_from_call_exp

implementation() (Slither line:2003)
called = implementation (Slither line:2010)
Return node of function TokenProxy.implementation(): RETURN IBridgeMediator(bridgeContractAddr).tokenImage() (Slither line:2041)
Encountered call expression at RETURN node: IBridgeMediator(bridgeContractAddr).tokenImage() (Slither line:2053)
Encountered member access expression: IBridgeMediator(bridgeContractAddr).tokenImage (Slither line:2057)

Begin TokenProxy.find_delegate_from_member_access

Expression: IBridgeMediator(bridgeContractAddr).tokenImage (Slither line:2358)
IBridgeMediator(bridgeContractAddr) (Slither line:2371)
tokenImage is a member of the contract type: IBridgeMediator (Slither line:2416)
Which is an interface (Slither line:2420)
Could not find a contract that inherits IBridgeMediator (Slither line:2441)

End TokenProxy.find_delegate_from_call_exp (Slither line:2104)

Call Expression
End TokenProxy.find_delegate_variable_by_name (Slither line:1739)


End TokenProxy.find_delegatecall_in_asm (Slither line:1637)


End TokenProxy.is_proxy (Slither line:1476)


Begin TokenProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenProxy 
Local Variable: _impl (Slither line:1164)
TokenProxy is delegating to _impl
Looking for setter (Slither line:1200)


Begin TokenProxy.find_setter_in_contract (Slither line:3119)

Expression: implementation() (Slither line:3122)
Checking function: constructor(address,string,string,uint8,uint256) returns() (Slither line:3127)
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: public
IBridgeMediator(bridgeContractAddr).tokenImage()
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: public
Checking function: fallback() returns() (Slither line:3127)

End TokenProxy.find_setter_in_contract (Slither line:3345)


Could not find implementation setter in TokenProxy (Slither line:1269)
Looking for getter (Slither line:1273)


Begin TokenProxy.find_getter_in_contract (Slither line:2974)

_impl is a Variable object
implementation()
Checking function: fallback (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: implementation (Slither line:2988)

implementation appears to be the implementation getter (Slither line:2993)


End TokenProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: implementation in contract: TokenProxy (Slither line:1285)

Begin TokenProxy.getter_return_is_non_constant (Slither line:2883)

Found getter function but not setter
Checking if getter calls any other function
RETURN: IBridgeMediator(bridgeContractAddr).tokenImage() (Slither line:2888)

End TokenProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: TokenProxy
_impl is dependent on bridgeContractAddr
Expression for _impl: implementation()
Called: implementation
impl_address_from_contract_call: implementation()
called: implementation
implementation returns IBridgeMediator(bridgeContractAddr).tokenImage()
called: IBridgeMediator(bridgeContractAddr).tokenImage
found MemberAccess: IBridgeMediator(bridgeContractAddr).tokenImage
TypeConversion: IBridgeMediator(bridgeContractAddr)
find_registry_address_source: IBridgeMediator(bridgeContractAddr).tokenImage()
MemberAccess: IBridgeMediator(bridgeContractAddr).tokenImage
TypeConversion: IBridgeMediator(bridgeContractAddr)
Identifier: bridgeContractAddr
Checking public function implementation
Checking public function implementation
Checking public function fallback
functions_writing_to_variable: _impl
functions_writing_to_variable: checking function TokenProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function TokenProxy.constructor (proxy_features line:898)
functions_writing_to_variable: checking function TokenProxy.implementation (proxy_features line:898)
has_compatibility_checks: dependencies: ['impl', 'TMP_968', 'bridgeContractAddr', 'TMP_954', 'TMP_969']
functions_writing_to_variable: bridgeContractAddr
functions_writing_to_variable: checking function TokenProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function TokenProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function TokenProxy.constructor (proxy_features line:898)
functions_writing_to_variable: exp = version = IPermittableTokenVersion(_tokenImage).version() (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: version = IPermittableTokenVersion(_tokenImage).version() (proxy_features line:912)
functions_writing_to_variable: exp = name = _name (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: name = _name (proxy_features line:912)
functions_writing_to_variable: exp = symbol = _symbol (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: symbol = _symbol (proxy_features line:912)
functions_writing_to_variable: exp = decimals = _decimals (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: decimals = _decimals (proxy_features line:912)
functions_writing_to_variable: exp = owner = msg.sender (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: owner = msg.sender (proxy_features line:912)
functions_writing_to_variable: exp = bridgeContractAddr = msg.sender (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: bridgeContractAddr = msg.sender (proxy_features line:912)
functions_writing_to_variable: Identifier: bridgeContractAddr (proxy_features line:924)
get_value_assigned: bridgeContractAddr = msg.sender
functions_writing_to_variable: exp = DOMAIN_SEPARATOR = keccak256()(abi.encode(keccak256()(EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)),keccak256()(bytes(_name)),keccak256()(bytes(version)),_chainId,address(this))) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: DOMAIN_SEPARATOR = keccak256()(abi.encode(keccak256()(EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)),keccak256()(bytes(_name)),keccak256()(bytes(version)),_chainId,address(this))) (proxy_features line:912)
functions_writing_to_variable: constructor writes msg.sender to bridgeContractAddr (proxy_features line:929)
functions_writing_to_variable: checking function TokenProxy.implementation (proxy_features line:898)
has_compatibility_checks: skipping constructor
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    let ptr := mload(0x40)
    calldatacopy(ptr, 0, calldatasize())
    let result := delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)
    mstore(0x40, add(ptr, returndatasize()))
    returndatacopy(ptr, 0, returndatasize())
    switch result
    case 0 {
        revert(ptr, returndatasize())
    }
    default {
        return(ptr, returndatasize())
    }
}
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool)(_impl != address(0))
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: _impl = implementation()
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: implementation

Begin BaseRewardAddressList.is_proxy (Slither line:1425)


End BaseRewardAddressList.is_proxy (Slither line:1428)


Begin BaseRewardAddressList.is_upgradeable_proxy (Slither line:1136)

Checking contract: BaseRewardAddressList 

End BaseRewardAddressList.is_upgradeable_proxy (Slither line:1407)


Begin IBurnableMintableERC677Token.is_proxy (Slither line:1425)


End IBurnableMintableERC677Token.is_proxy (Slither line:1428)


Begin IBurnableMintableERC677Token.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBurnableMintableERC677Token 

End IBurnableMintableERC677Token.is_upgradeable_proxy (Slither line:1407)


Begin HomeFeeManagerMultiAMBErc20ToErc677.is_proxy (Slither line:1425)


End HomeFeeManagerMultiAMBErc20ToErc677.is_proxy (Slither line:1428)


Begin HomeFeeManagerMultiAMBErc20ToErc677.is_upgradeable_proxy (Slither line:1136)

Checking contract: HomeFeeManagerMultiAMBErc20ToErc677 

End HomeFeeManagerMultiAMBErc20ToErc677.is_upgradeable_proxy (Slither line:1407)


Begin IBridgeUtils.is_proxy (Slither line:1425)


End IBridgeUtils.is_proxy (Slither line:1428)


Begin IBridgeUtils.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBridgeUtils 

End IBridgeUtils.is_upgradeable_proxy (Slither line:1407)


Begin MultiTokenForwardingRules.is_proxy (Slither line:1425)


End MultiTokenForwardingRules.is_proxy (Slither line:1428)


Begin MultiTokenForwardingRules.is_upgradeable_proxy (Slither line:1136)

Checking contract: MultiTokenForwardingRules 

End MultiTokenForwardingRules.is_upgradeable_proxy (Slither line:1407)


Begin HomeMultiAMBErc20ToErc677.is_proxy (Slither line:1425)


End HomeMultiAMBErc20ToErc677.is_proxy (Slither line:1428)


Begin HomeMultiAMBErc20ToErc677.is_upgradeable_proxy (Slither line:1136)

Checking contract: HomeMultiAMBErc20ToErc677 

End HomeMultiAMBErc20ToErc677.is_upgradeable_proxy (Slither line:1407)


Begin TokenReader.is_proxy (Slither line:1425)


End TokenReader.is_proxy (Slither line:1428)


Begin TokenReader.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenReader 

End TokenReader.is_upgradeable_proxy (Slither line:1407)


Begin ForeignMultiAMBErc20ToErc677.is_proxy (Slither line:1425)


End ForeignMultiAMBErc20ToErc677.is_proxy (Slither line:1428)


Begin ForeignMultiAMBErc20ToErc677.is_upgradeable_proxy (Slither line:1136)

Checking contract: ForeignMultiAMBErc20ToErc677 

End ForeignMultiAMBErc20ToErc677.is_upgradeable_proxy (Slither line:1407)

