
Begin EternalStorage.is_proxy (Slither line:1425)


End EternalStorage.is_proxy (Slither line:1428)


Begin EternalStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: EternalStorage 

End EternalStorage.is_upgradeable_proxy (Slither line:1407)


Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin IERC20.is_proxy (Slither line:1425)


End IERC20.is_proxy (Slither line:1428)


Begin IERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20 

End IERC20.is_upgradeable_proxy (Slither line:1407)


Begin Sacrifice.is_proxy (Slither line:1425)


End Sacrifice.is_proxy (Slither line:1428)


Begin Sacrifice.is_upgradeable_proxy (Slither line:1136)

Checking contract: Sacrifice 

End Sacrifice.is_upgradeable_proxy (Slither line:1407)


Begin IUpgradeabilityOwnerStorage.is_proxy (Slither line:1425)


End IUpgradeabilityOwnerStorage.is_proxy (Slither line:1428)


Begin IUpgradeabilityOwnerStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: IUpgradeabilityOwnerStorage 

End IUpgradeabilityOwnerStorage.is_upgradeable_proxy (Slither line:1407)


Begin IERC677.is_proxy (Slither line:1425)


End IERC677.is_proxy (Slither line:1428)


Begin IERC677.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC677 

End IERC677.is_upgradeable_proxy (Slither line:1407)


Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin VersionableBridge.is_proxy (Slither line:1425)


End VersionableBridge.is_proxy (Slither line:1428)


Begin VersionableBridge.is_upgradeable_proxy (Slither line:1136)

Checking contract: VersionableBridge 

End VersionableBridge.is_upgradeable_proxy (Slither line:1407)


Begin IAMB.is_proxy (Slither line:1425)


End IAMB.is_proxy (Slither line:1428)


Begin IAMB.is_upgradeable_proxy (Slither line:1136)

Checking contract: IAMB 

End IAMB.is_upgradeable_proxy (Slither line:1407)


Begin AddressHelper.is_proxy (Slither line:1425)


End AddressHelper.is_proxy (Slither line:1428)


Begin AddressHelper.is_upgradeable_proxy (Slither line:1136)

Checking contract: AddressHelper 

End AddressHelper.is_upgradeable_proxy (Slither line:1407)


Begin IERC20Receiver.is_proxy (Slither line:1425)


End IERC20Receiver.is_proxy (Slither line:1428)


Begin IERC20Receiver.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20Receiver 

End IERC20Receiver.is_upgradeable_proxy (Slither line:1407)


Begin IERC20Metadata.is_proxy (Slither line:1425)


End IERC20Metadata.is_proxy (Slither line:1428)


Begin IERC20Metadata.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20Metadata 

End IERC20Metadata.is_upgradeable_proxy (Slither line:1407)


Begin Upgradeable.is_proxy (Slither line:1425)


End Upgradeable.is_proxy (Slither line:1428)


Begin Upgradeable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Upgradeable 

End Upgradeable.is_upgradeable_proxy (Slither line:1407)


Begin Initializable.is_proxy (Slither line:1425)


End Initializable.is_proxy (Slither line:1428)


Begin Initializable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Initializable 

End Initializable.is_upgradeable_proxy (Slither line:1407)


Begin SafeERC20.is_proxy (Slither line:1425)


End SafeERC20.is_proxy (Slither line:1428)


Begin SafeERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeERC20 

End SafeERC20.is_upgradeable_proxy (Slither line:1407)


Begin Claimable.is_proxy (Slither line:1425)


End Claimable.is_proxy (Slither line:1428)


Begin Claimable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Claimable 

End Claimable.is_upgradeable_proxy (Slither line:1407)


Begin BridgedTokensRegistry.is_proxy (Slither line:1425)


End BridgedTokensRegistry.is_proxy (Slither line:1428)


Begin BridgedTokensRegistry.is_upgradeable_proxy (Slither line:1136)

Checking contract: BridgedTokensRegistry 

End BridgedTokensRegistry.is_upgradeable_proxy (Slither line:1407)


Begin NativeTokensRegistry.is_proxy (Slither line:1425)


End NativeTokensRegistry.is_proxy (Slither line:1428)


Begin NativeTokensRegistry.is_upgradeable_proxy (Slither line:1136)

Checking contract: NativeTokensRegistry 

End NativeTokensRegistry.is_upgradeable_proxy (Slither line:1407)


Begin MediatorBalanceStorage.is_proxy (Slither line:1425)


End MediatorBalanceStorage.is_proxy (Slither line:1428)


Begin MediatorBalanceStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: MediatorBalanceStorage 

End MediatorBalanceStorage.is_upgradeable_proxy (Slither line:1407)


Begin Bytes.is_proxy (Slither line:1425)


End Bytes.is_proxy (Slither line:1428)


Begin Bytes.is_upgradeable_proxy (Slither line:1136)

Checking contract: Bytes 

End Bytes.is_upgradeable_proxy (Slither line:1407)


Begin ReentrancyGuard.is_proxy (Slither line:1425)


End ReentrancyGuard.is_proxy (Slither line:1428)


Begin ReentrancyGuard.is_upgradeable_proxy (Slither line:1136)

Checking contract: ReentrancyGuard 

End ReentrancyGuard.is_upgradeable_proxy (Slither line:1407)


Begin BasicAMBMediator.is_proxy (Slither line:1425)


End BasicAMBMediator.is_proxy (Slither line:1428)


Begin BasicAMBMediator.is_upgradeable_proxy (Slither line:1136)

Checking contract: BasicAMBMediator 

End BasicAMBMediator.is_upgradeable_proxy (Slither line:1407)


Begin TokensRelayer.is_proxy (Slither line:1425)


End TokensRelayer.is_proxy (Slither line:1428)


Begin TokensRelayer.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokensRelayer 

End TokensRelayer.is_upgradeable_proxy (Slither line:1407)


Begin OmnibridgeInfo.is_proxy (Slither line:1425)


End OmnibridgeInfo.is_proxy (Slither line:1428)


Begin OmnibridgeInfo.is_upgradeable_proxy (Slither line:1136)

Checking contract: OmnibridgeInfo 

End OmnibridgeInfo.is_upgradeable_proxy (Slither line:1407)


Begin TokensBridgeLimits.is_proxy (Slither line:1425)


End TokensBridgeLimits.is_proxy (Slither line:1428)


Begin TokensBridgeLimits.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokensBridgeLimits 

End TokensBridgeLimits.is_upgradeable_proxy (Slither line:1407)


Begin BridgeOperationsStorage.is_proxy (Slither line:1425)


End BridgeOperationsStorage.is_proxy (Slither line:1428)


Begin BridgeOperationsStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: BridgeOperationsStorage 

End BridgeOperationsStorage.is_upgradeable_proxy (Slither line:1407)


Begin FailedMessagesProcessor.is_proxy (Slither line:1425)


End FailedMessagesProcessor.is_proxy (Slither line:1428)


Begin FailedMessagesProcessor.is_upgradeable_proxy (Slither line:1136)

Checking contract: FailedMessagesProcessor 

End FailedMessagesProcessor.is_upgradeable_proxy (Slither line:1407)


Begin Proxy.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,returndatasize()()) (Slither line:2802)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
ptr_fallback_asm_0
0
returndatasize()()

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(ptr_fallback_asm_0,returndatasize()()) (Slither line:2802)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
ptr_fallback_asm_0
returndatasize()()

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: result_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_impl,ptr_fallback_asm_0,calldatasize()(),0,0) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2817)
Args:
gas()()
_impl
ptr_fallback_asm_0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2824)

Destination is _impl (Slither line:2828)
dest.value: _impl (Slither line:2831)
Expression: implementation() (Slither line:2836)

Begin Proxy.find_delegate_from_call_exp

implementation() (Slither line:2003)
called = implementation (Slither line:2010)
Got abstract function, looking for overriding function (Slither line:2025)
Failure (Slither line:2033)
implementation returns a variable of type address   (Slither line:2193)
Return value is LocalVariable:  (Slither line:2266)
has no expression (Slither line:2326)

End Proxy.find_delegate_from_call_exp (Slither line:2328)


End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called '_impl'
Looking for corresponding Variable
Current function: fallback

Begin Proxy.find_delegate_variable_from_name
Searching for _impl (Slither line:1674)

Searching State Variables (Slither line:1687)

Searching Local Variables (Slither line:1698)
Checking _impl (Slither line:1703)
_impl is a Local Variable in Proxy.fallback (Slither line:1707)
Expression: implementation() (Slither line:1719)

Begin Proxy.find_delegate_from_call_exp

implementation() (Slither line:2003)
called = implementation (Slither line:2010)
Got abstract function, looking for overriding function (Slither line:2025)
Failure (Slither line:2033)
implementation returns a variable of type address   (Slither line:2193)
Return value is LocalVariable:  (Slither line:2266)
has no expression (Slither line:2326)

End Proxy.find_delegate_from_call_exp (Slither line:2328)

Call Expression
End Proxy.find_delegate_variable_by_name (Slither line:1739)


End Proxy.find_delegatecall_in_asm (Slither line:1637)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(ptr_fallback_asm_0,returndatasize()()) (Slither line:2802)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
ptr_fallback_asm_0
returndatasize()()

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_67028_206_0_fallback_asm_0 = result_fallback_asm_0 (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,calldatasize()()) (Slither line:2802)
Expression called: calldatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
ptr_fallback_asm_0
0
calldatasize()()

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: ptr_fallback_asm_0 = mload(uint256)(0x40) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: mload(uint256)
Type of call: uint256 (Slither line:2817)
Args:
0x40

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool)(_impl != address(0)) (Slither line:2802)
Expression called: require(bool)
Type of call: tuple() (Slither line:2817)
Args:
_impl != address(0)

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: mstore(uint256,uint256)(0x40,ptr_fallback_asm_0 + returndatasize()()) (Slither line:2802)
Expression called: mstore(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0x40
ptr_fallback_asm_0 + returndatasize()()

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 

End Proxy.is_upgradeable_proxy (Slither line:1407)


Begin IPermittableTokenVersion.is_proxy (Slither line:1425)


End IPermittableTokenVersion.is_proxy (Slither line:1428)


Begin IPermittableTokenVersion.is_upgradeable_proxy (Slither line:1136)

Checking contract: IPermittableTokenVersion 

End IPermittableTokenVersion.is_upgradeable_proxy (Slither line:1407)


Begin TokenProxy.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin TokenProxy.find_delegatecall_in_exp_node

Found Expression Node: mstore(uint256,uint256)(0x40,ptr_fallback_asm_0 + returndatasize()()) (Slither line:2802)
Expression called: mstore(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0x40
ptr_fallback_asm_0 + returndatasize()()

End TokenProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin TokenProxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,returndatasize()()) (Slither line:2802)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
ptr_fallback_asm_0
0
returndatasize()()

End TokenProxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin TokenProxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_67028_206_0_fallback_asm_0 = result_fallback_asm_0 (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)

End TokenProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin TokenProxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool)(_impl != address(0)) (Slither line:2802)
Expression called: require(bool)
Type of call: tuple() (Slither line:2817)
Args:
_impl != address(0)

End TokenProxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin TokenProxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called '_impl'
Looking for corresponding Variable
Current function: fallback

Begin TokenProxy.find_delegate_variable_from_name
Searching for _impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking name (Slither line:1689)
Checking symbol (Slither line:1689)
Checking decimals (Slither line:1689)
Checking balances (Slither line:1689)
Checking totalSupply (Slither line:1689)
Checking allowed (Slither line:1689)
Checking owner (Slither line:1689)
Checking mintingFinished (Slither line:1689)
Checking bridgeContractAddr (Slither line:1689)
Checking DOMAIN_SEPARATOR (Slither line:1689)
Checking nonces (Slither line:1689)
Checking expirations (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking _impl (Slither line:1703)
_impl is a Local Variable in TokenProxy.fallback (Slither line:1707)
Expression: implementation() (Slither line:1719)

Begin TokenProxy.find_delegate_from_call_exp

implementation() (Slither line:2003)
called = implementation (Slither line:2010)
AssignmentOperation: impl = sload(uint256)(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc) (Slither line:2117)
CallExpression: sload(uint256) (Slither line:2123)
Found storage slot: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:2153)
implementation returns a variable of type address   called impl (Slither line:2193)
implementation contains assembly - looking for sload (Slither line:2199)

End TokenProxy.find_delegate_from_call_exp (Slither line:2328)

Call Expression
End TokenProxy.find_delegate_variable_by_name (Slither line:1739)


End TokenProxy.find_delegatecall_in_asm (Slither line:1637)

Setting TokenProxy._delegate_variable = TokenProxy._proxy_impl_slot: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:1473)


End TokenProxy.is_proxy (Slither line:1476)


Begin TokenProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenProxy 
Call destination 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is constant (Slither line:1146)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is the implementation storage slot (Slither line:1149)

TokenProxy is delegating to 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Looking for setter (Slither line:1200)


Begin TokenProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: constructor(address,string,string,uint8,uint256,address) returns() (Slither line:3127)
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: public
implementation contains assembly (Slither line:3153)
impl = sload(uint256)(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: public
Checking function: fallback() returns() (Slither line:3127)

End TokenProxy.find_setter_in_contract (Slither line:3345)


Could not find implementation setter in TokenProxy (Slither line:1269)
Looking for getter (Slither line:1273)


Begin TokenProxy.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: fallback (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: implementation (Slither line:2988)
implementation returns address variable called impl (Slither line:3008)
implementation contains assembly (Slither line:3051)
implementation contains assembly (Slither line:3051)
implementation contains assembly (Slither line:3051)

End TokenProxy.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in TokenProxy (Slither line:1305)

Begin EternalStorage.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End EternalStorage.find_getter_in_contract (Slither line:3083)


Begin EternalStorage.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)

End EternalStorage.find_setter_in_contract (Slither line:3345)


Begin Address.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: isContract (Slither line:2988)
isContract returns bool variable  (Slither line:3008)
RETURN node expression: (codehash != accountHash && codehash != 0x0) (Slither line:3028)
Checking function: sendValue (Slither line:2988)
Checking function: functionCall (Slither line:2988)
functionCall returns bytes variable  (Slither line:3008)
RETURN node expression: functionCall(target,data,Address: low-level call failed) (Slither line:3028)
Checking function: functionCall (Slither line:2988)
functionCall returns bytes variable  (Slither line:3008)
RETURN node expression: _functionCallWithValue(target,data,0,errorMessage) (Slither line:3028)
Checking function: functionCallWithValue (Slither line:2988)
functionCallWithValue returns bytes variable  (Slither line:3008)
RETURN node expression: functionCallWithValue(target,data,value,Address: low-level call with value failed) (Slither line:3028)
Checking function: functionCallWithValue (Slither line:2988)
functionCallWithValue returns bytes variable  (Slither line:3008)
RETURN node expression: _functionCallWithValue(target,data,value,errorMessage) (Slither line:3028)
Checking function: _functionCallWithValue (Slither line:2988)
_functionCallWithValue returns bytes variable  (Slither line:3008)
RETURN node expression: returndata (Slither line:3028)

End Address.find_getter_in_contract (Slither line:3083)


Begin Address.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: isContract(address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: sendValue(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: functionCall(address,bytes) returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: functionCall(address,bytes,string) returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: functionCallWithValue(address,bytes,uint256) returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: functionCallWithValue(address,bytes,uint256,string) returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: _functionCallWithValue(address,bytes,uint256,string) returns(bytes) (Slither line:3127)
Visibility: private

End Address.find_setter_in_contract (Slither line:3345)


Begin SafeMath.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: add (Slither line:2988)
add returns uint256 variable  (Slither line:3008)
RETURN node expression: c (Slither line:3028)
Checking function: sub (Slither line:2988)
sub returns uint256 variable  (Slither line:3008)
RETURN node expression: sub(a,b,SafeMath: subtraction overflow) (Slither line:3028)
Checking function: sub (Slither line:2988)
sub returns uint256 variable  (Slither line:3008)
RETURN node expression: c (Slither line:3028)
Checking function: mul (Slither line:2988)
mul returns uint256 variable  (Slither line:3008)
RETURN node expression: 0 (Slither line:3028)
RETURN node expression: c (Slither line:3028)
Checking function: div (Slither line:2988)
div returns uint256 variable  (Slither line:3008)
RETURN node expression: div(a,b,SafeMath: division by zero) (Slither line:3028)
Checking function: div (Slither line:2988)
div returns uint256 variable  (Slither line:3008)
RETURN node expression: c (Slither line:3028)
Checking function: mod (Slither line:2988)
mod returns uint256 variable  (Slither line:3008)
RETURN node expression: mod(a,b,SafeMath: modulo by zero) (Slither line:3028)
Checking function: mod (Slither line:2988)
mod returns uint256 variable  (Slither line:3008)
RETURN node expression: a % b (Slither line:3028)

End SafeMath.find_getter_in_contract (Slither line:3083)


Begin SafeMath.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: add(uint256,uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: sub(uint256,uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: sub(uint256,uint256,string) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: mul(uint256,uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: div(uint256,uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: div(uint256,uint256,string) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: mod(uint256,uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: mod(uint256,uint256,string) returns(uint256) (Slither line:3127)
Visibility: internal

End SafeMath.find_setter_in_contract (Slither line:3345)


Begin IERC20.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End IERC20.find_getter_in_contract (Slither line:3083)


Begin IERC20.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: totalSupply() returns(uint256) (Slither line:3127)
Visibility: external
Checking function: balanceOf(address) returns(uint256) (Slither line:3127)
Visibility: external
Checking function: transfer(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
Checking function: allowance(address,address) returns(uint256) (Slither line:3127)
Visibility: external
Checking function: approve(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
Checking function: transferFrom(address,address,uint256) returns(bool) (Slither line:3127)
Visibility: external

End IERC20.find_setter_in_contract (Slither line:3345)


Begin Sacrifice.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: constructor (Slither line:2988)

End Sacrifice.find_getter_in_contract (Slither line:3083)


Begin Sacrifice.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: constructor(address) returns() (Slither line:3127)

End Sacrifice.find_setter_in_contract (Slither line:3345)


Begin IUpgradeabilityOwnerStorage.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End IUpgradeabilityOwnerStorage.find_getter_in_contract (Slither line:3083)


Begin IUpgradeabilityOwnerStorage.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: upgradeabilityOwner() returns(address) (Slither line:3127)
Visibility: external

End IUpgradeabilityOwnerStorage.find_setter_in_contract (Slither line:3345)


Begin IERC677.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End IERC677.find_getter_in_contract (Slither line:3083)


Begin IERC677.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: transferAndCall(address,uint256,bytes) returns(bool) (Slither line:3127)
Visibility: external
Checking function: increaseAllowance(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
Checking function: decreaseAllowance(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
Checking function: totalSupply() returns(uint256) (Slither line:3127)
Visibility: external
Checking function: balanceOf(address) returns(uint256) (Slither line:3127)
Visibility: external
Checking function: transfer(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
Checking function: allowance(address,address) returns(uint256) (Slither line:3127)
Visibility: external
Checking function: approve(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
Checking function: transferFrom(address,address,uint256) returns(bool) (Slither line:3127)
Visibility: external

End IERC677.find_setter_in_contract (Slither line:3345)


Begin Ownable.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: _onlyOwner (Slither line:2988)
Checking function: owner (Slither line:2988)
owner returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[OWNER] (Slither line:3028)
Checking function: transferOwnership (Slither line:2988)
Checking function: _setOwner (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End Ownable.find_getter_in_contract (Slither line:3083)


Begin Ownable.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: _onlyOwner() returns() (Slither line:3127)
Visibility: internal
Checking function: owner() returns(address) (Slither line:3127)
Visibility: public
addressStorage[OWNER]
Checking function: transferOwnership(address) returns() (Slither line:3127)
Visibility: external
_setOwner(newOwner)
require(bool)(newOwner != address(0))
require(bool)(msg.sender == owner())
_onlyOwner()
OwnershipTransferred(owner(),newOwner)
onlyOwner()
addressStorage[OWNER]
addressStorage[OWNER] = newOwner
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: _setOwner(address) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End Ownable.find_setter_in_contract (Slither line:3345)


Begin VersionableBridge.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End VersionableBridge.find_getter_in_contract (Slither line:3083)


Begin VersionableBridge.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: getBridgeInterfacesVersion() returns(uint64,uint64,uint64) (Slither line:3127)
Visibility: external
Checking function: getBridgeMode() returns(bytes4) (Slither line:3127)
Visibility: external

End VersionableBridge.find_setter_in_contract (Slither line:3345)


Begin IAMB.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End IAMB.find_getter_in_contract (Slither line:3083)


Begin IAMB.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: messageSender() returns(address) (Slither line:3127)
Visibility: external
Checking function: maxGasPerTx() returns(uint256) (Slither line:3127)
Visibility: external
Checking function: transactionHash() returns(bytes32) (Slither line:3127)
Visibility: external
Checking function: messageId() returns(bytes32) (Slither line:3127)
Visibility: external
Checking function: messageSourceChainId() returns(bytes32) (Slither line:3127)
Visibility: external
Checking function: messageCallStatus(bytes32) returns(bool) (Slither line:3127)
Visibility: external
Checking function: failedMessageDataHash(bytes32) returns(bytes32) (Slither line:3127)
Visibility: external
Checking function: failedMessageReceiver(bytes32) returns(address) (Slither line:3127)
Visibility: external
Checking function: failedMessageSender(bytes32) returns(address) (Slither line:3127)
Visibility: external
Checking function: requireToPassMessage(address,bytes,uint256) returns(bytes32) (Slither line:3127)
Visibility: external
Checking function: requireToConfirmMessage(address,bytes,uint256) returns(bytes32) (Slither line:3127)
Visibility: external
Checking function: sourceChainId() returns(uint256) (Slither line:3127)
Visibility: external
Checking function: destinationChainId() returns(uint256) (Slither line:3127)
Visibility: external

End IAMB.find_setter_in_contract (Slither line:3345)


Begin AddressHelper.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: safeSendValue (Slither line:2988)

End AddressHelper.find_getter_in_contract (Slither line:3083)


Begin AddressHelper.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: safeSendValue(address,uint256) returns() (Slither line:3127)
Visibility: internal

End AddressHelper.find_setter_in_contract (Slither line:3345)


Begin IERC20Receiver.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End IERC20Receiver.find_getter_in_contract (Slither line:3083)


Begin IERC20Receiver.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: onTokenBridged(address,uint256,bytes) returns() (Slither line:3127)
Visibility: external

End IERC20Receiver.find_setter_in_contract (Slither line:3345)


Begin IERC20Metadata.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End IERC20Metadata.find_getter_in_contract (Slither line:3083)


Begin IERC20Metadata.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: name() returns(string) (Slither line:3127)
Visibility: external
Checking function: symbol() returns(string) (Slither line:3127)
Visibility: external
Checking function: decimals() returns(uint8) (Slither line:3127)
Visibility: external

End IERC20Metadata.find_setter_in_contract (Slither line:3345)


Begin Upgradeable.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End Upgradeable.find_getter_in_contract (Slither line:3083)


Begin Upgradeable.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)

End Upgradeable.find_setter_in_contract (Slither line:3345)


Begin Initializable.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: setInitialize (Slither line:2988)
Checking function: isInitialized (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End Initializable.find_getter_in_contract (Slither line:3083)


Begin Initializable.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: setInitialize() returns() (Slither line:3127)
Checking function: isInitialized() returns(bool) (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End Initializable.find_setter_in_contract (Slither line:3345)


Begin SafeERC20.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: safeTransfer (Slither line:2988)
Checking function: safeTransferFrom (Slither line:2988)
Checking function: safeApprove (Slither line:2988)
Checking function: safeIncreaseAllowance (Slither line:2988)
Checking function: safeDecreaseAllowance (Slither line:2988)
Checking function: _callOptionalReturn (Slither line:2988)

End SafeERC20.find_getter_in_contract (Slither line:3083)


Begin SafeERC20.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: safeTransfer(IERC20,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: safeTransferFrom(IERC20,address,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: safeApprove(IERC20,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: safeIncreaseAllowance(IERC20,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: safeDecreaseAllowance(IERC20,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _callOptionalReturn(IERC20,bytes) returns() (Slither line:3127)
Visibility: private

End SafeERC20.find_setter_in_contract (Slither line:3345)


Begin Claimable.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: claimValues (Slither line:2988)
Checking function: claimNativeCoins (Slither line:2988)
Checking function: claimErc20Tokens (Slither line:2988)

End Claimable.find_getter_in_contract (Slither line:3083)


Begin Claimable.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: claimValues(address,address) returns() (Slither line:3127)
Visibility: internal
Checking function: claimNativeCoins(address) returns() (Slither line:3127)
Visibility: internal
Checking function: claimErc20Tokens(address,address) returns() (Slither line:3127)
Visibility: internal

End Claimable.find_setter_in_contract (Slither line:3345)


Begin BridgedTokensRegistry.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: bridgedTokenAddress (Slither line:2988)
bridgedTokenAddress returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))] (Slither line:3028)
Checking function: nativeTokenAddress (Slither line:2988)
nativeTokenAddress returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))] (Slither line:3028)
Checking function: _setTokenAddressPair (Slither line:2988)

End BridgedTokensRegistry.find_getter_in_contract (Slither line:3083)


Begin BridgedTokensRegistry.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: bridgedTokenAddress(address) returns(address) (Slither line:3127)
Visibility: public
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))]
Checking function: nativeTokenAddress(address) returns(address) (Slither line:3127)
Visibility: public
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))]
Checking function: _setTokenAddressPair(address,address) returns() (Slither line:3127)
Visibility: internal

End BridgedTokensRegistry.find_setter_in_contract (Slither line:3345)


Begin NativeTokensRegistry.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: isBridgedTokenDeployAcknowledged (Slither line:2988)
isBridgedTokenDeployAcknowledged returns bool variable  (Slither line:3008)
RETURN node expression: boolStorage[keccak256(bytes)(abi.encodePacked(ackDeploy,_token))] (Slither line:3028)
Checking function: _ackBridgedTokenDeploy (Slither line:2988)

End NativeTokensRegistry.find_getter_in_contract (Slither line:3083)


Begin NativeTokensRegistry.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: isBridgedTokenDeployAcknowledged(address) returns(bool) (Slither line:3127)
Visibility: public
boolStorage[keccak256(bytes)(abi.encodePacked(ackDeploy,_token))]
Checking function: _ackBridgedTokenDeploy(address) returns() (Slither line:3127)
Visibility: internal

End NativeTokensRegistry.find_setter_in_contract (Slither line:3345)


Begin MediatorBalanceStorage.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: mediatorBalance (Slither line:2988)
mediatorBalance returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))] (Slither line:3028)
Checking function: _setMediatorBalance (Slither line:2988)

End MediatorBalanceStorage.find_getter_in_contract (Slither line:3083)


Begin MediatorBalanceStorage.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: mediatorBalance(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))]
Checking function: _setMediatorBalance(address,uint256) returns() (Slither line:3127)
Visibility: internal

End MediatorBalanceStorage.find_setter_in_contract (Slither line:3345)


Begin Bytes.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: bytesToAddress (Slither line:2988)
bytesToAddress returns address variable called addr (Slither line:3008)

End Bytes.find_getter_in_contract (Slither line:3083)


Begin Bytes.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: bytesToAddress(bytes) returns(address) (Slither line:3127)
Visibility: internal

End Bytes.find_setter_in_contract (Slither line:3345)


Begin ReentrancyGuard.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: lock (Slither line:2988)
lock returns bool variable called res (Slither line:3008)
Checking function: setLock (Slither line:2988)

End ReentrancyGuard.find_getter_in_contract (Slither line:3083)


Begin ReentrancyGuard.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: lock() returns(bool) (Slither line:3127)
Visibility: internal
Checking function: setLock(bool) returns() (Slither line:3127)
Visibility: internal

End ReentrancyGuard.find_setter_in_contract (Slither line:3345)


Begin BasicAMBMediator.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: _onlyOwner (Slither line:2988)
Checking function: owner (Slither line:2988)
owner returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[OWNER] (Slither line:3028)
Checking function: transferOwnership (Slither line:2988)
Checking function: _setOwner (Slither line:2988)
Checking function: _onlyMediator (Slither line:2988)
Checking function: setBridgeContract (Slither line:2988)
Checking function: setMediatorContractOnOtherSide (Slither line:2988)
Checking function: bridgeContract (Slither line:2988)
bridgeContract returns IAMB variable  (Slither line:3008)
Checking function: mediatorContractOnOtherSide (Slither line:2988)
mediatorContractOnOtherSide returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[MEDIATOR_CONTRACT] (Slither line:3028)
Checking function: _setBridgeContract (Slither line:2988)
Checking function: _setMediatorContractOnOtherSide (Slither line:2988)
Checking function: messageId (Slither line:2988)
messageId returns bytes32 variable  (Slither line:3008)
RETURN node expression: bridgeContract().messageId() (Slither line:3028)
Checking function: maxGasPerTx (Slither line:2988)
maxGasPerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: bridgeContract().maxGasPerTx() (Slither line:3028)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End BasicAMBMediator.find_getter_in_contract (Slither line:3083)


Begin BasicAMBMediator.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: _onlyMediator() returns() (Slither line:3127)
Visibility: internal
Checking function: setBridgeContract(address) returns() (Slither line:3127)
Visibility: external
require(bool)(msg.sender == owner())
_onlyOwner()
(codehash != accountHash && codehash != 0x0)
require(bool)(Address.isContract(_bridgeContract))
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
addressStorage[BRIDGE_CONTRACT] = _bridgeContract
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setBridgeContract(_bridgeContract)
addressStorage[OWNER]
onlyOwner()
Checking function: setMediatorContractOnOtherSide(address) returns() (Slither line:3127)
Visibility: external
_setMediatorContractOnOtherSide(_mediatorContract)
addressStorage[MEDIATOR_CONTRACT] = _mediatorContract
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == owner())
addressStorage[OWNER]
onlyOwner()
_onlyOwner()
Checking function: bridgeContract() returns(IAMB) (Slither line:3127)
Visibility: public
IAMB(addressStorage[BRIDGE_CONTRACT])
Checking function: mediatorContractOnOtherSide() returns(address) (Slither line:3127)
Visibility: public
addressStorage[MEDIATOR_CONTRACT]
Checking function: _setBridgeContract(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setMediatorContractOnOtherSide(address) returns() (Slither line:3127)
Visibility: internal
Checking function: messageId() returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: maxGasPerTx() returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _passMessage(bytes,bool) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: _onlyOwner() returns() (Slither line:3127)
Visibility: internal
Checking function: owner() returns(address) (Slither line:3127)
Visibility: public
addressStorage[OWNER]
Checking function: transferOwnership(address) returns() (Slither line:3127)
Visibility: external
OwnershipTransferred(owner(),newOwner)
onlyOwner()
require(bool)(msg.sender == owner())
addressStorage[OWNER]
addressStorage[OWNER] = newOwner
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setOwner(newOwner)
_onlyOwner()
require(bool)(newOwner != address(0))
Checking function: _setOwner(address) returns() (Slither line:3127)
Visibility: internal

End BasicAMBMediator.find_setter_in_contract (Slither line:3345)


Begin TokensRelayer.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: lock (Slither line:2988)
lock returns bool variable called res (Slither line:3008)
Checking function: setLock (Slither line:2988)
Checking function: _onlyMediator (Slither line:2988)
Checking function: setBridgeContract (Slither line:2988)
Checking function: setMediatorContractOnOtherSide (Slither line:2988)
Checking function: bridgeContract (Slither line:2988)
bridgeContract returns IAMB variable  (Slither line:3008)
Checking function: mediatorContractOnOtherSide (Slither line:2988)
mediatorContractOnOtherSide returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[MEDIATOR_CONTRACT] (Slither line:3028)
Checking function: _setBridgeContract (Slither line:2988)
Checking function: _setMediatorContractOnOtherSide (Slither line:2988)
Checking function: messageId (Slither line:2988)
messageId returns bytes32 variable  (Slither line:3008)
RETURN node expression: bridgeContract().messageId() (Slither line:3028)
Checking function: maxGasPerTx (Slither line:2988)
maxGasPerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: bridgeContract().maxGasPerTx() (Slither line:3028)
Checking function: _onlyOwner (Slither line:2988)
Checking function: owner (Slither line:2988)
owner returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[OWNER] (Slither line:3028)
Checking function: transferOwnership (Slither line:2988)
Checking function: _setOwner (Slither line:2988)
Checking function: onTokenTransfer (Slither line:2988)
onTokenTransfer returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: relayTokens (Slither line:2988)
Checking function: relayTokens (Slither line:2988)
Checking function: relayTokensAndCall (Slither line:2988)
Checking function: _relayTokens (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End TokensRelayer.find_getter_in_contract (Slither line:3083)


Begin TokensRelayer.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: onTokenTransfer(address,uint256,bytes) returns(bool) (Slither line:3127)
Visibility: external
onTokenTransfer contains assembly (Slither line:3153)
mstore(uint256,uint256)(0x40,data + 32 + size_onTokenTransfer_asm_1)
res = sload(uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
receiver = calldataload(uint256)(120)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
true
data = mload(uint256)(0x40)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
size_onTokenTransfer_asm_1 = calldataload(uint256)(100) - 20
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
mstore(uint256,uint256)(data,size_onTokenTransfer_asm_1)
bridgeSpecificActionsOnTokenTransfer(msg.sender,_from,receiver,_value,data)
calldatacopy(uint256,uint256,uint256)(data + 32,152,size_onTokenTransfer_asm_1)
Checking function: relayTokens(IERC677,address,uint256) returns() (Slither line:3127)
Visibility: external
returndata
require(bool)(balanceDiff <= _value)
c
res = sload(uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
bridgeSpecificActionsOnTokenTransfer(address(token),msg.sender,_receiver,balanceDiff,_data)
_relayTokens(token,_receiver,_value,new bytes(0))
(codehash != accountHash && codehash != 0x0)
revert(string)(errorMessage)
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
sub(a,b,SafeMath: subtraction overflow)
require(bool,string)(isContract(target),Address: call to non-contract)
_functionCallWithValue(target,data,0,errorMessage)
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(! lock())
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))
setLock(true)
sstore(uint256,uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92,_lock)
sstore(uint256,uint256)
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
token.safeTransferFrom(msg.sender,address(this),_value)
require(bool,string)(b <= a,errorMessage)
setLock(false)
Checking function: relayTokens(IERC677,uint256) returns() (Slither line:3127)
Visibility: external
returndata
require(bool)(balanceDiff <= _value)
c
res = sload(uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
bridgeSpecificActionsOnTokenTransfer(address(token),msg.sender,_receiver,balanceDiff,_data)
(codehash != accountHash && codehash != 0x0)
revert(string)(errorMessage)
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
sub(a,b,SafeMath: subtraction overflow)
_relayTokens(token,msg.sender,_value,new bytes(0))
require(bool,string)(isContract(target),Address: call to non-contract)
_functionCallWithValue(target,data,0,errorMessage)
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(! lock())
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))
setLock(true)
sstore(uint256,uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92,_lock)
sstore(uint256,uint256)
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
token.safeTransferFrom(msg.sender,address(this),_value)
require(bool,string)(b <= a,errorMessage)
setLock(false)
Checking function: relayTokensAndCall(IERC677,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
returndata
require(bool)(balanceDiff <= _value)
c
_relayTokens(token,_receiver,_value,_data)
res = sload(uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
bridgeSpecificActionsOnTokenTransfer(address(token),msg.sender,_receiver,balanceDiff,_data)
(codehash != accountHash && codehash != 0x0)
revert(string)(errorMessage)
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
sub(a,b,SafeMath: subtraction overflow)
require(bool,string)(isContract(target),Address: call to non-contract)
_functionCallWithValue(target,data,0,errorMessage)
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(! lock())
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))
setLock(true)
sstore(uint256,uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92,_lock)
sstore(uint256,uint256)
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
token.safeTransferFrom(msg.sender,address(this),_value)
require(bool,string)(b <= a,errorMessage)
setLock(false)
Checking function: _relayTokens(IERC677,address,uint256,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: bridgeSpecificActionsOnTokenTransfer(address,address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: lock() returns(bool) (Slither line:3127)
Visibility: internal
Checking function: setLock(bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _onlyMediator() returns() (Slither line:3127)
Visibility: internal
Checking function: setBridgeContract(address) returns() (Slither line:3127)
Visibility: external
require(bool)(msg.sender == owner())
require(bool)(Address.isContract(_bridgeContract))
(codehash != accountHash && codehash != 0x0)
addressStorage[BRIDGE_CONTRACT] = _bridgeContract
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_onlyOwner()
_setBridgeContract(_bridgeContract)
addressStorage[OWNER]
onlyOwner()
Checking function: setMediatorContractOnOtherSide(address) returns() (Slither line:3127)
Visibility: external
_setMediatorContractOnOtherSide(_mediatorContract)
addressStorage[MEDIATOR_CONTRACT] = _mediatorContract
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == owner())
addressStorage[OWNER]
onlyOwner()
_onlyOwner()
Checking function: bridgeContract() returns(IAMB) (Slither line:3127)
Visibility: public
IAMB(addressStorage[BRIDGE_CONTRACT])
Checking function: mediatorContractOnOtherSide() returns(address) (Slither line:3127)
Visibility: public
addressStorage[MEDIATOR_CONTRACT]
Checking function: _setBridgeContract(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setMediatorContractOnOtherSide(address) returns() (Slither line:3127)
Visibility: internal
Checking function: messageId() returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: maxGasPerTx() returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _passMessage(bytes,bool) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _onlyOwner() returns() (Slither line:3127)
Visibility: internal
Checking function: owner() returns(address) (Slither line:3127)
Visibility: public
addressStorage[OWNER]
Checking function: transferOwnership(address) returns() (Slither line:3127)
Visibility: external
addressStorage[OWNER] = newOwner
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
addressStorage[OWNER]
require(bool)(msg.sender == owner())
_setOwner(newOwner)
require(bool)(newOwner != address(0))
_onlyOwner()
OwnershipTransferred(owner(),newOwner)
onlyOwner()
Checking function: _setOwner(address) returns() (Slither line:3127)
Visibility: internal

End TokensRelayer.find_setter_in_contract (Slither line:3345)


Begin OmnibridgeInfo.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: getBridgeInterfacesVersion (Slither line:2988)
getBridgeInterfacesVersion returns uint64 variable called major (Slither line:3008)
getBridgeInterfacesVersion returns uint64 variable called minor (Slither line:3008)
getBridgeInterfacesVersion returns uint64 variable called patch (Slither line:3008)
RETURN node expression: (2,1,0) (Slither line:3028)
Checking function: getBridgeMode (Slither line:2988)
getBridgeMode returns bytes4 variable called _data (Slither line:3008)
RETURN node expression: 0xb1516c26 (Slither line:3028)

End OmnibridgeInfo.find_getter_in_contract (Slither line:3083)


Begin OmnibridgeInfo.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: getBridgeInterfacesVersion() returns(uint64,uint64,uint64) (Slither line:3127)
Visibility: external
(2,1,0)
Checking function: getBridgeMode() returns(bytes4) (Slither line:3127)
Visibility: external
0xb1516c26
Checking function: getBridgeInterfacesVersion() returns(uint64,uint64,uint64) (Slither line:3127)
Visibility: external
Checking function: getBridgeMode() returns(bytes4) (Slither line:3127)
Visibility: external

End OmnibridgeInfo.find_setter_in_contract (Slither line:3345)


Begin TokensBridgeLimits.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: _onlyOwner (Slither line:2988)
Checking function: owner (Slither line:2988)
owner returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[OWNER] (Slither line:3028)
Checking function: transferOwnership (Slither line:2988)
Checking function: _setOwner (Slither line:2988)
Checking function: isTokenRegistered (Slither line:2988)
isTokenRegistered returns bool variable  (Slither line:3008)
RETURN node expression: minPerTx(_token) > 0 (Slither line:3028)
Checking function: totalSpentPerDay (Slither line:2988)
totalSpentPerDay returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))] (Slither line:3028)
Checking function: totalExecutedPerDay (Slither line:2988)
totalExecutedPerDay returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))] (Slither line:3028)
Checking function: dailyLimit (Slither line:2988)
dailyLimit returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))] (Slither line:3028)
Checking function: executionDailyLimit (Slither line:2988)
executionDailyLimit returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))] (Slither line:3028)
Checking function: maxPerTx (Slither line:2988)
maxPerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))] (Slither line:3028)
Checking function: executionMaxPerTx (Slither line:2988)
executionMaxPerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))] (Slither line:3028)
Checking function: minPerTx (Slither line:2988)
minPerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))] (Slither line:3028)
Checking function: withinLimit (Slither line:2988)
withinLimit returns bool variable  (Slither line:3008)
RETURN node expression: dailyLimit(address(0)) > 0 && dailyLimit(_token) >= nextLimit && _amount <= maxPerTx(_token) && _amount >= minPerTx(_token) (Slither line:3028)
Checking function: withinExecutionLimit (Slither line:2988)
withinExecutionLimit returns bool variable  (Slither line:3008)
RETURN node expression: executionDailyLimit(address(0)) > 0 && executionDailyLimit(_token) >= nextLimit && _amount <= executionMaxPerTx(_token) (Slither line:3028)
Checking function: getCurrentDay (Slither line:2988)
getCurrentDay returns uint256 variable  (Slither line:3008)
RETURN node expression: block.timestamp / 86400 (Slither line:3028)
Checking function: setDailyLimit (Slither line:2988)
Checking function: setExecutionDailyLimit (Slither line:2988)
Checking function: setExecutionMaxPerTx (Slither line:2988)
Checking function: setMaxPerTx (Slither line:2988)
Checking function: setMinPerTx (Slither line:2988)
Checking function: maxAvailablePerTx (Slither line:2988)
maxAvailablePerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: _maxPerTx (Slither line:3028)
RETURN node expression: _remainingOutOfDaily (Slither line:3028)
Checking function: addTotalSpentPerDay (Slither line:2988)
Checking function: addTotalExecutedPerDay (Slither line:2988)
Checking function: _setLimits (Slither line:2988)
Checking function: _setExecutionLimits (Slither line:2988)
Checking function: _initializeTokenBridgeLimits (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End TokensBridgeLimits.find_getter_in_contract (Slither line:3083)


Begin TokensBridgeLimits.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: isTokenRegistered(address) returns(bool) (Slither line:3127)
Visibility: public
minPerTx(_token) > 0
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
Checking function: totalSpentPerDay(address,uint256) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))]
Checking function: totalExecutedPerDay(address,uint256) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))]
Checking function: dailyLimit(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
Checking function: executionDailyLimit(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
Checking function: maxPerTx(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
Checking function: executionMaxPerTx(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
Checking function: minPerTx(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
Checking function: withinLimit(address,uint256) returns(bool) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
require(bool,string)(c >= a,SafeMath: addition overflow)
block.timestamp / 86400
c
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))]
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
dailyLimit(address(0)) > 0 && dailyLimit(_token) >= nextLimit && _amount <= maxPerTx(_token) && _amount >= minPerTx(_token)
Checking function: withinExecutionLimit(address,uint256) returns(bool) (Slither line:3127)
Visibility: public
require(bool,string)(c >= a,SafeMath: addition overflow)
block.timestamp / 86400
executionDailyLimit(address(0)) > 0 && executionDailyLimit(_token) >= nextLimit && _amount <= executionMaxPerTx(_token)
c
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))]
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
Checking function: getCurrentDay() returns(uint256) (Slither line:3127)
Visibility: public
block.timestamp / 86400
Checking function: setDailyLimit(address,uint256) returns() (Slither line:3127)
Visibility: external
require(bool)(isTokenRegistered(_token))
require(bool)(_dailyLimit > maxPerTx(_token) || _dailyLimit == 0)
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))] = _dailyLimit
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
DailyLimitChanged(_token,_dailyLimit)
minPerTx(_token) > 0
require(bool)(msg.sender == owner())
onlyOwner()
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
_onlyOwner()
addressStorage[OWNER]
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
Checking function: setExecutionDailyLimit(address,uint256) returns() (Slither line:3127)
Visibility: external
require(bool)(isTokenRegistered(_token))
require(bool)(_dailyLimit > executionMaxPerTx(_token) || _dailyLimit == 0)
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))] = _dailyLimit
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
minPerTx(_token) > 0
require(bool)(msg.sender == owner())
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
ExecutionDailyLimitChanged(_token,_dailyLimit)
_onlyOwner()
onlyOwner()
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
addressStorage[OWNER]
Checking function: setExecutionMaxPerTx(address,uint256) returns() (Slither line:3127)
Visibility: external
_onlyOwner()
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))] = _maxPerTx
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
minPerTx(_token) > 0
onlyOwner()
require(bool)(msg.sender == owner())
require(bool)(isTokenRegistered(_token))
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
require(bool)(_maxPerTx == 0 || (_maxPerTx > 0 && _maxPerTx < executionDailyLimit(_token)))
addressStorage[OWNER]
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
Checking function: setMaxPerTx(address,uint256) returns() (Slither line:3127)
Visibility: external
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
_onlyOwner()
onlyOwner()
require(bool)(isTokenRegistered(_token))
minPerTx(_token) > 0
require(bool)(msg.sender == owner())
require(bool)(_maxPerTx == 0 || (_maxPerTx > minPerTx(_token) && _maxPerTx < dailyLimit(_token)))
addressStorage[OWNER]
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))] = _maxPerTx
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: setMinPerTx(address,uint256) returns() (Slither line:3127)
Visibility: external
onlyOwner()
minPerTx(_token) > 0
require(bool)(msg.sender == owner())
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
_onlyOwner()
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
addressStorage[OWNER]
require(bool)(isTokenRegistered(_token))
require(bool)(_minPerTx > 0 && _minPerTx < dailyLimit(_token) && _minPerTx < maxPerTx(_token))
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))] = _minPerTx
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
Checking function: maxAvailablePerTx(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
block.timestamp / 86400
_remainingOutOfDaily = _dailyLimit - _spent
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_remainingOutOfDaily = 0
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_maxPerTx
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))]
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
_remainingOutOfDaily
Checking function: addTotalSpentPerDay(address,uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: addTotalExecutedPerDay(address,uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setLimits(address,uint256[3]) returns() (Slither line:3127)
Visibility: internal
Checking function: _setExecutionLimits(address,uint256[2]) returns() (Slither line:3127)
Visibility: internal
Checking function: _initializeTokenBridgeLimits(address,uint256) returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: _onlyOwner() returns() (Slither line:3127)
Visibility: internal
Checking function: owner() returns(address) (Slither line:3127)
Visibility: public
addressStorage[OWNER]
Checking function: transferOwnership(address) returns() (Slither line:3127)
Visibility: external
_onlyOwner()
_setOwner(newOwner)
require(bool)(newOwner != address(0))
require(bool)(msg.sender == owner())
OwnershipTransferred(owner(),newOwner)
onlyOwner()
addressStorage[OWNER]
addressStorage[OWNER] = newOwner
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: _setOwner(address) returns() (Slither line:3127)
Visibility: internal

End TokensBridgeLimits.find_setter_in_contract (Slither line:3345)


Begin BridgeOperationsStorage.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: setMessageToken (Slither line:2988)
Checking function: messageToken (Slither line:2988)
messageToken returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[keccak256(bytes)(abi.encodePacked(messageToken,_messageId))] (Slither line:3028)
Checking function: setMessageValue (Slither line:2988)
Checking function: messageValue (Slither line:2988)
messageValue returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(messageValue,_messageId))] (Slither line:3028)
Checking function: setMessageRecipient (Slither line:2988)
Checking function: messageRecipient (Slither line:2988)
messageRecipient returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[keccak256(bytes)(abi.encodePacked(messageRecipient,_messageId))] (Slither line:3028)

End BridgeOperationsStorage.find_getter_in_contract (Slither line:3083)


Begin BridgeOperationsStorage.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: setMessageToken(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: messageToken(bytes32) returns(address) (Slither line:3127)
Visibility: internal
Checking function: setMessageValue(bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: messageValue(bytes32) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: setMessageRecipient(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: messageRecipient(bytes32) returns(address) (Slither line:3127)
Visibility: internal

End BridgeOperationsStorage.find_setter_in_contract (Slither line:3345)


Begin FailedMessagesProcessor.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: setMessageToken (Slither line:2988)
Checking function: messageToken (Slither line:2988)
messageToken returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[keccak256(bytes)(abi.encodePacked(messageToken,_messageId))] (Slither line:3028)
Checking function: setMessageValue (Slither line:2988)
Checking function: messageValue (Slither line:2988)
messageValue returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(messageValue,_messageId))] (Slither line:3028)
Checking function: setMessageRecipient (Slither line:2988)
Checking function: messageRecipient (Slither line:2988)
messageRecipient returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[keccak256(bytes)(abi.encodePacked(messageRecipient,_messageId))] (Slither line:3028)
Checking function: _onlyMediator (Slither line:2988)
Checking function: setBridgeContract (Slither line:2988)
Checking function: setMediatorContractOnOtherSide (Slither line:2988)
Checking function: bridgeContract (Slither line:2988)
bridgeContract returns IAMB variable  (Slither line:3008)
Checking function: mediatorContractOnOtherSide (Slither line:2988)
mediatorContractOnOtherSide returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[MEDIATOR_CONTRACT] (Slither line:3028)
Checking function: _setBridgeContract (Slither line:2988)
Checking function: _setMediatorContractOnOtherSide (Slither line:2988)
Checking function: messageId (Slither line:2988)
messageId returns bytes32 variable  (Slither line:3008)
RETURN node expression: bridgeContract().messageId() (Slither line:3028)
Checking function: maxGasPerTx (Slither line:2988)
maxGasPerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: bridgeContract().maxGasPerTx() (Slither line:3028)
Checking function: _onlyOwner (Slither line:2988)
Checking function: owner (Slither line:2988)
owner returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[OWNER] (Slither line:3028)
Checking function: transferOwnership (Slither line:2988)
Checking function: _setOwner (Slither line:2988)
Checking function: requestFailedMessageFix (Slither line:2988)
Checking function: fixFailedMessage (Slither line:2988)
Checking function: messageFixed (Slither line:2988)
messageFixed returns bool variable  (Slither line:3008)
RETURN node expression: boolStorage[keccak256(bytes)(abi.encodePacked(messageFixed,_messageId))] (Slither line:3028)
Checking function: setMessageFixed (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End FailedMessagesProcessor.find_getter_in_contract (Slither line:3083)


Begin FailedMessagesProcessor.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: requestFailedMessageFix(bytes32) returns() (Slither line:3127)
Visibility: external
_passMessage(data,true)
IAMB(addressStorage[BRIDGE_CONTRACT])
addressStorage[MEDIATOR_CONTRACT]
require(bool)(bridgeContract().failedMessageReceiver(_messageId) == address(this))
require(bool)(! bridgeContract().messageCallStatus(_messageId))
require(bool)(bridgeContract().failedMessageSender(_messageId) == mediatorContractOnOtherSide())
Checking function: fixFailedMessage(bytes32) returns() (Slither line:3127)
Visibility: public
require(bool)(msg.sender == address(bridge))
require(bool)(bridge.messageSender() == mediatorContractOnOtherSide())
addressStorage[keccak256(bytes)(abi.encodePacked(messageToken,_messageId))]
addressStorage[keccak256(bytes)(abi.encodePacked(messageRecipient,_messageId))]
IAMB(addressStorage[BRIDGE_CONTRACT])
_onlyMediator()
require(bool)(! messageFixed(_messageId))
boolStorage[keccak256(bytes)(abi.encodePacked(messageFixed,_messageId))] = true
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
addressStorage[MEDIATOR_CONTRACT]
uintStorage[keccak256(bytes)(abi.encodePacked(messageValue,_messageId))]
setMessageFixed(_messageId)
executeActionOnFixedTokens(token,recipient,value)
boolStorage[keccak256(bytes)(abi.encodePacked(messageFixed,_messageId))]
FailedMessageFixed(_messageId,token,recipient,value)
onlyMediator()
Checking function: messageFixed(bytes32) returns(bool) (Slither line:3127)
Visibility: public
boolStorage[keccak256(bytes)(abi.encodePacked(messageFixed,_messageId))]
Checking function: setMessageFixed(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: executeActionOnFixedTokens(address,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: setMessageToken(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: messageToken(bytes32) returns(address) (Slither line:3127)
Visibility: internal
Checking function: setMessageValue(bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: messageValue(bytes32) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: setMessageRecipient(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: messageRecipient(bytes32) returns(address) (Slither line:3127)
Visibility: internal
Checking function: _onlyMediator() returns() (Slither line:3127)
Visibility: internal
Checking function: setBridgeContract(address) returns() (Slither line:3127)
Visibility: external
addressStorage[BRIDGE_CONTRACT] = _bridgeContract
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setBridgeContract(_bridgeContract)
addressStorage[OWNER]
(codehash != accountHash && codehash != 0x0)
onlyOwner()
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_onlyOwner()
require(bool)(msg.sender == owner())
require(bool)(Address.isContract(_bridgeContract))
Checking function: setMediatorContractOnOtherSide(address) returns() (Slither line:3127)
Visibility: external
addressStorage[OWNER]
onlyOwner()
_onlyOwner()
_setMediatorContractOnOtherSide(_mediatorContract)
addressStorage[MEDIATOR_CONTRACT] = _mediatorContract
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == owner())
Checking function: bridgeContract() returns(IAMB) (Slither line:3127)
Visibility: public
IAMB(addressStorage[BRIDGE_CONTRACT])
Checking function: mediatorContractOnOtherSide() returns(address) (Slither line:3127)
Visibility: public
addressStorage[MEDIATOR_CONTRACT]
Checking function: _setBridgeContract(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setMediatorContractOnOtherSide(address) returns() (Slither line:3127)
Visibility: internal
Checking function: messageId() returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: maxGasPerTx() returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _passMessage(bytes,bool) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _onlyOwner() returns() (Slither line:3127)
Visibility: internal
Checking function: owner() returns(address) (Slither line:3127)
Visibility: public
addressStorage[OWNER]
Checking function: transferOwnership(address) returns() (Slither line:3127)
Visibility: external
addressStorage[OWNER] = newOwner
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
addressStorage[OWNER]
_onlyOwner()
_setOwner(newOwner)
require(bool)(newOwner != address(0))
OwnershipTransferred(owner(),newOwner)
onlyOwner()
require(bool)(msg.sender == owner())
Checking function: _setOwner(address) returns() (Slither line:3127)
Visibility: internal

End FailedMessagesProcessor.find_setter_in_contract (Slither line:3345)


Begin Proxy.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: fallback (Slither line:2988)

End Proxy.find_getter_in_contract (Slither line:3083)


Begin Proxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: public
Checking function: fallback() returns() (Slither line:3127)

End Proxy.find_setter_in_contract (Slither line:3345)


Begin IPermittableTokenVersion.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End IPermittableTokenVersion.find_getter_in_contract (Slither line:3083)


Begin IPermittableTokenVersion.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: version() returns(string) (Slither line:3127)
Visibility: external

End IPermittableTokenVersion.find_setter_in_contract (Slither line:3345)


Begin OwnableModule.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: constructor (Slither line:2988)
Checking function: transferOwnership (Slither line:2988)

End OwnableModule.find_getter_in_contract (Slither line:3083)


Begin OwnableModule.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: constructor(address) returns() (Slither line:3127)
Checking function: transferOwnership(address) returns() (Slither line:3127)
Visibility: external
owner = _newOwner
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
onlyOwner()
require(bool)(msg.sender == owner)

End OwnableModule.find_setter_in_contract (Slither line:3345)


Begin TokenFactory.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: constructor (Slither line:2988)
Checking function: transferOwnership (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: setTokenImage (Slither line:2988)
Checking function: deploy (Slither line:2988)
deploy returns address variable  (Slither line:3008)
RETURN node expression: address(new TokenProxy(tokenImage,_name,_symbol,_decimals,_chainId,msg.sender)) (Slither line:3028)

End TokenFactory.find_getter_in_contract (Slither line:3083)


Begin TokenFactory.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: constructor(address,address) returns() (Slither line:3127)
Checking function: setTokenImage(address) returns() (Slither line:3127)
Visibility: external
onlyOwner()
(codehash != accountHash && codehash != 0x0)
require(bool)(Address.isContract(_tokenImage))
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
tokenImage = _tokenImage
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == owner)
Checking function: deploy(string,string,uint8,uint256) returns(address) (Slither line:3127)
Visibility: external
address(new TokenProxy(tokenImage,_name,_symbol,_decimals,_chainId,msg.sender))
Checking function: constructor(address) returns() (Slither line:3127)
Checking function: transferOwnership(address) returns() (Slither line:3127)
Visibility: external
onlyOwner()
owner = _newOwner
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == owner)

End TokenFactory.find_setter_in_contract (Slither line:3345)


Begin TokenFactoryConnector.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: _onlyOwner (Slither line:2988)
Checking function: owner (Slither line:2988)
owner returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[OWNER] (Slither line:3028)
Checking function: transferOwnership (Slither line:2988)
Checking function: _setOwner (Slither line:2988)
Checking function: setTokenFactory (Slither line:2988)
Checking function: tokenFactory (Slither line:2988)
tokenFactory returns TokenFactory variable  (Slither line:3008)
Checking function: _setTokenFactory (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End TokenFactoryConnector.find_getter_in_contract (Slither line:3083)


Begin TokenFactoryConnector.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: setTokenFactory(address) returns() (Slither line:3127)
Visibility: external
onlyOwner()
addressStorage[OWNER]
(codehash != accountHash && codehash != 0x0)
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == owner())
_onlyOwner()
_setTokenFactory(_tokenFactory)
require(bool)(Address.isContract(_tokenFactory))
addressStorage[TOKEN_FACTORY_CONTRACT] = _tokenFactory
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: tokenFactory() returns(TokenFactory) (Slither line:3127)
Visibility: public
TokenFactory(addressStorage[TOKEN_FACTORY_CONTRACT])
Checking function: _setTokenFactory(address) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: _onlyOwner() returns() (Slither line:3127)
Visibility: internal
Checking function: owner() returns(address) (Slither line:3127)
Visibility: public
addressStorage[OWNER]
Checking function: transferOwnership(address) returns() (Slither line:3127)
Visibility: external
onlyOwner()
OwnershipTransferred(owner(),newOwner)
require(bool)(msg.sender == owner())
addressStorage[OWNER]
addressStorage[OWNER] = newOwner
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_onlyOwner()
_setOwner(newOwner)
require(bool)(newOwner != address(0))
Checking function: _setOwner(address) returns() (Slither line:3127)
Visibility: internal

End TokenFactoryConnector.find_setter_in_contract (Slither line:3345)


Begin IBurnableMintableERC677Token.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End IBurnableMintableERC677Token.find_getter_in_contract (Slither line:3083)


Begin IBurnableMintableERC677Token.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: mint(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
Checking function: burn(uint256) returns() (Slither line:3127)
Visibility: external
Checking function: claimTokens(address,address) returns() (Slither line:3127)
Visibility: external
Checking function: transferAndCall(address,uint256,bytes) returns(bool) (Slither line:3127)
Visibility: external
Checking function: increaseAllowance(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
Checking function: decreaseAllowance(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
Checking function: totalSupply() returns(uint256) (Slither line:3127)
Visibility: external
Checking function: balanceOf(address) returns(uint256) (Slither line:3127)
Visibility: external
Checking function: transfer(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
Checking function: allowance(address,address) returns(uint256) (Slither line:3127)
Visibility: external
Checking function: approve(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
Checking function: transferFrom(address,address,uint256) returns(bool) (Slither line:3127)
Visibility: external

End IBurnableMintableERC677Token.find_setter_in_contract (Slither line:3345)


Begin ITokenDetails.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End ITokenDetails.find_getter_in_contract (Slither line:3083)


Begin ITokenDetails.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: name() returns() (Slither line:3127)
Visibility: external
Checking function: NAME() returns() (Slither line:3127)
Visibility: external
Checking function: symbol() returns() (Slither line:3127)
Visibility: external
Checking function: SYMBOL() returns() (Slither line:3127)
Visibility: external
Checking function: decimals() returns() (Slither line:3127)
Visibility: external
Checking function: DECIMALS() returns() (Slither line:3127)
Visibility: external

End ITokenDetails.find_setter_in_contract (Slither line:3345)


Begin TokenReader.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: readName (Slither line:2988)
readName returns string variable  (Slither line:3008)
RETURN node expression: _convertToString(data) (Slither line:3028)
RETURN node expression:  (Slither line:3028)
Checking function: readSymbol (Slither line:2988)
readSymbol returns string variable  (Slither line:3008)
RETURN node expression: _convertToString(data) (Slither line:3028)
RETURN node expression:  (Slither line:3028)
Checking function: readDecimals (Slither line:2988)
readDecimals returns uint256 variable  (Slither line:3008)
RETURN node expression: 0 (Slither line:3028)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: _convertToString (Slither line:2988)
_convertToString returns string variable  (Slither line:3008)
RETURN node expression: res (Slither line:3028)
RETURN node expression:  (Slither line:3028)
RETURN node expression: abi.decode(returnData,(string)) (Slither line:3028)

End TokenReader.find_getter_in_contract (Slither line:3083)


Begin TokenReader.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: readName(address) returns(string) (Slither line:3127)
Visibility: internal
Checking function: readSymbol(address) returns(string) (Slither line:3127)
Visibility: internal
Checking function: readDecimals(address) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _convertToString(bytes) returns(string) (Slither line:3127)
Visibility: private

End TokenReader.find_setter_in_contract (Slither line:3345)


Begin BasicOmnibridge.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: isTokenRegistered (Slither line:2988)
isTokenRegistered returns bool variable  (Slither line:3008)
RETURN node expression: minPerTx(_token) > 0 (Slither line:3028)
Checking function: totalSpentPerDay (Slither line:2988)
totalSpentPerDay returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))] (Slither line:3028)
Checking function: totalExecutedPerDay (Slither line:2988)
totalExecutedPerDay returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))] (Slither line:3028)
Checking function: dailyLimit (Slither line:2988)
dailyLimit returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))] (Slither line:3028)
Checking function: executionDailyLimit (Slither line:2988)
executionDailyLimit returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))] (Slither line:3028)
Checking function: maxPerTx (Slither line:2988)
maxPerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))] (Slither line:3028)
Checking function: executionMaxPerTx (Slither line:2988)
executionMaxPerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))] (Slither line:3028)
Checking function: minPerTx (Slither line:2988)
minPerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))] (Slither line:3028)
Checking function: withinLimit (Slither line:2988)
withinLimit returns bool variable  (Slither line:3008)
RETURN node expression: dailyLimit(address(0)) > 0 && dailyLimit(_token) >= nextLimit && _amount <= maxPerTx(_token) && _amount >= minPerTx(_token) (Slither line:3028)
Checking function: withinExecutionLimit (Slither line:2988)
withinExecutionLimit returns bool variable  (Slither line:3008)
RETURN node expression: executionDailyLimit(address(0)) > 0 && executionDailyLimit(_token) >= nextLimit && _amount <= executionMaxPerTx(_token) (Slither line:3028)
Checking function: getCurrentDay (Slither line:2988)
getCurrentDay returns uint256 variable  (Slither line:3008)
RETURN node expression: block.timestamp / 86400 (Slither line:3028)
Checking function: setDailyLimit (Slither line:2988)
Checking function: setExecutionDailyLimit (Slither line:2988)
Checking function: setExecutionMaxPerTx (Slither line:2988)
Checking function: setMaxPerTx (Slither line:2988)
Checking function: setMinPerTx (Slither line:2988)
Checking function: maxAvailablePerTx (Slither line:2988)
maxAvailablePerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: _maxPerTx (Slither line:3028)
RETURN node expression: _remainingOutOfDaily (Slither line:3028)
Checking function: addTotalSpentPerDay (Slither line:2988)
Checking function: addTotalExecutedPerDay (Slither line:2988)
Checking function: _setLimits (Slither line:2988)
Checking function: _setExecutionLimits (Slither line:2988)
Checking function: _initializeTokenBridgeLimits (Slither line:2988)
Checking function: _onlyOwner (Slither line:2988)
Checking function: owner (Slither line:2988)
owner returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[OWNER] (Slither line:3028)
Checking function: transferOwnership (Slither line:2988)
Checking function: _setOwner (Slither line:2988)
Checking function: setTokenFactory (Slither line:2988)
Checking function: tokenFactory (Slither line:2988)
tokenFactory returns TokenFactory variable  (Slither line:3008)
Checking function: _setTokenFactory (Slither line:2988)
Checking function: mediatorBalance (Slither line:2988)
mediatorBalance returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))] (Slither line:3028)
Checking function: _setMediatorBalance (Slither line:2988)
Checking function: isBridgedTokenDeployAcknowledged (Slither line:2988)
isBridgedTokenDeployAcknowledged returns bool variable  (Slither line:3008)
RETURN node expression: boolStorage[keccak256(bytes)(abi.encodePacked(ackDeploy,_token))] (Slither line:3028)
Checking function: _ackBridgedTokenDeploy (Slither line:2988)
Checking function: bridgedTokenAddress (Slither line:2988)
bridgedTokenAddress returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))] (Slither line:3028)
Checking function: nativeTokenAddress (Slither line:2988)
nativeTokenAddress returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))] (Slither line:3028)
Checking function: _setTokenAddressPair (Slither line:2988)
Checking function: requestFailedMessageFix (Slither line:2988)
Checking function: fixFailedMessage (Slither line:2988)
Checking function: messageFixed (Slither line:2988)
messageFixed returns bool variable  (Slither line:3008)
RETURN node expression: boolStorage[keccak256(bytes)(abi.encodePacked(messageFixed,_messageId))] (Slither line:3028)
Checking function: setMessageFixed (Slither line:2988)
Checking function: setMessageToken (Slither line:2988)
Checking function: messageToken (Slither line:2988)
messageToken returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[keccak256(bytes)(abi.encodePacked(messageToken,_messageId))] (Slither line:3028)
Checking function: setMessageValue (Slither line:2988)
Checking function: messageValue (Slither line:2988)
messageValue returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(messageValue,_messageId))] (Slither line:3028)
Checking function: setMessageRecipient (Slither line:2988)
Checking function: messageRecipient (Slither line:2988)
messageRecipient returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[keccak256(bytes)(abi.encodePacked(messageRecipient,_messageId))] (Slither line:3028)
Checking function: _onlyMediator (Slither line:2988)
Checking function: setBridgeContract (Slither line:2988)
Checking function: setMediatorContractOnOtherSide (Slither line:2988)
Checking function: bridgeContract (Slither line:2988)
bridgeContract returns IAMB variable  (Slither line:3008)
Checking function: mediatorContractOnOtherSide (Slither line:2988)
mediatorContractOnOtherSide returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[MEDIATOR_CONTRACT] (Slither line:3028)
Checking function: _setBridgeContract (Slither line:2988)
Checking function: _setMediatorContractOnOtherSide (Slither line:2988)
Checking function: messageId (Slither line:2988)
messageId returns bytes32 variable  (Slither line:3008)
RETURN node expression: bridgeContract().messageId() (Slither line:3028)
Checking function: maxGasPerTx (Slither line:2988)
maxGasPerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: bridgeContract().maxGasPerTx() (Slither line:3028)
Checking function: onTokenTransfer (Slither line:2988)
onTokenTransfer returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: relayTokens (Slither line:2988)
Checking function: relayTokens (Slither line:2988)
Checking function: relayTokensAndCall (Slither line:2988)
Checking function: _relayTokens (Slither line:2988)
Checking function: lock (Slither line:2988)
lock returns bool variable called res (Slither line:3008)
Checking function: setLock (Slither line:2988)
Checking function: getBridgeInterfacesVersion (Slither line:2988)
getBridgeInterfacesVersion returns uint64 variable called major (Slither line:3008)
getBridgeInterfacesVersion returns uint64 variable called minor (Slither line:3008)
getBridgeInterfacesVersion returns uint64 variable called patch (Slither line:3008)
RETURN node expression: (2,1,0) (Slither line:3028)
Checking function: getBridgeMode (Slither line:2988)
getBridgeMode returns bytes4 variable called _data (Slither line:3008)
RETURN node expression: 0xb1516c26 (Slither line:3028)
Checking function: claimValues (Slither line:2988)
Checking function: claimNativeCoins (Slither line:2988)
Checking function: claimErc20Tokens (Slither line:2988)
Checking function: setInitialize (Slither line:2988)
Checking function: isInitialized (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: deployAndHandleBridgedTokens (Slither line:2988)
Checking function: deployAndHandleBridgedTokensAndCall (Slither line:2988)
Checking function: handleBridgedTokens (Slither line:2988)
Checking function: handleBridgedTokensAndCall (Slither line:2988)
Checking function: handleNativeTokens (Slither line:2988)
Checking function: handleNativeTokensAndCall (Slither line:2988)
Checking function: isRegisteredAsNativeToken (Slither line:2988)
isRegisteredAsNativeToken returns bool variable  (Slither line:3008)
RETURN node expression: isTokenRegistered(_token) && nativeTokenAddress(_token) == address(0) (Slither line:3028)
Checking function: executeActionOnFixedTokens (Slither line:2988)
Checking function: setCustomTokenAddressPair (Slither line:2988)
Checking function: fixMediatorBalance (Slither line:2988)
Checking function: claimTokens (Slither line:2988)
Checking function: claimTokensFromTokenContract (Slither line:2988)
Checking function: _recordBridgeOperation (Slither line:2988)
Checking function: _prepareMessage (Slither line:2988)
_prepareMessage returns bytes variable  (Slither line:3008)
RETURN node expression: abi.encodeWithSelector(this.handleBridgedTokens.selector,_token,_receiver,_value) (Slither line:3028)
RETURN node expression: abi.encodeWithSelector(this.deployAndHandleBridgedTokensAndCall.selector,_token,name,symbol,_decimals,_receiver,_value,_data) (Slither line:3028)
RETURN node expression: abi.encodeWithSelector(this.deployAndHandleBridgedTokens.selector,_token,name,symbol,_decimals,_receiver,_value) (Slither line:3028)
RETURN node expression: abi.encodeWithSelector(this.handleNativeTokensAndCall.selector,_nativeToken,_receiver,_value,_data) (Slither line:3028)
RETURN node expression: abi.encodeWithSelector(this.handleNativeTokens.selector,_nativeToken,_receiver,_value) (Slither line:3028)
RETURN node expression: abi.encodeWithSelector(this.handleBridgedTokensAndCall.selector,_token,_receiver,_value,_data) (Slither line:3028)
Checking function: _getMinterFor (Slither line:2988)
_getMinterFor returns IBurnableMintableERC677Token variable  (Slither line:3008)
Checking function: _releaseTokens (Slither line:2988)
Checking function: _getBridgedTokenOrDeploy (Slither line:2988)
_getBridgedTokenOrDeploy returns address variable  (Slither line:3008)
RETURN node expression: bridgedToken (Slither line:3028)
Checking function: _receiverCallback (Slither line:2988)
Checking function: _transformName (Slither line:2988)
_transformName returns string variable  (Slither line:3008)
RETURN node expression: result (Slither line:3028)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End BasicOmnibridge.find_getter_in_contract (Slither line:3083)


Begin BasicOmnibridge.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: constructor(string) returns() (Slither line:3127)
Checking function: deployAndHandleBridgedTokens(address,string,string,uint8,address,uint256) returns() (Slither line:3127)
Visibility: external
_onlyMediator()
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
symbol = name
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == address(bridge))
_setTokenAddressPair(_token,bridgedToken)
require(bool)(bridge.messageSender() == mediatorContractOnOtherSide())
_initializeTokenBridgeLimits(bridgedToken,_decimals)
require(bool)(IERC20Metadata(bridgedToken).decimals() == _decimals)
_initializeTokenBridgeLimits(bridgedToken,_decimals)
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
TokenFactory(addressStorage[TOKEN_FACTORY_CONTRACT])
0
bridgedToken
require(bool,string)(c / a == b,SafeMath: multiplication overflow)
c
require(bool)(_limits[1] < _limits[0])
require(bool)(bytes(name).length > 0 || bytes(symbol).length > 0)
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))] = _limits[0]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))] = _limits[1]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))]
bridgedToken = tokenFactory().deploy(name,symbol,_decimals,bridgeContract().sourceChainId())
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
ExecutionDailyLimitChanged(_token,_limits[0])
name = _transformName(name)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
name = symbol
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setExecutionLimits(_token,(_executionDailyLimit,_executionMaxPerTx))
_handleTokens(bridgedToken,false,_recipient,_value)
onlyMediator()
factor = 10 ** (_decimals - 18)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setLimits(_token,(dailyLimit(address(0)).mul(factor),maxPerTx(address(0)).mul(factor),minPerTx(address(0)).mul(factor)))
result
_setExecutionLimits(_token,(executionDailyLimit(address(0)).mul(factor),executionMaxPerTx(address(0)).mul(factor)))
factor = 10 ** (18 - _decimals)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
IAMB(addressStorage[BRIDGE_CONTRACT])
mstore(uint256,uint256)(result,mload(uint256)(_name) + size)
div(a,b,SafeMath: division by zero)
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
addressStorage[MEDIATOR_CONTRACT]
require(bool,string)(b > 0,errorMessage)
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))] = _bridgedToken
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
c
_setLimits(_token,(_dailyLimit,_maxPerTx,_minPerTx))
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))] = _nativeToken
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
NewTokenRegistered(_nativeToken,_bridgedToken)
_minPerTx = 1
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(_limits[2] > 0 && _limits[1] > _limits[2] && _limits[0] > _limits[1])
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
minPerTx(_token) > 0
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))] = _limits[0]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))] = _limits[1]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))] = _limits[2]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_maxPerTx = 100
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
DailyLimitChanged(_token,_limits[0])
_executionMaxPerTx = 100
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
_dailyLimit = 10000
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_executionDailyLimit = 10000
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: deployAndHandleBridgedTokensAndCall(address,string,string,uint8,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
_onlyMediator()
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
symbol = name
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == address(bridge))
_setTokenAddressPair(_token,bridgedToken)
require(bool)(bridge.messageSender() == mediatorContractOnOtherSide())
_initializeTokenBridgeLimits(bridgedToken,_decimals)
require(bool)(IERC20Metadata(bridgedToken).decimals() == _decimals)
_initializeTokenBridgeLimits(bridgedToken,_decimals)
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
TokenFactory(addressStorage[TOKEN_FACTORY_CONTRACT])
0
bridgedToken
(codehash != accountHash && codehash != 0x0)
require(bool,string)(c / a == b,SafeMath: multiplication overflow)
_recipient.call(abi.encodeWithSelector(IERC20Receiver.onTokenBridged.selector,_token,_value,_data))
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
c
require(bool)(_limits[1] < _limits[0])
require(bool)(bytes(name).length > 0 || bytes(symbol).length > 0)
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))] = _limits[0]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))] = _limits[1]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))]
bridgedToken = tokenFactory().deploy(name,symbol,_decimals,bridgeContract().sourceChainId())
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
ExecutionDailyLimitChanged(_token,_limits[0])
name = _transformName(name)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
name = symbol
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setExecutionLimits(_token,(_executionDailyLimit,_executionMaxPerTx))
factor = 10 ** (_decimals - 18)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setLimits(_token,(dailyLimit(address(0)).mul(factor),maxPerTx(address(0)).mul(factor),minPerTx(address(0)).mul(factor)))
result
_setExecutionLimits(_token,(executionDailyLimit(address(0)).mul(factor),executionMaxPerTx(address(0)).mul(factor)))
factor = 10 ** (18 - _decimals)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
IAMB(addressStorage[BRIDGE_CONTRACT])
mstore(uint256,uint256)(result,mload(uint256)(_name) + size)
div(a,b,SafeMath: division by zero)
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
addressStorage[MEDIATOR_CONTRACT]
require(bool,string)(b > 0,errorMessage)
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))] = _bridgedToken
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
c
_setLimits(_token,(_dailyLimit,_maxPerTx,_minPerTx))
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))] = _nativeToken
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
NewTokenRegistered(_nativeToken,_bridgedToken)
_minPerTx = 1
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(_limits[2] > 0 && _limits[1] > _limits[2] && _limits[0] > _limits[1])
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
_handleTokens(bridgedToken,false,_recipient,_value)
minPerTx(_token) > 0
_receiverCallback(_recipient,bridgedToken,_value,_data)
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))] = _limits[0]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))] = _limits[1]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
onlyMediator()
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))] = _limits[2]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_maxPerTx = 100
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
DailyLimitChanged(_token,_limits[0])
_executionMaxPerTx = 100
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
_dailyLimit = 10000
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_executionDailyLimit = 10000
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: handleBridgedTokens(address,address,uint256) returns() (Slither line:3127)
Visibility: external
_onlyMediator()
require(bool)(msg.sender == address(bridge))
require(bool)(bridge.messageSender() == mediatorContractOnOtherSide())
minPerTx(_token) > 0
IAMB(addressStorage[BRIDGE_CONTRACT])
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))]
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
require(bool)(isTokenRegistered(token))
addressStorage[MEDIATOR_CONTRACT]
_handleTokens(token,false,_recipient,_value)
onlyMediator()
Checking function: handleBridgedTokensAndCall(address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
_onlyMediator()
require(bool)(isTokenRegistered(token))
_handleTokens(token,false,_recipient,_value)
require(bool)(msg.sender == address(bridge))
(codehash != accountHash && codehash != 0x0)
_receiverCallback(_recipient,token,_value,_data)
_recipient.call(abi.encodeWithSelector(IERC20Receiver.onTokenBridged.selector,_token,_value,_data))
require(bool)(bridge.messageSender() == mediatorContractOnOtherSide())
minPerTx(_token) > 0
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
onlyMediator()
IAMB(addressStorage[BRIDGE_CONTRACT])
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))]
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
addressStorage[MEDIATOR_CONTRACT]
Checking function: handleNativeTokens(address,address,uint256) returns() (Slither line:3127)
Visibility: external
_onlyMediator()
require(bool)(msg.sender == address(bridge))
require(bool)(bridge.messageSender() == mediatorContractOnOtherSide())
boolStorage[keccak256(bytes)(abi.encodePacked(ackDeploy,_token))] = true
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
IAMB(addressStorage[BRIDGE_CONTRACT])
_ackBridgedTokenDeploy(_token)
_handleTokens(_token,true,_recipient,_value)
addressStorage[MEDIATOR_CONTRACT]
onlyMediator()
Checking function: handleNativeTokensAndCall(address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
_onlyMediator()
require(bool)(msg.sender == address(bridge))
(codehash != accountHash && codehash != 0x0)
_recipient.call(abi.encodeWithSelector(IERC20Receiver.onTokenBridged.selector,_token,_value,_data))
require(bool)(bridge.messageSender() == mediatorContractOnOtherSide())
boolStorage[keccak256(bytes)(abi.encodePacked(ackDeploy,_token))] = true
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
IAMB(addressStorage[BRIDGE_CONTRACT])
_ackBridgedTokenDeploy(_token)
_handleTokens(_token,true,_recipient,_value)
_receiverCallback(_recipient,_token,_value,_data)
onlyMediator()
addressStorage[MEDIATOR_CONTRACT]
Checking function: isRegisteredAsNativeToken(address) returns(bool) (Slither line:3127)
Visibility: public
isTokenRegistered(_token) && nativeTokenAddress(_token) == address(0)
minPerTx(_token) > 0
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))]
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
Checking function: executeActionOnFixedTokens(address,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: setCustomTokenAddressPair(address,address) returns() (Slither line:3127)
Visibility: external
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))] = _bridgedToken
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))] = _nativeToken
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
NewTokenRegistered(_nativeToken,_bridgedToken)
addressStorage[OWNER]
require(bool)(! isTokenRegistered(_bridgedToken))
_onlyOwner()
require(bool)(nativeTokenAddress(_bridgedToken) == address(0))
minPerTx(_token) > 0
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))]
require(bool)(bridgedTokenAddress(_nativeToken) == address(0))
IBurnableMintableERC677Token(_bridgedToken).mint(address(this),1)
IBurnableMintableERC677Token(_bridgedToken).burn(1)
_setTokenAddressPair(_nativeToken,_bridgedToken)
require(bool)(msg.sender == owner())
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))]
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
onlyOwner()
Checking function: fixMediatorBalance(address,address) returns() (Slither line:3127)
Visibility: external
require(bool)(isRegisteredAsNativeToken(_token))
require(bool)(bytes(name).length > 0 || bytes(symbol).length > 0)
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.name.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
abi.encodeWithSelector(this.handleNativeTokensAndCall.selector,_nativeToken,_receiver,_value,_data)
require(bool)(balance > expectedBalance)
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))] = totalSpentPerDay(_token,_day).add(_value)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_convertToString(data)
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))] = _balance
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(_to != address(0))
require(bool)(available > 0)
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.NAME.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
addTotalSpentPerDay(_token,getCurrentDay(),diff)
block.timestamp / 86400
_remainingOutOfDaily = _dailyLimit - _spent
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
diff = available
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

_remainingOutOfDaily = 0
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(messageValue,_messageId))] = _value
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == IUpgradeabilityOwnerStorage(address(this)).upgradeabilityOwner())
_maxPerTx
_remainingOutOfDaily
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.decimals.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
boolStorage[keccak256(bytes)(abi.encodePacked(ackDeploy,_token))]
_recordBridgeOperation(_messageId,_token,_receiver,diff)
onlyIfUpgradeabilityOwner()
addressStorage[keccak256(bytes)(abi.encodePacked(messageToken,_messageId))] = _token
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
abi.decode(data,(uint256))
validAddress(_receiver)
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.DECIMALS.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))]
0
setMessageToken(_messageId,_token)
abi.decode(returnData,(string))
setMessageRecipient(_messageId,_sender)
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))]
setMessageValue(_messageId,_value)
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))]
TokensBridgingInitiated(_token,_sender,_value,_messageId)
require(bool,string)(c >= a,SafeMath: addition overflow)
addressStorage[keccak256(bytes)(abi.encodePacked(messageRecipient,_messageId))] = _recipient
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
c
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.symbol.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
res
len__convertToString_asm_0 = 0
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
abi.encodeWithSelector(this.handleBridgedTokensAndCall.selector,_token,_receiver,_value,_data)
abi.encodeWithSelector(this.handleBridgedTokens.selector,_token,_receiver,_value)
mstore(uint256,uint256)(res + 32,data)
_convertToString(data)
abi.encodeWithSelector(this.deployAndHandleBridgedTokensAndCall.selector,_token,name,symbol,_decimals,_receiver,_value,_data)
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.SYMBOL.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
abi.encodeWithSelector(this.deployAndHandleBridgedTokens.selector,_token,name,symbol,_decimals,_receiver,_value)
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
minPerTx(_token) > 0
mstore(uint256,uint256)(res,len__convertToString_asm_0)
data = data << 8
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
abi.encodeWithSelector(this.handleNativeTokens.selector,_nativeToken,_receiver,_value)

len__convertToString_asm_0 = len__convertToString_asm_0 + 1
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
IBurnableMintableERC677Token(_token).burn(_value)
_setMediatorBalance(_token,mediatorBalance(_token).add(_value))

isTokenRegistered(_token) && nativeTokenAddress(_token) == address(0)
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
Checking function: claimTokens(address,address) returns() (Slither line:3127)
Visibility: external
returndata
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
require(bool)(msg.sender == IUpgradeabilityOwnerStorage(address(this)).upgradeabilityOwner())
(codehash != accountHash && codehash != 0x0)
revert(string)(errorMessage)
require(bool)(_token == address(0) || ! isTokenRegistered(_token))
minPerTx(_token) > 0
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
claimValues(_token,_to)
new Sacrifice{value: _value}(_receiver)
onlyIfUpgradeabilityOwner()
require(bool,string)(isContract(target),Address: call to non-contract)
_functionCallWithValue(target,data,0,errorMessage)
validAddress(_to)
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
claimNativeCoins(_to)
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(_to != address(0))
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
claimErc20Tokens(_token,_to)
_callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))
AddressHelper.safeSendValue(address(_to),value)
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
token.safeTransfer(_to,balance)
Checking function: claimTokensFromTokenContract(address,address,address) returns() (Slither line:3127)
Visibility: external
IBurnableMintableERC677Token(_bridgedToken).claimTokens(_token,_to)
onlyIfUpgradeabilityOwner()
require(bool)(msg.sender == IUpgradeabilityOwnerStorage(address(this)).upgradeabilityOwner())
Checking function: _recordBridgeOperation(bytes32,address,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _prepareMessage(address,address,address,uint256,uint8,bytes) returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: _getMinterFor(address) returns(IBurnableMintableERC677Token) (Slither line:3127)
Visibility: internal
Checking function: _releaseTokens(bool,address,address,uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _getBridgedTokenOrDeploy(address,string,string,uint8) returns(address) (Slither line:3127)
Visibility: internal
Checking function: _receiverCallback(address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: _transformName(string) returns(string) (Slither line:3127)
Visibility: internal
Checking function: _handleTokens(address,bool,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: isTokenRegistered(address) returns(bool) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
minPerTx(_token) > 0
Checking function: totalSpentPerDay(address,uint256) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))]
Checking function: totalExecutedPerDay(address,uint256) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))]
Checking function: dailyLimit(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
Checking function: executionDailyLimit(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
Checking function: maxPerTx(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
Checking function: executionMaxPerTx(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
Checking function: minPerTx(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
Checking function: withinLimit(address,uint256) returns(bool) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
dailyLimit(address(0)) > 0 && dailyLimit(_token) >= nextLimit && _amount <= maxPerTx(_token) && _amount >= minPerTx(_token)
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))]
require(bool,string)(c >= a,SafeMath: addition overflow)
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
block.timestamp / 86400
c
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
Checking function: withinExecutionLimit(address,uint256) returns(bool) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
require(bool,string)(c >= a,SafeMath: addition overflow)
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))]
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
c
block.timestamp / 86400
executionDailyLimit(address(0)) > 0 && executionDailyLimit(_token) >= nextLimit && _amount <= executionMaxPerTx(_token)
Checking function: getCurrentDay() returns(uint256) (Slither line:3127)
Visibility: public
block.timestamp / 86400
Checking function: setDailyLimit(address,uint256) returns() (Slither line:3127)
Visibility: external
addressStorage[OWNER]
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
_onlyOwner()
require(bool)(isTokenRegistered(_token))
minPerTx(_token) > 0
require(bool)(_dailyLimit > maxPerTx(_token) || _dailyLimit == 0)
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))] = _dailyLimit
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
DailyLimitChanged(_token,_dailyLimit)
require(bool)(msg.sender == owner())
onlyOwner()
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
Checking function: setExecutionDailyLimit(address,uint256) returns() (Slither line:3127)
Visibility: external
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
addressStorage[OWNER]
_onlyOwner()
minPerTx(_token) > 0
require(bool)(isTokenRegistered(_token))
require(bool)(_dailyLimit > executionMaxPerTx(_token) || _dailyLimit == 0)
require(bool)(msg.sender == owner())
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))] = _dailyLimit
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
ExecutionDailyLimitChanged(_token,_dailyLimit)
onlyOwner()
Checking function: setExecutionMaxPerTx(address,uint256) returns() (Slither line:3127)
Visibility: external
require(bool)(_maxPerTx == 0 || (_maxPerTx > 0 && _maxPerTx < executionDailyLimit(_token)))
addressStorage[OWNER]
_onlyOwner()
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))] = _maxPerTx
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
minPerTx(_token) > 0
require(bool)(msg.sender == owner())
onlyOwner()
require(bool)(isTokenRegistered(_token))
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
Checking function: setMaxPerTx(address,uint256) returns() (Slither line:3127)
Visibility: external
addressStorage[OWNER]
_onlyOwner()
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))] = _maxPerTx
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
minPerTx(_token) > 0
require(bool)(isTokenRegistered(_token))
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
onlyOwner()
require(bool)(msg.sender == owner())
require(bool)(_maxPerTx == 0 || (_maxPerTx > minPerTx(_token) && _maxPerTx < dailyLimit(_token)))
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
Checking function: setMinPerTx(address,uint256) returns() (Slither line:3127)
Visibility: external
require(bool)(isTokenRegistered(_token))
require(bool)(_minPerTx > 0 && _minPerTx < dailyLimit(_token) && _minPerTx < maxPerTx(_token))
addressStorage[OWNER]
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
_onlyOwner()
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))] = _minPerTx
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
minPerTx(_token) > 0
onlyOwner()
require(bool)(msg.sender == owner())
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
Checking function: maxAvailablePerTx(address) returns(uint256) (Slither line:3127)
Visibility: public
_remainingOutOfDaily = 0
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_maxPerTx
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))]
_remainingOutOfDaily
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
block.timestamp / 86400
_remainingOutOfDaily = _dailyLimit - _spent
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: addTotalSpentPerDay(address,uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: addTotalExecutedPerDay(address,uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setLimits(address,uint256[3]) returns() (Slither line:3127)
Visibility: internal
Checking function: _setExecutionLimits(address,uint256[2]) returns() (Slither line:3127)
Visibility: internal
Checking function: _initializeTokenBridgeLimits(address,uint256) returns() (Slither line:3127)
Checking function: _onlyOwner() returns() (Slither line:3127)
Visibility: internal
Checking function: owner() returns(address) (Slither line:3127)
Visibility: public
addressStorage[OWNER]
Checking function: transferOwnership(address) returns() (Slither line:3127)
Visibility: external
addressStorage[OWNER] = newOwner
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
addressStorage[OWNER]
_onlyOwner()
_setOwner(newOwner)
require(bool)(newOwner != address(0))
require(bool)(msg.sender == owner())
OwnershipTransferred(owner(),newOwner)
onlyOwner()
Checking function: _setOwner(address) returns() (Slither line:3127)
Visibility: internal
Checking function: setTokenFactory(address) returns() (Slither line:3127)
Visibility: external
require(bool)(Address.isContract(_tokenFactory))
addressStorage[TOKEN_FACTORY_CONTRACT] = _tokenFactory
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setTokenFactory(_tokenFactory)
addressStorage[OWNER]
_onlyOwner()
(codehash != accountHash && codehash != 0x0)
onlyOwner()
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == owner())
Checking function: tokenFactory() returns(TokenFactory) (Slither line:3127)
Visibility: public
TokenFactory(addressStorage[TOKEN_FACTORY_CONTRACT])
Checking function: _setTokenFactory(address) returns() (Slither line:3127)
Visibility: internal
Checking function: mediatorBalance(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))]
Checking function: _setMediatorBalance(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: isBridgedTokenDeployAcknowledged(address) returns(bool) (Slither line:3127)
Visibility: public
boolStorage[keccak256(bytes)(abi.encodePacked(ackDeploy,_token))]
Checking function: _ackBridgedTokenDeploy(address) returns() (Slither line:3127)
Visibility: internal
Checking function: bridgedTokenAddress(address) returns(address) (Slither line:3127)
Visibility: public
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))]
Checking function: nativeTokenAddress(address) returns(address) (Slither line:3127)
Visibility: public
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))]
Checking function: _setTokenAddressPair(address,address) returns() (Slither line:3127)
Visibility: internal
Checking function: requestFailedMessageFix(bytes32) returns() (Slither line:3127)
Visibility: external
_passMessage(data,true)
require(bool)(! bridgeContract().messageCallStatus(_messageId))
addressStorage[MEDIATOR_CONTRACT]
require(bool)(bridgeContract().failedMessageReceiver(_messageId) == address(this))
IAMB(addressStorage[BRIDGE_CONTRACT])
require(bool)(bridgeContract().failedMessageSender(_messageId) == mediatorContractOnOtherSide())
Checking function: fixFailedMessage(bytes32) returns() (Slither line:3127)
Visibility: public
_onlyMediator()
boolStorage[keccak256(bytes)(abi.encodePacked(messageFixed,_messageId))]
c
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
require(bool)(msg.sender == address(bridge))
require(bool)(bridge.messageSender() == mediatorContractOnOtherSide())
addressStorage[keccak256(bytes)(abi.encodePacked(messageToken,_messageId))]
require(bool,string)(isContract(target),Address: call to non-contract)
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))] = _balance
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
boolStorage[keccak256(bytes)(abi.encodePacked(messageFixed,_messageId))] = true
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
returndata
(codehash != accountHash && codehash != 0x0)
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(! messageFixed(_messageId))
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
uintStorage[keccak256(bytes)(abi.encodePacked(messageValue,_messageId))]
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))]
revert(string)(errorMessage)
setMessageFixed(_messageId)
executeActionOnFixedTokens(token,recipient,value)
FailedMessageFixed(_messageId,token,recipient,value)
onlyMediator()
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))]
IAMB(addressStorage[BRIDGE_CONTRACT])
_releaseTokens(nativeTokenAddress(_token) == address(0),_token,_recipient,_value,_value)
_functionCallWithValue(target,data,0,errorMessage)
addressStorage[MEDIATOR_CONTRACT]
addressStorage[keccak256(bytes)(abi.encodePacked(messageRecipient,_messageId))]
IBurnableMintableERC677Token(_token)
sub(a,b,SafeMath: subtraction overflow)
IERC677(_token).safeTransfer(_recipient,_value)
_setMediatorBalance(_token,mediatorBalance(_token).sub(_balanceChange))
require(bool,string)(b <= a,errorMessage)
_getMinterFor(_token).mint(_recipient,_value)
Checking function: messageFixed(bytes32) returns(bool) (Slither line:3127)
Visibility: public
boolStorage[keccak256(bytes)(abi.encodePacked(messageFixed,_messageId))]
Checking function: setMessageFixed(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: executeActionOnFixedTokens(address,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: setMessageToken(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: messageToken(bytes32) returns(address) (Slither line:3127)
Visibility: internal
Checking function: setMessageValue(bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: messageValue(bytes32) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: setMessageRecipient(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: messageRecipient(bytes32) returns(address) (Slither line:3127)
Visibility: internal
Checking function: _onlyMediator() returns() (Slither line:3127)
Visibility: internal
Checking function: setBridgeContract(address) returns() (Slither line:3127)
Visibility: external
require(bool)(Address.isContract(_bridgeContract))
addressStorage[BRIDGE_CONTRACT] = _bridgeContract
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
addressStorage[OWNER]
_onlyOwner()
(codehash != accountHash && codehash != 0x0)
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setBridgeContract(_bridgeContract)
onlyOwner()
require(bool)(msg.sender == owner())
Checking function: setMediatorContractOnOtherSide(address) returns() (Slither line:3127)
Visibility: external
addressStorage[OWNER]
_onlyOwner()
onlyOwner()
require(bool)(msg.sender == owner())
addressStorage[MEDIATOR_CONTRACT] = _mediatorContract
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setMediatorContractOnOtherSide(_mediatorContract)
Checking function: bridgeContract() returns(IAMB) (Slither line:3127)
Visibility: public
IAMB(addressStorage[BRIDGE_CONTRACT])
Checking function: mediatorContractOnOtherSide() returns(address) (Slither line:3127)
Visibility: public
addressStorage[MEDIATOR_CONTRACT]
Checking function: _setBridgeContract(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setMediatorContractOnOtherSide(address) returns() (Slither line:3127)
Visibility: internal
Checking function: messageId() returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: maxGasPerTx() returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _passMessage(bytes,bool) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: onTokenTransfer(address,uint256,bytes) returns(bool) (Slither line:3127)
Visibility: external
onTokenTransfer contains assembly (Slither line:3153)
true
data = mload(uint256)(0x40)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
size_onTokenTransfer_asm_1 = calldataload(uint256)(100) - 20
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
mstore(uint256,uint256)(data,size_onTokenTransfer_asm_1)
bridgeSpecificActionsOnTokenTransfer(msg.sender,_from,receiver,_value,data)
calldatacopy(uint256,uint256,uint256)(data + 32,152,size_onTokenTransfer_asm_1)
mstore(uint256,uint256)(0x40,data + 32 + size_onTokenTransfer_asm_1)
res = sload(uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
receiver = calldataload(uint256)(120)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: relayTokens(IERC677,address,uint256) returns() (Slither line:3127)
Visibility: external
_relayTokens(token,_receiver,_value,new bytes(0))
returndata
require(bool)(! lock())
c
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
(codehash != accountHash && codehash != 0x0)
setLock(true)
sstore(uint256,uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92,_lock)
sstore(uint256,uint256)
revert(string)(errorMessage)
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
token.safeTransferFrom(msg.sender,address(this),_value)
setLock(false)
sub(a,b,SafeMath: subtraction overflow)
require(bool,string)(isContract(target),Address: call to non-contract)
_functionCallWithValue(target,data,0,errorMessage)
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(balanceDiff <= _value)
res = sload(uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))
bridgeSpecificActionsOnTokenTransfer(address(token),msg.sender,_receiver,balanceDiff,_data)
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
require(bool,string)(b <= a,errorMessage)
Checking function: relayTokens(IERC677,uint256) returns() (Slither line:3127)
Visibility: external
_relayTokens(token,msg.sender,_value,new bytes(0))
returndata
require(bool)(! lock())
c
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
(codehash != accountHash && codehash != 0x0)
setLock(true)
sstore(uint256,uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92,_lock)
sstore(uint256,uint256)
revert(string)(errorMessage)
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
token.safeTransferFrom(msg.sender,address(this),_value)
setLock(false)
sub(a,b,SafeMath: subtraction overflow)
require(bool,string)(isContract(target),Address: call to non-contract)
_functionCallWithValue(target,data,0,errorMessage)
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(balanceDiff <= _value)
res = sload(uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))
bridgeSpecificActionsOnTokenTransfer(address(token),msg.sender,_receiver,balanceDiff,_data)
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
require(bool,string)(b <= a,errorMessage)
Checking function: relayTokensAndCall(IERC677,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
returndata
require(bool)(! lock())
c
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
(codehash != accountHash && codehash != 0x0)
setLock(true)
sstore(uint256,uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92,_lock)
sstore(uint256,uint256)
revert(string)(errorMessage)
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
token.safeTransferFrom(msg.sender,address(this),_value)
setLock(false)
sub(a,b,SafeMath: subtraction overflow)
require(bool,string)(isContract(target),Address: call to non-contract)
_functionCallWithValue(target,data,0,errorMessage)
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(balanceDiff <= _value)
_relayTokens(token,_receiver,_value,_data)
res = sload(uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))
bridgeSpecificActionsOnTokenTransfer(address(token),msg.sender,_receiver,balanceDiff,_data)
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
require(bool,string)(b <= a,errorMessage)
Checking function: _relayTokens(IERC677,address,uint256,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: bridgeSpecificActionsOnTokenTransfer(address,address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: lock() returns(bool) (Slither line:3127)
Visibility: internal
Checking function: setLock(bool) returns() (Slither line:3127)
Visibility: internal
Checking function: getBridgeInterfacesVersion() returns(uint64,uint64,uint64) (Slither line:3127)
Visibility: external
(2,1,0)
Checking function: getBridgeMode() returns(bytes4) (Slither line:3127)
Visibility: external
0xb1516c26
Checking function: getBridgeInterfacesVersion() returns(uint64,uint64,uint64) (Slither line:3127)
Visibility: external
Checking function: getBridgeMode() returns(bytes4) (Slither line:3127)
Visibility: external
Checking function: claimValues(address,address) returns() (Slither line:3127)
Visibility: internal
Checking function: claimNativeCoins(address) returns() (Slither line:3127)
Visibility: internal
Checking function: claimErc20Tokens(address,address) returns() (Slither line:3127)
Visibility: internal
Checking function: setInitialize() returns() (Slither line:3127)
Checking function: isInitialized() returns(bool) (Slither line:3127)

End BasicOmnibridge.find_setter_in_contract (Slither line:3345)


Begin GasLimitManager.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: _onlyMediator (Slither line:2988)
Checking function: setBridgeContract (Slither line:2988)
Checking function: setMediatorContractOnOtherSide (Slither line:2988)
Checking function: bridgeContract (Slither line:2988)
bridgeContract returns IAMB variable  (Slither line:3008)
Checking function: mediatorContractOnOtherSide (Slither line:2988)
mediatorContractOnOtherSide returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[MEDIATOR_CONTRACT] (Slither line:3028)
Checking function: _setBridgeContract (Slither line:2988)
Checking function: _setMediatorContractOnOtherSide (Slither line:2988)
Checking function: messageId (Slither line:2988)
messageId returns bytes32 variable  (Slither line:3008)
RETURN node expression: bridgeContract().messageId() (Slither line:3028)
Checking function: maxGasPerTx (Slither line:2988)
maxGasPerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: bridgeContract().maxGasPerTx() (Slither line:3028)
Checking function: _onlyOwner (Slither line:2988)
Checking function: owner (Slither line:2988)
owner returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[OWNER] (Slither line:3028)
Checking function: transferOwnership (Slither line:2988)
Checking function: _setOwner (Slither line:2988)
Checking function: setRequestGasLimit (Slither line:2988)
Checking function: requestGasLimit (Slither line:2988)
requestGasLimit returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[REQUEST_GAS_LIMIT] (Slither line:3028)
Checking function: _setRequestGasLimit (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End GasLimitManager.find_getter_in_contract (Slither line:3083)


Begin GasLimitManager.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: setRequestGasLimit(uint256) returns() (Slither line:3127)
Visibility: external
bridgeContract().maxGasPerTx()
uintStorage[REQUEST_GAS_LIMIT] = _gasLimit
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
IAMB(addressStorage[BRIDGE_CONTRACT])
require(bool)(msg.sender == owner())
_onlyOwner()
addressStorage[OWNER]
require(bool)(_gasLimit <= maxGasPerTx())
_setRequestGasLimit(_gasLimit)
onlyOwner()
Checking function: requestGasLimit() returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[REQUEST_GAS_LIMIT]
Checking function: _setRequestGasLimit(uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: _onlyMediator() returns() (Slither line:3127)
Visibility: internal
Checking function: setBridgeContract(address) returns() (Slither line:3127)
Visibility: external
_setBridgeContract(_bridgeContract)
_onlyOwner()
addressStorage[OWNER]
onlyOwner()
(codehash != accountHash && codehash != 0x0)
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == owner())
require(bool)(Address.isContract(_bridgeContract))
addressStorage[BRIDGE_CONTRACT] = _bridgeContract
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: setMediatorContractOnOtherSide(address) returns() (Slither line:3127)
Visibility: external
_setMediatorContractOnOtherSide(_mediatorContract)
addressStorage[MEDIATOR_CONTRACT] = _mediatorContract
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == owner())
_onlyOwner()
addressStorage[OWNER]
onlyOwner()
Checking function: bridgeContract() returns(IAMB) (Slither line:3127)
Visibility: public
IAMB(addressStorage[BRIDGE_CONTRACT])
Checking function: mediatorContractOnOtherSide() returns(address) (Slither line:3127)
Visibility: public
addressStorage[MEDIATOR_CONTRACT]
Checking function: _setBridgeContract(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setMediatorContractOnOtherSide(address) returns() (Slither line:3127)
Visibility: internal
Checking function: messageId() returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: maxGasPerTx() returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _passMessage(bytes,bool) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _onlyOwner() returns() (Slither line:3127)
Visibility: internal
Checking function: owner() returns(address) (Slither line:3127)
Visibility: public
addressStorage[OWNER]
Checking function: transferOwnership(address) returns() (Slither line:3127)
Visibility: external
OwnershipTransferred(owner(),newOwner)
onlyOwner()
require(bool)(msg.sender == owner())
_onlyOwner()
addressStorage[OWNER] = newOwner
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
addressStorage[OWNER]
_setOwner(newOwner)
require(bool)(newOwner != address(0))
Checking function: _setOwner(address) returns() (Slither line:3127)
Visibility: internal

End GasLimitManager.find_setter_in_contract (Slither line:3345)


Begin ForeignOmnibridge.find_getter_in_contract (Slither line:2974)

0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: setRequestGasLimit (Slither line:2988)
Checking function: requestGasLimit (Slither line:2988)
requestGasLimit returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[REQUEST_GAS_LIMIT] (Slither line:3028)
Checking function: _setRequestGasLimit (Slither line:2988)
Checking function: _onlyMediator (Slither line:2988)
Checking function: setBridgeContract (Slither line:2988)
Checking function: setMediatorContractOnOtherSide (Slither line:2988)
Checking function: bridgeContract (Slither line:2988)
bridgeContract returns IAMB variable  (Slither line:3008)
Checking function: mediatorContractOnOtherSide (Slither line:2988)
mediatorContractOnOtherSide returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[MEDIATOR_CONTRACT] (Slither line:3028)
Checking function: _setBridgeContract (Slither line:2988)
Checking function: _setMediatorContractOnOtherSide (Slither line:2988)
Checking function: messageId (Slither line:2988)
messageId returns bytes32 variable  (Slither line:3008)
RETURN node expression: bridgeContract().messageId() (Slither line:3028)
Checking function: maxGasPerTx (Slither line:2988)
maxGasPerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: bridgeContract().maxGasPerTx() (Slither line:3028)
Checking function: _onlyOwner (Slither line:2988)
Checking function: owner (Slither line:2988)
owner returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[OWNER] (Slither line:3028)
Checking function: transferOwnership (Slither line:2988)
Checking function: _setOwner (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: deployAndHandleBridgedTokens (Slither line:2988)
Checking function: deployAndHandleBridgedTokensAndCall (Slither line:2988)
Checking function: handleBridgedTokens (Slither line:2988)
Checking function: handleBridgedTokensAndCall (Slither line:2988)
Checking function: handleNativeTokens (Slither line:2988)
Checking function: handleNativeTokensAndCall (Slither line:2988)
Checking function: isRegisteredAsNativeToken (Slither line:2988)
isRegisteredAsNativeToken returns bool variable  (Slither line:3008)
RETURN node expression: isTokenRegistered(_token) && nativeTokenAddress(_token) == address(0) (Slither line:3028)
Checking function: executeActionOnFixedTokens (Slither line:2988)
Checking function: setCustomTokenAddressPair (Slither line:2988)
Checking function: fixMediatorBalance (Slither line:2988)
Checking function: claimTokens (Slither line:2988)
Checking function: claimTokensFromTokenContract (Slither line:2988)
Checking function: _recordBridgeOperation (Slither line:2988)
Checking function: _prepareMessage (Slither line:2988)
_prepareMessage returns bytes variable  (Slither line:3008)
RETURN node expression: abi.encodeWithSelector(this.handleBridgedTokens.selector,_token,_receiver,_value) (Slither line:3028)
RETURN node expression: abi.encodeWithSelector(this.deployAndHandleBridgedTokensAndCall.selector,_token,name,symbol,_decimals,_receiver,_value,_data) (Slither line:3028)
RETURN node expression: abi.encodeWithSelector(this.deployAndHandleBridgedTokens.selector,_token,name,symbol,_decimals,_receiver,_value) (Slither line:3028)
RETURN node expression: abi.encodeWithSelector(this.handleNativeTokensAndCall.selector,_nativeToken,_receiver,_value,_data) (Slither line:3028)
RETURN node expression: abi.encodeWithSelector(this.handleNativeTokens.selector,_nativeToken,_receiver,_value) (Slither line:3028)
RETURN node expression: abi.encodeWithSelector(this.handleBridgedTokensAndCall.selector,_token,_receiver,_value,_data) (Slither line:3028)
Checking function: _getMinterFor (Slither line:2988)
_getMinterFor returns IBurnableMintableERC677Token variable  (Slither line:3008)
Checking function: _releaseTokens (Slither line:2988)
Checking function: _getBridgedTokenOrDeploy (Slither line:2988)
_getBridgedTokenOrDeploy returns address variable  (Slither line:3008)
RETURN node expression: bridgedToken (Slither line:3028)
Checking function: _receiverCallback (Slither line:2988)
Checking function: _transformName (Slither line:2988)
_transformName returns string variable  (Slither line:3008)
RETURN node expression: result (Slither line:3028)
Checking function: isTokenRegistered (Slither line:2988)
isTokenRegistered returns bool variable  (Slither line:3008)
RETURN node expression: minPerTx(_token) > 0 (Slither line:3028)
Checking function: totalSpentPerDay (Slither line:2988)
totalSpentPerDay returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))] (Slither line:3028)
Checking function: totalExecutedPerDay (Slither line:2988)
totalExecutedPerDay returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))] (Slither line:3028)
Checking function: dailyLimit (Slither line:2988)
dailyLimit returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))] (Slither line:3028)
Checking function: executionDailyLimit (Slither line:2988)
executionDailyLimit returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))] (Slither line:3028)
Checking function: maxPerTx (Slither line:2988)
maxPerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))] (Slither line:3028)
Checking function: executionMaxPerTx (Slither line:2988)
executionMaxPerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))] (Slither line:3028)
Checking function: minPerTx (Slither line:2988)
minPerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))] (Slither line:3028)
Checking function: withinLimit (Slither line:2988)
withinLimit returns bool variable  (Slither line:3008)
RETURN node expression: dailyLimit(address(0)) > 0 && dailyLimit(_token) >= nextLimit && _amount <= maxPerTx(_token) && _amount >= minPerTx(_token) (Slither line:3028)
Checking function: withinExecutionLimit (Slither line:2988)
withinExecutionLimit returns bool variable  (Slither line:3008)
RETURN node expression: executionDailyLimit(address(0)) > 0 && executionDailyLimit(_token) >= nextLimit && _amount <= executionMaxPerTx(_token) (Slither line:3028)
Checking function: getCurrentDay (Slither line:2988)
getCurrentDay returns uint256 variable  (Slither line:3008)
RETURN node expression: block.timestamp / 86400 (Slither line:3028)
Checking function: setDailyLimit (Slither line:2988)
Checking function: setExecutionDailyLimit (Slither line:2988)
Checking function: setExecutionMaxPerTx (Slither line:2988)
Checking function: setMaxPerTx (Slither line:2988)
Checking function: setMinPerTx (Slither line:2988)
Checking function: maxAvailablePerTx (Slither line:2988)
maxAvailablePerTx returns uint256 variable  (Slither line:3008)
RETURN node expression: _maxPerTx (Slither line:3028)
RETURN node expression: _remainingOutOfDaily (Slither line:3028)
Checking function: addTotalSpentPerDay (Slither line:2988)
Checking function: addTotalExecutedPerDay (Slither line:2988)
Checking function: _setLimits (Slither line:2988)
Checking function: _setExecutionLimits (Slither line:2988)
Checking function: _initializeTokenBridgeLimits (Slither line:2988)
Checking function: setTokenFactory (Slither line:2988)
Checking function: tokenFactory (Slither line:2988)
tokenFactory returns TokenFactory variable  (Slither line:3008)
Checking function: _setTokenFactory (Slither line:2988)
Checking function: mediatorBalance (Slither line:2988)
mediatorBalance returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))] (Slither line:3028)
Checking function: _setMediatorBalance (Slither line:2988)
Checking function: isBridgedTokenDeployAcknowledged (Slither line:2988)
isBridgedTokenDeployAcknowledged returns bool variable  (Slither line:3008)
RETURN node expression: boolStorage[keccak256(bytes)(abi.encodePacked(ackDeploy,_token))] (Slither line:3028)
Checking function: _ackBridgedTokenDeploy (Slither line:2988)
Checking function: bridgedTokenAddress (Slither line:2988)
bridgedTokenAddress returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))] (Slither line:3028)
Checking function: nativeTokenAddress (Slither line:2988)
nativeTokenAddress returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))] (Slither line:3028)
Checking function: _setTokenAddressPair (Slither line:2988)
Checking function: requestFailedMessageFix (Slither line:2988)
Checking function: fixFailedMessage (Slither line:2988)
Checking function: messageFixed (Slither line:2988)
messageFixed returns bool variable  (Slither line:3008)
RETURN node expression: boolStorage[keccak256(bytes)(abi.encodePacked(messageFixed,_messageId))] (Slither line:3028)
Checking function: setMessageFixed (Slither line:2988)
Checking function: setMessageToken (Slither line:2988)
Checking function: messageToken (Slither line:2988)
messageToken returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[keccak256(bytes)(abi.encodePacked(messageToken,_messageId))] (Slither line:3028)
Checking function: setMessageValue (Slither line:2988)
Checking function: messageValue (Slither line:2988)
messageValue returns uint256 variable  (Slither line:3008)
RETURN node expression: uintStorage[keccak256(bytes)(abi.encodePacked(messageValue,_messageId))] (Slither line:3028)
Checking function: setMessageRecipient (Slither line:2988)
Checking function: messageRecipient (Slither line:2988)
messageRecipient returns address variable  (Slither line:3008)
RETURN node expression: addressStorage[keccak256(bytes)(abi.encodePacked(messageRecipient,_messageId))] (Slither line:3028)
Checking function: onTokenTransfer (Slither line:2988)
onTokenTransfer returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: relayTokens (Slither line:2988)
Checking function: relayTokens (Slither line:2988)
Checking function: relayTokensAndCall (Slither line:2988)
Checking function: _relayTokens (Slither line:2988)
Checking function: lock (Slither line:2988)
lock returns bool variable called res (Slither line:3008)
Checking function: setLock (Slither line:2988)
Checking function: getBridgeInterfacesVersion (Slither line:2988)
getBridgeInterfacesVersion returns uint64 variable called major (Slither line:3008)
getBridgeInterfacesVersion returns uint64 variable called minor (Slither line:3008)
getBridgeInterfacesVersion returns uint64 variable called patch (Slither line:3008)
RETURN node expression: (2,1,0) (Slither line:3028)
Checking function: getBridgeMode (Slither line:2988)
getBridgeMode returns bytes4 variable called _data (Slither line:3008)
RETURN node expression: 0xb1516c26 (Slither line:3028)
Checking function: claimValues (Slither line:2988)
Checking function: claimNativeCoins (Slither line:2988)
Checking function: claimErc20Tokens (Slither line:2988)
Checking function: setInitialize (Slither line:2988)
Checking function: isInitialized (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: initialize (Slither line:2988)
Checking function: upgradeToReverseMode (Slither line:2988)
Checking function: _handleTokens (Slither line:2988)
Checking function: bridgeSpecificActionsOnTokenTransfer (Slither line:2988)
Checking function: _releaseTokens (Slither line:2988)
Checking function: _passMessage (Slither line:2988)
_passMessage returns bytes32 variable  (Slither line:3008)
RETURN node expression: bridgeContract().requireToPassMessage(mediatorContractOnOtherSide(),_data,requestGasLimit()) (Slither line:3028)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End ForeignOmnibridge.find_getter_in_contract (Slither line:3083)


Begin ForeignOmnibridge.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: constructor(string) returns() (Slither line:3127)
Checking function: initialize(address,address,uint256[3],uint256[2],uint256,address,address) returns(bool) (Slither line:3127)
Checking function: upgradeToReverseMode(address) returns() (Slither line:3127)
Visibility: external
(codehash != accountHash && codehash != 0x0)
addressStorage[TOKEN_FACTORY_CONTRACT] = _tokenFactory
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setTokenFactory(_tokenFactory)
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(Address.isContract(_tokenFactory))
require(bool)(msg.sender == address(this))
Checking function: _handleTokens(address,bool,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: bridgeSpecificActionsOnTokenTransfer(address,address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: _releaseTokens(bool,address,address,uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _passMessage(bytes,bool) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: setRequestGasLimit(uint256) returns() (Slither line:3127)
Visibility: external
onlyOwner()
_onlyOwner()
require(bool)(_gasLimit <= maxGasPerTx())
bridgeContract().maxGasPerTx()
uintStorage[REQUEST_GAS_LIMIT] = _gasLimit
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == owner())
IAMB(addressStorage[BRIDGE_CONTRACT])
addressStorage[OWNER]
_setRequestGasLimit(_gasLimit)
Checking function: requestGasLimit() returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[REQUEST_GAS_LIMIT]
Checking function: _setRequestGasLimit(uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _onlyMediator() returns() (Slither line:3127)
Visibility: internal
Checking function: setBridgeContract(address) returns() (Slither line:3127)
Visibility: external
_setBridgeContract(_bridgeContract)
addressStorage[OWNER]
onlyOwner()
(codehash != accountHash && codehash != 0x0)
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_onlyOwner()
require(bool)(msg.sender == owner())
require(bool)(Address.isContract(_bridgeContract))
addressStorage[BRIDGE_CONTRACT] = _bridgeContract
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: setMediatorContractOnOtherSide(address) returns() (Slither line:3127)
Visibility: external
_onlyOwner()
_setMediatorContractOnOtherSide(_mediatorContract)
addressStorage[MEDIATOR_CONTRACT] = _mediatorContract
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == owner())
addressStorage[OWNER]
onlyOwner()
Checking function: bridgeContract() returns(IAMB) (Slither line:3127)
Visibility: public
IAMB(addressStorage[BRIDGE_CONTRACT])
Checking function: mediatorContractOnOtherSide() returns(address) (Slither line:3127)
Visibility: public
addressStorage[MEDIATOR_CONTRACT]
Checking function: _setBridgeContract(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setMediatorContractOnOtherSide(address) returns() (Slither line:3127)
Visibility: internal
Checking function: messageId() returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: maxGasPerTx() returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _passMessage(bytes,bool) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _onlyOwner() returns() (Slither line:3127)
Visibility: internal
Checking function: owner() returns(address) (Slither line:3127)
Visibility: public
addressStorage[OWNER]
Checking function: transferOwnership(address) returns() (Slither line:3127)
Visibility: external
addressStorage[OWNER] = newOwner
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setOwner(newOwner)
require(bool)(newOwner != address(0))
_onlyOwner()
OwnershipTransferred(owner(),newOwner)
onlyOwner()
require(bool)(msg.sender == owner())
addressStorage[OWNER]
Checking function: _setOwner(address) returns() (Slither line:3127)
Visibility: internal
Checking function: constructor(string) returns() (Slither line:3127)
Checking function: deployAndHandleBridgedTokens(address,string,string,uint8,address,uint256) returns() (Slither line:3127)
Visibility: external
symbol = name
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
c
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))] = totalExecutedPerDay(_token,_day).add(_value)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))] = _balance
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setTokenAddressPair(_token,bridgedToken)
_initializeTokenBridgeLimits(bridgedToken,_decimals)
require(bool,string)(isContract(target),Address: call to non-contract)
require(bool)(IERC20Metadata(bridgedToken).decimals() == _decimals)
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_initializeTokenBridgeLimits(bridgedToken,_decimals)
require(bool)(msg.sender == address(bridge))
block.timestamp / 86400
require(bool)(bridge.messageSender() == mediatorContractOnOtherSide())
returndata
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))]
0
bridgedToken
require(bool,string)(c / a == b,SafeMath: multiplication overflow)
(codehash != accountHash && codehash != 0x0)
require(bool)(_limits[2] > 0 && _limits[1] > _limits[2] && _limits[0] > _limits[1])
c
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
IBurnableMintableERC677Token(_token)
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))] = _limits[0]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
executionDailyLimit(address(0)) > 0 && executionDailyLimit(_token) >= nextLimit && _amount <= executionMaxPerTx(_token)
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))] = _limits[1]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(bytes(name).length > 0 || bytes(symbol).length > 0)
require(bool)(_limits[1] < _limits[0])
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))] = _limits[2]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))] = _limits[0]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
DailyLimitChanged(_token,_limits[0])
bridgedToken = tokenFactory().deploy(name,symbol,_decimals,bridgeContract().sourceChainId())
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))] = _limits[1]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
name = _transformName(name)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
ExecutionDailyLimitChanged(_token,_limits[0])
name = symbol
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
revert(string)(errorMessage)
TokensBridged(_token,_recipient,_value,messageId())
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
IERC677(_token).safeTransfer(_recipient,_value)
_setExecutionLimits(_token,(_executionDailyLimit,_executionMaxPerTx))
_handleTokens(bridgedToken,false,_recipient,_value)
_getMinterFor(_token).mint(_recipient,_value)
onlyMediator()
factor = 10 ** (_decimals - 18)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
TokenFactory(addressStorage[TOKEN_FACTORY_CONTRACT])
_setLimits(_token,(dailyLimit(address(0)).mul(factor),maxPerTx(address(0)).mul(factor),minPerTx(address(0)).mul(factor)))
_setExecutionLimits(_token,(executionDailyLimit(address(0)).mul(factor),executionMaxPerTx(address(0)).mul(factor)))
result
factor = 10 ** (18 - _decimals)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
mstore(uint256,uint256)(result,mload(uint256)(_name) + size)
div(a,b,SafeMath: division by zero)
_functionCallWithValue(target,data,0,errorMessage)
require(bool,string)(c >= a,SafeMath: addition overflow)
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
c
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))] = _bridgedToken
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))] = _nativeToken
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
NewTokenRegistered(_nativeToken,_bridgedToken)
require(bool,string)(b > 0,errorMessage)
bridgeContract().messageId()
IAMB(addressStorage[BRIDGE_CONTRACT])
c
_setLimits(_token,(_dailyLimit,_maxPerTx,_minPerTx))
_onlyMediator()
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))]
_minPerTx = 1
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
minPerTx(_token) > 0
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))]
sub(a,b,SafeMath: subtraction overflow)
addressStorage[MEDIATOR_CONTRACT]
_maxPerTx = 100
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_executionMaxPerTx = 100
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setMediatorBalance(_token,balance.sub(_balanceChange))
require(bool)(withinExecutionLimit(_token,_value))
IBurnableMintableERC677Token(_token).mint(address(this),_value - balance)
addTotalExecutedPerDay(_token,getCurrentDay(),_value)
balance = _value
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_dailyLimit = 10000
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(b <= a,errorMessage)
_releaseTokens(_isNative,_token,_recipient,_value,_value)
_executionDailyLimit = 10000
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: deployAndHandleBridgedTokensAndCall(address,string,string,uint8,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
symbol = name
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
c
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))] = totalExecutedPerDay(_token,_day).add(_value)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))] = _balance
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setTokenAddressPair(_token,bridgedToken)
_initializeTokenBridgeLimits(bridgedToken,_decimals)
require(bool,string)(isContract(target),Address: call to non-contract)
require(bool)(IERC20Metadata(bridgedToken).decimals() == _decimals)
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_initializeTokenBridgeLimits(bridgedToken,_decimals)
require(bool)(msg.sender == address(bridge))
block.timestamp / 86400
require(bool)(bridge.messageSender() == mediatorContractOnOtherSide())
returndata
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))]
0
bridgedToken
(codehash != accountHash && codehash != 0x0)
require(bool,string)(c / a == b,SafeMath: multiplication overflow)
require(bool)(_limits[2] > 0 && _limits[1] > _limits[2] && _limits[0] > _limits[1])
_recipient.call(abi.encodeWithSelector(IERC20Receiver.onTokenBridged.selector,_token,_value,_data))
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
c
IBurnableMintableERC677Token(_token)
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))] = _limits[0]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
executionDailyLimit(address(0)) > 0 && executionDailyLimit(_token) >= nextLimit && _amount <= executionMaxPerTx(_token)
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))] = _limits[1]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(bytes(name).length > 0 || bytes(symbol).length > 0)
require(bool)(_limits[1] < _limits[0])
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))] = _limits[2]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))] = _limits[0]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
DailyLimitChanged(_token,_limits[0])
bridgedToken = tokenFactory().deploy(name,symbol,_decimals,bridgeContract().sourceChainId())
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))] = _limits[1]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
name = _transformName(name)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
ExecutionDailyLimitChanged(_token,_limits[0])
name = symbol
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
revert(string)(errorMessage)
TokensBridged(_token,_recipient,_value,messageId())
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
IERC677(_token).safeTransfer(_recipient,_value)
_setExecutionLimits(_token,(_executionDailyLimit,_executionMaxPerTx))
_getMinterFor(_token).mint(_recipient,_value)
factor = 10 ** (_decimals - 18)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
TokenFactory(addressStorage[TOKEN_FACTORY_CONTRACT])
_setLimits(_token,(dailyLimit(address(0)).mul(factor),maxPerTx(address(0)).mul(factor),minPerTx(address(0)).mul(factor)))
_setExecutionLimits(_token,(executionDailyLimit(address(0)).mul(factor),executionMaxPerTx(address(0)).mul(factor)))
result
factor = 10 ** (18 - _decimals)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
mstore(uint256,uint256)(result,mload(uint256)(_name) + size)
div(a,b,SafeMath: division by zero)
_functionCallWithValue(target,data,0,errorMessage)
require(bool,string)(c >= a,SafeMath: addition overflow)
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
c
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))] = _bridgedToken
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))] = _nativeToken
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
NewTokenRegistered(_nativeToken,_bridgedToken)
require(bool,string)(b > 0,errorMessage)
bridgeContract().messageId()
IAMB(addressStorage[BRIDGE_CONTRACT])
c
_setLimits(_token,(_dailyLimit,_maxPerTx,_minPerTx))
_onlyMediator()
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))]
_handleTokens(bridgedToken,false,_recipient,_value)
_minPerTx = 1
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
_receiverCallback(_recipient,bridgedToken,_value,_data)
minPerTx(_token) > 0
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))]
sub(a,b,SafeMath: subtraction overflow)
onlyMediator()
addressStorage[MEDIATOR_CONTRACT]
_maxPerTx = 100
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_executionMaxPerTx = 100
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setMediatorBalance(_token,balance.sub(_balanceChange))
require(bool)(withinExecutionLimit(_token,_value))
IBurnableMintableERC677Token(_token).mint(address(this),_value - balance)
addTotalExecutedPerDay(_token,getCurrentDay(),_value)
balance = _value
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_dailyLimit = 10000
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(b <= a,errorMessage)
_releaseTokens(_isNative,_token,_recipient,_value,_value)
_executionDailyLimit = 10000
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: handleBridgedTokens(address,address,uint256) returns() (Slither line:3127)
Visibility: external
c
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))] = totalExecutedPerDay(_token,_day).add(_value)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))] = _balance
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(isContract(target),Address: call to non-contract)
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == address(bridge))
block.timestamp / 86400
require(bool)(bridge.messageSender() == mediatorContractOnOtherSide())
returndata
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))]
(codehash != accountHash && codehash != 0x0)
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
IBurnableMintableERC677Token(_token)
executionDailyLimit(address(0)) > 0 && executionDailyLimit(_token) >= nextLimit && _amount <= executionMaxPerTx(_token)
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
revert(string)(errorMessage)
TokensBridged(_token,_recipient,_value,messageId())
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
IERC677(_token).safeTransfer(_recipient,_value)
_getMinterFor(_token).mint(_recipient,_value)
_functionCallWithValue(target,data,0,errorMessage)
require(bool,string)(c >= a,SafeMath: addition overflow)
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
c
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
require(bool)(isTokenRegistered(token))
_handleTokens(token,false,_recipient,_value)
onlyMediator()
_releaseTokens(_isNative,_token,_recipient,_value,_value)
bridgeContract().messageId()
IAMB(addressStorage[BRIDGE_CONTRACT])
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))]
_onlyMediator()
minPerTx(_token) > 0
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))]
sub(a,b,SafeMath: subtraction overflow)
addressStorage[MEDIATOR_CONTRACT]
_setMediatorBalance(_token,balance.sub(_balanceChange))
require(bool)(withinExecutionLimit(_token,_value))
IBurnableMintableERC677Token(_token).mint(address(this),_value - balance)
addTotalExecutedPerDay(_token,getCurrentDay(),_value)
balance = _value
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(b <= a,errorMessage)
Checking function: handleBridgedTokensAndCall(address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
c
require(bool)(isTokenRegistered(token))
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))] = totalExecutedPerDay(_token,_day).add(_value)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))] = _balance
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_handleTokens(token,false,_recipient,_value)
_receiverCallback(_recipient,token,_value,_data)
onlyMediator()
require(bool,string)(isContract(target),Address: call to non-contract)
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == address(bridge))
block.timestamp / 86400
require(bool)(bridge.messageSender() == mediatorContractOnOtherSide())
returndata
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))]
(codehash != accountHash && codehash != 0x0)
_recipient.call(abi.encodeWithSelector(IERC20Receiver.onTokenBridged.selector,_token,_value,_data))
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
IBurnableMintableERC677Token(_token)
executionDailyLimit(address(0)) > 0 && executionDailyLimit(_token) >= nextLimit && _amount <= executionMaxPerTx(_token)
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
revert(string)(errorMessage)
TokensBridged(_token,_recipient,_value,messageId())
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
IERC677(_token).safeTransfer(_recipient,_value)
_getMinterFor(_token).mint(_recipient,_value)
_functionCallWithValue(target,data,0,errorMessage)
require(bool,string)(c >= a,SafeMath: addition overflow)
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
c
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
bridgeContract().messageId()
IAMB(addressStorage[BRIDGE_CONTRACT])
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))]
_onlyMediator()
minPerTx(_token) > 0
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))]
sub(a,b,SafeMath: subtraction overflow)
addressStorage[MEDIATOR_CONTRACT]
_setMediatorBalance(_token,balance.sub(_balanceChange))
require(bool)(withinExecutionLimit(_token,_value))
IBurnableMintableERC677Token(_token).mint(address(this),_value - balance)
addTotalExecutedPerDay(_token,getCurrentDay(),_value)
balance = _value
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(b <= a,errorMessage)
_releaseTokens(_isNative,_token,_recipient,_value,_value)
Checking function: handleNativeTokens(address,address,uint256) returns() (Slither line:3127)
Visibility: external
c
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))] = totalExecutedPerDay(_token,_day).add(_value)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))] = _balance
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(isContract(target),Address: call to non-contract)
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == address(bridge))
block.timestamp / 86400
require(bool)(bridge.messageSender() == mediatorContractOnOtherSide())
returndata
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))]
(codehash != accountHash && codehash != 0x0)
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
IBurnableMintableERC677Token(_token)
executionDailyLimit(address(0)) > 0 && executionDailyLimit(_token) >= nextLimit && _amount <= executionMaxPerTx(_token)
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_ackBridgedTokenDeploy(_token)
_handleTokens(_token,true,_recipient,_value)
_callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
onlyMediator()
boolStorage[keccak256(bytes)(abi.encodePacked(ackDeploy,_token))] = true
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
revert(string)(errorMessage)
TokensBridged(_token,_recipient,_value,messageId())
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
IERC677(_token).safeTransfer(_recipient,_value)
_getMinterFor(_token).mint(_recipient,_value)
_functionCallWithValue(target,data,0,errorMessage)
require(bool,string)(c >= a,SafeMath: addition overflow)
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
c
_releaseTokens(_isNative,_token,_recipient,_value,_value)
bridgeContract().messageId()
IAMB(addressStorage[BRIDGE_CONTRACT])
_onlyMediator()
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))]
sub(a,b,SafeMath: subtraction overflow)
addressStorage[MEDIATOR_CONTRACT]
_setMediatorBalance(_token,balance.sub(_balanceChange))
require(bool)(withinExecutionLimit(_token,_value))
IBurnableMintableERC677Token(_token).mint(address(this),_value - balance)
addTotalExecutedPerDay(_token,getCurrentDay(),_value)
balance = _value
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(b <= a,errorMessage)
Checking function: handleNativeTokensAndCall(address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
c
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))] = totalExecutedPerDay(_token,_day).add(_value)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))] = _balance
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(isContract(target),Address: call to non-contract)
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == address(bridge))
block.timestamp / 86400
require(bool)(bridge.messageSender() == mediatorContractOnOtherSide())
returndata
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))]
(codehash != accountHash && codehash != 0x0)
_recipient.call(abi.encodeWithSelector(IERC20Receiver.onTokenBridged.selector,_token,_value,_data))
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
IBurnableMintableERC677Token(_token)
executionDailyLimit(address(0)) > 0 && executionDailyLimit(_token) >= nextLimit && _amount <= executionMaxPerTx(_token)
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
boolStorage[keccak256(bytes)(abi.encodePacked(ackDeploy,_token))] = true
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
revert(string)(errorMessage)
TokensBridged(_token,_recipient,_value,messageId())
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
IERC677(_token).safeTransfer(_recipient,_value)
_getMinterFor(_token).mint(_recipient,_value)
_functionCallWithValue(target,data,0,errorMessage)
require(bool,string)(c >= a,SafeMath: addition overflow)
_ackBridgedTokenDeploy(_token)
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
c
_handleTokens(_token,true,_recipient,_value)
_receiverCallback(_recipient,_token,_value,_data)
onlyMediator()
bridgeContract().messageId()
IAMB(addressStorage[BRIDGE_CONTRACT])
_onlyMediator()
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))]
sub(a,b,SafeMath: subtraction overflow)
addressStorage[MEDIATOR_CONTRACT]
_setMediatorBalance(_token,balance.sub(_balanceChange))
require(bool)(withinExecutionLimit(_token,_value))
IBurnableMintableERC677Token(_token).mint(address(this),_value - balance)
addTotalExecutedPerDay(_token,getCurrentDay(),_value)
balance = _value
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(b <= a,errorMessage)
_releaseTokens(_isNative,_token,_recipient,_value,_value)
Checking function: isRegisteredAsNativeToken(address) returns(bool) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
isTokenRegistered(_token) && nativeTokenAddress(_token) == address(0)
minPerTx(_token) > 0
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))]
Checking function: executeActionOnFixedTokens(address,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: setCustomTokenAddressPair(address,address) returns() (Slither line:3127)
Visibility: external
addressStorage[OWNER]
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))]
require(bool)(! isTokenRegistered(_bridgedToken))
require(bool)(nativeTokenAddress(_bridgedToken) == address(0))
minPerTx(_token) > 0
require(bool)(bridgedTokenAddress(_nativeToken) == address(0))
IBurnableMintableERC677Token(_bridgedToken).mint(address(this),1)
IBurnableMintableERC677Token(_bridgedToken).burn(1)
_onlyOwner()
_setTokenAddressPair(_nativeToken,_bridgedToken)
require(bool)(msg.sender == owner())
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))] = _bridgedToken
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
onlyOwner()
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))] = _nativeToken
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
NewTokenRegistered(_nativeToken,_bridgedToken)
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))]
Checking function: fixMediatorBalance(address,address) returns() (Slither line:3127)
Visibility: external
addressStorage[keccak256(bytes)(abi.encodePacked(messageRecipient,_messageId))] = _recipient
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
setMessageToken(_messageId,_token)
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))] = _balance
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(bytes(name).length > 0 || bytes(symbol).length > 0)
require(bool)(_to != address(0))
setMessageRecipient(_messageId,_sender)
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.name.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
setMessageValue(_messageId,_value)
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))]
abi.encodeWithSelector(this.handleNativeTokensAndCall.selector,_nativeToken,_receiver,_value,_data)
TokensBridgingInitiated(_token,_sender,_value,_messageId)
_convertToString(data)
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.NAME.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
abi.encodeWithSelector(this.handleBridgedTokensAndCall.selector,_token,_receiver,_value,_data)
block.timestamp / 86400
boolStorage[keccak256(bytes)(abi.encodePacked(ackDeploy,_token))]

abi.encodeWithSelector(this.handleBridgedTokens.selector,_token,_receiver,_value)
require(bool)(msg.sender == IUpgradeabilityOwnerStorage(address(this)).upgradeabilityOwner())
abi.encodeWithSelector(this.deployAndHandleBridgedTokensAndCall.selector,_token,name,symbol,_decimals,_receiver,_value,_data)
abi.encodeWithSelector(this.deployAndHandleBridgedTokens.selector,_token,name,symbol,_decimals,_receiver,_value)
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.decimals.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
abi.encodeWithSelector(this.handleNativeTokens.selector,_nativeToken,_receiver,_value)
IBurnableMintableERC677Token(_token).burn(_value)
_setMediatorBalance(_token,mediatorBalance(_token).add(_value))
abi.decode(data,(uint256))
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.DECIMALS.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
0
require(bool)(isRegisteredAsNativeToken(_token))
abi.decode(returnData,(string))
require(bool)(balance > expectedBalance)
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))] = totalSpentPerDay(_token,_day).add(_value)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
(_useOracleLane)
require(bool,string)(c >= a,SafeMath: addition overflow)
bridgeContract().requireToPassMessage(mediatorContractOnOtherSide(),_data,requestGasLimit())
c
uintStorage[keccak256(bytes)(abi.encodePacked(messageValue,_messageId))] = _value
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(available > 0)
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.symbol.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
res
addTotalSpentPerDay(_token,getCurrentDay(),diff)
len__convertToString_asm_0 = 0
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
diff = available
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_remainingOutOfDaily = _dailyLimit - _spent
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_remainingOutOfDaily = 0
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
mstore(uint256,uint256)(res + 32,data)
IAMB(addressStorage[BRIDGE_CONTRACT])
_convertToString(data)
addressStorage[keccak256(bytes)(abi.encodePacked(messageToken,_messageId))] = _token
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.SYMBOL.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_maxPerTx
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
_remainingOutOfDaily
minPerTx(_token) > 0
mstore(uint256,uint256)(res,len__convertToString_asm_0)
data = data << 8
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_recordBridgeOperation(_messageId,_token,_receiver,diff)
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))]
len__convertToString_asm_0 = len__convertToString_asm_0 + 1
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

onlyIfUpgradeabilityOwner()
addressStorage[MEDIATOR_CONTRACT]
validAddress(_receiver)
uintStorage[REQUEST_GAS_LIMIT]

isTokenRegistered(_token) && nativeTokenAddress(_token) == address(0)
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))]
Checking function: claimTokens(address,address) returns() (Slither line:3127)
Visibility: external
returndata
require(bool)(msg.sender == IUpgradeabilityOwnerStorage(address(this)).upgradeabilityOwner())
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
require(bool)(_to != address(0))
validAddress(_to)
require(bool)(_token == address(0) || ! isTokenRegistered(_token))
claimNativeCoins(_to)
revert(string)(errorMessage)
(codehash != accountHash && codehash != 0x0)
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
claimValues(_token,_to)
minPerTx(_token) > 0
new Sacrifice{value: _value}(_receiver)
claimErc20Tokens(_token,_to)
onlyIfUpgradeabilityOwner()
AddressHelper.safeSendValue(address(_to),value)
require(bool,string)(isContract(target),Address: call to non-contract)
_functionCallWithValue(target,data,0,errorMessage)
token.safeTransfer(_to,balance)
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
_callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
Checking function: claimTokensFromTokenContract(address,address,address) returns() (Slither line:3127)
Visibility: external
IBurnableMintableERC677Token(_bridgedToken).claimTokens(_token,_to)
onlyIfUpgradeabilityOwner()
require(bool)(msg.sender == IUpgradeabilityOwnerStorage(address(this)).upgradeabilityOwner())
Checking function: _recordBridgeOperation(bytes32,address,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _prepareMessage(address,address,address,uint256,uint8,bytes) returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: _getMinterFor(address) returns(IBurnableMintableERC677Token) (Slither line:3127)
Visibility: internal
Checking function: _releaseTokens(bool,address,address,uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _getBridgedTokenOrDeploy(address,string,string,uint8) returns(address) (Slither line:3127)
Visibility: internal
Checking function: _receiverCallback(address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: _transformName(string) returns(string) (Slither line:3127)
Visibility: internal
Checking function: _handleTokens(address,bool,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: isTokenRegistered(address) returns(bool) (Slither line:3127)
Visibility: public
minPerTx(_token) > 0
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
Checking function: totalSpentPerDay(address,uint256) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))]
Checking function: totalExecutedPerDay(address,uint256) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))]
Checking function: dailyLimit(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
Checking function: executionDailyLimit(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
Checking function: maxPerTx(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
Checking function: executionMaxPerTx(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
Checking function: minPerTx(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
Checking function: withinLimit(address,uint256) returns(bool) (Slither line:3127)
Visibility: public
block.timestamp / 86400
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
dailyLimit(address(0)) > 0 && dailyLimit(_token) >= nextLimit && _amount <= maxPerTx(_token) && _amount >= minPerTx(_token)
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))]
require(bool,string)(c >= a,SafeMath: addition overflow)
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
c
Checking function: withinExecutionLimit(address,uint256) returns(bool) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
require(bool,string)(c >= a,SafeMath: addition overflow)
uintStorage[keccak256(bytes)(abi.encodePacked(totalExecutedPerDay,_token,_day))]
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
c
block.timestamp / 86400
executionDailyLimit(address(0)) > 0 && executionDailyLimit(_token) >= nextLimit && _amount <= executionMaxPerTx(_token)
Checking function: getCurrentDay() returns(uint256) (Slither line:3127)
Visibility: public
block.timestamp / 86400
Checking function: setDailyLimit(address,uint256) returns() (Slither line:3127)
Visibility: external
addressStorage[OWNER]
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
require(bool)(isTokenRegistered(_token))
minPerTx(_token) > 0
require(bool)(_dailyLimit > maxPerTx(_token) || _dailyLimit == 0)
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))] = _dailyLimit
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_onlyOwner()
DailyLimitChanged(_token,_dailyLimit)
require(bool)(msg.sender == owner())
onlyOwner()
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
Checking function: setExecutionDailyLimit(address,uint256) returns() (Slither line:3127)
Visibility: external
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
addressStorage[OWNER]
minPerTx(_token) > 0
require(bool)(isTokenRegistered(_token))
_onlyOwner()
require(bool)(_dailyLimit > executionMaxPerTx(_token) || _dailyLimit == 0)
require(bool)(msg.sender == owner())
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))] = _dailyLimit
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
ExecutionDailyLimitChanged(_token,_dailyLimit)
onlyOwner()
Checking function: setExecutionMaxPerTx(address,uint256) returns() (Slither line:3127)
Visibility: external
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
require(bool)(_maxPerTx == 0 || (_maxPerTx > 0 && _maxPerTx < executionDailyLimit(_token)))
_onlyOwner()
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))] = _maxPerTx
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
minPerTx(_token) > 0
require(bool)(msg.sender == owner())
addressStorage[OWNER]
onlyOwner()
require(bool)(isTokenRegistered(_token))
Checking function: setMaxPerTx(address,uint256) returns() (Slither line:3127)
Visibility: external
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
addressStorage[OWNER]
_onlyOwner()
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))] = _maxPerTx
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
minPerTx(_token) > 0
require(bool)(isTokenRegistered(_token))
onlyOwner()
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
require(bool)(msg.sender == owner())
require(bool)(_maxPerTx == 0 || (_maxPerTx > minPerTx(_token) && _maxPerTx < dailyLimit(_token)))
Checking function: setMinPerTx(address,uint256) returns() (Slither line:3127)
Visibility: external
require(bool)(isTokenRegistered(_token))
addressStorage[OWNER]
require(bool)(_minPerTx > 0 && _minPerTx < dailyLimit(_token) && _minPerTx < maxPerTx(_token))
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))] = _minPerTx
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
minPerTx(_token) > 0
onlyOwner()
_onlyOwner()
require(bool)(msg.sender == owner())
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
Checking function: maxAvailablePerTx(address) returns(uint256) (Slither line:3127)
Visibility: public
_remainingOutOfDaily = 0
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_maxPerTx
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))]
_remainingOutOfDaily
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
block.timestamp / 86400
_remainingOutOfDaily = _dailyLimit - _spent
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: addTotalSpentPerDay(address,uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: addTotalExecutedPerDay(address,uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setLimits(address,uint256[3]) returns() (Slither line:3127)
Visibility: internal
Checking function: _setExecutionLimits(address,uint256[2]) returns() (Slither line:3127)
Visibility: internal
Checking function: _initializeTokenBridgeLimits(address,uint256) returns() (Slither line:3127)
Checking function: setTokenFactory(address) returns() (Slither line:3127)
Visibility: external
addressStorage[OWNER]
(codehash != accountHash && codehash != 0x0)
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_onlyOwner()
onlyOwner()
require(bool)(msg.sender == owner())
_setTokenFactory(_tokenFactory)
require(bool)(Address.isContract(_tokenFactory))
addressStorage[TOKEN_FACTORY_CONTRACT] = _tokenFactory
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: tokenFactory() returns(TokenFactory) (Slither line:3127)
Visibility: public
TokenFactory(addressStorage[TOKEN_FACTORY_CONTRACT])
Checking function: _setTokenFactory(address) returns() (Slither line:3127)
Visibility: internal
Checking function: mediatorBalance(address) returns(uint256) (Slither line:3127)
Visibility: public
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))]
Checking function: _setMediatorBalance(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: isBridgedTokenDeployAcknowledged(address) returns(bool) (Slither line:3127)
Visibility: public
boolStorage[keccak256(bytes)(abi.encodePacked(ackDeploy,_token))]
Checking function: _ackBridgedTokenDeploy(address) returns() (Slither line:3127)
Visibility: internal
Checking function: bridgedTokenAddress(address) returns(address) (Slither line:3127)
Visibility: public
addressStorage[keccak256(bytes)(abi.encodePacked(homeTokenAddress,_nativeToken))]
Checking function: nativeTokenAddress(address) returns(address) (Slither line:3127)
Visibility: public
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))]
Checking function: _setTokenAddressPair(address,address) returns() (Slither line:3127)
Visibility: internal
Checking function: requestFailedMessageFix(bytes32) returns() (Slither line:3127)
Visibility: external
require(bool)(bridgeContract().failedMessageSender(_messageId) == mediatorContractOnOtherSide())
(_useOracleLane)
addressStorage[MEDIATOR_CONTRACT]
_passMessage(data,true)
bridgeContract().requireToPassMessage(mediatorContractOnOtherSide(),_data,requestGasLimit())
require(bool)(! bridgeContract().messageCallStatus(_messageId))
IAMB(addressStorage[BRIDGE_CONTRACT])
uintStorage[REQUEST_GAS_LIMIT]
require(bool)(bridgeContract().failedMessageReceiver(_messageId) == address(this))
Checking function: fixFailedMessage(bytes32) returns() (Slither line:3127)
Visibility: public
c
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))] = _balance
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_releaseTokens(nativeTokenAddress(_token) == address(0),_token,_recipient,_value,_value)
require(bool,string)(isContract(target),Address: call to non-contract)
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(msg.sender == address(bridge))
addressStorage[keccak256(bytes)(abi.encodePacked(messageRecipient,_messageId))]
require(bool)(bridge.messageSender() == mediatorContractOnOtherSide())
require(bool)(! messageFixed(_messageId))
returndata
(codehash != accountHash && codehash != 0x0)
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
IBurnableMintableERC677Token(_token)
setMessageFixed(_messageId)
executeActionOnFixedTokens(token,recipient,value)
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
FailedMessageFixed(_messageId,token,recipient,value)
onlyMediator()
_callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
revert(string)(errorMessage)
IERC677(_token).safeTransfer(_recipient,_value)
_getMinterFor(_token).mint(_recipient,_value)
boolStorage[keccak256(bytes)(abi.encodePacked(messageFixed,_messageId))] = true
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_functionCallWithValue(target,data,0,errorMessage)
addressStorage[keccak256(bytes)(abi.encodePacked(messageToken,_messageId))]
IAMB(addressStorage[BRIDGE_CONTRACT])
_onlyMediator()
uintStorage[keccak256(bytes)(abi.encodePacked(messageValue,_messageId))]
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))]
sub(a,b,SafeMath: subtraction overflow)
addressStorage[MEDIATOR_CONTRACT]
boolStorage[keccak256(bytes)(abi.encodePacked(messageFixed,_messageId))]
_setMediatorBalance(_token,balance.sub(_balanceChange))
IBurnableMintableERC677Token(_token).mint(address(this),_value - balance)
balance = _value
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(b <= a,errorMessage)
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))]
Checking function: messageFixed(bytes32) returns(bool) (Slither line:3127)
Visibility: public
boolStorage[keccak256(bytes)(abi.encodePacked(messageFixed,_messageId))]
Checking function: setMessageFixed(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: executeActionOnFixedTokens(address,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: setMessageToken(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: messageToken(bytes32) returns(address) (Slither line:3127)
Visibility: internal
Checking function: setMessageValue(bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: messageValue(bytes32) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: setMessageRecipient(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: messageRecipient(bytes32) returns(address) (Slither line:3127)
Visibility: internal
Checking function: onTokenTransfer(address,uint256,bytes) returns(bool) (Slither line:3127)
Visibility: external
onTokenTransfer contains assembly (Slither line:3153)
bridgeSpecificActionsOnTokenTransfer(msg.sender,_from,receiver,_value,data)
addressStorage[keccak256(bytes)(abi.encodePacked(messageRecipient,_messageId))] = _recipient
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
setMessageToken(_messageId,_token)
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))] = _balance
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(bytes(name).length > 0 || bytes(symbol).length > 0)
setMessageRecipient(_messageId,_sender)
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.name.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
setMessageValue(_messageId,_value)
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))]
res = sload(uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
abi.encodeWithSelector(this.handleNativeTokensAndCall.selector,_nativeToken,_receiver,_value,_data)
TokensBridgingInitiated(_token,_sender,_value,_messageId)
receiver = calldataload(uint256)(120)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_convertToString(data)
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.NAME.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
data = mload(uint256)(0x40)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
size_onTokenTransfer_asm_1 = calldataload(uint256)(100) - 20
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
abi.encodeWithSelector(this.handleBridgedTokensAndCall.selector,_token,_receiver,_value,_data)
block.timestamp / 86400
boolStorage[keccak256(bytes)(abi.encodePacked(ackDeploy,_token))]

abi.encodeWithSelector(this.handleBridgedTokens.selector,_token,_receiver,_value)
mstore(uint256,uint256)(data,size_onTokenTransfer_asm_1)
0
calldatacopy(uint256,uint256,uint256)(data + 32,152,size_onTokenTransfer_asm_1)
abi.encodeWithSelector(this.deployAndHandleBridgedTokensAndCall.selector,_token,name,symbol,_decimals,_receiver,_value,_data)
mstore(uint256,uint256)(0x40,data + 32 + size_onTokenTransfer_asm_1)
abi.encodeWithSelector(this.deployAndHandleBridgedTokens.selector,_token,name,symbol,_decimals,_receiver,_value)
require(bool,string)(c / a == b,SafeMath: multiplication overflow)
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.decimals.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(_limits[2] > 0 && _limits[1] > _limits[2] && _limits[0] > _limits[1])
c
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))] = _limits[0]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
abi.encodeWithSelector(this.handleNativeTokens.selector,_nativeToken,_receiver,_value)
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))] = _limits[1]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
IBurnableMintableERC677Token(_token).burn(_value)
require(bool)(_limits[1] < _limits[0])
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))] = _limits[2]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))] = _limits[0]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
DailyLimitChanged(_token,_limits[0])
_setMediatorBalance(_token,mediatorBalance(_token).add(_value))
abi.decode(data,(uint256))
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))] = _limits[1]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
true
ExecutionDailyLimitChanged(_token,_limits[0])
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.DECIMALS.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
0
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
_setExecutionLimits(_token,(_executionDailyLimit,_executionMaxPerTx))
_recordBridgeOperation(_messageId,_token,_from,_value)
abi.decode(returnData,(string))
factor = 10 ** (_decimals - 18)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setLimits(_token,(dailyLimit(address(0)).mul(factor),maxPerTx(address(0)).mul(factor),minPerTx(address(0)).mul(factor)))
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))] = totalSpentPerDay(_token,_day).add(_value)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setExecutionLimits(_token,(executionDailyLimit(address(0)).mul(factor),executionMaxPerTx(address(0)).mul(factor)))
factor = 10 ** (18 - _decimals)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
(_useOracleLane)
div(a,b,SafeMath: division by zero)
require(bool,string)(c >= a,SafeMath: addition overflow)
bridgeContract().requireToPassMessage(mediatorContractOnOtherSide(),_data,requestGasLimit())
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
c
uintStorage[keccak256(bytes)(abi.encodePacked(messageValue,_messageId))] = _value
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.symbol.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
res
len__convertToString_asm_0 = 0
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(b > 0,errorMessage)
mstore(uint256,uint256)(res + 32,data)
IAMB(addressStorage[BRIDGE_CONTRACT])
_convertToString(data)
addressStorage[keccak256(bytes)(abi.encodePacked(messageToken,_messageId))] = _token
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
c
_setLimits(_token,(_dailyLimit,_maxPerTx,_minPerTx))
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.SYMBOL.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_minPerTx = 1
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
require(bool)(_receiver != address(0) && _receiver != mediatorContractOnOtherSide())
minPerTx(_token) > 0
mstore(uint256,uint256)(res,len__convertToString_asm_0)
data = data << 8
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))]
len__convertToString_asm_0 = len__convertToString_asm_0 + 1
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

addressStorage[MEDIATOR_CONTRACT]
_maxPerTx = 100
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
dailyLimit(address(0)) > 0 && dailyLimit(_token) >= nextLimit && _amount <= maxPerTx(_token) && _amount >= minPerTx(_token)
require(bool)(withinLimit(_token,_value))
_executionMaxPerTx = 100
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[REQUEST_GAS_LIMIT]
_initializeTokenBridgeLimits(_token,decimals)

addTotalSpentPerDay(_token,getCurrentDay(),_value)
_dailyLimit = 10000
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))]
_executionDailyLimit = 10000
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: relayTokens(IERC677,address,uint256) returns() (Slither line:3127)
Visibility: external
c
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
addressStorage[keccak256(bytes)(abi.encodePacked(messageRecipient,_messageId))] = _recipient
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
setMessageToken(_messageId,_token)
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))] = _balance
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(bytes(name).length > 0 || bytes(symbol).length > 0)
setMessageRecipient(_messageId,_sender)
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.name.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
setMessageValue(_messageId,_value)
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))]
res = sload(uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
abi.encodeWithSelector(this.handleNativeTokensAndCall.selector,_nativeToken,_receiver,_value,_data)
TokensBridgingInitiated(_token,_sender,_value,_messageId)
require(bool,string)(isContract(target),Address: call to non-contract)
_convertToString(data)
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.NAME.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(! lock())
abi.encodeWithSelector(this.handleBridgedTokensAndCall.selector,_token,_receiver,_value,_data)
block.timestamp / 86400
boolStorage[keccak256(bytes)(abi.encodePacked(ackDeploy,_token))]
setLock(true)
sstore(uint256,uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92,_lock)
sstore(uint256,uint256)

abi.encodeWithSelector(this.handleBridgedTokens.selector,_token,_receiver,_value)
token.safeTransferFrom(msg.sender,address(this),_value)
returndata
0
setLock(false)
abi.encodeWithSelector(this.deployAndHandleBridgedTokensAndCall.selector,_token,name,symbol,_decimals,_receiver,_value,_data)
abi.encodeWithSelector(this.deployAndHandleBridgedTokens.selector,_token,name,symbol,_decimals,_receiver,_value)
require(bool,string)(c / a == b,SafeMath: multiplication overflow)
(codehash != accountHash && codehash != 0x0)
require(bool)(balanceDiff <= _value)
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.decimals.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(_limits[2] > 0 && _limits[1] > _limits[2] && _limits[0] > _limits[1])
c
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
bridgeSpecificActionsOnTokenTransfer(address(token),msg.sender,_receiver,balanceDiff,_data)
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))] = _limits[0]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
abi.encodeWithSelector(this.handleNativeTokens.selector,_nativeToken,_receiver,_value)
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))] = _limits[1]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
IBurnableMintableERC677Token(_token).burn(_value)
require(bool)(_limits[1] < _limits[0])
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))] = _limits[2]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))] = _limits[0]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
DailyLimitChanged(_token,_limits[0])
_setMediatorBalance(_token,mediatorBalance(_token).add(_value))
abi.decode(data,(uint256))
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))] = _limits[1]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
ExecutionDailyLimitChanged(_token,_limits[0])
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.DECIMALS.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
revert(string)(errorMessage)
0
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
_setExecutionLimits(_token,(_executionDailyLimit,_executionMaxPerTx))
_recordBridgeOperation(_messageId,_token,_from,_value)
abi.decode(returnData,(string))
factor = 10 ** (_decimals - 18)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setLimits(_token,(dailyLimit(address(0)).mul(factor),maxPerTx(address(0)).mul(factor),minPerTx(address(0)).mul(factor)))
_relayTokens(token,_receiver,_value,new bytes(0))
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))] = totalSpentPerDay(_token,_day).add(_value)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setExecutionLimits(_token,(executionDailyLimit(address(0)).mul(factor),executionMaxPerTx(address(0)).mul(factor)))
factor = 10 ** (18 - _decimals)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
(_useOracleLane)
div(a,b,SafeMath: division by zero)
_functionCallWithValue(target,data,0,errorMessage)
require(bool,string)(c >= a,SafeMath: addition overflow)
bridgeContract().requireToPassMessage(mediatorContractOnOtherSide(),_data,requestGasLimit())
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
c
uintStorage[keccak256(bytes)(abi.encodePacked(messageValue,_messageId))] = _value
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.symbol.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
res
len__convertToString_asm_0 = 0
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(b > 0,errorMessage)
mstore(uint256,uint256)(res + 32,data)
IAMB(addressStorage[BRIDGE_CONTRACT])
_convertToString(data)
addressStorage[keccak256(bytes)(abi.encodePacked(messageToken,_messageId))] = _token
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
c
_setLimits(_token,(_dailyLimit,_maxPerTx,_minPerTx))
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.SYMBOL.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_minPerTx = 1
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
require(bool)(_receiver != address(0) && _receiver != mediatorContractOnOtherSide())
minPerTx(_token) > 0
mstore(uint256,uint256)(res,len__convertToString_asm_0)
data = data << 8
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
sub(a,b,SafeMath: subtraction overflow)
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))]
len__convertToString_asm_0 = len__convertToString_asm_0 + 1
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

addressStorage[MEDIATOR_CONTRACT]
_maxPerTx = 100
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
dailyLimit(address(0)) > 0 && dailyLimit(_token) >= nextLimit && _amount <= maxPerTx(_token) && _amount >= minPerTx(_token)
require(bool)(withinLimit(_token,_value))
_executionMaxPerTx = 100
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[REQUEST_GAS_LIMIT]
_initializeTokenBridgeLimits(_token,decimals)

addTotalSpentPerDay(_token,getCurrentDay(),_value)
_dailyLimit = 10000
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(b <= a,errorMessage)
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))]
_executionDailyLimit = 10000
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: relayTokens(IERC677,uint256) returns() (Slither line:3127)
Visibility: external
c
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
addressStorage[keccak256(bytes)(abi.encodePacked(messageRecipient,_messageId))] = _recipient
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
setMessageToken(_messageId,_token)
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))] = _balance
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(bytes(name).length > 0 || bytes(symbol).length > 0)
setMessageRecipient(_messageId,_sender)
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.name.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
setMessageValue(_messageId,_value)
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))]
res = sload(uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
abi.encodeWithSelector(this.handleNativeTokensAndCall.selector,_nativeToken,_receiver,_value,_data)
TokensBridgingInitiated(_token,_sender,_value,_messageId)
require(bool,string)(isContract(target),Address: call to non-contract)
_convertToString(data)
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.NAME.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(! lock())
abi.encodeWithSelector(this.handleBridgedTokensAndCall.selector,_token,_receiver,_value,_data)
block.timestamp / 86400
boolStorage[keccak256(bytes)(abi.encodePacked(ackDeploy,_token))]
setLock(true)
sstore(uint256,uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92,_lock)
sstore(uint256,uint256)

abi.encodeWithSelector(this.handleBridgedTokens.selector,_token,_receiver,_value)
token.safeTransferFrom(msg.sender,address(this),_value)
returndata
0
setLock(false)
abi.encodeWithSelector(this.deployAndHandleBridgedTokensAndCall.selector,_token,name,symbol,_decimals,_receiver,_value,_data)
abi.encodeWithSelector(this.deployAndHandleBridgedTokens.selector,_token,name,symbol,_decimals,_receiver,_value)
require(bool,string)(c / a == b,SafeMath: multiplication overflow)
(codehash != accountHash && codehash != 0x0)
require(bool)(balanceDiff <= _value)
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.decimals.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(_limits[2] > 0 && _limits[1] > _limits[2] && _limits[0] > _limits[1])
c
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
bridgeSpecificActionsOnTokenTransfer(address(token),msg.sender,_receiver,balanceDiff,_data)
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))] = _limits[0]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
abi.encodeWithSelector(this.handleNativeTokens.selector,_nativeToken,_receiver,_value)
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))] = _limits[1]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
IBurnableMintableERC677Token(_token).burn(_value)
require(bool)(_limits[1] < _limits[0])
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))] = _limits[2]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))] = _limits[0]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
DailyLimitChanged(_token,_limits[0])
_setMediatorBalance(_token,mediatorBalance(_token).add(_value))
abi.decode(data,(uint256))
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))] = _limits[1]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
ExecutionDailyLimitChanged(_token,_limits[0])
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.DECIMALS.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
revert(string)(errorMessage)
0
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
_setExecutionLimits(_token,(_executionDailyLimit,_executionMaxPerTx))
_recordBridgeOperation(_messageId,_token,_from,_value)
abi.decode(returnData,(string))
factor = 10 ** (_decimals - 18)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setLimits(_token,(dailyLimit(address(0)).mul(factor),maxPerTx(address(0)).mul(factor),minPerTx(address(0)).mul(factor)))
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))] = totalSpentPerDay(_token,_day).add(_value)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setExecutionLimits(_token,(executionDailyLimit(address(0)).mul(factor),executionMaxPerTx(address(0)).mul(factor)))
factor = 10 ** (18 - _decimals)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
(_useOracleLane)
div(a,b,SafeMath: division by zero)
_functionCallWithValue(target,data,0,errorMessage)
require(bool,string)(c >= a,SafeMath: addition overflow)
bridgeContract().requireToPassMessage(mediatorContractOnOtherSide(),_data,requestGasLimit())
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
c
uintStorage[keccak256(bytes)(abi.encodePacked(messageValue,_messageId))] = _value
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.symbol.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
res
len__convertToString_asm_0 = 0
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(b > 0,errorMessage)
mstore(uint256,uint256)(res + 32,data)
IAMB(addressStorage[BRIDGE_CONTRACT])
_convertToString(data)
addressStorage[keccak256(bytes)(abi.encodePacked(messageToken,_messageId))] = _token
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
c
_setLimits(_token,(_dailyLimit,_maxPerTx,_minPerTx))
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.SYMBOL.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_minPerTx = 1
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
require(bool)(_receiver != address(0) && _receiver != mediatorContractOnOtherSide())
minPerTx(_token) > 0
mstore(uint256,uint256)(res,len__convertToString_asm_0)
data = data << 8
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
sub(a,b,SafeMath: subtraction overflow)
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))]
len__convertToString_asm_0 = len__convertToString_asm_0 + 1
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

addressStorage[MEDIATOR_CONTRACT]
_maxPerTx = 100
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
dailyLimit(address(0)) > 0 && dailyLimit(_token) >= nextLimit && _amount <= maxPerTx(_token) && _amount >= minPerTx(_token)
require(bool)(withinLimit(_token,_value))
_executionMaxPerTx = 100
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_relayTokens(token,msg.sender,_value,new bytes(0))
uintStorage[REQUEST_GAS_LIMIT]
_initializeTokenBridgeLimits(_token,decimals)

addTotalSpentPerDay(_token,getCurrentDay(),_value)
_dailyLimit = 10000
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(b <= a,errorMessage)
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))]
_executionDailyLimit = 10000
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: relayTokensAndCall(IERC677,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
c
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
addressStorage[keccak256(bytes)(abi.encodePacked(messageRecipient,_messageId))] = _recipient
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
setMessageToken(_messageId,_token)
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))] = _balance
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(bytes(name).length > 0 || bytes(symbol).length > 0)
setMessageRecipient(_messageId,_sender)
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.name.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
setMessageValue(_messageId,_value)
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))]
_relayTokens(token,_receiver,_value,_data)
res = sload(uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
abi.encodeWithSelector(this.handleNativeTokensAndCall.selector,_nativeToken,_receiver,_value,_data)
TokensBridgingInitiated(_token,_sender,_value,_messageId)
require(bool,string)(isContract(target),Address: call to non-contract)
_convertToString(data)
(success,returndata) = target.call{value: weiValue}(data)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.NAME.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(! lock())
abi.encodeWithSelector(this.handleBridgedTokensAndCall.selector,_token,_receiver,_value,_data)
block.timestamp / 86400
boolStorage[keccak256(bytes)(abi.encodePacked(ackDeploy,_token))]
setLock(true)
sstore(uint256,uint256)(0x6168652c307c1e813ca11cfb3a601f1cf3b22452021a5052d8b05f1f1f8a3e92,_lock)
sstore(uint256,uint256)

abi.encodeWithSelector(this.handleBridgedTokens.selector,_token,_receiver,_value)
token.safeTransferFrom(msg.sender,address(this),_value)
returndata
0
setLock(false)
abi.encodeWithSelector(this.deployAndHandleBridgedTokensAndCall.selector,_token,name,symbol,_decimals,_receiver,_value,_data)
abi.encodeWithSelector(this.deployAndHandleBridgedTokens.selector,_token,name,symbol,_decimals,_receiver,_value)
require(bool,string)(c / a == b,SafeMath: multiplication overflow)
(codehash != accountHash && codehash != 0x0)
require(bool)(balanceDiff <= _value)
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.decimals.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool)(_limits[2] > 0 && _limits[1] > _limits[2] && _limits[0] > _limits[1])
c
codehash = extcodehash(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
bridgeSpecificActionsOnTokenTransfer(address(token),msg.sender,_receiver,balanceDiff,_data)
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))] = _limits[0]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
abi.encodeWithSelector(this.handleNativeTokens.selector,_nativeToken,_receiver,_value)
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))] = _limits[1]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
IBurnableMintableERC677Token(_token).burn(_value)
require(bool)(_limits[1] < _limits[0])
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))] = _limits[2]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
returndata_size__functionCallWithValue_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))] = _limits[0]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
DailyLimitChanged(_token,_limits[0])
_setMediatorBalance(_token,mediatorBalance(_token).add(_value))
abi.decode(data,(uint256))
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))] = _limits[1]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
ExecutionDailyLimitChanged(_token,_limits[0])
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.DECIMALS.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
revert(uint256,uint256)(32 + returndata,returndata_size__functionCallWithValue_asm_0)
uintStorage[keccak256(bytes)(abi.encodePacked(dailyLimit,_token))]
revert(string)(errorMessage)
0
uintStorage[keccak256(bytes)(abi.encodePacked(executionMaxPerTx,_token))]
_setExecutionLimits(_token,(_executionDailyLimit,_executionMaxPerTx))
_recordBridgeOperation(_messageId,_token,_from,_value)
abi.decode(returnData,(string))
factor = 10 ** (_decimals - 18)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setLimits(_token,(dailyLimit(address(0)).mul(factor),maxPerTx(address(0)).mul(factor),minPerTx(address(0)).mul(factor)))
uintStorage[keccak256(bytes)(abi.encodePacked(totalSpentPerDay,_token,_day))] = totalSpentPerDay(_token,_day).add(_value)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_setExecutionLimits(_token,(executionDailyLimit(address(0)).mul(factor),executionMaxPerTx(address(0)).mul(factor)))
factor = 10 ** (18 - _decimals)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
(_useOracleLane)
div(a,b,SafeMath: division by zero)
_functionCallWithValue(target,data,0,errorMessage)
require(bool,string)(c >= a,SafeMath: addition overflow)
bridgeContract().requireToPassMessage(mediatorContractOnOtherSide(),_data,requestGasLimit())
uintStorage[keccak256(bytes)(abi.encodePacked(executionDailyLimit,_token))]
c
uintStorage[keccak256(bytes)(abi.encodePacked(messageValue,_messageId))] = _value
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_callOptionalReturn(token,abi.encodeWithSelector(token.transferFrom.selector,from,to,value))
uintStorage[keccak256(bytes)(abi.encodePacked(minPerTx,_token))]
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.symbol.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
res
len__convertToString_asm_0 = 0
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(b > 0,errorMessage)
mstore(uint256,uint256)(res + 32,data)
IAMB(addressStorage[BRIDGE_CONTRACT])
_convertToString(data)
addressStorage[keccak256(bytes)(abi.encodePacked(messageToken,_messageId))] = _token
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
c
_setLimits(_token,(_dailyLimit,_maxPerTx,_minPerTx))
(status,data) = _token.staticcall(abi.encodeWithSelector(ITokenDetails.SYMBOL.selector))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_minPerTx = 1
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[keccak256(bytes)(abi.encodePacked(maxPerTx,_token))]
require(bool)(_receiver != address(0) && _receiver != mediatorContractOnOtherSide())
minPerTx(_token) > 0
mstore(uint256,uint256)(res,len__convertToString_asm_0)
data = data << 8
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
sub(a,b,SafeMath: subtraction overflow)
uintStorage[keccak256(bytes)(abi.encodePacked(mediatorBalance,_token))]
len__convertToString_asm_0 = len__convertToString_asm_0 + 1
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

addressStorage[MEDIATOR_CONTRACT]
_maxPerTx = 100
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
dailyLimit(address(0)) > 0 && dailyLimit(_token) >= nextLimit && _amount <= maxPerTx(_token) && _amount >= minPerTx(_token)
require(bool)(withinLimit(_token,_value))
_executionMaxPerTx = 100
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
uintStorage[REQUEST_GAS_LIMIT]
_initializeTokenBridgeLimits(_token,decimals)

addTotalSpentPerDay(_token,getCurrentDay(),_value)
_dailyLimit = 10000
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(b <= a,errorMessage)
addressStorage[keccak256(bytes)(abi.encodePacked(foreignTokenAddress,_bridgedToken))]
_executionDailyLimit = 10000
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: _relayTokens(IERC677,address,uint256,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: bridgeSpecificActionsOnTokenTransfer(address,address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: lock() returns(bool) (Slither line:3127)
Visibility: internal
Checking function: setLock(bool) returns() (Slither line:3127)
Visibility: internal
Checking function: getBridgeInterfacesVersion() returns(uint64,uint64,uint64) (Slither line:3127)
Visibility: external
(2,1,0)
Checking function: getBridgeMode() returns(bytes4) (Slither line:3127)
Visibility: external
0xb1516c26
Checking function: getBridgeInterfacesVersion() returns(uint64,uint64,uint64) (Slither line:3127)
Visibility: external
Checking function: getBridgeMode() returns(bytes4) (Slither line:3127)
Visibility: external
Checking function: claimValues(address,address) returns() (Slither line:3127)
Visibility: internal
Checking function: claimNativeCoins(address) returns() (Slither line:3127)
Visibility: internal
Checking function: claimErc20Tokens(address,address) returns() (Slither line:3127)
Visibility: internal
Checking function: setInitialize() returns() (Slither line:3127)
Checking function: isInitialized() returns(bool) (Slither line:3127)

End ForeignOmnibridge.find_setter_in_contract (Slither line:3345)


End TokenProxy.is_upgradeable_proxy (Slither line:1407)


Begin OwnableModule.is_proxy (Slither line:1425)


End OwnableModule.is_proxy (Slither line:1428)


Begin OwnableModule.is_upgradeable_proxy (Slither line:1136)

Checking contract: OwnableModule 

End OwnableModule.is_upgradeable_proxy (Slither line:1407)


Begin TokenFactory.is_proxy (Slither line:1425)


End TokenFactory.is_proxy (Slither line:1428)


Begin TokenFactory.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenFactory 

End TokenFactory.is_upgradeable_proxy (Slither line:1407)


Begin TokenFactoryConnector.is_proxy (Slither line:1425)


End TokenFactoryConnector.is_proxy (Slither line:1428)


Begin TokenFactoryConnector.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenFactoryConnector 

End TokenFactoryConnector.is_upgradeable_proxy (Slither line:1407)


Begin IBurnableMintableERC677Token.is_proxy (Slither line:1425)


End IBurnableMintableERC677Token.is_proxy (Slither line:1428)


Begin IBurnableMintableERC677Token.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBurnableMintableERC677Token 

End IBurnableMintableERC677Token.is_upgradeable_proxy (Slither line:1407)


Begin ITokenDetails.is_proxy (Slither line:1425)


End ITokenDetails.is_proxy (Slither line:1428)


Begin ITokenDetails.is_upgradeable_proxy (Slither line:1136)

Checking contract: ITokenDetails 

End ITokenDetails.is_upgradeable_proxy (Slither line:1407)


Begin TokenReader.is_proxy (Slither line:1425)


End TokenReader.is_proxy (Slither line:1428)


Begin TokenReader.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenReader 

End TokenReader.is_upgradeable_proxy (Slither line:1407)


Begin BasicOmnibridge.is_proxy (Slither line:1425)


End BasicOmnibridge.is_proxy (Slither line:1428)


Begin BasicOmnibridge.is_upgradeable_proxy (Slither line:1136)

Checking contract: BasicOmnibridge 

End BasicOmnibridge.is_upgradeable_proxy (Slither line:1407)


Begin GasLimitManager.is_proxy (Slither line:1425)


End GasLimitManager.is_proxy (Slither line:1428)


Begin GasLimitManager.is_upgradeable_proxy (Slither line:1136)

Checking contract: GasLimitManager 

End GasLimitManager.is_upgradeable_proxy (Slither line:1407)


Begin ForeignOmnibridge.is_proxy (Slither line:1425)


End ForeignOmnibridge.is_proxy (Slither line:1428)


Begin ForeignOmnibridge.is_upgradeable_proxy (Slither line:1136)

Checking contract: ForeignOmnibridge 

End ForeignOmnibridge.is_upgradeable_proxy (Slither line:1407)

