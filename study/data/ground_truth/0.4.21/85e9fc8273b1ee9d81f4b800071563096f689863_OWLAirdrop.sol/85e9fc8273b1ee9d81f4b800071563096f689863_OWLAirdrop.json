{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.21/85e9fc8273b1ee9d81f4b800071563096f689863_OWLAirdrop.sol/85e9fc8273b1ee9d81f4b800071563096f689863_OWLAirdrop.sol#353-378)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.21/85e9fc8273b1ee9d81f4b800071563096f689863_OWLAirdrop.sol/85e9fc8273b1ee9d81f4b800071563096f689863_OWLAirdrop.sol#353-378) is an upgradeable proxy.\nmasterCopy was found in a different contract.\nmasterCopy is an address state variable.\n uses Inherited Storage\nNo setter functions found to search for compatibility checks.\nTo remove upgradeability, delete updateMasterCopy from TokenOWL\n",
        "id": "1366de2afa56a04f702644ca436f63f10e461504e2660f70e5c6e00a21db90b5",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "Proxied.masterCopy",
          "impl_address_setter": "TokenOWL.updateMasterCopy()",
          "impl_address_getter": "TokenOWL.getMasterCopy()",
          "impl_address_location": "Proxied (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.21/85e9fc8273b1ee9d81f4b800071563096f689863_OWLAirdrop.sol/85e9fc8273b1ee9d81f4b800071563096f689863_OWLAirdrop.sol#347-349)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": "no setters found"
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove updateMasterCopy from TokenOWL",
          "time_delay": {
            "has_delay": true,
            "upgrade_condition": "now >= masterCopyCountdown.timeWhenAvailable"
          }
        }
      }
    ]
  }
}