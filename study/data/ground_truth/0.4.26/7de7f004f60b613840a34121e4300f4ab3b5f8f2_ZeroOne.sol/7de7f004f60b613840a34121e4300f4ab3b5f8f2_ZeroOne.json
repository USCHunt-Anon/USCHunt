{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.26/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol#91-132)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.26/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol#91-132) is a proxy, but doesn't seem upgradeable.\n",
        "id": "cb70bcec6d81585d7521ef499de1dc4cc025c9eb09a62b94cfe4ec81796afff6",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.26/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol#138-170)",
        "elements": [],
        "description": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.26/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol#138-170) is a proxy, but doesn't seem upgradeable.\n",
        "id": "ce071903cfe6d69ec6921419754cf17b050cdc1a0c9a70ff8d5343825c9a46a2",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "TetherToken (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.26/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol#395-506)",
        "elements": [],
        "description": "TetherToken (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.26/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol#395-506) is an upgradeable proxy.\n__implementation was found in a different contract.\n__implementation is an address state variable.\nFound compatibility checks in all upgrade functions.\n",
        "id": "55e9b25f28fd8795198ce71b39f091016f9a4068fb0b0b1af2bdf629f522f840",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "UpgradeabilityProxy.__implementation",
          "impl_address_setter": "TetherToken.upgradeTo(string,address)",
          "impl_address_getter": "TetherToken._implementation()",
          "impl_address_location": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.26/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol#138-170)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "TetherToken.upgradeTo(string,address)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "erc20": [
              "totalSupply()",
              "balanceOf(address)",
              "transfer(address,uint256)",
              "transferFrom(address,address,uint256)",
              "approve(address,uint256)",
              "allowance(address,address)"
            ],
            "other": [
              "getBlackListStatus(address)",
              "addBlackList(address)",
              "removeBlackList(address)",
              "destroyBlackFunds(address)",
              "transferOwnership(address)",
              "approveOwnership()",
              "pause()",
              "unpause()",
              "upgradeTo(string,address)",
              "issue(uint256)",
              "redeem(uint256)"
            ]
          }
        }
      },
      {
        "contract": "ZeroOne (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.26/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol#508-513)",
        "elements": [],
        "description": "ZeroOne (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.26/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol#508-513) is an upgradeable proxy.\n__implementation was found in a different contract.\n__implementation is an address state variable.\nFound compatibility checks in all upgrade functions.\n",
        "id": "1d7473fcfd49859ff2e01c5f486b6191169518bc3fa2310dcc0e391bd3285e10",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "UpgradeabilityProxy.__implementation",
          "impl_address_setter": "TetherToken.upgradeTo(string,address)",
          "impl_address_getter": "TetherToken._implementation()",
          "impl_address_location": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.26/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol/7de7f004f60b613840a34121e4300f4ab3b5f8f2_ZeroOne.sol#138-170)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "TetherToken.upgradeTo(string,address)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "erc20": [
              "totalSupply()",
              "balanceOf(address)",
              "transfer(address,uint256)",
              "transferFrom(address,address,uint256)",
              "approve(address,uint256)",
              "allowance(address,address)"
            ],
            "other": [
              "upgradeTo(string,address)",
              "issue(uint256)",
              "redeem(uint256)",
              "getBlackListStatus(address)",
              "addBlackList(address)",
              "removeBlackList(address)",
              "destroyBlackFunds(address)",
              "transferOwnership(address)",
              "approveOwnership()",
              "pause()",
              "unpause()"
            ]
          }
        }
      }
    ]
  }
}