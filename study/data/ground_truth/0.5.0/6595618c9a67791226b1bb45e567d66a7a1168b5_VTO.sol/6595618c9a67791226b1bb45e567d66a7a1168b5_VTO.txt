
Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin Pausable.is_proxy (Slither line:1425)


End Pausable.is_proxy (Slither line:1428)


Begin Pausable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Pausable 

End Pausable.is_upgradeable_proxy (Slither line:1407)


Begin ERC20.is_proxy (Slither line:1425)


End ERC20.is_proxy (Slither line:1428)


Begin ERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20 

End ERC20.is_upgradeable_proxy (Slither line:1407)


Begin VTO.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin VTO.find_delegatecall_in_exp_node

Found Expression Node: require(bool)(impl != address(0)) (Slither line:2802)
Expression called: require(bool)
Type of call: tuple() (Slither line:2817)
Args:
impl != address(0)

End VTO.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin VTO.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let ptr := mload(0x40) (Slither line:1576)
    calldatacopy(ptr, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'impl'
Looking for corresponding Variable
Current function: fallback

Begin VTO.find_delegate_variable_from_name
Searching for impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking owner (Slither line:1689)
Checking newOwner (Slither line:1689)
Checking paused (Slither line:1689)
Checking name (Slither line:1689)
Checking symbol (Slither line:1689)
Checking decimals (Slither line:1689)
Checking initialSupply (Slither line:1689)
Checking totalSupply_ (Slither line:1689)
Checking mintCap (Slither line:1689)
Checking balances (Slither line:1689)
Checking frozen (Slither line:1689)
Checking allowed (Slither line:1689)
Checking implementation (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking impl (Slither line:1703)
impl is a Local Variable in VTO.fallback (Slither line:1707)
Expression: implementation (Slither line:1719)
Identifier value: implementation (Slither line:1725)
implementation is a State Variable in contract VTO (Slither line:1730)

End VTO.find_delegate_variable_by_name


End VTO.find_delegatecall_in_asm (Slither line:1637)


End VTO.is_proxy (Slither line:1476)


Begin VTO.is_upgradeable_proxy (Slither line:1136)

Checking contract: VTO 
VTO is delegating to implementation
Looking for setter (Slither line:1200)


Begin VTO.find_setter_in_contract (Slither line:3119)

Checking function: constructor() returns() (Slither line:3127)
Checking function: fallback() returns() (Slither line:3127)
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: public
require(bool)(msg.sender == owner)
onlyOwner()
require(bool)(implementation != _newImplementation)
_setImplementation(_newImplementation)
implementation = _newImp
is an Assignment Operation (Slither line:3216)

End VTO.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: VTO (Slither line:1264)
Looking for getter (Slither line:1273)


Begin VTO.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
_newImp
Checking function: pause (Slither line:2988)
Checking function: unpause (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: transferOwnership (Slither line:2988)
Checking function: acceptOwnership (Slither line:2988)
acceptOwnership returns bool variable  (Slither line:3008)
Checking function: constructor (Slither line:2988)
Checking function: fallback (Slither line:2988)
Checking function: _setImplementation (Slither line:2988)
Checking function: upgradeTo (Slither line:2988)
Checking function: totalSupply (Slither line:2988)
totalSupply returns uint256 variable  (Slither line:3008)
RETURN node expression: totalSupply_ (Slither line:3028)
Checking function: transfer (Slither line:2988)
transfer returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: multiTransfer (Slither line:2988)
multiTransfer returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: balanceOf (Slither line:2988)
balanceOf returns uint256 variable called balance (Slither line:3008)
RETURN node expression: balances[_holder] (Slither line:3028)
Checking function: transferFrom (Slither line:2988)
transferFrom returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: approve (Slither line:2988)
approve returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: increaseAllowance (Slither line:2988)
increaseAllowance returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: decreaseAllowance (Slither line:2988)
decreaseAllowance returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: allowance (Slither line:2988)
allowance returns uint256 variable  (Slither line:3008)
RETURN node expression: allowed[_holder][_spender] (Slither line:3028)
Checking function: freezeAccount (Slither line:2988)
freezeAccount returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: unfreezeAccount (Slither line:2988)
unfreezeAccount returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: distribute (Slither line:2988)
distribute returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: claimToken (Slither line:2988)
claimToken returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: burn (Slither line:2988)
burn returns bool variable called success (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: mint (Slither line:2988)
mint returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: slitherConstructorVariables (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End VTO.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in VTO (Slither line:1305)

Begin SafeMath.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
_newImp
Checking function: mul (Slither line:2988)
mul returns uint256 variable  (Slither line:3008)
RETURN node expression: 0 (Slither line:3028)
RETURN node expression: c (Slither line:3028)
Checking function: div (Slither line:2988)
div returns uint256 variable  (Slither line:3008)
RETURN node expression: c (Slither line:3028)
Checking function: sub (Slither line:2988)
sub returns uint256 variable  (Slither line:3008)
RETURN node expression: a - b (Slither line:3028)
Checking function: add (Slither line:2988)
add returns uint256 variable  (Slither line:3008)
RETURN node expression: c (Slither line:3028)

End SafeMath.find_getter_in_contract (Slither line:3083)

Checking public function pause
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function unpause
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function transferOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function acceptOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == newOwner)
Checking public function pause
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function unpause
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function transferOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function acceptOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == newOwner)
Checking public function totalSupply
Checking public function balanceOf
Checking public function allowance
Checking public function transfer
Checking public function transferFrom
Checking public function approve
Checking public function upgradeTo
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function totalSupply
Checking public function transfer
Checking public function multiTransfer
Checking public function balanceOf
Checking public function transferFrom
Checking public function approve
Checking public function increaseAllowance
Checking public function decreaseAllowance
Checking public function allowance
Checking public function freezeAccount
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function unfreezeAccount
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function distribute
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function claimToken
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function burn
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function mint
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function VTO.balanceOf (proxy_features line:898)
functions_writing_to_variable: checking function VTO.constructor (proxy_features line:898)
functions_writing_to_variable: checking function VTO.acceptOwnership (proxy_features line:898)
functions_writing_to_variable: checking function VTO.unfreezeAccount (proxy_features line:898)
functions_writing_to_variable: checking function VTO.transfer (proxy_features line:898)
functions_writing_to_variable: checking function VTO.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function VTO.transferFrom (proxy_features line:898)
functions_writing_to_variable: checking function VTO.fallback (proxy_features line:898)
functions_writing_to_variable: checking function VTO.distribute (proxy_features line:898)
functions_writing_to_variable: checking function VTO.approve (proxy_features line:898)
functions_writing_to_variable: checking function VTO._setImplementation (proxy_features line:898)
functions_writing_to_variable: exp = implementation = _newImp (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = _newImp (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = _newImp
functions_writing_to_variable: _setImplementation writes _newImp to implementation (proxy_features line:929)
functions_writing_to_variable: checking function VTO.claimToken (proxy_features line:898)
functions_writing_to_variable: checking function VTO.totalSupply (proxy_features line:898)
functions_writing_to_variable: checking function VTO.pause (proxy_features line:898)
functions_writing_to_variable: checking function VTO.increaseAllowance (proxy_features line:898)
functions_writing_to_variable: checking function VTO.upgradeTo (proxy_features line:898)
get_value_assigned: implementation = _newImp
functions_writing_to_variable: upgradeTo writes _newImp to implementation (proxy_features line:1013)
functions_writing_to_variable: checking function VTO.burn (proxy_features line:898)
functions_writing_to_variable: checking function VTO.balanceOf (proxy_features line:898)
functions_writing_to_variable: checking function VTO.transferFrom (proxy_features line:898)
functions_writing_to_variable: checking function VTO.decreaseAllowance (proxy_features line:898)
functions_writing_to_variable: checking function VTO.totalSupply (proxy_features line:898)
functions_writing_to_variable: checking function VTO.unpause (proxy_features line:898)
functions_writing_to_variable: checking function VTO.mint (proxy_features line:898)
functions_writing_to_variable: checking function VTO.allowance (proxy_features line:898)
functions_writing_to_variable: checking function VTO.transfer (proxy_features line:898)
functions_writing_to_variable: checking function VTO.constructor (proxy_features line:898)
functions_writing_to_variable: checking function VTO.allowance (proxy_features line:898)
functions_writing_to_variable: checking function VTO.slitherConstructorVariables (proxy_features line:898)
functions_writing_to_variable: checking function VTO.freezeAccount (proxy_features line:898)
functions_writing_to_variable: checking function VTO.multiTransfer (proxy_features line:898)
functions_writing_to_variable: checking function VTO.transferOwnership (proxy_features line:898)
functions_writing_to_variable: checking function VTO.approve (proxy_features line:898)
has_compatibility_checks: dependencies: ['_newImplementation', '_newImp']
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: checking public function upgradeTo
require(bool)(msg.sender == owner)
has_compatibility_checks: condition msg.sender == owner
require(bool)(implementation != _newImplementation)
has_compatibility_checks: condition implementation != _newImplementation
check_condition_from_expression: modifier calls: ['onlyOwner()']
check_condition_from_expression: condition _newImp != _newImplementation
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    let ptr := mload(0x40)
    calldatacopy(ptr, 0, calldatasize())
    let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)
    let size := returndatasize()
    returndatacopy(ptr, 0, size)
    switch result
    case 0 {
        revert(ptr, size)
    }
    default {
        return(ptr, size)
    }
}
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: impl = implementation
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool)(impl != address(0))
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
Found public function: pause
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(msg.sender == owner)
has_time_delay: (node.type) EXPRESSION
(Expression) onlyOwner()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(implementation != _newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(_newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = _newImp
