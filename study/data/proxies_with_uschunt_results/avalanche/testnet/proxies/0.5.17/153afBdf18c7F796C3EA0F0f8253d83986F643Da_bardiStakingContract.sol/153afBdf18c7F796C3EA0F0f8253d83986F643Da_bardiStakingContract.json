{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "bardiStakingContractProxy (../../smart-contract-sanctuary/avalanche/contracts/testnet/sorted/0.5.17/153afBdf18c7F796C3EA0F0f8253d83986F643Da_bardiStakingContract.sol/153afBdf18c7F796C3EA0F0f8253d83986F643Da_bardiStakingContract.sol#332-398)",
        "elements": [],
        "description": "bardiStakingContractProxy (../../smart-contract-sanctuary/avalanche/contracts/testnet/sorted/0.5.17/153afBdf18c7F796C3EA0F0f8253d83986F643Da_bardiStakingContract.sol/153afBdf18c7F796C3EA0F0f8253d83986F643Da_bardiStakingContract.sol#332-398) is an upgradeable proxy.\nimplementation was found in a different contract.\nimplementation is an address state variable.\n uses Inherited Storage\nMissing compatibility check in bardiStakingContractProxy.setPendingImplementation(address)\nFound compatibility check in bardiStakingContractProxy.acceptPendingImplementation()\n",
        "id": "f260a792dd6feb3b03ce091bed3190e050986d5f0e28364743dd69aef564f2b7",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "bardiStakingContractProxyStorage.implementation",
          "impl_address_setter": "bardiStakingContractProxy.acceptPendingImplementation()",
          "impl_address_getter": "not found",
          "impl_address_location": "bardiStakingContractProxyStorage (../../smart-contract-sanctuary/avalanche/contracts/testnet/sorted/0.5.17/153afBdf18c7F796C3EA0F0f8253d83986F643Da_bardiStakingContract.sol/153afBdf18c7F796C3EA0F0f8253d83986F643Da_bardiStakingContract.sol#316-328)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "bardiStakingContractProxy.setPendingImplementation(address)": "missing",
              "bardiStakingContractProxy.acceptPendingImplementation()": "require(bool,string)(msg.sender == pendingImplementation && pendingImplementation != address(0),Only the pending implementation contract can call this)"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "setPendingAdmin(address)",
              "acceptPendingAdmin()",
              "setPendingImplementation(address)",
              "acceptPendingImplementation()"
            ]
          }
        }
      }
    ]
  }
}