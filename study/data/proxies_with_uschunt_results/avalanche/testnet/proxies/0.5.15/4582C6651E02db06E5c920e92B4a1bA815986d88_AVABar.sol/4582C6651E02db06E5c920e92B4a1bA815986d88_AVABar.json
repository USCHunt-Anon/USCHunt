{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "AVABar (../../smart-contract-sanctuary/avalanche/contracts/testnet/sorted/0.5.15/4582C6651E02db06E5c920e92B4a1bA815986d88_AVABar.sol/4582C6651E02db06E5c920e92B4a1bA815986d88_AVABar.sol#414-833)",
        "elements": [],
        "description": "AVABar (../../smart-contract-sanctuary/avalanche/contracts/testnet/sorted/0.5.15/4582C6651E02db06E5c920e92B4a1bA815986d88_AVABar.sol/4582C6651E02db06E5c920e92B4a1bA815986d88_AVABar.sol#414-833) is an upgradeable proxy.\nimplementation was found in a different contract.\nimplementation is an address state variable.\nMissing compatibility check in AVABar.constructor(string,string,uint8,IERC20,address,uint256,address,bytes)\nMissing compatibility check in AVABar._setImplementation(address,bool,bytes)\n",
        "id": "c5abd5b6c3a3a46297abf5939ee727b0b180d1ccf18e262538acf89c17db7d03",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "XusdDelegationStorage.implementation",
          "impl_address_setter": "AVABar._setImplementation(address,bool,bytes)",
          "impl_address_getter": "not found",
          "impl_address_location": "XusdDelegationStorage (../../smart-contract-sanctuary/avalanche/contracts/testnet/sorted/0.5.15/4582C6651E02db06E5c920e92B4a1bA815986d88_AVABar.sol/4582C6651E02db06E5c920e92B4a1bA815986d88_AVABar.sol#391-396)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "AVABar.constructor(string,string,uint8,IERC20,address,uint256,address,bytes)": "missing",
              "AVABar._setImplementation(address,bool,bytes)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "erc20": [
              "balanceOf(address)",
              "transfer(address,uint256)",
              "transferFrom(address,address,uint256)",
              "approve(address,uint256)",
              "allowance(address,address)"
            ],
            "other": [
              "_setImplementation(address,bool,bytes)",
              "balanceOfUnderlying(address)",
              "increaseAllowance(address,uint256)",
              "decreaseAllowance(address,uint256)",
              "maxScalingFactor()",
              "xusdToFragment(uint256)",
              "fragmentToXusd(uint256)",
              "mint(address,uint256)",
              "burn(address,uint256)",
              "enter(uint256)",
              "leave(uint256)",
              "rebase(uint256,uint256,bool)",
              "_setAVA(IERC20)",
              "_setFarming(address)",
              "_setRebaser(address)",
              "_setPendingGov(address)",
              "_acceptGov()",
              "_setImplementation(address,bool,bytes)",
              "mint(address,uint256)",
              "burn(address,uint256)",
              "increaseAllowance(address,uint256)",
              "maxScalingFactor()",
              "enter(uint256)",
              "leave(uint256)",
              "rebase(uint256,uint256,bool)",
              "decreaseAllowance(address,uint256)",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
              "balanceOfUnderlying(address)",
              "_setPendingGov(address)",
              "_setAVA(IERC20)",
              "_setFarming(address)",
              "_setRebaser(address)",
              "_acceptGov()",
              "xusdToFragment(uint256)",
              "fragmentToXusd(uint256)",
              "delegateToImplementation(bytes)",
              "delegateToViewImplementation(bytes)"
            ]
          }
        }
      }
    ]
  }
}