{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "ABep20Delegator (../../smart-contract-sanctuary/avalanche/contracts/mainnet/proxies/0.5.16/6bD2154FbC086Cb43411966E0e72584196CCd065_ABep20Delegator.sol/6bD2154FbC086Cb43411966E0e72584196CCd065_ABep20Delegator.sol#461-927)",
        "elements": [],
        "description": "ABep20Delegator (../../smart-contract-sanctuary/avalanche/contracts/mainnet/proxies/0.5.16/6bD2154FbC086Cb43411966E0e72584196CCd065_ABep20Delegator.sol/6bD2154FbC086Cb43411966E0e72584196CCd065_ABep20Delegator.sol#461-927) is an upgradeable proxy.\nimplementation was found in a different contract.\nimplementation is an address state variable.\n uses Inherited Storage\nMissing compatibility check in ABep20Delegator._setImplementation(address,bool,bytes)\n",
        "id": "d7d96b11be2c2aeb7ceba33992691ab271d195ba6aba54034c79b8154620cf41",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "ADelegationStorage.implementation",
          "impl_address_setter": "ABep20Delegator._setImplementation(address,bool,bytes)",
          "impl_address_getter": "not found",
          "impl_address_location": "ADelegationStorage (../../smart-contract-sanctuary/avalanche/contracts/mainnet/proxies/0.5.16/6bD2154FbC086Cb43411966E0e72584196CCd065_ABep20Delegator.sol/6bD2154FbC086Cb43411966E0e72584196CCd065_ABep20Delegator.sol#226-231)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "ABep20Delegator._setImplementation(address,bool,bytes)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "erc20": [
              "balanceOf(address)",
              "transfer(address,uint256)",
              "transferFrom(address,address,uint256)",
              "approve(address,uint256)",
              "allowance(address,address)"
            ],
            "other": [
              "_setImplementation(address,bool,bytes)",
              "mint(uint256)",
              "redeem(uint256)",
              "redeemUnderlying(uint256)",
              "borrow(uint256)",
              "repayBorrow(uint256)",
              "repayBorrowBehalf(address,uint256)",
              "liquidateBorrow(address,uint256,ATokenInterface)",
              "sweepToken(EIP20NonStandardInterface)",
              "_addReserves(uint256)",
              "balanceOfUnderlying(address)",
              "getAccountSnapshot(address)",
              "borrowRatePerBlock()",
              "supplyRatePerBlock()",
              "totalBorrowsCurrent()",
              "borrowBalanceCurrent(address)",
              "borrowBalanceStored(address)",
              "exchangeRateCurrent()",
              "exchangeRateStored()",
              "getCash()",
              "accrueInterest()",
              "seize(address,address,uint256)",
              "_setPendingAdmin(address)",
              "_acceptAdmin()",
              "_setComptroller(ComptrollerInterface)",
              "_setReserveFactor(uint256)",
              "_reduceReserves(uint256)",
              "_setInterestRateModel(InterestRateModel)",
              "_setImplementation(address,bool,bytes)",
              "mint(uint256)",
              "redeem(uint256)",
              "redeemUnderlying(uint256)",
              "borrow(uint256)",
              "repayBorrow(uint256)",
              "repayBorrowBehalf(address,uint256)",
              "liquidateBorrow(address,uint256,ATokenInterface)",
              "balanceOfUnderlying(address)",
              "getAccountSnapshot(address)",
              "borrowRatePerBlock()",
              "supplyRatePerBlock()",
              "totalBorrowsCurrent()",
              "borrowBalanceCurrent(address)",
              "borrowBalanceStored(address)",
              "exchangeRateCurrent()",
              "exchangeRateStored()",
              "getCash()",
              "accrueInterest()",
              "seize(address,address,uint256)",
              "sweepToken(EIP20NonStandardInterface)",
              "_setPendingAdmin(address)",
              "_setComptroller(ComptrollerInterface)",
              "_setReserveFactor(uint256)",
              "_acceptAdmin()",
              "_addReserves(uint256)",
              "_reduceReserves(uint256)",
              "_setInterestRateModel(InterestRateModel)",
              "delegateToImplementation(bytes)",
              "delegateToViewImplementation(bytes)"
            ]
          }
        }
      }
    ]
  }
}