
Begin KineControllerInterface.is_proxy (Slither line:1425)


End KineControllerInterface.is_proxy (Slither line:1428)


Begin KineControllerInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: KineControllerInterface 

End KineControllerInterface.is_upgradeable_proxy (Slither line:1407)


Begin KTokenStorage.is_proxy (Slither line:1425)


End KTokenStorage.is_proxy (Slither line:1428)


Begin KTokenStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: KTokenStorage 

End KTokenStorage.is_upgradeable_proxy (Slither line:1407)


Begin KTokenInterface.is_proxy (Slither line:1425)


End KTokenInterface.is_proxy (Slither line:1428)


Begin KTokenInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: KTokenInterface 

End KTokenInterface.is_upgradeable_proxy (Slither line:1407)


Begin KErc20Storage.is_proxy (Slither line:1425)


End KErc20Storage.is_proxy (Slither line:1428)


Begin KErc20Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: KErc20Storage 

End KErc20Storage.is_upgradeable_proxy (Slither line:1407)


Begin KErc20Interface.is_proxy (Slither line:1425)


End KErc20Interface.is_proxy (Slither line:1428)


Begin KErc20Interface.is_upgradeable_proxy (Slither line:1136)

Checking contract: KErc20Interface 

End KErc20Interface.is_upgradeable_proxy (Slither line:1407)


Begin KDelegationStorage.is_proxy (Slither line:1425)


End KDelegationStorage.is_proxy (Slither line:1428)


Begin KDelegationStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: KDelegationStorage 

End KDelegationStorage.is_upgradeable_proxy (Slither line:1407)


Begin KDelegatorInterface.is_proxy (Slither line:1425)


End KDelegatorInterface.is_proxy (Slither line:1428)


Begin KDelegatorInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: KDelegatorInterface 

End KDelegatorInterface.is_upgradeable_proxy (Slither line:1407)


Begin KDelegateInterface.is_proxy (Slither line:1425)


End KDelegateInterface.is_proxy (Slither line:1428)


Begin KDelegateInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: KDelegateInterface 

End KDelegateInterface.is_upgradeable_proxy (Slither line:1407)


Begin KErc20Delegator.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin KErc20Delegator.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(msg.value == 0,KErc20Delegator:fallback: cannot send value to fallback) (Slither line:2802)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2817)
Args:
msg.value == 0
KErc20Delegator:fallback: cannot send value to fallback

End KErc20Delegator.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


Found LowLevelCall (Slither line:2740)


Found delegatecall in LowLevelCall (Slither line:2742)


End Contract.find_delegatecall_in_ir (Slither line:2773)


End KErc20Delegator.is_proxy (Slither line:1476)


Begin KErc20Delegator.is_upgradeable_proxy (Slither line:1136)

Checking contract: KErc20Delegator 
KErc20Delegator is delegating to implementation
Looking for setter (Slither line:1200)

Looking for setter in KDelegationStorage (Slither line:1204)


Begin KDelegationStorage.find_setter_in_contract (Slither line:3119)


End KDelegationStorage.find_setter_in_contract (Slither line:3345)


Could not find setter in KDelegationStorage 
Looking in KErc20Delegator (Slither line:1213)

Begin KErc20Delegator.find_setter_in_contract (Slither line:3119)

Checking function: constructor(address,KineControllerInterface,string,string,uint8,address,address,bytes) returns() (Slither line:3127)
Checking function: _setImplementation(address,bool,bytes) returns() (Slither line:3127)
Visibility: public
NewImplementation(oldImplementation,implementation)
returnData
implementation = implementation_
is an Assignment Operation (Slither line:3216)

End KErc20Delegator.find_setter_in_contract (Slither line:3345)


Implementation set by function: _setImplementation in contract: KErc20Delegator (Slither line:1264)
Looking for getter (Slither line:1273)


Begin KDelegationStorage.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_

End KDelegationStorage.find_getter_in_contract (Slither line:3083)


Begin KErc20Delegator.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_
Checking function: constructor (Slither line:2988)
Checking function: _setImplementation (Slither line:2988)
Checking function: mint (Slither line:2988)
mint returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: redeem (Slither line:2988)
Checking function: transfer (Slither line:2988)
transfer returns bool variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(bool)) (Slither line:3028)
Checking function: transferFrom (Slither line:2988)
transferFrom returns bool variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(bool)) (Slither line:3028)
Checking function: approve (Slither line:2988)
approve returns bool variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(bool)) (Slither line:3028)
Checking function: allowance (Slither line:2988)
allowance returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: balanceOf (Slither line:2988)
balanceOf returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: getAccountSnapshot (Slither line:2988)
getAccountSnapshot returns uint256 variable  (Slither line:3008)
getAccountSnapshot returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256,uint256)) (Slither line:3028)
Checking function: getCash (Slither line:2988)
getCash returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: seize (Slither line:2988)
Checking function: _setPendingAdmin (Slither line:2988)
Checking function: _setController (Slither line:2988)
Checking function: _acceptAdmin (Slither line:2988)
Checking function: delegateTo (Slither line:2988)
delegateTo returns bytes variable  (Slither line:3008)
RETURN node expression: returnData (Slither line:3028)
Checking function: delegateToImplementation (Slither line:2988)
delegateToImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: delegateTo(implementation,data) (Slither line:3028)
Checking function: delegateToViewImplementation (Slither line:2988)
delegateToViewImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: abi.decode(returnData,(bytes)) (Slither line:3028)
Checking function: fallback (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End KErc20Delegator.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in KErc20Delegator (Slither line:1305)
or in KDelegationStorage (Slither line:1319)

Begin KDelegatorInterface.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_

End KDelegatorInterface.find_getter_in_contract (Slither line:3083)


End KErc20Delegator.is_upgradeable_proxy (Slither line:1332)

impl_address_from_contract_call: implementation_
impl_address_from_contract_call: StateVariable implementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression require(bool,string)(msg.value == 0,KErc20Delegator:fallback: cannot send value to fallback)
impl_address_from_contract_call: arg is msg.value == 0
impl_address_from_contract_call: arg is KErc20Delegator:fallback: cannot send value to fallback
impl_address_from_contract_call: CallExpression implementation.delegatecall(msg.data)
Checking public function _setImplementation
Checking external function mint
Checking external function redeem
Checking external function transfer
Checking external function transferFrom
Checking external function approve
Checking external function allowance
Checking external function balanceOf
Checking external function getAccountSnapshot
Checking external function getCash
Checking external function seize
Checking external function _setPendingAdmin
Checking external function _acceptAdmin
Checking public function _setController
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,KErc20Delegator::_setImplementation: Caller must be admin)
Checking external function mint
Checking external function redeem
Checking external function transfer
Checking external function transferFrom
Checking external function approve
Checking external function allowance
Checking external function balanceOf
Checking external function getAccountSnapshot
Checking external function getCash
Checking external function seize
Checking external function _setPendingAdmin
Checking public function _setController
Checking external function _acceptAdmin
Checking public function delegateToImplementation
Checking public function delegateToViewImplementation
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function KErc20Delegator._setController (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.getAccountSnapshot (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.seize (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.mint (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.delegateToImplementation (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.getCash (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.redeem (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.delegateToViewImplementation (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.transfer (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.getAccountSnapshot (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator._setPendingAdmin (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.approve (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.seize (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator._setImplementation (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.transfer (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.fallback (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.allowance (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.transferFrom (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator._setPendingAdmin (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.mint (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.transferFrom (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.delegateTo (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.getCash (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator._setController (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.approve (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.balanceOf (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator._acceptAdmin (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.constructor (proxy_features line:898)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: constructor writes implementation_ to implementation (proxy_features line:1013)
functions_writing_to_variable: checking function KErc20Delegator._acceptAdmin (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.allowance (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator.balanceOf (proxy_features line:898)
functions_writing_to_variable: checking function KErc20Delegator._setImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == admin,KErc20Delegator::_setImplementation: Caller must be admin) (proxy_features line:909)
functions_writing_to_variable: exp = allowResign (proxy_features line:909)
functions_writing_to_variable: exp = delegateToImplementation(abi.encodeWithSignature(_resignImplementation())) (proxy_features line:909)
functions_writing_to_variable: exp = oldImplementation = implementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = implementation (proxy_features line:912)
functions_writing_to_variable: exp = implementation = implementation_ (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = implementation_ (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: exp = delegateToImplementation(abi.encodeWithSignature(_becomeImplementation(bytes),becomeImplementationData)) (proxy_features line:909)
functions_writing_to_variable: exp = NewImplementation(oldImplementation,implementation) (proxy_features line:909)
functions_writing_to_variable: exp = delegateTo(implementation,data) (proxy_features line:909)
functions_writing_to_variable: exp = (success,returnData) = callee.delegatecall(data) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: (success,returnData) = callee.delegatecall(data) (proxy_features line:912)
functions_writing_to_variable: exp = returnData (proxy_features line:909)
functions_writing_to_variable: _setImplementation writes implementation_ to implementation (proxy_features line:929)
functions_writing_to_variable: checking function KErc20Delegator.redeem (proxy_features line:898)
has_compatibility_checks: dependencies: ['implementation_', 'implementation_']
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking public function _setImplementation
require(bool,string)(msg.sender == admin,KErc20Delegator::_setImplementation: Caller must be admin)
has_compatibility_checks: condition msg.sender == admin
has_compatibility_checks: IF node exp = allowResign
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool,string)(msg.value == 0,KErc20Delegator:fallback: cannot send value to fallback)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: (success) = implementation.delegatecall(msg.data)
Found public function: _setImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,implementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = implementation
has_time_delay: (node.type) RETURN
(Expression) returnData
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = implementation_
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == admin,KErc20Delegator::_setImplementation: Caller must be admin)
has_time_delay: (node.type) EXPRESSION
(Expression) delegateToImplementation(abi.encodeWithSignature(_resignImplementation()))
has_time_delay: (node.type) EXPRESSION
(Expression) delegateToImplementation(abi.encodeWithSignature(_becomeImplementation(bytes),becomeImplementationData))
has_time_delay: (node.type) EXPRESSION
(Expression) (success,returnData) = callee.delegatecall(data)
has_time_delay: (node.type) RETURN
(Expression) delegateTo(implementation,data)
has_time_delay: (node.type) IF
(Expression) allowResign
