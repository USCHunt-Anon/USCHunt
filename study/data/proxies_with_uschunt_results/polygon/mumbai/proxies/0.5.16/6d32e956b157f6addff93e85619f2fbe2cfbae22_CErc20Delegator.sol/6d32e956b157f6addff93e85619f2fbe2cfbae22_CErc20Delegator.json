{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "CErc20Delegator (../../smart-contract-sanctuary/polygon/contracts/mumbai/sorted/0.5.16/6d32e956b157f6addff93e85619f2fbe2cfbae22_CErc20Delegator.sol/6d32e956b157f6addff93e85619f2fbe2cfbae22_CErc20Delegator.sol#426-893)",
        "elements": [],
        "description": "CErc20Delegator (../../smart-contract-sanctuary/polygon/contracts/mumbai/sorted/0.5.16/6d32e956b157f6addff93e85619f2fbe2cfbae22_CErc20Delegator.sol/6d32e956b157f6addff93e85619f2fbe2cfbae22_CErc20Delegator.sol#426-893) is an upgradeable proxy.\nimplementation was found in a different contract.\nimplementation is an address state variable.\n uses Inherited Storage\nMissing compatibility check in CErc20Delegator.constructor(address,ComptrollerInterface,InterestRateModel,uint256,string,string,uint8,address,address,bytes)\nMissing compatibility check in CErc20Delegator._setImplementation(address,bool,bytes)\n",
        "id": "fc8f34ed2b393c6da0fbaf8f04d2384338d5aae50f26723f5d730139ef0bacb2",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "CDelegationStorage.implementation",
          "impl_address_setter": "CErc20Delegator._setImplementation(address,bool,bytes)",
          "impl_address_getter": "not found",
          "impl_address_location": "CDelegationStorage (../../smart-contract-sanctuary/polygon/contracts/mumbai/sorted/0.5.16/6d32e956b157f6addff93e85619f2fbe2cfbae22_CErc20Delegator.sol/6d32e956b157f6addff93e85619f2fbe2cfbae22_CErc20Delegator.sol#380-385)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "CErc20Delegator.constructor(address,ComptrollerInterface,InterestRateModel,uint256,string,string,uint8,address,address,bytes)": "missing",
              "CErc20Delegator._setImplementation(address,bool,bytes)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "erc20": [
              "balanceOf(address)",
              "transfer(address,uint256)",
              "transferFrom(address,address,uint256)",
              "approve(address,uint256)",
              "allowance(address,address)"
            ],
            "other": [
              "_setImplementation(address,bool,bytes)",
              "mint(uint256)",
              "redeem(uint256)",
              "redeemUnderlying(uint256)",
              "borrow(uint256)",
              "repayBorrow(uint256)",
              "repayBorrowBehalf(address,uint256)",
              "liquidateBorrow(address,uint256,CTokenInterface)",
              "_addReserves(uint256)",
              "balanceOfUnderlying(address)",
              "getAccountSnapshot(address)",
              "borrowRatePerBlock()",
              "supplyRatePerBlock()",
              "totalBorrowsCurrent()",
              "borrowBalanceCurrent(address)",
              "borrowBalanceStored(address)",
              "exchangeRateCurrent()",
              "exchangeRateStored()",
              "getCash()",
              "accrueInterest()",
              "seize(address,address,uint256)",
              "_setPendingAdmin(address)",
              "_acceptAdmin()",
              "_setComptroller(ComptrollerInterface)",
              "_setReserveFactor(uint256)",
              "_reduceReserves(uint256)",
              "_setInterestRateModel(InterestRateModel)",
              "_setImplementation(address,bool,bytes)",
              "mint(uint256)",
              "redeem(uint256)",
              "redeemUnderlying(uint256)",
              "borrow(uint256)",
              "repayBorrow(uint256)",
              "repayBorrowBehalf(address,uint256)",
              "liquidateBorrow(address,uint256,CTokenInterface)",
              "balanceOfUnderlying(address)",
              "getAccountSnapshot(address)",
              "borrowRatePerBlock()",
              "supplyRatePerBlock()",
              "totalBorrowsCurrent()",
              "borrowBalanceCurrent(address)",
              "borrowBalanceStored(address)",
              "exchangeRateCurrent()",
              "exchangeRateStored()",
              "getCash()",
              "accrueInterest()",
              "seize(address,address,uint256)",
              "_setPendingAdmin(address)",
              "_setComptroller(ComptrollerInterface)",
              "_setReserveFactor(uint256)",
              "_acceptAdmin()",
              "_addReserves(uint256)",
              "_reduceReserves(uint256)",
              "_setInterestRateModel(InterestRateModel)",
              "delegateToImplementation(bytes)",
              "delegateToViewImplementation(bytes)"
            ]
          }
        }
      }
    ]
  }
}