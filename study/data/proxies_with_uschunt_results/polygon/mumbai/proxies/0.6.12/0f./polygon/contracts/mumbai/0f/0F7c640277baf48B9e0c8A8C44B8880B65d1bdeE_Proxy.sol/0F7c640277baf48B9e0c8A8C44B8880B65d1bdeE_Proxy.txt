
Begin Proxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: success_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),contractLogic_fallback_asm_0,ptr_fallback_asm_0,calldatasize()(),0,0) (Slither line:2800)
Expression Type: = (Slither line:2803)
Checking right side of assignment expression... (Slither line:2811)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2815)
Args:
gas()()
contractLogic_fallback_asm_0
ptr_fallback_asm_0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2822)

Destination is contractLogic_fallback_asm_0 (Slither line:2826)
dest.value: contractLogic_fallback_asm_0 (Slither line:2829)
Expression: None (Slither line:2834)

Begin Proxy.find_delegate_variable_from_name
Searching for contractLogic_fallback_asm_0 (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking PROXIABLE_MEM_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
fallback contains assembly, searching for sload (Slither line:1875)

End Proxy.find_delegate_variable_from_name (Slither line:1947)


End Proxy.find_delegatecall_in_exp_node (Slither line:2856)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(ptr_fallback_asm_0,retSz_fallback_asm_0) (Slither line:2800)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2815)
Args:
ptr_fallback_asm_0
retSz_fallback_asm_0

End Proxy.find_delegatecall_in_exp_node (Slither line:2856)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(ptr_fallback_asm_0,retSz_fallback_asm_0) (Slither line:2800)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2815)
Args:
ptr_fallback_asm_0
retSz_fallback_asm_0

End Proxy.find_delegatecall_in_exp_node (Slither line:2856)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_1363_155_0_fallback_asm_0 = success_fallback_asm_0 (Slither line:2800)
Expression Type: = (Slither line:2803)
Checking right side of assignment expression... (Slither line:2811)

End Proxy.find_delegatecall_in_exp_node (Slither line:2856)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'contractLogic'
Looking for corresponding Variable
Current function: fallback

Begin Proxy.find_delegate_variable_from_name
Searching for contractLogic (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking PROXIABLE_MEM_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
fallback contains assembly, searching for sload (Slither line:1875)
{'name': 'PROXIABLE_MEM_SLOT', 'nodeType': 'YulIdentifier', 'src': '962:18:0'} (Slither line:1907)
Found storage slot in fallback: PROXIABLE_MEM_SLOT (Slither line:1941)

End Proxy.find_delegate_variable_from_name (Slither line:1947)


End Proxy.find_delegatecall_in_asm (Slither line:1637)

Setting Proxy._delegate_variable = Proxy._proxy_impl_slot: PROXIABLE_MEM_SLOT (Slither line:1473)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 
Call destination PROXIABLE_MEM_SLOT is constant (Slither line:1146)

PROXIABLE_MEM_SLOT is the implementation storage slot (Slither line:1149)

Proxy is delegating to PROXIABLE_MEM_SLOT
Looking for setter (Slither line:1200)


Begin Proxy.find_setter_in_contract (Slither line:3117)

Expression: 0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 (Slither line:3120)
Checking function: constructor(address) returns() (Slither line:3125)
Checking function: fallback() returns() (Slither line:3125)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3125)
Visibility: internal

End Proxy.find_setter_in_contract (Slither line:3343)


Could not find implementation setter in Proxy (Slither line:1269)
Looking for getter (Slither line:1273)


Begin Proxy.find_getter_in_contract (Slither line:2972)

PROXIABLE_MEM_SLOT is a Variable object
0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7
Checking function: constructor (Slither line:2986)
Checking function: fallback (Slither line:2986)
Checking function: slitherConstructorConstantVariables (Slither line:2986)

End Proxy.find_getter_in_contract (Slither line:3081)

Could not find implementation getter in Proxy (Slither line:1305)
Checking for PROXIABLE_MEM_SLOT at slot 0 in contract Proxiable (Slither line:1355)
Found PROXIABLE_MEM_SLOT at slot 0 in contract Proxiable (Slither line:1362)

Begin Proxiable.find_getter_in_contract (Slither line:2972)

PROXIABLE_MEM_SLOT is a Variable object
0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7
Checking function: _updateCodeAddress (Slither line:2986)
Checking function: getLogicAddress (Slither line:2986)
getLogicAddress returns address variable called logicAddress (Slither line:3006)
Checking function: proxiableUUID (Slither line:2986)
proxiableUUID returns bytes32 variable  (Slither line:3006)
RETURN node expression: bytes32(PROXIABLE_MEM_SLOT) (Slither line:3026)
Checking function: slitherConstructorConstantVariables (Slither line:2986)

End Proxiable.find_getter_in_contract (Slither line:3081)


Begin Proxiable.find_setter_in_contract (Slither line:3117)

Expression: 0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 (Slither line:3120)
Checking function: _updateCodeAddress(address) returns() (Slither line:3125)
Visibility: internal
Checking function: getLogicAddress() returns(address) (Slither line:3125)
Visibility: public
getLogicAddress contains assembly (Slither line:3151)
logicAddress = sload(uint256)(PROXIABLE_MEM_SLOT)
is an Assignment Operation (Slither line:3214)
0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7
Checking function: proxiableUUID() returns(bytes32) (Slither line:3125)
Visibility: public
bytes32(PROXIABLE_MEM_SLOT)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3125)
Visibility: internal

End Proxiable.find_setter_in_contract (Slither line:3343)

Checking for PROXIABLE_MEM_SLOT at slot 0 in contract Initializable (Slither line:1355)
Found initialized at slot 0 in contract Initializable (Slither line:1362)
Checking for initialized at slot 0 in contract ERC20Detailed (Slither line:1355)
Found initialized at slot 0 in contract ERC20Detailed (Slither line:1362)
Checking for initialized at slot 0 in contract OwnerRole (Slither line:1355)
Found _owners at slot 0 in contract OwnerRole (Slither line:1362)
Checking for _owners at slot 0 in contract WhitelisterRole (Slither line:1355)
Found _owners at slot 0 in contract WhitelisterRole (Slither line:1362)
Checking for _owners at slot 0 in contract Whitelistable (Slither line:1355)
Found _owners at slot 0 in contract Whitelistable (Slither line:1362)
Checking for _owners at slot 0 in contract Context (Slither line:1355)
Found initialized at slot 0 in contract Context (Slither line:1362)
Checking for initialized at slot 0 in contract ERC20 (Slither line:1355)
Found initialized at slot 0 in contract ERC20 (Slither line:1362)
Checking for initialized at slot 0 in contract MinterRole (Slither line:1355)
Found _owners at slot 0 in contract MinterRole (Slither line:1362)
Checking for _owners at slot 0 in contract Mintable (Slither line:1355)
Found initialized at slot 0 in contract Mintable (Slither line:1362)
Checking for initialized at slot 0 in contract BurnerRole (Slither line:1355)
Found _owners at slot 0 in contract BurnerRole (Slither line:1362)
Checking for _owners at slot 0 in contract Burnable (Slither line:1355)
Found initialized at slot 0 in contract Burnable (Slither line:1362)
Checking for initialized at slot 0 in contract RevokerRole (Slither line:1355)
Found _owners at slot 0 in contract RevokerRole (Slither line:1362)
Checking for _owners at slot 0 in contract Revocable (Slither line:1355)
Found initialized at slot 0 in contract Revocable (Slither line:1362)
Checking for initialized at slot 0 in contract PauserRole (Slither line:1355)
Found _owners at slot 0 in contract PauserRole (Slither line:1362)
Checking for _owners at slot 0 in contract Pausable (Slither line:1355)
Found _owners at slot 0 in contract Pausable (Slither line:1362)
Checking for _owners at slot 0 in contract BlacklisterRole (Slither line:1355)
Found _owners at slot 0 in contract BlacklisterRole (Slither line:1362)
Checking for _owners at slot 0 in contract Blacklistable (Slither line:1355)
Found _owners at slot 0 in contract Blacklistable (Slither line:1362)
Checking for _owners at slot 0 in contract RevocableToAddress (Slither line:1355)
Found initialized at slot 0 in contract RevocableToAddress (Slither line:1362)
Checking for initialized at slot 0 in contract WrappedTokenV1 (Slither line:1355)
Found PROXIABLE_MEM_SLOT at slot 0 in contract WrappedTokenV1 (Slither line:1362)

Begin WrappedTokenV1.find_getter_in_contract (Slither line:2972)

PROXIABLE_MEM_SLOT is a Variable object
0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7
Checking function: _revokeToAddress (Slither line:2986)
_revokeToAddress returns bool variable  (Slither line:3006)
RETURN node expression: true (Slither line:3026)
Checking function: revokeToAddress (Slither line:2986)
revokeToAddress returns bool variable  (Slither line:3006)
RETURN node expression: _revokeToAddress(from,to,amount) (Slither line:3026)
Checking function: isRevoker (Slither line:2986)
isRevoker returns bool variable  (Slither line:3006)
RETURN node expression: _revokers.has(account) (Slither line:3026)
Checking function: _addRevoker (Slither line:2986)
Checking function: _removeRevoker (Slither line:2986)
Checking function: addRevoker (Slither line:2986)
Checking function: removeRevoker (Slither line:2986)
Checking function: isOwner (Slither line:2986)
isOwner returns bool variable  (Slither line:3006)
RETURN node expression: _owners.has(account) (Slither line:3026)
Checking function: addOwner (Slither line:2986)
Checking function: removeOwner (Slither line:2986)
Checking function: _addOwner (Slither line:2986)
Checking function: _removeOwner (Slither line:2986)
Checking function: totalSupply (Slither line:2986)
totalSupply returns uint256 variable  (Slither line:3006)
RETURN node expression: _totalSupply (Slither line:3026)
Checking function: balanceOf (Slither line:2986)
balanceOf returns uint256 variable  (Slither line:3006)
RETURN node expression: _balances[account] (Slither line:3026)
Checking function: transfer (Slither line:2986)
transfer returns bool variable  (Slither line:3006)
RETURN node expression: true (Slither line:3026)
Checking function: allowance (Slither line:2986)
allowance returns uint256 variable  (Slither line:3006)
RETURN node expression: _allowances[owner][spender] (Slither line:3026)
Checking function: approve (Slither line:2986)
approve returns bool variable  (Slither line:3006)
RETURN node expression: true (Slither line:3026)
Checking function: transferFrom (Slither line:2986)
transferFrom returns bool variable  (Slither line:3006)
RETURN node expression: true (Slither line:3026)
Checking function: increaseAllowance (Slither line:2986)
increaseAllowance returns bool variable  (Slither line:3006)
RETURN node expression: true (Slither line:3026)
Checking function: decreaseAllowance (Slither line:2986)
decreaseAllowance returns bool variable  (Slither line:3006)
RETURN node expression: true (Slither line:3026)
Checking function: _transfer (Slither line:2986)
Checking function: _mint (Slither line:2986)
Checking function: _burn (Slither line:2986)
Checking function: _approve (Slither line:2986)
Checking function: _burnFrom (Slither line:2986)
Checking function: constructor (Slither line:2986)
Checking function: _msgSender (Slither line:2986)
_msgSender returns address variable  (Slither line:3006)
RETURN node expression: msg.sender (Slither line:3026)
Checking function: _msgData (Slither line:2986)
_msgData returns bytes variable  (Slither line:3006)
RETURN node expression: msg.data (Slither line:3026)
Checking function: isConstructor (Slither line:2986)
isConstructor returns bool variable  (Slither line:3006)
RETURN node expression: cs == 0 (Slither line:3026)
Checking function: _setBlacklistEnabled (Slither line:2986)
Checking function: _addToBlacklist (Slither line:2986)
Checking function: _removeFromBlacklist (Slither line:2986)
Checking function: checkBlacklistAllowed (Slither line:2986)
checkBlacklistAllowed returns bool variable  (Slither line:3006)
RETURN node expression: ! addressBlacklists[sender] && ! addressBlacklists[receiver] (Slither line:3026)
RETURN node expression: true (Slither line:3026)
Checking function: setBlacklistEnabled (Slither line:2986)
Checking function: addToBlacklist (Slither line:2986)
Checking function: removeFromBlacklist (Slither line:2986)
Checking function: isBlacklister (Slither line:2986)
isBlacklister returns bool variable  (Slither line:3006)
RETURN node expression: _Blacklisters.has(account) (Slither line:3026)
Checking function: _addBlacklister (Slither line:2986)
Checking function: _removeBlacklister (Slither line:2986)
Checking function: addBlacklister (Slither line:2986)
Checking function: removeBlacklister (Slither line:2986)
Checking function: paused (Slither line:2986)
paused returns bool variable  (Slither line:3006)
RETURN node expression: _paused (Slither line:3026)
Checking function: _pause (Slither line:2986)
Checking function: _unpause (Slither line:2986)
Checking function: pause (Slither line:2986)
Checking function: unpause (Slither line:2986)
Checking function: isPauser (Slither line:2986)
isPauser returns bool variable  (Slither line:3006)
RETURN node expression: _pausers.has(account) (Slither line:3026)
Checking function: _addPauser (Slither line:2986)
Checking function: _removePauser (Slither line:2986)
Checking function: addPauser (Slither line:2986)
Checking function: removePauser (Slither line:2986)
Checking function: _revoke (Slither line:2986)
_revoke returns bool variable  (Slither line:3006)
RETURN node expression: true (Slither line:3026)
Checking function: revoke (Slither line:2986)
revoke returns bool variable  (Slither line:3006)
RETURN node expression: _revoke(from,amount) (Slither line:3026)
Checking function: _burn (Slither line:2986)
_burn returns bool variable  (Slither line:3006)
RETURN node expression: true (Slither line:3026)
Checking function: burn (Slither line:2986)
burn returns bool variable  (Slither line:3006)
RETURN node expression: _burn(msg.sender,account,amount) (Slither line:3026)
Checking function: isBurner (Slither line:2986)
isBurner returns bool variable  (Slither line:3006)
RETURN node expression: _burners.has(account) (Slither line:3026)
Checking function: _addBurner (Slither line:2986)
Checking function: _removeBurner (Slither line:2986)
Checking function: addBurner (Slither line:2986)
Checking function: removeBurner (Slither line:2986)
Checking function: _mint (Slither line:2986)
_mint returns bool variable  (Slither line:3006)
RETURN node expression: true (Slither line:3026)
Checking function: mint (Slither line:2986)
mint returns bool variable  (Slither line:3006)
RETURN node expression: Mintable._mint(msg.sender,account,amount) (Slither line:3026)
Checking function: isMinter (Slither line:2986)
isMinter returns bool variable  (Slither line:3006)
RETURN node expression: _minters.has(account) (Slither line:3026)
Checking function: _addMinter (Slither line:2986)
Checking function: _removeMinter (Slither line:2986)
Checking function: addMinter (Slither line:2986)
Checking function: removeMinter (Slither line:2986)
Checking function: _setWhitelistEnabled (Slither line:2986)
Checking function: _addToWhitelist (Slither line:2986)
Checking function: _removeFromWhitelist (Slither line:2986)
Checking function: _updateOutboundWhitelistEnabled (Slither line:2986)
Checking function: checkWhitelistAllowed (Slither line:2986)
checkWhitelistAllowed returns bool variable  (Slither line:3006)
RETURN node expression: outboundWhitelistsEnabled[senderWhiteList][receiverWhiteList] (Slither line:3026)
RETURN node expression: false (Slither line:3026)
RETURN node expression: true (Slither line:3026)
Checking function: setWhitelistEnabled (Slither line:2986)
Checking function: addToWhitelist (Slither line:2986)
Checking function: removeFromWhitelist (Slither line:2986)
Checking function: updateOutboundWhitelistEnabled (Slither line:2986)
Checking function: isWhitelister (Slither line:2986)
isWhitelister returns bool variable  (Slither line:3006)
RETURN node expression: _whitelisters.has(account) (Slither line:3026)
Checking function: _addWhitelister (Slither line:2986)
Checking function: _removeWhitelister (Slither line:2986)
Checking function: addWhitelister (Slither line:2986)
Checking function: removeWhitelister (Slither line:2986)
Checking function: initialize (Slither line:2986)
Checking function: name (Slither line:2986)
name returns string variable  (Slither line:3006)
RETURN node expression: _name (Slither line:3026)
Checking function: symbol (Slither line:2986)
symbol returns string variable  (Slither line:3006)
RETURN node expression: _symbol (Slither line:3026)
Checking function: decimals (Slither line:2986)
decimals returns uint8 variable  (Slither line:3006)
RETURN node expression: _decimals (Slither line:3026)
Checking function: _updateCodeAddress (Slither line:2986)
Checking function: getLogicAddress (Slither line:2986)
getLogicAddress returns address variable called logicAddress (Slither line:3006)
Checking function: proxiableUUID (Slither line:2986)
proxiableUUID returns bytes32 variable  (Slither line:3006)
RETURN node expression: bytes32(PROXIABLE_MEM_SLOT) (Slither line:3026)
Checking function: initialize (Slither line:2986)
Checking function: updateCodeAddress (Slither line:2986)
Checking function: updateOracleAddress (Slither line:2986)
Checking function: detectTransferRestriction (Slither line:2986)
detectTransferRestriction returns uint8 variable  (Slither line:3006)
RETURN node expression: FAILURE_NON_WHITELIST (Slither line:3026)
RETURN node expression: FAILURE_BLACKLIST (Slither line:3026)
RETURN node expression: FAILURE_PAUSED (Slither line:3026)
RETURN node expression: SUCCESS_CODE (Slither line:3026)
RETURN node expression: SUCCESS_CODE (Slither line:3026)
Checking function: messageForTransferRestriction (Slither line:2986)
messageForTransferRestriction returns string variable  (Slither line:3006)
RETURN node expression: UNKNOWN_ERROR (Slither line:3026)
RETURN node expression: FAILURE_BLACKLIST_MESSAGE (Slither line:3026)
RETURN node expression: SUCCESS_MESSAGE (Slither line:3026)
RETURN node expression: FAILURE_NON_WHITELIST_MESSAGE (Slither line:3026)
RETURN node expression: FAILURE_PAUSED_MESSAGE (Slither line:3026)
Checking function: transfer (Slither line:2986)
transfer returns bool variable called success (Slither line:3006)
Checking function: transferFrom (Slither line:2986)
transferFrom returns bool variable called success (Slither line:3006)
Checking function: mint (Slither line:2986)
mint returns bool variable  (Slither line:3006)
RETURN node expression: Mintable.mint(account,amount) (Slither line:3026)
Checking function: _checkOracle (Slither line:2986)
_checkOracle returns bool variable  (Slither line:3006)
_checkOracle returns string variable  (Slither line:3006)
RETURN node expression: (true,) (Slither line:3026)
RETURN node expression: (false,reason) (Slither line:3026)
RETURN node expression: (false,Can not mint without necessary reserve) (Slither line:3026)
RETURN node expression: (false,string(lowLevelData)) (Slither line:3026)
Checking function: slitherConstructorConstantVariables (Slither line:2986)

End WrappedTokenV1.find_getter_in_contract (Slither line:3081)


Begin WrappedTokenV1.find_setter_in_contract (Slither line:3117)

Expression: 0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 (Slither line:3120)
Checking function: initialize(address,string,string,uint8,bool) returns() (Slither line:3125)
Checking function: updateCodeAddress(address) returns() (Slither line:3125)
Visibility: public
require(bool,string)(isOwner(msg.sender),OwnerRole: caller does not have the Owner role)
role.bearer[account]
onlyOwner()
_owners.has(account)
CodeAddressUpdated(newAddress)
require(bool,string)(bytes32(PROXIABLE_MEM_SLOT) == Proxiable(newAddress).proxiableUUID(),Not compatible)
sstore(uint256,uint256)(PROXIABLE_MEM_SLOT,newAddress)
sstore(uint256,uint256)

End WrappedTokenV1.find_setter_in_contract (Slither line:3343)

Checking external function fallback
functions_writing_to_variable: PROXIABLE_MEM_SLOT
functions_writing_to_variable: checking function WrappedTokenV1._removeBlacklister (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._removeFromBlacklist (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._checkOracle (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._removePauser (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._transfer (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.addBlacklister (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.checkBlacklistAllowed (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.approve (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.addPauser (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.constructor (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.removeBlacklister (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.isBurner (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.setBlacklistEnabled (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.removePauser (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._mint (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.transferFrom (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.paused (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._addBurner (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.addToBlacklist (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._msgSender (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._pause (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._revoke (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._burn (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._msgData (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.revoke (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.removeFromBlacklist (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.increaseAllowance (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._unpause (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._removeBurner (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._revokeToAddress (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.isConstructor (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.pause (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._approve (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.isBlacklister (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.unpause (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.addBurner (proxy_features line:895)
functions_writing_to_variable: checking function Proxy.slitherConstructorConstantVariables (proxy_features line:895)
functions_writing_to_variable: exp = PROXIABLE_MEM_SLOT = 0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: PROXIABLE_MEM_SLOT = 0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 (proxy_features line:909)
functions_writing_to_variable: Identifier: PROXIABLE_MEM_SLOT (proxy_features line:921)
get_value_assigned: PROXIABLE_MEM_SLOT = 0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7
functions_writing_to_variable: checking function WrappedTokenV1._setBlacklistEnabled (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.isPauser (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.revokeToAddress (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._addBlacklister (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._burnFrom (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.removeBurner (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.decreaseAllowance (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._addPauser (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._addToBlacklist (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._burn (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.burn (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.removeMinter (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.addWhitelister (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.addOwner (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._mint (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.symbol (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.addToWhitelist (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.totalSupply (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.mint (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.isRevoker (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.removeWhitelister (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._setWhitelistEnabled (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.decimals (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.removeOwner (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.removeFromWhitelist (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._addToWhitelist (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.balanceOf (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._updateCodeAddress (proxy_features line:895)
get_value_assigned: sstore(uint256,uint256)(PROXIABLE_MEM_SLOT,newAddress)
functions_writing_to_variable: _updateCodeAddress writes newAddress to PROXIABLE_MEM_SLOT using sstore (proxy_features line:995)
functions_writing_to_variable: checking function WrappedTokenV1._addOwner (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._removeFromWhitelist (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.detectTransferRestriction (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.transfer (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.isMinter (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._addRevoker (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.updateOutboundWhitelistEnabled (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.messageForTransferRestriction (proxy_features line:895)
functions_writing_to_variable: checking function Proxy.constructor (proxy_features line:895)
get_value_assigned: sstore(uint256,uint256)(PROXIABLE_MEM_SLOT,contractLogic)
functions_writing_to_variable: constructor writes contractLogic to PROXIABLE_MEM_SLOT using sstore (proxy_features line:995)
functions_writing_to_variable: checking function WrappedTokenV1.initialize (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.getLogicAddress (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._removeOwner (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.updateCodeAddress (proxy_features line:895)
get_value_assigned: sstore(uint256,uint256)(PROXIABLE_MEM_SLOT,newAddress)
functions_writing_to_variable: updateCodeAddress writes newAddress to PROXIABLE_MEM_SLOT using sstore (proxy_features line:995)
functions_writing_to_variable: checking function Proxy.fallback (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.isWhitelister (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._updateOutboundWhitelistEnabled (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.updateOracleAddress (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.allowance (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._removeRevoker (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.totalSupply (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.proxiableUUID (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._addMinter (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.detectTransferRestriction (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.checkWhitelistAllowed (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.addRevoker (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.balanceOf (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.initialize (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.messageForTransferRestriction (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._addWhitelister (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.approve (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._removeMinter (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.transfer (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.slitherConstructorConstantVariables (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.removeRevoker (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.transfer (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.transferFrom (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.name (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.setWhitelistEnabled (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.addMinter (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1._removeWhitelister (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.mint (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.isOwner (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.allowance (proxy_features line:895)
functions_writing_to_variable: checking function WrappedTokenV1.transferFrom (proxy_features line:895)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _updateCodeAddress
has_compatibility_checks: checking public function constructor
require(bool,string)(contractLogic != address(0),Contract Logic cannot be 0x0)
has_compatibility_checks: condition contractLogic != address(0)
check_condition_from_expression: condition contractLogic != address(0)
has_compatibility_checks: checking public function updateCodeAddress
require(bool,string)(isOwner(msg.sender),OwnerRole: caller does not have the Owner role)
has_compatibility_checks: condition isOwner(msg.sender)
require(bool,string)(bytes32(PROXIABLE_MEM_SLOT) == Proxiable(newAddress).proxiableUUID(),Not compatible)
has_compatibility_checks: condition bytes32(PROXIABLE_MEM_SLOT) == Proxiable(newAddress).proxiableUUID()
check_condition_from_expression: modifier calls: ['onlyOwner()']
check_condition_from_expression: condition bytes32(PROXIABLE_MEM_SLOT) == Proxiable(newAddress).proxiableUUID()
require(bool,string)(account != address(0),Roles: account is the zero address)
has_compatibility_checks: condition account != address(0)
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: success_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),contractLogic_fallback_asm_0,ptr_fallback_asm_0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0x0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: ptr_fallback_asm_0 = mload(uint256)(0x40)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: contractLogic_fallback_asm_0 = sload(uint256)(PROXIABLE_MEM_SLOT)
Found public function: constructor
Found fallback
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(isOwner(msg.sender),OwnerRole: caller does not have the Owner role)
has_time_delay: (node.type) RETURN
(Expression) role.bearer[account]
has_time_delay: (node.type) EXPRESSION
(Expression) onlyOwner()
has_time_delay: (node.type) RETURN
(Expression) _owners.has(account)
has_time_delay: (node.type) EXPRESSION
(Expression) CodeAddressUpdated(newAddress)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(bytes32(PROXIABLE_MEM_SLOT) == Proxiable(newAddress).proxiableUUID(),Not compatible)
has_time_delay: (node.type) EXPRESSION
(Expression) sstore(uint256,uint256)(PROXIABLE_MEM_SLOT,newAddress)
has_time_delay: (node.type) EXPRESSION
(Expression) Proxiable._updateCodeAddress(newAddress)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(account != address(0),Roles: account is the zero address)

Begin Proxiable.is_proxy (Slither line:1425)


End Proxiable.is_proxy (Slither line:1428)


Begin Proxiable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxiable 

End Proxiable.is_upgradeable_proxy (Slither line:1407)


Begin Initializable.is_proxy (Slither line:1425)


End Initializable.is_proxy (Slither line:1428)


Begin Initializable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Initializable 

End Initializable.is_upgradeable_proxy (Slither line:1407)


Begin IERC20.is_proxy (Slither line:1425)


End IERC20.is_proxy (Slither line:1428)


Begin IERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20 

End IERC20.is_upgradeable_proxy (Slither line:1407)


Begin ERC20Detailed.is_proxy (Slither line:1425)


End ERC20Detailed.is_proxy (Slither line:1428)


Begin ERC20Detailed.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20Detailed 

End ERC20Detailed.is_upgradeable_proxy (Slither line:1407)


Begin ERC1404.is_proxy (Slither line:1425)


End ERC1404.is_proxy (Slither line:1428)


Begin ERC1404.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC1404 

End ERC1404.is_upgradeable_proxy (Slither line:1407)


Begin Roles.is_proxy (Slither line:1425)


End Roles.is_proxy (Slither line:1428)


Begin Roles.is_upgradeable_proxy (Slither line:1136)

Checking contract: Roles 

End Roles.is_upgradeable_proxy (Slither line:1407)


Begin OwnerRole.is_proxy (Slither line:1425)


End OwnerRole.is_proxy (Slither line:1428)


Begin OwnerRole.is_upgradeable_proxy (Slither line:1136)

Checking contract: OwnerRole 

End OwnerRole.is_upgradeable_proxy (Slither line:1407)


Begin WhitelisterRole.is_proxy (Slither line:1425)


End WhitelisterRole.is_proxy (Slither line:1428)


Begin WhitelisterRole.is_upgradeable_proxy (Slither line:1136)

Checking contract: WhitelisterRole 

End WhitelisterRole.is_upgradeable_proxy (Slither line:1407)


Begin Whitelistable.is_proxy (Slither line:1425)


End Whitelistable.is_proxy (Slither line:1428)


Begin Whitelistable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Whitelistable 

End Whitelistable.is_upgradeable_proxy (Slither line:1407)


Begin Context.is_proxy (Slither line:1425)


End Context.is_proxy (Slither line:1428)


Begin Context.is_upgradeable_proxy (Slither line:1136)

Checking contract: Context 

End Context.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin ERC20.is_proxy (Slither line:1425)


End ERC20.is_proxy (Slither line:1428)


Begin ERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20 

End ERC20.is_upgradeable_proxy (Slither line:1407)


Begin MinterRole.is_proxy (Slither line:1425)


End MinterRole.is_proxy (Slither line:1428)


Begin MinterRole.is_upgradeable_proxy (Slither line:1136)

Checking contract: MinterRole 

End MinterRole.is_upgradeable_proxy (Slither line:1407)


Begin Mintable.is_proxy (Slither line:1425)


End Mintable.is_proxy (Slither line:1428)


Begin Mintable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Mintable 

End Mintable.is_upgradeable_proxy (Slither line:1407)


Begin BurnerRole.is_proxy (Slither line:1425)


End BurnerRole.is_proxy (Slither line:1428)


Begin BurnerRole.is_upgradeable_proxy (Slither line:1136)

Checking contract: BurnerRole 

End BurnerRole.is_upgradeable_proxy (Slither line:1407)


Begin Burnable.is_proxy (Slither line:1425)


End Burnable.is_proxy (Slither line:1428)


Begin Burnable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Burnable 

End Burnable.is_upgradeable_proxy (Slither line:1407)


Begin RevokerRole.is_proxy (Slither line:1425)


End RevokerRole.is_proxy (Slither line:1428)


Begin RevokerRole.is_upgradeable_proxy (Slither line:1136)

Checking contract: RevokerRole 

End RevokerRole.is_upgradeable_proxy (Slither line:1407)


Begin Revocable.is_proxy (Slither line:1425)


End Revocable.is_proxy (Slither line:1428)


Begin Revocable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Revocable 

End Revocable.is_upgradeable_proxy (Slither line:1407)


Begin PauserRole.is_proxy (Slither line:1425)


End PauserRole.is_proxy (Slither line:1428)


Begin PauserRole.is_upgradeable_proxy (Slither line:1136)

Checking contract: PauserRole 

End PauserRole.is_upgradeable_proxy (Slither line:1407)


Begin Pausable.is_proxy (Slither line:1425)


End Pausable.is_proxy (Slither line:1428)


Begin Pausable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Pausable 

End Pausable.is_upgradeable_proxy (Slither line:1407)


Begin BlacklisterRole.is_proxy (Slither line:1425)


End BlacklisterRole.is_proxy (Slither line:1428)


Begin BlacklisterRole.is_upgradeable_proxy (Slither line:1136)

Checking contract: BlacklisterRole 

End BlacklisterRole.is_upgradeable_proxy (Slither line:1407)


Begin Blacklistable.is_proxy (Slither line:1425)


End Blacklistable.is_proxy (Slither line:1428)


Begin Blacklistable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Blacklistable 

End Blacklistable.is_upgradeable_proxy (Slither line:1407)


Begin RevocableToAddress.is_proxy (Slither line:1425)


End RevocableToAddress.is_proxy (Slither line:1428)


Begin RevocableToAddress.is_upgradeable_proxy (Slither line:1136)

Checking contract: RevocableToAddress 

End RevocableToAddress.is_upgradeable_proxy (Slither line:1407)


Begin AggregatorV3Interface.is_proxy (Slither line:1425)


End AggregatorV3Interface.is_proxy (Slither line:1428)


Begin AggregatorV3Interface.is_upgradeable_proxy (Slither line:1136)

Checking contract: AggregatorV3Interface 

End AggregatorV3Interface.is_upgradeable_proxy (Slither line:1407)


Begin WrappedTokenV1.is_proxy (Slither line:1425)


End WrappedTokenV1.is_proxy (Slither line:1428)


Begin WrappedTokenV1.is_upgradeable_proxy (Slither line:1136)

Checking contract: WrappedTokenV1 

End WrappedTokenV1.is_upgradeable_proxy (Slither line:1407)

