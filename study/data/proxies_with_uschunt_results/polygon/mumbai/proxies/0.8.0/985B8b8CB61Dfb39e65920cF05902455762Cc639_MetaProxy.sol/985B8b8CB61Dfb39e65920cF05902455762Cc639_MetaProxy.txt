
Begin MetaProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin MetaProxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(ptr__delegatecall_asm_0,0,size__delegatecall_asm_0) (Slither line:2792)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2807)
Args:
ptr__delegatecall_asm_0
0
size__delegatecall_asm_0

End MetaProxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin MetaProxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(impl != address(0),MetaProxy: Implementation is zero address) (Slither line:2792)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2807)
Args:
impl != address(0)
MetaProxy: Implementation is zero address

End MetaProxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin MetaProxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_6031_152_0__delegatecall_asm_0 = result__delegatecall_asm_0 (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)

End MetaProxy.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin MetaProxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'impl'
Looking for corresponding Variable
Current function: _delegatecall

Begin MetaProxy.find_delegate_variable_from_name
Searching for impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking implementationPosition (Slither line:1689)
Checking proxyOwnerPosition (Slither line:1689)
Checking domainSeparatorPosition (Slither line:1689)
Checking domainChainIdPosition (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking impl (Slither line:1703)
impl is a Local Variable in MetaProxy._delegatecall (Slither line:1707)
Expression: implementation() (Slither line:1719)

Begin MetaProxy.find_delegate_from_call_exp

implementation() (Slither line:1993)
called = implementation (Slither line:2000)
AssignmentOperation: impl = sload(uint256)(position) (Slither line:2107)
CallExpression: sload(uint256) (Slither line:2113)
Found storage slot: implementationPosition (Slither line:2130)
implementation returns a variable of type address   called impl (Slither line:2183)
implementation contains assembly - looking for sload (Slither line:2189)

End MetaProxy.find_delegate_from_call_exp (Slither line:2318)

Call Expression
End MetaProxy.find_delegate_variable_by_name (Slither line:1739)


End MetaProxy.find_delegatecall_in_asm (Slither line:1637)

Setting MetaProxy._delegate_variable = MetaProxy._proxy_impl_slot: implementationPosition (Slither line:1473)


End MetaProxy.is_proxy (Slither line:1476)


Begin MetaProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: MetaProxy 
Call destination implementationPosition is constant (Slither line:1146)

implementationPosition is the implementation storage slot (Slither line:1149)

MetaProxy is delegating to implementationPosition
Looking for setter (Slither line:1200)


Begin MetaProxy.find_setter_in_contract (Slither line:3109)

Expression: keccak256(bytes)(implementation.contract.meta.proxy:2022) (Slither line:3112)
Checking function: constructor() returns() (Slither line:3117)
Checking function: proxyOwner() returns(address) (Slither line:3117)
Visibility: public
proxyOwner contains assembly (Slither line:3143)
owner = sload(uint256)(position)
is an Assignment Operation (Slither line:3206)
keccak256(bytes)(implementation.contract.meta.proxy:2022)
Checking function: implementation() returns(address) (Slither line:3117)
Visibility: public
implementation contains assembly (Slither line:3143)
impl = sload(uint256)(position)
is an Assignment Operation (Slither line:3206)
keccak256(bytes)(implementation.contract.meta.proxy:2022)
Checking function: _domainChainId() returns(uint256) (Slither line:3117)
Visibility: private
Checking function: _domainSeparator() returns(bytes32) (Slither line:3117)
Visibility: private
Checking function: DOMAIN_SEPARATOR() returns(bytes32) (Slither line:3117)
Visibility: public
DOMAIN_SEPARATOR contains assembly (Slither line:3143)
domainSeparator = sload(uint256)(position)
is an Assignment Operation (Slither line:3206)
keccak256(bytes)(implementation.contract.meta.proxy:2022)
_domainSeparator()
keccak256(bytes)(abi.encode(keccak256(bytes)(EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)),keccak256(bytes)(bytes(NFTify)),keccak256(bytes)(bytes(1)),chainId,address(this)))
chainId = sload(uint256)(position)
is an Assignment Operation (Slither line:3206)
keccak256(bytes)(implementation.contract.meta.proxy:2022)
_calculateDomainSeparator(chainId)
chainId = chainid()()
is an Assignment Operation (Slither line:3206)
keccak256(bytes)(implementation.contract.meta.proxy:2022)
Checking function: upgradeTo(address) returns() (Slither line:3117)
Visibility: public
require(bool,string)(msg.sender == proxyOwner(),MetaProxy: only proxy owner)
_setImplementation(impl)
Upgraded(impl)
sstore(uint256,uint256)(position,impl)
sstore(uint256,uint256)

End MetaProxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: upgradeTo in contract: MetaProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin MetaProxy.find_getter_in_contract (Slither line:2964)

implementationPosition is a Variable object
keccak256(bytes)(implementation.contract.meta.proxy:2022)
Checking function: constructor (Slither line:2978)
Checking function: proxyOwner (Slither line:2978)
proxyOwner returns address variable called owner (Slither line:2998)
proxyOwner contains assembly (Slither line:3041)
proxyOwner contains assembly (Slither line:3041)
proxyOwner contains assembly (Slither line:3041)
proxyOwner contains assembly (Slither line:3041)
Checking function: implementation (Slither line:2978)
implementation returns address variable called impl (Slither line:2998)
implementation contains assembly (Slither line:3041)

End MetaProxy.find_getter_in_contract (Slither line:3073)


Implementation retrieved by function: implementation in contract: MetaProxy (Slither line:1285)

End MetaProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: MetaProxy
Setter found in contract MetaProxy
Checking public function proxyOwner
Checking public function implementation
Checking public function DOMAIN_SEPARATOR
Checking public function upgradeTo
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == proxyOwner(),MetaProxy: only proxy owner)
Checking public function executeMetaTransaction
Checking public function transferProxyOwnership
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == proxyOwner(),MetaProxy: only proxy owner)
Checking external function fallback
Checking external function receive
functions_writing_to_variable: implementationPosition
functions_writing_to_variable: checking function MetaProxy.receive (proxy_features line:893)
functions_writing_to_variable: checking function MetaProxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: exp = implementationPosition = keccak256(bytes)(implementation.contract.meta.proxy:2022) (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: implementationPosition = keccak256(bytes)(implementation.contract.meta.proxy:2022) (proxy_features line:907)
functions_writing_to_variable: Identifier: implementationPosition (proxy_features line:919)
get_value_assigned: implementationPosition = keccak256(bytes)(implementation.contract.meta.proxy:2022)
functions_writing_to_variable: exp = proxyOwnerPosition = keccak256(bytes)(owner.contract.meta.proxy:2022) (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: proxyOwnerPosition = keccak256(bytes)(owner.contract.meta.proxy:2022) (proxy_features line:907)
functions_writing_to_variable: exp = domainSeparatorPosition = keccak256(bytes)(domain.separator.meta.proxy:2022) (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: domainSeparatorPosition = keccak256(bytes)(domain.separator.meta.proxy:2022) (proxy_features line:907)
functions_writing_to_variable: exp = domainChainIdPosition = keccak256(bytes)(domain.chainId.meta.proxy:2022) (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: domainChainIdPosition = keccak256(bytes)(domain.chainId.meta.proxy:2022) (proxy_features line:907)
functions_writing_to_variable: checking function MetaProxy.DOMAIN_SEPARATOR (proxy_features line:893)
functions_writing_to_variable: checking function MetaProxy._domainChainId (proxy_features line:893)
functions_writing_to_variable: checking function MetaProxy.implementation (proxy_features line:893)
functions_writing_to_variable: checking function MetaProxy._calculateDomainSeparator (proxy_features line:893)
functions_writing_to_variable: checking function MetaProxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function MetaProxy._setImplementation (proxy_features line:893)
get_value_assigned: sstore(uint256,uint256)(position,impl)
functions_writing_to_variable: _setImplementation writes impl to implementationPosition using sstore (proxy_features line:993)
functions_writing_to_variable: checking function MetaProxy._setDomainChainId (proxy_features line:893)
functions_writing_to_variable: checking function MetaProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function MetaProxy.upgradeTo (proxy_features line:893)
get_value_assigned: sstore(uint256,uint256)(position,impl)
functions_writing_to_variable: upgradeTo writes impl to implementationPosition using sstore (proxy_features line:993)
functions_writing_to_variable: checking function MetaProxy.transferProxyOwnership (proxy_features line:893)
functions_writing_to_variable: checking function MetaProxy._setUpgradeabilityOwner (proxy_features line:893)
functions_writing_to_variable: checking function MetaProxy._domainSeparator (proxy_features line:893)
functions_writing_to_variable: checking function MetaProxy._setDomainSeparator (proxy_features line:893)
functions_writing_to_variable: checking function MetaProxy.executeMetaTransaction (proxy_features line:893)
functions_writing_to_variable: checking function MetaProxy._delegatecall (proxy_features line:893)
functions_writing_to_variable: checking function MetaProxy.proxyOwner (proxy_features line:893)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping private function _setImplementation
has_compatibility_checks: checking public function upgradeTo
require(bool,string)(msg.sender == proxyOwner(),MetaProxy: only proxy owner)
has_compatibility_checks: condition msg.sender == proxyOwner()
require(bool,string)(currentImpl != impl,MetaProxy: upgrade to current implementation)
has_compatibility_checks: condition currentImpl != impl
check_condition_from_expression: modifier calls: ['onlyProxyOwner()']
check_condition_from_expression: condition implementation() != impl
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(ptr__delegatecall_asm_0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: ptr__delegatecall_asm_0 = mload(uint256)(0x40)
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool,string)(impl != address(0),MetaProxy: Implementation is zero address)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result__delegatecall_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()() - 10000,impl,ptr__delegatecall_asm_0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: impl = implementation()
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
Found public function: constructor
Found public function: proxyOwner
has_time_delay: (node.type) NEW VARIABLE
(Expression) currentImpl = implementation()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == proxyOwner(),MetaProxy: only proxy owner)
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(impl)
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = implementationPosition
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = implementationPosition
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(impl)
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = proxyOwnerPosition
has_time_delay: (node.type) EXPRESSION
(Expression) sstore(uint256,uint256)(position,impl)
has_time_delay: (node.type) EXPRESSION
(Expression) impl = sload(uint256)(position)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(currentImpl != impl,MetaProxy: upgrade to current implementation)
has_time_delay: (node.type) EXPRESSION
(Expression) onlyProxyOwner()
has_time_delay: (node.type) EXPRESSION
(Expression) owner = sload(uint256)(position)
