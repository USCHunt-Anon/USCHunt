
Begin EIP20NonStandardInterface.is_proxy (Slither line:1425)


End EIP20NonStandardInterface.is_proxy (Slither line:1428)


Begin EIP20NonStandardInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: EIP20NonStandardInterface 

End EIP20NonStandardInterface.is_upgradeable_proxy (Slither line:1407)


Begin CTokenStorage.is_proxy (Slither line:1425)


End CTokenStorage.is_proxy (Slither line:1428)


Begin CTokenStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: CTokenStorage 

End CTokenStorage.is_upgradeable_proxy (Slither line:1407)


Begin CErc20Storage.is_proxy (Slither line:1425)


End CErc20Storage.is_proxy (Slither line:1428)


Begin CErc20Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: CErc20Storage 

End CErc20Storage.is_upgradeable_proxy (Slither line:1407)


Begin CDelegationStorage.is_proxy (Slither line:1425)


End CDelegationStorage.is_proxy (Slither line:1428)


Begin CDelegationStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: CDelegationStorage 

End CDelegationStorage.is_upgradeable_proxy (Slither line:1407)


Begin CDelegateInterface.is_proxy (Slither line:1425)


End CDelegateInterface.is_proxy (Slither line:1428)


Begin CDelegateInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CDelegateInterface 

End CDelegateInterface.is_upgradeable_proxy (Slither line:1407)


Begin InterestRateModel.is_proxy (Slither line:1425)


End InterestRateModel.is_proxy (Slither line:1428)


Begin InterestRateModel.is_upgradeable_proxy (Slither line:1136)

Checking contract: InterestRateModel 

End InterestRateModel.is_upgradeable_proxy (Slither line:1407)


Begin CTokenInterface.is_proxy (Slither line:1425)


End CTokenInterface.is_proxy (Slither line:1428)


Begin CTokenInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CTokenInterface 

End CTokenInterface.is_upgradeable_proxy (Slither line:1407)


Begin CDelegatorInterface.is_proxy (Slither line:1425)


End CDelegatorInterface.is_proxy (Slither line:1428)


Begin CDelegatorInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CDelegatorInterface 

End CDelegatorInterface.is_upgradeable_proxy (Slither line:1407)


Begin CErc20Interface.is_proxy (Slither line:1425)


End CErc20Interface.is_proxy (Slither line:1428)


Begin CErc20Interface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CErc20Interface 

End CErc20Interface.is_upgradeable_proxy (Slither line:1407)


Begin CErc20Delegator.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin CErc20Delegator.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let free_mem_ptr := mload(0x40) (Slither line:1576)
    returndatacopy(free_mem_ptr, 0, returndatasize()) (Slither line:1576)
    switch success (Slither line:1576)
    case 0 { (Slither line:1576)
        revert(free_mem_ptr, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
    default { (Slither line:1576)
        return(free_mem_ptr, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
} (Slither line:1576)

End CErc20Delegator.find_delegatecall_in_asm (Slither line:1637)


Begin CErc20Delegator.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let free_mem_ptr := mload(0x40) (Slither line:1576)
    returndatacopy(free_mem_ptr, 0, returndatasize()) (Slither line:1576)
    switch success (Slither line:1576)
    case 0 { (Slither line:1576)
        revert(free_mem_ptr, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
    default { (Slither line:1576)
        return(free_mem_ptr, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
} (Slither line:1576)

End CErc20Delegator.find_delegatecall_in_asm (Slither line:1637)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin CErc20Delegator.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(msg.value == 0,CErc20Delegator:fallback: cannot send value to fallback) (Slither line:2802)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2817)
Args:
msg.value == 0
CErc20Delegator:fallback: cannot send value to fallback

End CErc20Delegator.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


Found LowLevelCall (Slither line:2740)


Found delegatecall in LowLevelCall (Slither line:2742)


End Contract.find_delegatecall_in_ir (Slither line:2773)


End CErc20Delegator.is_proxy (Slither line:1476)


Begin CErc20Delegator.is_upgradeable_proxy (Slither line:1136)

Checking contract: CErc20Delegator 
CErc20Delegator is delegating to implementation
Looking for setter (Slither line:1200)

Looking for setter in CDelegationStorage (Slither line:1204)


Begin CDelegationStorage.find_setter_in_contract (Slither line:3119)


End CDelegationStorage.find_setter_in_contract (Slither line:3345)


Could not find setter in CDelegationStorage 
Looking in CErc20Delegator (Slither line:1213)

Begin CErc20Delegator.find_setter_in_contract (Slither line:3119)

Checking function: constructor(address,ComptrollerInterface,InterestRateModel,uint256,string,string,uint8,address,address,bytes) returns() (Slither line:3127)
Checking function: _setImplementation(address,bool,bytes) returns() (Slither line:3127)
Visibility: public
implementation = implementation_
is an Assignment Operation (Slither line:3216)

End CErc20Delegator.find_setter_in_contract (Slither line:3345)


Implementation set by function: _setImplementation in contract: CErc20Delegator (Slither line:1264)
Looking for getter (Slither line:1273)


Begin CDelegationStorage.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_

End CDelegationStorage.find_getter_in_contract (Slither line:3083)


Begin CErc20Delegator.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_
Checking function: constructor (Slither line:2988)
Checking function: _setImplementation (Slither line:2988)
Checking function: mint (Slither line:2988)
mint returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: redeem (Slither line:2988)
redeem returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: redeemUnderlying (Slither line:2988)
redeemUnderlying returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: borrow (Slither line:2988)
borrow returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: repayBorrow (Slither line:2988)
repayBorrow returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: repayBorrowBehalf (Slither line:2988)
repayBorrowBehalf returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: liquidateBorrow (Slither line:2988)
liquidateBorrow returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: transfer (Slither line:2988)
transfer returns bool variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(bool)) (Slither line:3028)
Checking function: transferFrom (Slither line:2988)
transferFrom returns bool variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(bool)) (Slither line:3028)
Checking function: approve (Slither line:2988)
approve returns bool variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(bool)) (Slither line:3028)
Checking function: allowance (Slither line:2988)
allowance returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: balanceOf (Slither line:2988)
balanceOf returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: balanceOfUnderlying (Slither line:2988)
balanceOfUnderlying returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: getAccountSnapshot (Slither line:2988)
getAccountSnapshot returns uint256 variable  (Slither line:3008)
getAccountSnapshot returns uint256 variable  (Slither line:3008)
getAccountSnapshot returns uint256 variable  (Slither line:3008)
getAccountSnapshot returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256,uint256,uint256,uint256)) (Slither line:3028)
Checking function: borrowRatePerBlock (Slither line:2988)
borrowRatePerBlock returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: supplyRatePerBlock (Slither line:2988)
supplyRatePerBlock returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: totalBorrowsCurrent (Slither line:2988)
totalBorrowsCurrent returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: borrowBalanceCurrent (Slither line:2988)
borrowBalanceCurrent returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: borrowBalanceStored (Slither line:2988)
borrowBalanceStored returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: exchangeRateCurrent (Slither line:2988)
exchangeRateCurrent returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: exchangeRateStored (Slither line:2988)
exchangeRateStored returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: getCash (Slither line:2988)
getCash returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: accrueInterest (Slither line:2988)
accrueInterest returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: seize (Slither line:2988)
seize returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: sweepToken (Slither line:2988)
Checking function: _setPendingAdmin (Slither line:2988)
_setPendingAdmin returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: _setComptroller (Slither line:2988)
_setComptroller returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: _setReserveFactor (Slither line:2988)
_setReserveFactor returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: _acceptAdmin (Slither line:2988)
_acceptAdmin returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: _addReserves (Slither line:2988)
_addReserves returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: _reduceReserves (Slither line:2988)
_reduceReserves returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: _setInterestRateModel (Slither line:2988)
_setInterestRateModel returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: delegateTo (Slither line:2988)
delegateTo returns bytes variable  (Slither line:3008)
RETURN node expression: returnData (Slither line:3028)
Checking function: delegateToImplementation (Slither line:2988)
delegateToImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: delegateTo(implementation,data) (Slither line:3028)
Checking function: delegateToViewImplementation (Slither line:2988)
delegateToViewImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: abi.decode(returnData,(bytes)) (Slither line:3028)
Checking function: fallback (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End CErc20Delegator.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in CErc20Delegator (Slither line:1305)
or in CDelegationStorage (Slither line:1319)

Begin CDelegateInterface.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_

End CDelegateInterface.find_getter_in_contract (Slither line:3083)


End CErc20Delegator.is_upgradeable_proxy (Slither line:1332)

impl_address_from_contract_call: implementation_
impl_address_from_contract_call: StateVariable implementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression require(bool,string)(msg.value == 0,CErc20Delegator:fallback: cannot send value to fallback)
impl_address_from_contract_call: arg is msg.value == 0
impl_address_from_contract_call: arg is CErc20Delegator:fallback: cannot send value to fallback
impl_address_from_contract_call: CallExpression implementation.delegatecall(msg.data)
Checking public function _setImplementation
Checking external function mint
Checking external function redeem
Checking external function redeemUnderlying
Checking external function borrow
Checking external function repayBorrow
Checking external function repayBorrowBehalf
Checking external function liquidateBorrow
Checking external function sweepToken
Checking external function _addReserves
Checking external function transfer
Checking external function transferFrom
Checking external function approve
Checking external function allowance
Checking external function balanceOf
Checking external function balanceOfUnderlying
Checking external function getAccountSnapshot
Checking external function borrowRatePerBlock
Checking external function supplyRatePerBlock
Checking external function totalBorrowsCurrent
Checking external function borrowBalanceCurrent
Checking public function borrowBalanceStored
Checking public function exchangeRateCurrent
Checking public function exchangeRateStored
Checking external function getCash
Checking public function accrueInterest
Checking external function seize
Checking external function _setPendingAdmin
Checking external function _acceptAdmin
Checking public function _setComptroller
Checking external function _setReserveFactor
Checking external function _reduceReserves
Checking public function _setInterestRateModel
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,CErc20Delegator::_setImplementation: Caller must be admin)
Checking external function mint
Checking external function redeem
Checking external function redeemUnderlying
Checking external function borrow
Checking external function repayBorrow
Checking external function repayBorrowBehalf
Checking external function liquidateBorrow
Checking external function transfer
Checking external function transferFrom
Checking external function approve
Checking external function allowance
Checking external function balanceOf
Checking external function balanceOfUnderlying
Checking external function getAccountSnapshot
Checking external function borrowRatePerBlock
Checking external function supplyRatePerBlock
Checking external function totalBorrowsCurrent
Checking external function borrowBalanceCurrent
Checking public function borrowBalanceStored
Checking public function exchangeRateCurrent
Checking public function exchangeRateStored
Checking external function getCash
Checking public function accrueInterest
Checking external function seize
Checking external function sweepToken
Checking external function _setPendingAdmin
Checking public function _setComptroller
Checking external function _setReserveFactor
Checking external function _acceptAdmin
Checking external function _addReserves
Checking external function _reduceReserves
Checking public function _setInterestRateModel
Checking public function delegateToImplementation
Checking public function delegateToViewImplementation
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function CErc20Delegator.transferFrom (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.mint (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.transfer (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.borrowRatePerBlock (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.getCash (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator._acceptAdmin (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.fallback (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.supplyRatePerBlock (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.repayBorrowBehalf (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.getAccountSnapshot (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.redeemUnderlying (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.exchangeRateCurrent (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.redeem (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.transferFrom (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.supplyRatePerBlock (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.accrueInterest (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.seize (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator._setInterestRateModel (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator._addReserves (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator._addReserves (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator._setComptroller (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.redeemUnderlying (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.approve (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.totalBorrowsCurrent (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.seize (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator._reduceReserves (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.totalBorrowsCurrent (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.mint (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.balanceOf (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.approve (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.borrow (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator._setPendingAdmin (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.allowance (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.borrowBalanceCurrent (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.sweepToken (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.borrowRatePerBlock (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.liquidateBorrow (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.borrow (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.exchangeRateStored (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator._setReserveFactor (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.repayBorrow (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.borrowBalanceStored (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.borrowBalanceCurrent (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.balanceOf (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator._setPendingAdmin (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator._setInterestRateModel (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.delegateTo (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator._reduceReserves (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.transfer (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.getCash (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.repayBorrowBehalf (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.constructor (proxy_features line:898)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: constructor writes implementation_ to implementation (proxy_features line:1013)
functions_writing_to_variable: checking function CErc20Delegator.balanceOfUnderlying (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.exchangeRateCurrent (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator._setComptroller (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.accrueInterest (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.delegateToImplementation (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.redeem (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.repayBorrow (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.balanceOfUnderlying (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.borrowBalanceStored (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.liquidateBorrow (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.exchangeRateStored (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator._setImplementation (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator._setImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == admin,CErc20Delegator::_setImplementation: Caller must be admin) (proxy_features line:909)
functions_writing_to_variable: exp = allowResign (proxy_features line:909)
functions_writing_to_variable: exp = delegateToImplementation(abi.encodeWithSignature(_resignImplementation())) (proxy_features line:909)
functions_writing_to_variable: exp = oldImplementation = implementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = implementation (proxy_features line:912)
functions_writing_to_variable: exp = implementation = implementation_ (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = implementation_ (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: exp = delegateToImplementation(abi.encodeWithSignature(_becomeImplementation(bytes),becomeImplementationData)) (proxy_features line:909)
functions_writing_to_variable: exp = NewImplementation(oldImplementation,implementation) (proxy_features line:909)
functions_writing_to_variable: exp = delegateTo(implementation,data) (proxy_features line:909)
functions_writing_to_variable: exp = (success,returnData) = callee.delegatecall(data) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: (success,returnData) = callee.delegatecall(data) (proxy_features line:912)
functions_writing_to_variable: exp = returnData (proxy_features line:909)
functions_writing_to_variable: _setImplementation writes implementation_ to implementation (proxy_features line:929)
functions_writing_to_variable: checking function CErc20Delegator.getAccountSnapshot (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator._setReserveFactor (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.sweepToken (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.delegateToViewImplementation (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator.allowance (proxy_features line:898)
functions_writing_to_variable: checking function CErc20Delegator._acceptAdmin (proxy_features line:898)
has_compatibility_checks: dependencies: ['implementation_', 'implementation_']
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking public function _setImplementation
require(bool,string)(msg.sender == admin,CErc20Delegator::_setImplementation: Caller must be admin)
has_compatibility_checks: condition msg.sender == admin
has_compatibility_checks: IF node exp = allowResign
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool,string)(msg.value == 0,CErc20Delegator:fallback: cannot send value to fallback)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: (success) = implementation.delegatecall(msg.data)
Found public function: _setImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = implementation_
has_time_delay: (node.type) RETURN
(Expression) delegateTo(implementation,data)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == admin,CErc20Delegator::_setImplementation: Caller must be admin)
has_time_delay: (node.type) EXPRESSION
(Expression) delegateToImplementation(abi.encodeWithSignature(_resignImplementation()))
has_time_delay: (node.type) EXPRESSION
(Expression) delegateToImplementation(abi.encodeWithSignature(_becomeImplementation(bytes),becomeImplementationData))
has_time_delay: (node.type) EXPRESSION
(Expression) (success,returnData) = callee.delegatecall(data)
has_time_delay: (node.type) IF
(Expression) allowResign
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,implementation)
has_time_delay: (node.type) RETURN
(Expression) returnData
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = implementation

Begin ComptrollerInterface.is_proxy (Slither line:1425)


End ComptrollerInterface.is_proxy (Slither line:1428)


Begin ComptrollerInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: ComptrollerInterface 

End ComptrollerInterface.is_upgradeable_proxy (Slither line:1407)

