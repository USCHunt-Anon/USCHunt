
Begin ComptrollerInterfaceG1.is_proxy (Slither line:1425)


End ComptrollerInterfaceG1.is_proxy (Slither line:1428)


Begin ComptrollerInterfaceG1.is_upgradeable_proxy (Slither line:1136)

Checking contract: ComptrollerInterfaceG1 

End ComptrollerInterfaceG1.is_upgradeable_proxy (Slither line:1407)


Begin ComptrollerInterfaceG2.is_proxy (Slither line:1425)


End ComptrollerInterfaceG2.is_proxy (Slither line:1428)


Begin ComptrollerInterfaceG2.is_upgradeable_proxy (Slither line:1136)

Checking contract: ComptrollerInterfaceG2 

End ComptrollerInterfaceG2.is_upgradeable_proxy (Slither line:1407)


Begin ComptrollerInterface.is_proxy (Slither line:1425)


End ComptrollerInterface.is_proxy (Slither line:1428)


Begin ComptrollerInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: ComptrollerInterface 

End ComptrollerInterface.is_upgradeable_proxy (Slither line:1407)


Begin IBAIVault.is_proxy (Slither line:1425)


End IBAIVault.is_proxy (Slither line:1428)


Begin IBAIVault.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBAIVault 

End IBAIVault.is_upgradeable_proxy (Slither line:1407)


Begin IComptroller.is_proxy (Slither line:1425)


End IComptroller.is_proxy (Slither line:1428)


Begin IComptroller.is_upgradeable_proxy (Slither line:1136)

Checking contract: IComptroller 

End IComptroller.is_upgradeable_proxy (Slither line:1407)


Begin InterestRateModel.is_proxy (Slither line:1425)


End InterestRateModel.is_proxy (Slither line:1428)


Begin InterestRateModel.is_upgradeable_proxy (Slither line:1136)

Checking contract: InterestRateModel 

End InterestRateModel.is_upgradeable_proxy (Slither line:1407)


Begin BTokenStorage.is_proxy (Slither line:1425)


End BTokenStorage.is_proxy (Slither line:1428)


Begin BTokenStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: BTokenStorage 

End BTokenStorage.is_upgradeable_proxy (Slither line:1407)


Begin BTokenInterface.is_proxy (Slither line:1425)


End BTokenInterface.is_proxy (Slither line:1428)


Begin BTokenInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: BTokenInterface 

End BTokenInterface.is_upgradeable_proxy (Slither line:1407)


Begin BBep20Storage.is_proxy (Slither line:1425)


End BBep20Storage.is_proxy (Slither line:1428)


Begin BBep20Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: BBep20Storage 

End BBep20Storage.is_upgradeable_proxy (Slither line:1407)


Begin BBep20Interface.is_proxy (Slither line:1425)


End BBep20Interface.is_proxy (Slither line:1428)


Begin BBep20Interface.is_upgradeable_proxy (Slither line:1136)

Checking contract: BBep20Interface 

End BBep20Interface.is_upgradeable_proxy (Slither line:1407)


Begin VDelegationStorage.is_proxy (Slither line:1425)


End VDelegationStorage.is_proxy (Slither line:1428)


Begin VDelegationStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: VDelegationStorage 

End VDelegationStorage.is_upgradeable_proxy (Slither line:1407)


Begin VDelegatorInterface.is_proxy (Slither line:1425)


End VDelegatorInterface.is_proxy (Slither line:1428)


Begin VDelegatorInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: VDelegatorInterface 

End VDelegatorInterface.is_upgradeable_proxy (Slither line:1407)


Begin VDelegateInterface.is_proxy (Slither line:1425)


End VDelegateInterface.is_proxy (Slither line:1428)


Begin VDelegateInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: VDelegateInterface 

End VDelegateInterface.is_upgradeable_proxy (Slither line:1407)


Begin ComptrollerErrorReporter.is_proxy (Slither line:1425)


End ComptrollerErrorReporter.is_proxy (Slither line:1428)


Begin ComptrollerErrorReporter.is_upgradeable_proxy (Slither line:1136)

Checking contract: ComptrollerErrorReporter 

End ComptrollerErrorReporter.is_upgradeable_proxy (Slither line:1407)


Begin TokenErrorReporter.is_proxy (Slither line:1425)


End TokenErrorReporter.is_proxy (Slither line:1428)


Begin TokenErrorReporter.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenErrorReporter 

End TokenErrorReporter.is_upgradeable_proxy (Slither line:1407)


Begin BAIControllerErrorReporter.is_proxy (Slither line:1425)


End BAIControllerErrorReporter.is_proxy (Slither line:1428)


Begin BAIControllerErrorReporter.is_upgradeable_proxy (Slither line:1136)

Checking contract: BAIControllerErrorReporter 

End BAIControllerErrorReporter.is_upgradeable_proxy (Slither line:1407)


Begin CarefulMath.is_proxy (Slither line:1425)


End CarefulMath.is_proxy (Slither line:1428)


Begin CarefulMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: CarefulMath 

End CarefulMath.is_upgradeable_proxy (Slither line:1407)


Begin ExponentialNoError.is_proxy (Slither line:1425)


End ExponentialNoError.is_proxy (Slither line:1428)


Begin ExponentialNoError.is_upgradeable_proxy (Slither line:1136)

Checking contract: ExponentialNoError 

End ExponentialNoError.is_upgradeable_proxy (Slither line:1407)


Begin Exponential.is_proxy (Slither line:1425)


End Exponential.is_proxy (Slither line:1428)


Begin Exponential.is_upgradeable_proxy (Slither line:1136)

Checking contract: Exponential 

End Exponential.is_upgradeable_proxy (Slither line:1407)


Begin EIP20Interface.is_proxy (Slither line:1425)


End EIP20Interface.is_proxy (Slither line:1428)


Begin EIP20Interface.is_upgradeable_proxy (Slither line:1136)

Checking contract: EIP20Interface 

End EIP20Interface.is_upgradeable_proxy (Slither line:1407)


Begin EIP20NonStandardInterface.is_proxy (Slither line:1425)


End EIP20NonStandardInterface.is_proxy (Slither line:1428)


Begin EIP20NonStandardInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: EIP20NonStandardInterface 

End EIP20NonStandardInterface.is_upgradeable_proxy (Slither line:1407)


Begin BToken.is_proxy (Slither line:1425)


End BToken.is_proxy (Slither line:1428)


Begin BToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: BToken 

End BToken.is_upgradeable_proxy (Slither line:1407)


Begin PriceOracle.is_proxy (Slither line:1425)


End PriceOracle.is_proxy (Slither line:1428)


Begin PriceOracle.is_upgradeable_proxy (Slither line:1136)

Checking contract: PriceOracle 

End PriceOracle.is_upgradeable_proxy (Slither line:1407)


Begin BAIUnitrollerAdminStorage.is_proxy (Slither line:1425)


End BAIUnitrollerAdminStorage.is_proxy (Slither line:1428)


Begin BAIUnitrollerAdminStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: BAIUnitrollerAdminStorage 

End BAIUnitrollerAdminStorage.is_upgradeable_proxy (Slither line:1407)


Begin BAIControllerStorageG1.is_proxy (Slither line:1425)


End BAIControllerStorageG1.is_proxy (Slither line:1428)


Begin BAIControllerStorageG1.is_upgradeable_proxy (Slither line:1136)

Checking contract: BAIControllerStorageG1 

End BAIControllerStorageG1.is_upgradeable_proxy (Slither line:1407)


Begin BAIControllerStorageG2.is_proxy (Slither line:1425)


End BAIControllerStorageG2.is_proxy (Slither line:1428)


Begin BAIControllerStorageG2.is_upgradeable_proxy (Slither line:1136)

Checking contract: BAIControllerStorageG2 

End BAIControllerStorageG2.is_upgradeable_proxy (Slither line:1407)


Begin BAIUnitroller.is_proxy (Slither line:1425)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin BAIUnitroller.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let free_mem_ptr := mload(0x40) (Slither line:1576)
    returndatacopy(free_mem_ptr, 0, returndatasize()) (Slither line:1576)
    switch success (Slither line:1576)
    case 0 { (Slither line:1576)
        revert(free_mem_ptr, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
    default { (Slither line:1576)
        return(free_mem_ptr, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
} (Slither line:1576)

End BAIUnitroller.find_delegatecall_in_asm (Slither line:1637)


Begin BAIUnitroller.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let free_mem_ptr := mload(0x40) (Slither line:1576)
    returndatacopy(free_mem_ptr, 0, returndatasize()) (Slither line:1576)
    switch success (Slither line:1576)
    case 0 { (Slither line:1576)
        revert(free_mem_ptr, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
    default { (Slither line:1576)
        return(free_mem_ptr, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
} (Slither line:1576)

End BAIUnitroller.find_delegatecall_in_asm (Slither line:1637)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


Found LowLevelCall (Slither line:2740)


Found delegatecall in LowLevelCall (Slither line:2742)


End Contract.find_delegatecall_in_ir (Slither line:2773)


End BAIUnitroller.is_proxy (Slither line:1476)


Begin BAIUnitroller.is_upgradeable_proxy (Slither line:1136)

Checking contract: BAIUnitroller 
BAIUnitroller is delegating to baiControllerImplementation
Looking for setter (Slither line:1200)

Looking for setter in BAIUnitrollerAdminStorage (Slither line:1204)


Begin BAIUnitrollerAdminStorage.find_setter_in_contract (Slither line:3119)


End BAIUnitrollerAdminStorage.find_setter_in_contract (Slither line:3345)


Could not find setter in BAIUnitrollerAdminStorage 
Looking in BAIUnitroller (Slither line:1213)

Begin BAIUnitroller.find_setter_in_contract (Slither line:3119)

Checking function: constructor() returns() (Slither line:3127)
Checking function: _setPendingImplementation(address) returns(uint256) (Slither line:3127)
Visibility: public
uint256(err)
fail(Error.UNAUTHORIZED,FailureInfo.SET_PENDING_IMPLEMENTATION_OWNER_CHECK)
NewPendingImplementation(oldPendingImplementation,pendingBAIControllerImplementation)
Failure(uint256(err),uint256(info),0)
uint256(Error.NO_ERROR)
pendingBAIControllerImplementation = newPendingImplementation
is an Assignment Operation (Slither line:3216)
Checking function: _acceptImplementation() returns(uint256) (Slither line:3127)
Visibility: public
uint256(err)
NewPendingImplementation(oldPendingImplementation,pendingBAIControllerImplementation)
Failure(uint256(err),uint256(info),0)
baiControllerImplementation = pendingBAIControllerImplementation
is an Assignment Operation (Slither line:3216)

End BAIUnitroller.find_setter_in_contract (Slither line:3345)


Implementation set by function: _acceptImplementation in contract: BAIUnitroller (Slither line:1264)
Looking for getter (Slither line:1273)


Begin BAIUnitrollerAdminStorage.find_getter_in_contract (Slither line:2974)

baiControllerImplementation is a Variable object
pendingBAIControllerImplementation

End BAIUnitrollerAdminStorage.find_getter_in_contract (Slither line:3083)


Begin BAIUnitroller.find_getter_in_contract (Slither line:2974)

baiControllerImplementation is a Variable object
pendingBAIControllerImplementation
Checking function: fail (Slither line:2988)
fail returns uint256 variable  (Slither line:3008)
RETURN node expression: uint256(err) (Slither line:3028)
Checking function: failOpaque (Slither line:2988)
failOpaque returns uint256 variable  (Slither line:3008)
RETURN node expression: uint256(err) (Slither line:3028)
Checking function: constructor (Slither line:2988)
Checking function: _setPendingImplementation (Slither line:2988)
_setPendingImplementation returns uint256 variable  (Slither line:3008)
RETURN node expression: fail(Error.UNAUTHORIZED,FailureInfo.SET_PENDING_IMPLEMENTATION_OWNER_CHECK) (Slither line:3028)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
Checking function: _acceptImplementation (Slither line:2988)
_acceptImplementation returns uint256 variable  (Slither line:3008)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
RETURN node expression: fail(Error.UNAUTHORIZED,FailureInfo.ACCEPT_PENDING_IMPLEMENTATION_ADDRESS_CHECK) (Slither line:3028)
Checking function: _setPendingAdmin (Slither line:2988)
_setPendingAdmin returns uint256 variable  (Slither line:3008)
RETURN node expression: fail(Error.UNAUTHORIZED,FailureInfo.SET_PENDING_ADMIN_OWNER_CHECK) (Slither line:3028)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
Checking function: _acceptAdmin (Slither line:2988)
_acceptAdmin returns uint256 variable  (Slither line:3008)
RETURN node expression: fail(Error.UNAUTHORIZED,FailureInfo.ACCEPT_ADMIN_PENDING_ADMIN_CHECK) (Slither line:3028)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
Checking function: fallback (Slither line:2988)

End BAIUnitroller.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in BAIUnitroller (Slither line:1305)
or in BAIUnitrollerAdminStorage (Slither line:1319)

Begin BAIControllerStorageG1.find_getter_in_contract (Slither line:2974)

baiControllerImplementation is a Variable object
pendingBAIControllerImplementation

End BAIControllerStorageG1.find_getter_in_contract (Slither line:3083)


End BAIUnitroller.is_upgradeable_proxy (Slither line:1332)

impl_address_from_contract_call: pendingBAIControllerImplementation
impl_address_from_contract_call: StateVariable baiControllerImplementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression baiControllerImplementation.delegatecall(msg.data)
Checking public function _setPendingImplementation
Checking public function _acceptImplementation
Checking public function _setPendingAdmin
Checking public function _acceptAdmin
Checking public function _setPendingImplementation
Checking public function _acceptImplementation
Checking public function _setPendingAdmin
Checking public function _acceptAdmin
Checking external function fallback
functions_writing_to_variable: baiControllerImplementation
functions_writing_to_variable: checking function BAIUnitroller.fail (proxy_features line:898)
functions_writing_to_variable: checking function BAIUnitroller._acceptAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BAIUnitroller.constructor (proxy_features line:898)
functions_writing_to_variable: checking function BAIUnitroller._setPendingImplementation (proxy_features line:898)
functions_writing_to_variable: checking function BAIUnitroller._setPendingAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BAIUnitroller.fallback (proxy_features line:898)
functions_writing_to_variable: checking function BAIUnitroller.failOpaque (proxy_features line:898)
functions_writing_to_variable: checking function BAIUnitroller._acceptImplementation (proxy_features line:898)
functions_writing_to_variable: exp = msg.sender != pendingBAIControllerImplementation (proxy_features line:909)
functions_writing_to_variable: exp = fail(Error.UNAUTHORIZED,FailureInfo.ACCEPT_PENDING_IMPLEMENTATION_ADDRESS_CHECK) (proxy_features line:909)
functions_writing_to_variable: exp = oldImplementation = baiControllerImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = baiControllerImplementation (proxy_features line:912)
functions_writing_to_variable: exp = oldPendingImplementation = pendingBAIControllerImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldPendingImplementation = pendingBAIControllerImplementation (proxy_features line:912)
functions_writing_to_variable: exp = baiControllerImplementation = pendingBAIControllerImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: baiControllerImplementation = pendingBAIControllerImplementation (proxy_features line:912)
functions_writing_to_variable: Identifier: baiControllerImplementation (proxy_features line:924)
get_value_assigned: baiControllerImplementation = pendingBAIControllerImplementation
functions_writing_to_variable: exp = pendingBAIControllerImplementation = address(0) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: pendingBAIControllerImplementation = address(0) (proxy_features line:912)
functions_writing_to_variable: exp = NewImplementation(oldImplementation,baiControllerImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = NewPendingImplementation(oldPendingImplementation,pendingBAIControllerImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = uint256(Error.NO_ERROR) (proxy_features line:909)
functions_writing_to_variable: exp = Failure(uint256(err),uint256(info),0) (proxy_features line:909)
functions_writing_to_variable: exp = uint256(err) (proxy_features line:909)
functions_writing_to_variable: _acceptImplementation writes pendingBAIControllerImplementation to baiControllerImplementation (proxy_features line:929)
has_compatibility_checks: dependencies: ['newPendingImplementation', 'pendingBAIControllerImplementation', 'TMP_829']
functions_writing_to_variable: pendingBAIControllerImplementation
functions_writing_to_variable: checking function BAIUnitroller.fail (proxy_features line:898)
functions_writing_to_variable: checking function BAIUnitroller._acceptAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BAIUnitroller.constructor (proxy_features line:898)
functions_writing_to_variable: checking function BAIUnitroller._setPendingImplementation (proxy_features line:898)
functions_writing_to_variable: exp = msg.sender != admin (proxy_features line:909)
functions_writing_to_variable: exp = fail(Error.UNAUTHORIZED,FailureInfo.SET_PENDING_IMPLEMENTATION_OWNER_CHECK) (proxy_features line:909)
functions_writing_to_variable: exp = oldPendingImplementation = pendingBAIControllerImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldPendingImplementation = pendingBAIControllerImplementation (proxy_features line:912)
functions_writing_to_variable: exp = pendingBAIControllerImplementation = newPendingImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: pendingBAIControllerImplementation = newPendingImplementation (proxy_features line:912)
functions_writing_to_variable: Identifier: pendingBAIControllerImplementation (proxy_features line:924)
get_value_assigned: pendingBAIControllerImplementation = newPendingImplementation
functions_writing_to_variable: exp = NewPendingImplementation(oldPendingImplementation,pendingBAIControllerImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = uint256(Error.NO_ERROR) (proxy_features line:909)
functions_writing_to_variable: exp = Failure(uint256(err),uint256(info),0) (proxy_features line:909)
functions_writing_to_variable: exp = uint256(err) (proxy_features line:909)
functions_writing_to_variable: _setPendingImplementation writes newPendingImplementation to pendingBAIControllerImplementation (proxy_features line:929)
functions_writing_to_variable: checking function BAIUnitroller._setPendingAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BAIUnitroller.fallback (proxy_features line:898)
functions_writing_to_variable: checking function BAIUnitroller.failOpaque (proxy_features line:898)
functions_writing_to_variable: checking function BAIUnitroller._acceptImplementation (proxy_features line:898)
functions_writing_to_variable: exp = msg.sender != pendingBAIControllerImplementation (proxy_features line:909)
functions_writing_to_variable: exp = fail(Error.UNAUTHORIZED,FailureInfo.ACCEPT_PENDING_IMPLEMENTATION_ADDRESS_CHECK) (proxy_features line:909)
functions_writing_to_variable: exp = oldImplementation = baiControllerImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = baiControllerImplementation (proxy_features line:912)
functions_writing_to_variable: exp = oldPendingImplementation = pendingBAIControllerImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldPendingImplementation = pendingBAIControllerImplementation (proxy_features line:912)
functions_writing_to_variable: exp = baiControllerImplementation = pendingBAIControllerImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: baiControllerImplementation = pendingBAIControllerImplementation (proxy_features line:912)
functions_writing_to_variable: exp = pendingBAIControllerImplementation = address(0) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: pendingBAIControllerImplementation = address(0) (proxy_features line:912)
functions_writing_to_variable: Identifier: pendingBAIControllerImplementation (proxy_features line:924)
get_value_assigned: pendingBAIControllerImplementation = address(0)
functions_writing_to_variable: exp = NewImplementation(oldImplementation,baiControllerImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = NewPendingImplementation(oldPendingImplementation,pendingBAIControllerImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = uint256(Error.NO_ERROR) (proxy_features line:909)
functions_writing_to_variable: exp = Failure(uint256(err),uint256(info),0) (proxy_features line:909)
functions_writing_to_variable: exp = uint256(err) (proxy_features line:909)
has_compatibility_checks: checking public function _acceptImplementation
has_compatibility_checks: IF node exp = msg.sender != pendingBAIControllerImplementation
has_compatibility_checks: checking public function _setPendingImplementation
has_compatibility_checks: IF node exp = msg.sender != admin
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: (success) = baiControllerImplementation.delegatecall(msg.data)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
Found public function: constructor
Found public function: _setPendingImplementation
has_time_delay: (node.type) RETURN
(Expression) uint256(err)
has_time_delay: (node.type) EXPRESSION
(Expression) NewPendingImplementation(oldPendingImplementation,pendingBAIControllerImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) Failure(uint256(err),uint256(info),0)
has_time_delay: (node.type) EXPRESSION
(Expression) baiControllerImplementation = pendingBAIControllerImplementation
has_time_delay: (node.type) RETURN
(Expression) uint256(Error.NO_ERROR)
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = baiControllerImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) pendingBAIControllerImplementation = address(0)
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,baiControllerImplementation)
has_time_delay: (node.type) IF
(Expression) msg.sender != pendingBAIControllerImplementation
has_time_delay: (node.type) RETURN
(Expression) fail(Error.UNAUTHORIZED,FailureInfo.ACCEPT_PENDING_IMPLEMENTATION_ADDRESS_CHECK)
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldPendingImplementation = pendingBAIControllerImplementation

Begin LibNote.is_proxy (Slither line:1425)


End LibNote.is_proxy (Slither line:1428)


Begin LibNote.is_upgradeable_proxy (Slither line:1136)

Checking contract: LibNote 

End LibNote.is_upgradeable_proxy (Slither line:1407)


Begin BAI.is_proxy (Slither line:1425)


End BAI.is_proxy (Slither line:1428)


Begin BAI.is_upgradeable_proxy (Slither line:1136)

Checking contract: BAI 

End BAI.is_upgradeable_proxy (Slither line:1407)


Begin ComptrollerImplInterface.is_proxy (Slither line:1425)


End ComptrollerImplInterface.is_proxy (Slither line:1428)


Begin ComptrollerImplInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: ComptrollerImplInterface 

End ComptrollerImplInterface.is_upgradeable_proxy (Slither line:1407)


Begin BAIController.is_proxy (Slither line:1425)


End BAIController.is_proxy (Slither line:1428)


Begin BAIController.is_upgradeable_proxy (Slither line:1136)

Checking contract: BAIController 

End BAIController.is_upgradeable_proxy (Slither line:1407)

