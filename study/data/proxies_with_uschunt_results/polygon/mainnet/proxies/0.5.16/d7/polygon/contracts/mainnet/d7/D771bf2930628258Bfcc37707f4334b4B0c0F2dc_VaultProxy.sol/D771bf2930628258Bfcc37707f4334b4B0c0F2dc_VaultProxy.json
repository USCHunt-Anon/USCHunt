{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "VaultProxy (../../smart-contract-sanctuary/polygon/contracts/mainnet/proxies/0.5.16/d7/polygon/contracts/mainnet/d7/D771bf2930628258Bfcc37707f4334b4B0c0F2dc_VaultProxy.sol/D771bf2930628258Bfcc37707f4334b4B0c0F2dc_VaultProxy.sol#348-486)",
        "elements": [],
        "description": "VaultProxy (../../smart-contract-sanctuary/polygon/contracts/mainnet/proxies/0.5.16/d7/polygon/contracts/mainnet/d7/D771bf2930628258Bfcc37707f4334b4B0c0F2dc_VaultProxy.sol/D771bf2930628258Bfcc37707f4334b4B0c0F2dc_VaultProxy.sol#348-486) is an upgradeable proxy.\nvaultImplementation was found in a different contract.\nvaultImplementation is an address state variable.\n uses Inherited Storage\nMissing compatibility check in VaultProxy._acceptImplementation()\nMissing compatibility check in VaultProxy._setPendingImplementation(address)\n",
        "id": "1a4e5f71b7b32142d0d3684b0c4c39e38b994062548ef2e6d3f569ef2eb2e8a6",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "VaultAdminStorage.vaultImplementation",
          "impl_address_setter": "VaultProxy._acceptImplementation()",
          "impl_address_getter": "not found",
          "impl_address_location": "VaultAdminStorage (../../smart-contract-sanctuary/polygon/contracts/mainnet/proxies/0.5.16/d7/polygon/contracts/mainnet/d7/D771bf2930628258Bfcc37707f4334b4B0c0F2dc_VaultProxy.sol/D771bf2930628258Bfcc37707f4334b4B0c0F2dc_VaultProxy.sol#277-297)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "VaultProxy._acceptImplementation()": "missing",
              "VaultProxy._setPendingImplementation(address)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "_setPendingImplementation(address)",
              "_acceptImplementation()",
              "_setPendingAdmin(address)",
              "_acceptAdmin()"
            ]
          }
        }
      }
    ]
  }
}