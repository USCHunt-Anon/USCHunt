
Begin Math.is_proxy (Slither line:1425)


End Math.is_proxy (Slither line:1428)


Begin Math.is_upgradeable_proxy (Slither line:1136)

Checking contract: Math 

End Math.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin UQ112x112.is_proxy (Slither line:1425)


End UQ112x112.is_proxy (Slither line:1428)


Begin UQ112x112.is_upgradeable_proxy (Slither line:1136)

Checking contract: UQ112x112 

End UQ112x112.is_upgradeable_proxy (Slither line:1407)


Begin LibGovStorage.is_proxy (Slither line:1425)


End LibGovStorage.is_proxy (Slither line:1428)


Begin LibGovStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: LibGovStorage 

End LibGovStorage.is_upgradeable_proxy (Slither line:1407)


Begin LibPolygonStorage.is_proxy (Slither line:1425)


End LibPolygonStorage.is_proxy (Slither line:1428)


Begin LibPolygonStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: LibPolygonStorage 

End LibPolygonStorage.is_upgradeable_proxy (Slither line:1407)


Begin LibLoveSwapStorage.is_proxy (Slither line:1425)


End LibLoveSwapStorage.is_proxy (Slither line:1428)


Begin LibLoveSwapStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: LibLoveSwapStorage 

End LibLoveSwapStorage.is_upgradeable_proxy (Slither line:1407)


Begin LibDiamond.is_proxy (Slither line:1425)


End LibDiamond.is_proxy (Slither line:1428)


Begin LibDiamond.is_upgradeable_proxy (Slither line:1136)

Checking contract: LibDiamond 

End LibDiamond.is_upgradeable_proxy (Slither line:1407)


Begin IDiamondLoupe.is_proxy (Slither line:1425)


End IDiamondLoupe.is_proxy (Slither line:1428)


Begin IDiamondLoupe.is_upgradeable_proxy (Slither line:1136)

Checking contract: IDiamondLoupe 

End IDiamondLoupe.is_upgradeable_proxy (Slither line:1407)


Begin IERC165.is_proxy (Slither line:1425)


End IERC165.is_proxy (Slither line:1428)


Begin IERC165.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC165 

End IERC165.is_upgradeable_proxy (Slither line:1407)


Begin IDiamondCut.is_proxy (Slither line:1425)


End IDiamondCut.is_proxy (Slither line:1428)


Begin IDiamondCut.is_upgradeable_proxy (Slither line:1136)

Checking contract: IDiamondCut 

End IDiamondCut.is_upgradeable_proxy (Slither line:1407)


Begin IERC20.is_proxy (Slither line:1425)


End IERC20.is_proxy (Slither line:1428)


Begin IERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20 

End IERC20.is_upgradeable_proxy (Slither line:1407)


Begin ILoveSwapPair.is_proxy (Slither line:1425)


End ILoveSwapPair.is_proxy (Slither line:1428)


Begin ILoveSwapPair.is_upgradeable_proxy (Slither line:1136)

Checking contract: ILoveSwapPair 

End ILoveSwapPair.is_upgradeable_proxy (Slither line:1407)


Begin ILoveSwapCallee.is_proxy (Slither line:1425)


End ILoveSwapCallee.is_proxy (Slither line:1428)


Begin ILoveSwapCallee.is_upgradeable_proxy (Slither line:1136)

Checking contract: ILoveSwapCallee 

End ILoveSwapCallee.is_upgradeable_proxy (Slither line:1407)


Begin ILoveSwapERC20.is_proxy (Slither line:1425)


End ILoveSwapERC20.is_proxy (Slither line:1428)


Begin ILoveSwapERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: ILoveSwapERC20 

End ILoveSwapERC20.is_upgradeable_proxy (Slither line:1407)


Begin ILoveSwapLPFactory.is_proxy (Slither line:1425)


End ILoveSwapLPFactory.is_proxy (Slither line:1428)


Begin ILoveSwapLPFactory.is_upgradeable_proxy (Slither line:1136)

Checking contract: ILoveSwapLPFactory 

End ILoveSwapLPFactory.is_upgradeable_proxy (Slither line:1407)


Begin DiamondCutFacet.is_proxy (Slither line:1425)


End DiamondCutFacet.is_proxy (Slither line:1428)


Begin DiamondCutFacet.is_upgradeable_proxy (Slither line:1136)

Checking contract: DiamondCutFacet 

End DiamondCutFacet.is_upgradeable_proxy (Slither line:1407)


Begin DiamondLoupe.is_proxy (Slither line:1425)


End DiamondLoupe.is_proxy (Slither line:1428)


Begin DiamondLoupe.is_upgradeable_proxy (Slither line:1136)

Checking contract: DiamondLoupe 

End DiamondLoupe.is_upgradeable_proxy (Slither line:1407)


Begin LoveTokenChild.is_proxy (Slither line:1425)


End LoveTokenChild.is_proxy (Slither line:1428)


Begin LoveTokenChild.is_upgradeable_proxy (Slither line:1136)

Checking contract: LoveTokenChild 

End LoveTokenChild.is_upgradeable_proxy (Slither line:1407)


Begin LoveSwapLPToken.is_proxy (Slither line:1425)


End LoveSwapLPToken.is_proxy (Slither line:1428)


Begin LoveSwapLPToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: LoveSwapLPToken 

End LoveSwapLPToken.is_upgradeable_proxy (Slither line:1407)


Begin LoveSwapPair.is_proxy (Slither line:1425)


End LoveSwapPair.is_proxy (Slither line:1428)


Begin LoveSwapPair.is_upgradeable_proxy (Slither line:1136)

Checking contract: LoveSwapPair 

End LoveSwapPair.is_upgradeable_proxy (Slither line:1407)


Begin LoveSwapLPFactory.is_proxy (Slither line:1425)


End LoveSwapLPFactory.is_proxy (Slither line:1428)


Begin LoveSwapLPFactory.is_upgradeable_proxy (Slither line:1136)

Checking contract: LoveSwapLPFactory 

End LoveSwapLPFactory.is_upgradeable_proxy (Slither line:1407)


Begin DiamondLoveChild.is_proxy (Slither line:1425)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin DiamondLoveChild.find_delegatecall_in_asm (Slither line:1541)


End DiamondLoveChild.find_delegatecall_in_asm (Slither line:1637)


Begin DiamondLoveChild.find_delegatecall_in_asm (Slither line:1541)


End DiamondLoveChild.find_delegatecall_in_asm (Slither line:1637)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin DiamondLoveChild.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(facet != address(0),DiamondLoveChild: Function does not exist) (Slither line:2802)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2817)
Args:
facet != address(0)
DiamondLoveChild: Function does not exist

End DiamondLoveChild.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin DiamondLoveChild.find_delegatecall_in_exp_node

Found Expression Node: result_fallback_asm_1 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),facet,0,calldatasize()(),0,0) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2817)
Args:
gas()()
facet
0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2824)

Destination is facet (Slither line:2828)
dest.value: facet (Slither line:2831)
Expression: address(bytes20(ds.facets[msg.sig])) (Slither line:2836)

End DiamondLoveChild.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin DiamondLoveChild.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:2802)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
0
returndatasize()()

End DiamondLoveChild.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin DiamondLoveChild.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(0,returndatasize()()) (Slither line:2802)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
returndatasize()()

End DiamondLoveChild.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin DiamondLoveChild.find_delegatecall_in_exp_node

Found Expression Node: ds = position (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)

End DiamondLoveChild.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin DiamondLoveChild.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'facet'
Looking for corresponding Variable
Current function: fallback

Begin DiamondLoveChild.find_delegate_variable_from_name
Searching for facet (Slither line:1674)

Searching State Variables (Slither line:1687)

Searching Local Variables (Slither line:1698)
Checking position (Slither line:1703)
Checking ds (Slither line:1703)
Checking facet (Slither line:1703)
facet is a Local Variable in DiamondLoveChild.fallback (Slither line:1707)
facet appears to be a Diamond facet address (Slither line:1713)

End DiamondLoveChild.find_delegate_variable_by_name


End DiamondLoveChild.find_delegatecall_in_asm (Slither line:1637)


End DiamondLoveChild.is_proxy (Slither line:1476)


Begin DiamondLoveChild.is_upgradeable_proxy (Slither line:1136)

Checking contract: DiamondLoveChild 
Local Variable: facet (Slither line:1164)
DiamondLoveChild is delegating to facet
Looking for setter (Slither line:1200)


Begin DiamondLoveChild.find_setter_in_contract (Slither line:3119)

Expression: address(bytes20(ds.facets[msg.sig])) (Slither line:3122)
Checking function: constructor() returns() (Slither line:3127)
Checking function: fallback() returns() (Slither line:3127)
Checking function: receive() returns() (Slither line:3127)

Begin DiamondCut corner case handling (Slither line:3287)

enforceHasContractCode
enforceHasContractCode
LibDiamond.setContractOwner
require(bool,string)
require(bool,string)
require(bool,string)
require(bool,string)
Assignment to bytes4[]: funcSDiamondCut[0] = DiamondCutFacet.diamondCut.selector
Assigning function selector for DiamondCutFacet.diamondCut
member of (Identifier): DiamondCutFacet
Diamond corner case: found setter diamondCut

End DiamondCut corner case handling (Slither line:3343)


End DiamondLoveChild.find_setter_in_contract (Slither line:3345)


Implementation set by function: diamondCut in contract: DiamondCutFacet (Slither line:1264)
Looking for getter (Slither line:1273)


Begin DiamondLoveChild.find_getter_in_contract (Slither line:2974)

facet is a Variable object
address(bytes20(ds.facets[msg.sig]))
Checking function: constructor (Slither line:2988)
Checking function: fallback (Slither line:2988)
Checking function: receive (Slither line:2988)

End DiamondLoveChild.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in DiamondLoveChild (Slither line:1305)

Begin Math.find_getter_in_contract (Slither line:2974)

facet is a Variable object
address(bytes20(ds.facets[msg.sig]))
Checking function: min (Slither line:2988)
min returns uint256 variable called z (Slither line:3008)
Checking function: sqrt (Slither line:2988)
sqrt returns uint256 variable called z (Slither line:3008)

End Math.find_getter_in_contract (Slither line:3083)

Looking for Loupe functions in Math
min(uint256,uint256) returns(uint256)
sqrt(uint256) returns(uint256)
Looking for Loupe functions in SafeMath
add(uint256,uint256) returns(uint256)
add(uint256,uint256,string) returns(uint256)
sub(uint256,uint256) returns(uint256)
sub(uint256,uint256,string) returns(uint256)
mul(uint256,uint256) returns(uint256)
mul(uint256,uint256,string) returns(uint256)
div(uint256,uint256) returns(uint256)
div(uint256,uint256,string) returns(uint256)
mod(uint256,uint256) returns(uint256)
mod(uint256,uint256,string) returns(uint256)
Looking for Loupe functions in UQ112x112
encode(uint112) returns(uint224)
uqdiv(uint224,uint112) returns(uint224)
slitherConstructorConstantVariables() returns()
Looking for Loupe functions in LibGovStorage
governanceStorage() returns(LibGovStorage.GovernanceStorage)
Looking for Loupe functions in LibPolygonStorage
polygonERC20Storage() returns(LibPolygonStorage.PolygonERC20Storage)
Looking for Loupe functions in LibLoveSwapStorage
loveSwapStorage() returns(LibLoveSwapStorage.LoveSwapStorage)
Looking for Loupe functions in LibDiamond
diamondStorage() returns(LibDiamond.DiamondStorage)
setContractOwner(address) returns()
contractOwner() returns(address)
enforceIsContractOwner() returns()
diamondCut(IDiamondCut.FacetCut[],address,bytes) returns()
addReplaceRemoveFacetSelectors(uint256,bytes32,address,IDiamondCut.FacetCutAction,bytes4[]) returns(uint256,bytes32)
initializeDiamondCut(address,bytes) returns()
enforceHasContractCode(address,string) returns()
slitherConstructorConstantVariables() returns()
Looking for Loupe functions in DiamondCutFacet
diamondCut(IDiamondCut.FacetCut[],address,bytes) returns()
diamondCut(IDiamondCut.FacetCut[],address,bytes) returns()
Looking for Loupe functions in DiamondLoupe
supportsInterface(bytes4) returns(bool)
facets() returns(IDiamondLoupe.Facet[])
facetFunctionSelectors(address) returns(bytes4[])
facetAddresses() returns(address[])
facetAddress(bytes4) returns(address)
facets() returns(IDiamondLoupe.Facet[])
facetFunctionSelectors(address) returns(bytes4[])
facetAddresses() returns(address[])
facetAddress(bytes4) returns(address)
supportsInterface(bytes4) returns(bool)
Looking for Loupe functions in LoveTokenChild
name() returns(string)
symbol() returns(string)
decimals() returns(uint8)
totalSupply() returns(uint256)
balanceOf(address) returns(uint256)
transfer(address,uint256) returns(bool)
transferFrom(address,address,uint256) returns(bool)
_transferFrom(address,address,uint96) returns()
approve(address,uint256) returns(bool)
allowance(address,address) returns(uint256)
increaseAllowance(address,uint256) returns(bool)
decreaseAllowance(address,uint256) returns(bool)
permit(address,address,uint256,uint256,uint8,bytes32,bytes32) returns()
deposit(address,bytes) returns()
withdraw(uint256) returns()
safe32(uint256,string) returns(uint32)
safe96(uint256,string) returns(uint96)
add96(uint96,uint96,string) returns(uint96)
sub96(uint96,uint96,string) returns(uint96)
_getChainId() returns(uint256)
_mint(address,uint96) returns()
_burn(address,uint96) returns()
slitherConstructorConstantVariables() returns()
Looking for Loupe functions in LoveSwapLPToken
name() returns(string)
symbol() returns(string)
decimals() returns(uint8)
totalSupply() returns(uint256)
balanceOf(address) returns(uint256)
allowance(address,address) returns(uint256)
approve(address,uint256) returns(bool)
transfer(address,uint256) returns(bool)
transferFrom(address,address,uint256) returns(bool)
DOMAIN_SEPARATOR() returns(bytes32)
PERMIT_TYPEHASH() returns(bytes32)
nonces(address) returns(uint256)
permit(address,address,uint256,uint256,uint8,bytes32,bytes32) returns()
constructor() returns()
_mint(address,uint256) returns()
_burn(address,uint256) returns()
_approve(address,address,uint256) returns()
_transfer(address,address,uint256) returns()
approve(address,uint256) returns(bool)
transfer(address,uint256) returns(bool)
transferFrom(address,address,uint256) returns(bool)
permit(address,address,uint256,uint256,uint8,bytes32,bytes32) returns()
slitherConstructorConstantVariables() returns()
Looking for Loupe functions in LoveSwapPair
constructor() returns()
_mint(address,uint256) returns()
_burn(address,uint256) returns()
_approve(address,address,uint256) returns()
_transfer(address,address,uint256) returns()
approve(address,uint256) returns(bool)
transfer(address,uint256) returns(bool)
transferFrom(address,address,uint256) returns(bool)
permit(address,address,uint256,uint256,uint8,bytes32,bytes32) returns()
name() returns(string)
symbol() returns(string)
decimals() returns(uint8)
totalSupply() returns(uint256)
balanceOf(address) returns(uint256)
allowance(address,address) returns(uint256)
approve(address,uint256) returns(bool)
transfer(address,uint256) returns(bool)
transferFrom(address,address,uint256) returns(bool)
DOMAIN_SEPARATOR() returns(bytes32)
PERMIT_TYPEHASH() returns(bytes32)
nonces(address) returns(uint256)
permit(address,address,uint256,uint256,uint8,bytes32,bytes32) returns()
MINIMUM_LIQUIDITY() returns(uint256)
factory() returns(address)
token0() returns(address)
token1() returns(address)
getReserves() returns(uint112,uint112,uint32)
price0CumulativeLast() returns(uint256)
price1CumulativeLast() returns(uint256)
kLast() returns(uint256)
mint(address) returns(uint256)
burn(address) returns(uint256,uint256)
swap(uint256,uint256,address,bytes) returns()
skim(address) returns()
sync() returns()
initialize(address,address) returns()
getReserves() returns(uint112,uint112,uint32)
_safeTransfer(address,address,uint256) returns()
constructor() returns()
initialize(address,address) returns()
_update(uint256,uint256,uint112,uint112) returns()
_mintFee(uint112,uint112) returns(bool)
mint(address) returns(uint256)
burn(address) returns(uint256,uint256)
swap(uint256,uint256,address,bytes) returns()
skim(address) returns()
sync() returns()
slitherConstructorVariables() returns()
slitherConstructorConstantVariables() returns()
Looking for Loupe functions in LoveSwapLPFactory
feeTo() returns(address)
feeToSetter() returns(address)
getPair(address,address) returns(address)
allPairs(uint256) returns(address)
allPairsLength() returns(uint256)
createPair(address,address) returns(address)
setFeeTo(address) returns()
setFeeToSetter(address) returns()
initCodeHash() returns(bytes32)
allPairsLength() returns(uint256)
feeTo() returns(address)
feeToSetter() returns(address)
getPair(address,address) returns(address)
allPairs(uint256) returns(address)
createPair(address,address) returns(address)
setFeeTo(address) returns()
setFeeToSetter(address) returns()
impl_address_from_contract_call: address(bytes20(ds.facets[msg.sig]))
Checking external function fallback
Checking external function receive
functions_writing_to_variable: facet
functions_writing_to_variable: checking function DiamondCutFacet.diamondCut (proxy_features line:898)
functions_writing_to_variable: checking function DiamondLoveChild.constructor (proxy_features line:898)
functions_writing_to_variable: checking function DiamondCutFacet.diamondCut (proxy_features line:898)
functions_writing_to_variable: checking function DiamondLoveChild.receive (proxy_features line:898)
has_compatibility_checks: dependencies: ['REF_497', 'TMP_744', 'TMP_745', 'REF_496', 'ds']
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool,string)(facet != address(0),DiamondLoveChild: Function does not exist)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result_fallback_asm_1 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),facet,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: ds = position
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: position = LibDiamond.DIAMOND_STORAGE_POSITION
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: facet = address(bytes20(ds.facets[msg.sig]))
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
Found public function: constructor
Found fallback
Found external function: receive
