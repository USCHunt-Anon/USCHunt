
Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin IERC20.is_proxy (Slither line:1425)


End IERC20.is_proxy (Slither line:1428)


Begin IERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20 

End IERC20.is_upgradeable_proxy (Slither line:1407)


Begin IFactoryImpl.is_proxy (Slither line:1425)


End IFactoryImpl.is_proxy (Slither line:1428)


Begin IFactoryImpl.is_upgradeable_proxy (Slither line:1136)

Checking contract: IFactoryImpl 

End IFactoryImpl.is_upgradeable_proxy (Slither line:1407)


Begin Exchange.is_proxy (Slither line:1425)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin Exchange.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let ptr := mload(0x40) (Slither line:1576)
    calldatacopy(ptr, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'impl'
Looking for corresponding Variable
Current function: fallback

Begin Exchange.find_delegate_variable_from_name
Searching for impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking name (Slither line:1689)
Checking symbol (Slither line:1689)
Checking decimals (Slither line:1689)
Checking totalSupply (Slither line:1689)
Checking balanceOf (Slither line:1689)
Checking allowance (Slither line:1689)
Checking factory (Slither line:1689)
Checking mesh (Slither line:1689)
Checking router (Slither line:1689)
Checking WETH (Slither line:1689)
Checking token0 (Slither line:1689)
Checking token1 (Slither line:1689)
Checking reserve0 (Slither line:1689)
Checking reserve1 (Slither line:1689)
Checking blockTimestampLast (Slither line:1689)
Checking price0CumulativeLast (Slither line:1689)
Checking price1CumulativeLast (Slither line:1689)
Checking kLast (Slither line:1689)
Checking balance0 (Slither line:1689)
Checking balance1 (Slither line:1689)
Checking fee (Slither line:1689)
Checking mining (Slither line:1689)
Checking lastMined (Slither line:1689)
Checking miningIndex (Slither line:1689)
Checking userLastIndex (Slither line:1689)
Checking userRewardSum (Slither line:1689)
Checking entered (Slither line:1689)
Checking DOMAIN_SEPARATOR (Slither line:1689)
Checking PERMIT_TYPEHASH (Slither line:1689)
Checking nonces (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking impl (Slither line:1703)
impl is a Local Variable in Exchange.fallback (Slither line:1707)
Expression: IFactoryImpl(factory).getExchangeImplementation() (Slither line:1719)

Begin Exchange.find_delegate_from_call_exp

IFactoryImpl(factory).getExchangeImplementation() (Slither line:2003)
called = IFactoryImpl(factory).getExchangeImplementation (Slither line:2010)
Called member of IFactoryImpl(factory) (Slither line:2017)

Begin Exchange.find_delegate_from_member_access

Expression: IFactoryImpl(factory).getExchangeImplementation() (Slither line:2358)
IFactoryImpl(factory) (Slither line:2371)
getExchangeImplementation is a member of the contract type: IFactoryImpl (Slither line:2416)
Which is an interface (Slither line:2420)
Could not find a contract that inherits IFactoryImpl (Slither line:2441)

End Exchange.find_delegate_from_call_exp (Slither line:2019)

Call Expression
End Exchange.find_delegate_variable_by_name (Slither line:1739)


End Exchange.find_delegatecall_in_asm (Slither line:1637)


End Exchange.is_proxy (Slither line:1476)


Begin Exchange.is_upgradeable_proxy (Slither line:1136)

Checking contract: Exchange 
Local Variable: impl (Slither line:1164)
IFactoryImpl(factory) (Slither line:1171)
Call destination IFactoryImpl(factory).getExchangeImplementation() is hidden in an interface (Slither line:1192)

detect_storage_slot: Exchange
impl is dependent on factory
Expression for impl: IFactoryImpl(factory).getExchangeImplementation()
Called: IFactoryImpl(factory).getExchangeImplementation
impl_address_from_contract_call: IFactoryImpl(factory).getExchangeImplementation()
called: IFactoryImpl(factory).getExchangeImplementation
found MemberAccess: IFactoryImpl(factory).getExchangeImplementation
TypeConversion: IFactoryImpl(factory)
find_registry_address_source: IFactoryImpl(factory).getExchangeImplementation()
MemberAccess: IFactoryImpl(factory).getExchangeImplementation
TypeConversion: IFactoryImpl(factory)
Identifier: factory
Checking external function fallback
functions_writing_to_variable: impl
functions_writing_to_variable: checking function Exchange.slitherConstructorVariables (proxy_features line:898)
functions_writing_to_variable: checking function Exchange.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function Exchange.constructor (proxy_features line:898)
has_compatibility_checks: dependencies: ['TMP_36', 'factory', 'TMP_37']
functions_writing_to_variable: factory
functions_writing_to_variable: checking function Exchange.fallback (proxy_features line:898)
functions_writing_to_variable: checking function Exchange.slitherConstructorVariables (proxy_features line:898)
functions_writing_to_variable: checking function Exchange.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function Exchange.constructor (proxy_features line:898)
functions_writing_to_variable: exp = factory = msg.sender (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: factory = msg.sender (proxy_features line:912)
functions_writing_to_variable: Identifier: factory (proxy_features line:924)
get_value_assigned: factory = msg.sender
functions_writing_to_variable: exp = _token0 != address(0) (proxy_features line:909)
functions_writing_to_variable: exp = mesh = IFactoryImpl(msg.sender).mesh() (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: mesh = IFactoryImpl(msg.sender).mesh() (proxy_features line:912)
functions_writing_to_variable: exp = router = IFactoryImpl(msg.sender).router() (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: router = IFactoryImpl(msg.sender).router() (proxy_features line:912)
functions_writing_to_variable: exp = require(bool)(_token0 != _token1) (proxy_features line:909)
functions_writing_to_variable: exp = token0 = _token0 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: token0 = _token0 (proxy_features line:912)
functions_writing_to_variable: exp = token1 = _token1 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: token1 = _token1 (proxy_features line:912)
functions_writing_to_variable: exp = require(bool)(_fee <= 100) (proxy_features line:909)
functions_writing_to_variable: exp = fee = _fee (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: fee = _fee (proxy_features line:912)
functions_writing_to_variable: constructor writes msg.sender to factory (proxy_features line:929)
has_compatibility_checks: skipping constructor
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    let ptr := mload(0x40)
    calldatacopy(ptr, 0, calldatasize())
    let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)
    let size := returndatasize()
    returndatacopy(ptr, 0, size)
    switch result
    case 0 {
        revert(ptr, size)
    }
    default {
        return(ptr, size)
    }
}
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: impl = IFactoryImpl(factory).getExchangeImplementation()
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool)(impl != address(0))
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: constructor
Found fallback

Begin Factory.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Factory.find_delegatecall_in_exp_node

Found Expression Node: require(bool)(impl != address(0)) (Slither line:2802)
Expression called: require(bool)
Type of call: tuple() (Slither line:2817)
Args:
impl != address(0)

End Factory.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin Factory.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let ptr := mload(0x40) (Slither line:1576)
    calldatacopy(ptr, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'impl'
Looking for corresponding Variable
Current function: fallback

Begin Factory.find_delegate_variable_from_name
Searching for impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking owner (Slither line:1689)
Checking nextOwner (Slither line:1689)
Checking implementation (Slither line:1689)
Checking exchangeImplementation (Slither line:1689)
Checking WETH (Slither line:1689)
Checking mesh (Slither line:1689)
Checking router (Slither line:1689)
Checking pools (Slither line:1689)
Checking poolExist (Slither line:1689)
Checking tokenToPool (Slither line:1689)
Checking createFee (Slither line:1689)
Checking entered (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking impl (Slither line:1703)
impl is a Local Variable in Factory.fallback (Slither line:1707)
Expression: implementation (Slither line:1719)
Identifier value: implementation (Slither line:1725)
implementation is a State Variable in contract Factory (Slither line:1730)

End Factory.find_delegate_variable_by_name


End Factory.find_delegatecall_in_asm (Slither line:1637)


End Factory.is_proxy (Slither line:1476)


Begin Factory.is_upgradeable_proxy (Slither line:1136)

Checking contract: Factory 
Factory is delegating to implementation
Looking for setter (Slither line:1200)


Begin Factory.find_setter_in_contract (Slither line:3119)

Checking function: constructor(address,address,address,address) returns() (Slither line:3127)
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: public
require(bool)(implementation != _newImp)
implementation = _newImp
is an Assignment Operation (Slither line:3216)

End Factory.find_setter_in_contract (Slither line:3345)


Implementation set by function: _setImplementation in contract: Factory (Slither line:1264)
Looking for getter (Slither line:1273)


Begin Factory.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
_newImp
Checking function: constructor (Slither line:2988)
Checking function: _setImplementation (Slither line:2988)
Checking function: _setExchangeImplementation (Slither line:2988)
Checking function: getExchangeImplementation (Slither line:2988)
getExchangeImplementation returns address variable  (Slither line:3008)
RETURN node expression: exchangeImplementation (Slither line:3028)
Checking function: fallback (Slither line:2988)

End Factory.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in Factory (Slither line:1305)
Checking for implementation at slot 2 in contract Exchange (Slither line:1355)
Found decimals at slot 2 in contract Exchange (Slither line:1362)
Checking for decimals at slot 2 in contract FactoryImpl (Slither line:1355)
Found implementation at slot 2 in contract FactoryImpl (Slither line:1362)

Begin FactoryImpl.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
_newImp
Checking function: constructor (Slither line:2988)
Checking function: _setImplementation (Slither line:2988)
Checking function: _setExchangeImplementation (Slither line:2988)
Checking function: getExchangeImplementation (Slither line:2988)
getExchangeImplementation returns address variable  (Slither line:3008)
RETURN node expression: exchangeImplementation (Slither line:3028)
Checking function: fallback (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: version (Slither line:2988)
version returns string variable  (Slither line:3008)
RETURN node expression: FactoryImpl20220322 (Slither line:3028)
Checking function: changeNextOwner (Slither line:2988)
Checking function: changeOwner (Slither line:2988)
Checking function: changeCreateFee (Slither line:2988)
Checking function: changePoolFee (Slither line:2988)
Checking function: setRouter (Slither line:2988)
Checking function: createPool (Slither line:2988)
Checking function: createETHPool (Slither line:2988)
Checking function: createTokenPool (Slither line:2988)
Checking function: getPoolCount (Slither line:2988)
getPoolCount returns uint256 variable  (Slither line:3008)
RETURN node expression: pools.length (Slither line:3028)
Checking function: getPoolAddress (Slither line:2988)
getPoolAddress returns address variable  (Slither line:3008)
RETURN node expression: pools[idx] (Slither line:3028)
Checking function: getPair (Slither line:2988)
getPair returns address variable called pair (Slither line:3008)
RETURN node expression: tokenToPool[tokenA][tokenB] (Slither line:3028)
Checking function: allPairsLength (Slither line:2988)
allPairsLength returns uint256 variable  (Slither line:3008)
RETURN node expression: getPoolCount() (Slither line:3028)
Checking function: allPairs (Slither line:2988)
allPairs returns address variable called pair (Slither line:3008)
Checking function: fallback (Slither line:2988)

End FactoryImpl.find_getter_in_contract (Slither line:3083)

Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function _setExchangeImplementation
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function _setExchangeImplementation
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function getExchangeImplementation
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function Factory.getExchangeImplementation (proxy_features line:898)
functions_writing_to_variable: checking function Factory._setExchangeImplementation (proxy_features line:898)
functions_writing_to_variable: checking function Factory._setImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool)(msg.sender == owner) (proxy_features line:909)
functions_writing_to_variable: exp = require(bool)(implementation != _newImp) (proxy_features line:909)
functions_writing_to_variable: exp = implementation = _newImp (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = _newImp (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = _newImp
functions_writing_to_variable: _setImplementation writes _newImp to implementation (proxy_features line:929)
functions_writing_to_variable: checking function Factory.constructor (proxy_features line:898)
functions_writing_to_variable: exp = owner = msg.sender (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: owner = msg.sender (proxy_features line:912)
functions_writing_to_variable: exp = implementation = _implementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = _implementation (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = _implementation
functions_writing_to_variable: exp = mesh = _mesh (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: mesh = _mesh (proxy_features line:912)
functions_writing_to_variable: exp = exchangeImplementation = _exchangeImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: exchangeImplementation = _exchangeImplementation (proxy_features line:912)
functions_writing_to_variable: exp = WETH = _WETH (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: WETH = _WETH (proxy_features line:912)
functions_writing_to_variable: constructor writes _implementation to implementation (proxy_features line:929)
functions_writing_to_variable: checking function Factory.fallback (proxy_features line:898)
has_compatibility_checks: dependencies: ['TMP_63', '_implementation', '_newImp']
has_compatibility_checks: checking public function _setImplementation
require(bool)(implementation != _newImp)
has_compatibility_checks: condition implementation != _newImp
check_condition_from_expression: condition _newImp != _newImp
require(bool)(msg.sender == owner)
has_compatibility_checks: condition msg.sender == owner
has_compatibility_checks: skipping constructor
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    let ptr := mload(0x40)
    calldatacopy(ptr, 0, calldatasize())
    let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)
    let size := returndatasize()
    returndatacopy(ptr, 0, size)
    switch result
    case 0 {
        revert(ptr, size)
    }
    default {
        return(ptr, size)
    }
}
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: impl = implementation
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool)(impl != address(0))
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: constructor
Found public function: _setImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(implementation != _newImp)
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = _newImp
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(msg.sender == owner)

Begin IExchange.is_proxy (Slither line:1425)


End IExchange.is_proxy (Slither line:1428)


Begin IExchange.is_upgradeable_proxy (Slither line:1136)

Checking contract: IExchange 

End IExchange.is_upgradeable_proxy (Slither line:1407)


Begin IWETH.is_proxy (Slither line:1425)


End IWETH.is_proxy (Slither line:1428)


Begin IWETH.is_upgradeable_proxy (Slither line:1136)

Checking contract: IWETH 

End IWETH.is_upgradeable_proxy (Slither line:1407)


Begin IRouter.is_proxy (Slither line:1425)


End IRouter.is_proxy (Slither line:1428)


Begin IRouter.is_upgradeable_proxy (Slither line:1136)

Checking contract: IRouter 

End IRouter.is_upgradeable_proxy (Slither line:1407)


Begin FactoryImpl.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin FactoryImpl.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let ptr := mload(0x40) (Slither line:1576)
    calldatacopy(ptr, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'impl'
Looking for corresponding Variable
Current function: fallback

Begin FactoryImpl.find_delegate_variable_from_name
Searching for impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking owner (Slither line:1689)
Checking nextOwner (Slither line:1689)
Checking implementation (Slither line:1689)
Checking exchangeImplementation (Slither line:1689)
Checking WETH (Slither line:1689)
Checking mesh (Slither line:1689)
Checking router (Slither line:1689)
Checking pools (Slither line:1689)
Checking poolExist (Slither line:1689)
Checking tokenToPool (Slither line:1689)
Checking createFee (Slither line:1689)
Checking entered (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking impl (Slither line:1703)
impl is a Local Variable in FactoryImpl.fallback (Slither line:1707)
Expression: implementation (Slither line:1719)
Identifier value: implementation (Slither line:1725)
implementation is a State Variable in contract Factory (Slither line:1730)

End FactoryImpl.find_delegate_variable_by_name


End FactoryImpl.find_delegatecall_in_asm (Slither line:1637)


End FactoryImpl.is_proxy (Slither line:1476)


Begin FactoryImpl.is_upgradeable_proxy (Slither line:1136)

Checking contract: FactoryImpl 
FactoryImpl is delegating to implementation
Looking for setter (Slither line:1200)

Looking for setter in Factory (Slither line:1204)


Begin Factory.find_setter_in_contract (Slither line:3119)

Expression: _newImp (Slither line:3122)
Checking function: constructor(address,address,address,address) returns() (Slither line:3127)
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: public
require(bool)(implementation != _newImp)
implementation = _newImp
is an Assignment Operation (Slither line:3216)
_newImp

End Factory.find_setter_in_contract (Slither line:3345)


Implementation set by function: _setImplementation in contract: Factory (Slither line:1264)
Looking for getter (Slither line:1273)


Begin Factory.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
_newImp
Checking function: constructor (Slither line:2988)
Checking function: _setImplementation (Slither line:2988)
Checking function: _setExchangeImplementation (Slither line:2988)
Checking function: getExchangeImplementation (Slither line:2988)
getExchangeImplementation returns address variable  (Slither line:3008)
RETURN node expression: exchangeImplementation (Slither line:3028)
Checking function: fallback (Slither line:2988)

End Factory.find_getter_in_contract (Slither line:3083)


Begin FactoryImpl.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
_newImp
Checking function: constructor (Slither line:2988)
Checking function: _setImplementation (Slither line:2988)
Checking function: _setExchangeImplementation (Slither line:2988)
Checking function: getExchangeImplementation (Slither line:2988)
getExchangeImplementation returns address variable  (Slither line:3008)
RETURN node expression: exchangeImplementation (Slither line:3028)
Checking function: fallback (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: version (Slither line:2988)
version returns string variable  (Slither line:3008)
RETURN node expression: FactoryImpl20220322 (Slither line:3028)
Checking function: changeNextOwner (Slither line:2988)
Checking function: changeOwner (Slither line:2988)
Checking function: changeCreateFee (Slither line:2988)
Checking function: changePoolFee (Slither line:2988)
Checking function: setRouter (Slither line:2988)
Checking function: createPool (Slither line:2988)
Checking function: createETHPool (Slither line:2988)
Checking function: createTokenPool (Slither line:2988)
Checking function: getPoolCount (Slither line:2988)
getPoolCount returns uint256 variable  (Slither line:3008)
RETURN node expression: pools.length (Slither line:3028)
Checking function: getPoolAddress (Slither line:2988)
getPoolAddress returns address variable  (Slither line:3008)
RETURN node expression: pools[idx] (Slither line:3028)
Checking function: getPair (Slither line:2988)
getPair returns address variable called pair (Slither line:3008)
RETURN node expression: tokenToPool[tokenA][tokenB] (Slither line:3028)
Checking function: allPairsLength (Slither line:2988)
allPairsLength returns uint256 variable  (Slither line:3008)
RETURN node expression: getPoolCount() (Slither line:3028)
Checking function: allPairs (Slither line:2988)
allPairs returns address variable called pair (Slither line:3008)
Checking function: fallback (Slither line:2988)

End FactoryImpl.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in FactoryImpl (Slither line:1305)
or in Factory (Slither line:1319)
Checking for implementation at slot 2 in contract Exchange (Slither line:1355)
Found decimals at slot 2 in contract Exchange (Slither line:1362)
Checking for decimals at slot 2 in contract Factory (Slither line:1355)
Found implementation at slot 2 in contract Factory (Slither line:1362)

Begin Factory.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
_newImp
Checking function: constructor (Slither line:2988)
Checking function: _setImplementation (Slither line:2988)
Checking function: _setExchangeImplementation (Slither line:2988)
Checking function: getExchangeImplementation (Slither line:2988)
getExchangeImplementation returns address variable  (Slither line:3008)
RETURN node expression: exchangeImplementation (Slither line:3028)
Checking function: fallback (Slither line:2988)

End Factory.find_getter_in_contract (Slither line:3083)

impl_address_from_contract_call: _newImp
impl_address_from_contract_call: StateVariable implementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression require(bool)(impl != address(0))
impl_address_from_contract_call: arg is impl != address(0)
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function _setExchangeImplementation
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function _setExchangeImplementation
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function getExchangeImplementation
Checking public function version
Checking public function changeNextOwner
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function changeOwner
Found 'msg.sender ==' in expression: require(bool)(msg.sender == nextOwner)
Checking public function changeCreateFee
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function changePoolFee
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function setRouter
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function createETHPool
Checking public function createTokenPool
Checking public function getPoolCount
Checking public function getPoolAddress
Checking public function getPair
Checking external function allPairsLength
Checking external function allPairs
Checking external function fallback
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function FactoryImpl.fallback (proxy_features line:898)
functions_writing_to_variable: checking function FactoryImpl.allPairs (proxy_features line:898)
functions_writing_to_variable: checking function FactoryImpl.version (proxy_features line:898)
functions_writing_to_variable: checking function Factory.getExchangeImplementation (proxy_features line:898)
functions_writing_to_variable: checking function FactoryImpl.createETHPool (proxy_features line:898)
functions_writing_to_variable: checking function FactoryImpl.fallback (proxy_features line:898)
functions_writing_to_variable: checking function FactoryImpl.changeNextOwner (proxy_features line:898)
functions_writing_to_variable: checking function Factory.fallback (proxy_features line:898)
functions_writing_to_variable: checking function FactoryImpl.createTokenPool (proxy_features line:898)
functions_writing_to_variable: checking function FactoryImpl.changeOwner (proxy_features line:898)
functions_writing_to_variable: checking function FactoryImpl.getPoolCount (proxy_features line:898)
functions_writing_to_variable: checking function FactoryImpl.constructor (proxy_features line:898)
functions_writing_to_variable: exp = owner = msg.sender (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: owner = msg.sender (proxy_features line:912)
functions_writing_to_variable: exp = implementation = _implementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = _implementation (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = _implementation
functions_writing_to_variable: exp = mesh = _mesh (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: mesh = _mesh (proxy_features line:912)
functions_writing_to_variable: exp = exchangeImplementation = _exchangeImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: exchangeImplementation = _exchangeImplementation (proxy_features line:912)
functions_writing_to_variable: exp = WETH = _WETH (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: WETH = _WETH (proxy_features line:912)
functions_writing_to_variable: constructor writes _implementation to implementation (proxy_features line:929)
functions_writing_to_variable: checking function FactoryImpl.changeCreateFee (proxy_features line:898)
functions_writing_to_variable: checking function FactoryImpl._setExchangeImplementation (proxy_features line:898)
functions_writing_to_variable: checking function FactoryImpl.getPoolAddress (proxy_features line:898)
functions_writing_to_variable: checking function FactoryImpl.changePoolFee (proxy_features line:898)
functions_writing_to_variable: checking function Factory._setImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool)(msg.sender == owner) (proxy_features line:909)
functions_writing_to_variable: exp = require(bool)(implementation != _newImp) (proxy_features line:909)
functions_writing_to_variable: exp = implementation = _newImp (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = _newImp (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = _newImp
functions_writing_to_variable: _setImplementation writes _newImp to implementation (proxy_features line:929)
functions_writing_to_variable: checking function FactoryImpl.getPair (proxy_features line:898)
functions_writing_to_variable: checking function FactoryImpl.getExchangeImplementation (proxy_features line:898)
functions_writing_to_variable: checking function FactoryImpl.setRouter (proxy_features line:898)
functions_writing_to_variable: checking function FactoryImpl.allPairsLength (proxy_features line:898)
functions_writing_to_variable: checking function Factory._setExchangeImplementation (proxy_features line:898)
functions_writing_to_variable: checking function FactoryImpl.constructor (proxy_features line:898)
get_value_assigned: implementation = _implementation
functions_writing_to_variable: constructor writes _implementation to implementation (proxy_features line:1013)
functions_writing_to_variable: checking function Factory.constructor (proxy_features line:898)
functions_writing_to_variable: exp = owner = msg.sender (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: owner = msg.sender (proxy_features line:912)
functions_writing_to_variable: exp = implementation = _implementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = _implementation (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = _implementation
functions_writing_to_variable: exp = mesh = _mesh (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: mesh = _mesh (proxy_features line:912)
functions_writing_to_variable: exp = exchangeImplementation = _exchangeImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: exchangeImplementation = _exchangeImplementation (proxy_features line:912)
functions_writing_to_variable: exp = WETH = _WETH (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: WETH = _WETH (proxy_features line:912)
functions_writing_to_variable: constructor writes _implementation to implementation (proxy_features line:929)
functions_writing_to_variable: checking function FactoryImpl._setImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool)(msg.sender == owner) (proxy_features line:909)
functions_writing_to_variable: exp = require(bool)(implementation != _newImp) (proxy_features line:909)
functions_writing_to_variable: exp = implementation = _newImp (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = _newImp (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = _newImp
functions_writing_to_variable: _setImplementation writes _newImp to implementation (proxy_features line:929)
functions_writing_to_variable: checking function FactoryImpl.createPool (proxy_features line:898)
has_compatibility_checks: dependencies: ['_implementation', '_implementation', '_newImp', 'TMP_63', '_newImp']
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking public function _setImplementation
require(bool)(implementation != _newImp)
has_compatibility_checks: condition implementation != _newImp
check_condition_from_expression: condition _newImp != _newImp
require(bool)(msg.sender == owner)
has_compatibility_checks: condition msg.sender == owner
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking public function _setImplementation
require(bool)(implementation != _newImp)
has_compatibility_checks: condition implementation != _newImp
check_condition_from_expression: condition _newImp != _newImp
require(bool)(msg.sender == owner)
has_compatibility_checks: condition msg.sender == owner
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    let ptr := mload(0x40)
    calldatacopy(ptr, 0, calldatasize())
    let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)
    let size := returndatasize()
    returndatacopy(ptr, 0, size)
    switch result
    case 0 {
        revert(ptr, size)
    }
    default {
        return(ptr, size)
    }
}
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: impl = implementation
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool)(impl != address(0))
Found public function: constructor
Found public function: _setImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(implementation != _newImp)
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = _newImp
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(msg.sender == owner)
