{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "FactoryProxy (../../smart-contract-sanctuary/polygon/contracts/mainnet/proxies/0.5.6/504722a6Eabb3D1573BaDa9aBD585Ae177D52E7A_FactoryProxy.sol/504722a6Eabb3D1573BaDa9aBD585Ae177D52E7A_FactoryProxy.sol#12-118)",
        "elements": [],
        "description": "FactoryProxy (../../smart-contract-sanctuary/polygon/contracts/mainnet/proxies/0.5.6/504722a6Eabb3D1573BaDa9aBD585Ae177D52E7A_FactoryProxy.sol/504722a6Eabb3D1573BaDa9aBD585Ae177D52E7A_FactoryProxy.sol#12-118) is an upgradeable proxy.\n_IMPLEMENTATION_SLOT is declared in the proxy.\n uses Unstructured Storage\n implements EIP-1967\nFound compatibility checks in all upgrade functions.\n",
        "id": "7022a6b943b71f7dae125d1524a77e9e7fdae33c8a20970717b35db70c65b1db",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "FactoryProxy._IMPLEMENTATION_SLOT",
          "impl_address_setter": "FactoryProxy.upgradeTo(address,string)",
          "impl_address_getter": "FactoryProxy._implementation()",
          "impl_address_location": "FactoryProxy (../../smart-contract-sanctuary/polygon/contracts/mainnet/proxies/0.5.6/504722a6Eabb3D1573BaDa9aBD585Ae177D52E7A_FactoryProxy.sol/504722a6Eabb3D1573BaDa9aBD585Ae177D52E7A_FactoryProxy.sol#12-118)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "unstructured_storage": true,
          "eip_1967": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "FactoryProxy.upgradeTo(address,string)": {
                "check": "require(bool)(keccak256(bytes)(abi.encodePacked(IConstructor(newImplementation).version())) == keccak256(bytes)(abi.encodePacked(version)))",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "implementation()",
              "Owner()",
              "changeOwner(address)",
              "upgradeTo(address,string)"
            ]
          }
        }
      }
    ]
  }
}