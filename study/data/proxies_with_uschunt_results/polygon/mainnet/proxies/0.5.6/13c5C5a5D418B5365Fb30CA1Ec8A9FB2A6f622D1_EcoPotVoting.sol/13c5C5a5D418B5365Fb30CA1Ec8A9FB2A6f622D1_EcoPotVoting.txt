
Begin EcoPotVoting.is_proxy (Slither line:1425)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin EcoPotVoting.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let ptr := mload(0x40) (Slither line:1576)
    calldatacopy(ptr, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'impl'
Looking for corresponding Variable
Current function: fallback

Begin EcoPotVoting.find_delegate_variable_from_name
Searching for impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking MAX_VOTING_POT_COUNT (Slither line:1689)
Checking ecoPotList (Slither line:1689)
Checking ecoPotExist (Slither line:1689)
Checking userVotingPotAddress (Slither line:1689)
Checking userVotingPotAmount (Slither line:1689)
Checking userVotingPotCount (Slither line:1689)
Checking potTotalVotedAmount (Slither line:1689)
Checking ecoPotCount (Slither line:1689)
Checking governance (Slither line:1689)
Checking implementation (Slither line:1689)
Checking ecoPotImplementation (Slither line:1689)
Checking owner (Slither line:1689)
Checking nextOwner (Slither line:1689)
Checking entered (Slither line:1689)
Checking policyAdmin (Slither line:1689)
Checking operatorToEcoPot (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking impl (Slither line:1703)
impl is a Local Variable in EcoPotVoting.fallback (Slither line:1707)
Expression: implementation (Slither line:1719)
Identifier value: implementation (Slither line:1725)
implementation is a State Variable in contract EcoPotVoting (Slither line:1730)

End EcoPotVoting.find_delegate_variable_by_name


End EcoPotVoting.find_delegatecall_in_asm (Slither line:1637)


End EcoPotVoting.is_proxy (Slither line:1476)


Begin EcoPotVoting.is_upgradeable_proxy (Slither line:1136)

Checking contract: EcoPotVoting 
EcoPotVoting is delegating to implementation
Looking for setter (Slither line:1200)


Begin EcoPotVoting.find_setter_in_contract (Slither line:3119)

Checking function: constructor(address,address,address,address) returns() (Slither line:3127)
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: public
require(bool)(msg.sender == owner)
require(bool)(implementation != _newImp)
implementation = _newImp
is an Assignment Operation (Slither line:3216)

End EcoPotVoting.find_setter_in_contract (Slither line:3345)


Implementation set by function: _setImplementation in contract: EcoPotVoting (Slither line:1264)
Looking for getter (Slither line:1273)


Begin EcoPotVoting.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
_newImp
Checking function: constructor (Slither line:2988)
Checking function: _setImplementation (Slither line:2988)
Checking function: _setEcoPotImplementation (Slither line:2988)
Checking function: getEcoPotImplementation (Slither line:2988)
getEcoPotImplementation returns address variable  (Slither line:3008)
RETURN node expression: ecoPotImplementation (Slither line:3028)
Checking function: fallback (Slither line:2988)
Checking function: slitherConstructorVariables (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End EcoPotVoting.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in EcoPotVoting (Slither line:1305)

End EcoPotVoting.is_upgradeable_proxy (Slither line:1407)

Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function _setEcoPotImplementation
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function _setEcoPotImplementation
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function getEcoPotImplementation
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function EcoPotVoting._setEcoPotImplementation (proxy_features line:898)
functions_writing_to_variable: checking function EcoPotVoting.getEcoPotImplementation (proxy_features line:898)
functions_writing_to_variable: checking function EcoPotVoting.constructor (proxy_features line:898)
functions_writing_to_variable: exp = owner = _owner (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: owner = _owner (proxy_features line:912)
functions_writing_to_variable: exp = implementation = _implementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = _implementation (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = _implementation
functions_writing_to_variable: exp = ecoPotImplementation = _ecoPotImpl (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: ecoPotImplementation = _ecoPotImpl (proxy_features line:912)
functions_writing_to_variable: exp = governance = _governance (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: governance = _governance (proxy_features line:912)
functions_writing_to_variable: constructor writes _implementation to implementation (proxy_features line:929)
functions_writing_to_variable: checking function EcoPotVoting.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function EcoPotVoting._setImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool)(msg.sender == owner) (proxy_features line:909)
functions_writing_to_variable: exp = require(bool)(implementation != _newImp) (proxy_features line:909)
functions_writing_to_variable: exp = implementation = _newImp (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = _newImp (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = _newImp
functions_writing_to_variable: _setImplementation writes _newImp to implementation (proxy_features line:929)
functions_writing_to_variable: checking function EcoPotVoting.fallback (proxy_features line:898)
functions_writing_to_variable: checking function EcoPotVoting.slitherConstructorVariables (proxy_features line:898)
has_compatibility_checks: dependencies: ['_implementation', '_newImp']
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking public function _setImplementation
require(bool)(msg.sender == owner)
has_compatibility_checks: condition msg.sender == owner
require(bool)(implementation != _newImp)
has_compatibility_checks: condition implementation != _newImp
check_condition_from_expression: condition _newImp != _newImp
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    let ptr := mload(0x40)
    calldatacopy(ptr, 0, calldatasize())
    let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)
    let size := returndatasize()
    returndatacopy(ptr, 0, size)
    switch result
    case 0 {
        revert(ptr, size)
    }
    default {
        return(ptr, size)
    }
}
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: impl = implementation
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool)(impl != address(0))
Found public function: constructor
Found public function: _setImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(msg.sender == owner)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(implementation != _newImp)
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = _newImp
