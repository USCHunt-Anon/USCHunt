
Begin IProxy.is_proxy (Slither line:1425)


End IProxy.is_proxy (Slither line:1428)


Begin IProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: IProxy 

End IProxy.is_upgradeable_proxy (Slither line:1407)


Begin GnosisSafeProxy.is_proxy (Slither line:1425)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin GnosisSafeProxy.find_delegatecall_in_exp_node

Found Expression Node: _singleton_fallback_asm_0 = sload(uint256)(0) & 0xffffffffffffffffffffffffffffffffffffffff (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)

End GnosisSafeProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin GnosisSafeProxy.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(0,returndatasize()()) (Slither line:2802)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
returndatasize()()

End GnosisSafeProxy.find_delegatecall_in_exp_node (Slither line:2858)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin GnosisSafeProxy.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(0,returndatasize()()) (Slither line:2802)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
returndatasize()()

End GnosisSafeProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin GnosisSafeProxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:2802)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
0
returndatasize()()

End GnosisSafeProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin GnosisSafeProxy.find_delegatecall_in_exp_node

Found Expression Node: success_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_singleton_fallback_asm_0,0,calldatasize()(),0,0) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2817)
Args:
gas()()
_singleton_fallback_asm_0
0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2824)

Destination is _singleton_fallback_asm_0 (Slither line:2828)
dest.value: _singleton_fallback_asm_0 (Slither line:2831)
Expression: None (Slither line:2836)

Begin GnosisSafeProxy.find_delegate_variable_from_name
Searching for _singleton_fallback_asm_0 (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking singleton (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
fallback contains assembly, searching for sload (Slither line:1875)

End GnosisSafeProxy.find_delegate_variable_from_name (Slither line:1949)


End GnosisSafeProxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin GnosisSafeProxy.find_delegatecall_in_exp_node

Found Expression Node: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:2802)
Expression called: calldatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
0
calldatasize()()

End GnosisSafeProxy.find_delegatecall_in_exp_node (Slither line:2858)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin GnosisSafeProxy.find_delegatecall_in_exp_node

Found Expression Node: mstore(uint256,uint256)(0,_singleton_fallback_asm_0) (Slither line:2802)
Expression called: mstore(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
_singleton_fallback_asm_0

End GnosisSafeProxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin GnosisSafeProxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called '_singleton'
Looking for corresponding Variable
Current function: fallback

Begin GnosisSafeProxy.find_delegate_variable_from_name
Searching for _singleton (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking singleton (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
fallback contains assembly, searching for sload (Slither line:1875)
{'kind': 'number', 'nodeType': 'YulLiteral', 'src': '1462:1:0', 'type': '', 'value': '0'} (Slither line:1909)
Found sload(0), getting first state variable

End GnosisSafeProxy.find_delegate_variable_from_name (Slither line:1949)


End GnosisSafeProxy.find_delegatecall_in_asm (Slither line:1637)


End GnosisSafeProxy.is_proxy (Slither line:1476)


Begin GnosisSafeProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: GnosisSafeProxy 
GnosisSafeProxy is delegating to singleton
Looking for setter (Slither line:1200)


Begin GnosisSafeProxy.find_setter_in_contract (Slither line:3119)

Checking function: constructor(address) returns() (Slither line:3127)
Checking function: fallback() returns() (Slither line:3127)

End GnosisSafeProxy.find_setter_in_contract (Slither line:3345)


Could not find implementation setter in GnosisSafeProxy (Slither line:1269)
Looking for getter (Slither line:1273)


Begin GnosisSafeProxy.find_getter_in_contract (Slither line:2974)

singleton is a Variable object
Checking function: constructor (Slither line:2988)
Checking function: fallback (Slither line:2988)

End GnosisSafeProxy.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in GnosisSafeProxy (Slither line:1305)
Checking for singleton at slot 0 in contract ModuleManager (Slither line:1355)
Found SENTINEL_MODULES at slot 0 in contract ModuleManager (Slither line:1362)
Checking for SENTINEL_MODULES at slot 0 in contract OwnerManager (Slither line:1355)
Found SENTINEL_OWNERS at slot 0 in contract OwnerManager (Slither line:1362)
Checking for SENTINEL_OWNERS at slot 0 in contract FallbackManager (Slither line:1355)
Found FALLBACK_HANDLER_STORAGE_SLOT at slot 0 in contract FallbackManager (Slither line:1362)
Checking for FALLBACK_HANDLER_STORAGE_SLOT at slot 0 in contract GuardManager (Slither line:1355)
Found GUARD_STORAGE_SLOT at slot 0 in contract GuardManager (Slither line:1362)
Checking for GUARD_STORAGE_SLOT at slot 0 in contract Singleton (Slither line:1355)
Found singleton at slot 0 in contract Singleton (Slither line:1362)

Begin Singleton.find_getter_in_contract (Slither line:2974)

singleton is a Variable object

End Singleton.find_getter_in_contract (Slither line:3083)


Begin Singleton.find_setter_in_contract (Slither line:3119)


End Singleton.find_setter_in_contract (Slither line:3345)

Checking for singleton at slot 0 in contract ISignatureValidatorConstants (Slither line:1355)
Found EIP1271_MAGIC_VALUE at slot 0 in contract ISignatureValidatorConstants (Slither line:1362)
Checking for EIP1271_MAGIC_VALUE at slot 0 in contract ISignatureValidator (Slither line:1355)
Found EIP1271_MAGIC_VALUE at slot 0 in contract ISignatureValidator (Slither line:1362)
Checking for EIP1271_MAGIC_VALUE at slot 0 in contract GnosisSafe (Slither line:1355)
Found singleton at slot 0 in contract GnosisSafe (Slither line:1362)

Begin GnosisSafe.find_getter_in_contract (Slither line:2974)

singleton is a Variable object
Checking function: setGuard (Slither line:2988)
Checking function: getGuard (Slither line:2988)
getGuard returns address variable called guard (Slither line:3008)
Checking function: requireSelfCall (Slither line:2988)
Checking function: getStorageAt (Slither line:2988)
getStorageAt returns bytes variable  (Slither line:3008)
RETURN node expression: result (Slither line:3028)
Checking function: simulateAndRevert (Slither line:2988)
Checking function: internalSetFallbackHandler (Slither line:2988)
Checking function: setFallbackHandler (Slither line:2988)
Checking function: fallback (Slither line:2988)
Checking function: transferToken (Slither line:2988)
transferToken returns bool variable called transferred (Slither line:3008)
Checking function: signatureSplit (Slither line:2988)
signatureSplit returns uint8 variable called v (Slither line:3008)
signatureSplit returns bytes32 variable called r (Slither line:3008)
signatureSplit returns bytes32 variable called s (Slither line:3008)
Checking function: setupOwners (Slither line:2988)
Checking function: addOwnerWithThreshold (Slither line:2988)
Checking function: removeOwner (Slither line:2988)
Checking function: swapOwner (Slither line:2988)
Checking function: changeThreshold (Slither line:2988)
Checking function: getThreshold (Slither line:2988)
getThreshold returns uint256 variable  (Slither line:3008)
RETURN node expression: threshold (Slither line:3028)
Checking function: isOwner (Slither line:2988)
isOwner returns bool variable  (Slither line:3008)
RETURN node expression: owner != SENTINEL_OWNERS && owners[owner] != address(0) (Slither line:3028)
Checking function: getOwners (Slither line:2988)
getOwners returns address[] variable  (Slither line:3008)
RETURN node expression: array (Slither line:3028)
Checking function: setupModules (Slither line:2988)
Checking function: enableModule (Slither line:2988)
Checking function: disableModule (Slither line:2988)
Checking function: execTransactionFromModule (Slither line:2988)
execTransactionFromModule returns bool variable called success (Slither line:3008)
Checking function: execTransactionFromModuleReturnData (Slither line:2988)
execTransactionFromModuleReturnData returns bool variable called success (Slither line:3008)
execTransactionFromModuleReturnData returns bytes variable called returnData (Slither line:3008)
Checking function: isModuleEnabled (Slither line:2988)
isModuleEnabled returns bool variable  (Slither line:3008)
RETURN node expression: SENTINEL_MODULES != module && modules[module] != address(0) (Slither line:3028)
Checking function: getModulesPaginated (Slither line:2988)
getModulesPaginated returns address[] variable called array (Slither line:3008)
getModulesPaginated returns address variable called next (Slither line:3008)
Checking function: execute (Slither line:2988)
execute returns bool variable called success (Slither line:3008)
Checking function: receive (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: setup (Slither line:2988)
Checking function: execTransaction (Slither line:2988)
execTransaction returns bool variable called success (Slither line:3008)
Checking function: handlePayment (Slither line:2988)
handlePayment returns uint256 variable called payment (Slither line:3008)
Checking function: checkSignatures (Slither line:2988)
Checking function: checkNSignatures (Slither line:2988)
Checking function: requiredTxGas (Slither line:2988)
requiredTxGas returns uint256 variable  (Slither line:3008)
Checking function: approveHash (Slither line:2988)
Checking function: getChainId (Slither line:2988)
getChainId returns uint256 variable  (Slither line:3008)
RETURN node expression: id (Slither line:3028)
Checking function: domainSeparator (Slither line:2988)
domainSeparator returns bytes32 variable  (Slither line:3008)
RETURN node expression: keccak256(bytes)(abi.encode(DOMAIN_SEPARATOR_TYPEHASH,getChainId(),this)) (Slither line:3028)
Checking function: encodeTransactionData (Slither line:2988)
encodeTransactionData returns bytes variable  (Slither line:3008)
RETURN node expression: abi.encodePacked(bytes1(0x19),bytes1(0x01),domainSeparator(),safeTxHash) (Slither line:3028)
Checking function: getTransactionHash (Slither line:2988)
getTransactionHash returns bytes32 variable  (Slither line:3008)
RETURN node expression: keccak256(bytes)(encodeTransactionData(to,value,data,operation,safeTxGas,baseGas,gasPrice,gasToken,refundReceiver,_nonce)) (Slither line:3028)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End GnosisSafe.find_getter_in_contract (Slither line:3083)


Begin GnosisSafe.find_setter_in_contract (Slither line:3119)

Checking function: constructor() returns() (Slither line:3127)
Checking function: setup(address[],uint256,address,bytes,address,address,uint256,address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(execute(to,0,data,Enum.Operation.DelegateCall,gasleft()()),GS000)
require(bool,string)(threshold == 0,GS200)
require(bool,string)(_threshold <= _owners.length,GS201)
require(bool,string)(_threshold >= 1,GS202)
success = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(txGas,to,data + 0x20,mload(uint256)(data),0,0)
is an Assignment Operation (Slither line:3216)
require(bool)(c >= a)
c
success = call(uint256,uint256,uint256,uint256,uint256,uint256,uint256)(txGas,to,value,data + 0x20,mload(uint256)(data),0,0)
is an Assignment Operation (Slither line:3216)
require(bool,string)(receiver.send(payment),GS011)
i ++
require(bool,string)(owner != address(0) && owner != SENTINEL_OWNERS && owner != address(this) && currentOwner != owner,GS203)
require(bool,string)(owners[owner] == address(0),GS204)
setupOwners(_owners,_threshold)
owners[currentOwner] = owner
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(modules[SENTINEL_MODULES] == address(0),GS100)
currentOwner = owner
is an Assignment Operation (Slither line:3216)
modules[SENTINEL_MODULES] = SENTINEL_MODULES
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
owners[currentOwner] = SENTINEL_OWNERS
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
internalSetFallbackHandler(fallbackHandler)
payment = gasUsed.add(baseGas).mul(gasPrice)
is an Assignment Operation (Slither line:3216)
ownerCount = _owners.length
is an Assignment Operation (Slither line:3216)
success_transferToken_asm_0 = call(uint256,uint256,uint256,uint256,uint256,uint256,uint256)(gas()() - 10000,token,0,data + 0x20,mload(uint256)(data),0,0x20)
is an Assignment Operation (Slither line:3216)
setupModules(to,data)
threshold = _threshold
is an Assignment Operation (Slither line:3216)
SafeSetup(msg.sender,_owners,_threshold,to,fallbackHandler)
switch_expr_23836_317_0_transferToken_asm_0 = returndatasize()()
is an Assignment Operation (Slither line:3216)
handlePayment(payment,0,1,paymentToken,paymentReceiver)
0
receiver = address(tx.origin)
is an Assignment Operation (Slither line:3216)
receiver = refundReceiver
is an Assignment Operation (Slither line:3216)
transferred = success_transferToken_asm_0
is an Assignment Operation (Slither line:3216)
require(bool)(c / a == b)
c
sstore(uint256,uint256)(slot,handler)
sstore(uint256,uint256)
transferred = ! ! success_transferToken_asm_0 | ! mload(uint256)(0)
is an Assignment Operation (Slither line:3216)
transferred = 0
is an Assignment Operation (Slither line:3216)
require(bool,string)(transferToken(gasToken,receiver,payment),GS012)
payment = gasUsed.add(baseGas).mul(gasPrice)
is an Assignment Operation (Slither line:3216)
payment = gasUsed.add(baseGas).mul(tx.gasprice)
is an Assignment Operation (Slither line:3216)
Checking function: execTransaction(address,uint256,bytes,Enum.Operation,uint256,uint256,uint256,address,address,bytes) returns(bool) (Slither line:3127)
Visibility: public
c
require(bool,string)(uint256(s).add(32).add(contractSignatureLen) <= signatures.length,GS023)
signaturePos_signatureSplit_asm_0 = 0x41 * pos
is an Assignment Operation (Slither line:3216)
contractSignatureLen = mload(uint256)(signatures + s + 0x20)
is an Assignment Operation (Slither line:3216)
r = mload(uint256)(signatures + signaturePos_signatureSplit_asm_0 + 0x20)
is an Assignment Operation (Slither line:3216)
s = mload(uint256)(signatures + signaturePos_signatureSplit_asm_0 + 0x40)
is an Assignment Operation (Slither line:3216)
require(bool,string)(ISignatureValidator(currentOwner).isValidSignature(data,contractSignature) == EIP1271_MAGIC_VALUE,GS024)
v = mload(uint256)(signatures + signaturePos_signatureSplit_asm_0 + 0x41) & 0xff
is an Assignment Operation (Slither line:3216)
contractSignature = signatures + s + 0x20
is an Assignment Operation (Slither line:3216)
abi.encodePacked(bytes1(0x19),bytes1(0x01),domainSeparator(),safeTxHash)
lastOwner = currentOwner
is an Assignment Operation (Slither line:3216)
guard = sload(uint256)(slot)
is an Assignment Operation (Slither line:3216)
success = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(txGas,to,data + 0x20,mload(uint256)(data),0,0)
is an Assignment Operation (Slither line:3216)
currentOwner = address(uint160(uint256(r)))
is an Assignment Operation (Slither line:3216)
require(bool)(c >= a)
require(bool,string)(msg.sender == currentOwner || approvedHashes[currentOwner][dataHash] != 0,GS025)
c
id
success = call(uint256,uint256,uint256,uint256,uint256,uint256,uint256)(txGas,to,value,data + 0x20,mload(uint256)(data),0,0)
is an Assignment Operation (Slither line:3216)
require(bool,string)(receiver.send(payment),GS011)
id = chainid()()
is an Assignment Operation (Slither line:3216)
currentOwner = ecrecover(bytes32,uint8,bytes32,bytes32)(keccak256(bytes)(abi.encodePacked(Ethereum Signed Message:
32,dataHash)),v - 4,r,s)
is an Assignment Operation (Slither line:3216)
currentOwner = ecrecover(bytes32,uint8,bytes32,bytes32)(dataHash,v,r,s)
is an Assignment Operation (Slither line:3216)
keccak256(bytes)(abi.encode(DOMAIN_SEPARATOR_TYPEHASH,getChainId(),this))
payment = gasUsed.add(baseGas).mul(gasPrice)
is an Assignment Operation (Slither line:3216)
success_transferToken_asm_0 = call(uint256,uint256,uint256,uint256,uint256,uint256,uint256)(gas()() - 10000,token,0,data + 0x20,mload(uint256)(data),0,0x20)
is an Assignment Operation (Slither line:3216)
ExecutionSuccess(txHash,payment)
require(bool,string)(signatures.length >= requiredSignatures.mul(65),GS020)
ExecutionFailure(txHash,payment)
switch_expr_23836_317_0_transferToken_asm_0 = returndatasize()()
is an Assignment Operation (Slither line:3216)
0
nonce ++
a
Guard(guard).checkAfterExecution(txHash,success)
receiver = address(tx.origin)
is an Assignment Operation (Slither line:3216)
txHash = keccak256(bytes)(txHashData)
is an Assignment Operation (Slither line:3216)
b
receiver = refundReceiver
is an Assignment Operation (Slither line:3216)
checkNSignatures(dataHash,data,signatures,_threshold)
checkSignatures(txHash,txHashData,signatures)
transferred = success_transferToken_asm_0
is an Assignment Operation (Slither line:3216)
require(bool)(c / a == b)
c
require(bool,string)(gasleft()() >= ((safeTxGas * 64) / 63).max(safeTxGas + 2500) + 500,GS010)
transferred = ! ! success_transferToken_asm_0 | ! mload(uint256)(0)
is an Assignment Operation (Slither line:3216)
transferred = 0
is an Assignment Operation (Slither line:3216)
require(bool,string)(_threshold > 0,GS001)
Guard(guard).checkTransaction(to,value,data,operation,safeTxGas,baseGas,gasPrice,gasToken,refundReceiver,signatures,msg.sender)
i = 0
is an Assignment Operation (Slither line:3216)
require(bool,string)(transferToken(gasToken,receiver,payment),GS012)
success = execute(to,value,data,operation,(gasleft()() - 2500))
is an Assignment Operation (Slither line:3216)
success = execute(to,value,data,operation,safeTxGas)
is an Assignment Operation (Slither line:3216)
require(bool,string)(uint256(s).add(32) <= signatures.length,GS022)
payment = gasUsed.add(baseGas).mul(gasPrice)
is an Assignment Operation (Slither line:3216)
gasUsed = gasUsed.sub(gasleft()())
is an Assignment Operation (Slither line:3216)
i ++
payment = gasUsed.add(baseGas).mul(tx.gasprice)
is an Assignment Operation (Slither line:3216)
(v,r,s) = signatureSplit(signatures,i)
is an Assignment Operation (Slither line:3216)
require(bool,string)(success || safeTxGas != 0 || gasPrice != 0,GS013)
require(bool)(b <= a)
payment = handlePayment(gasUsed,baseGas,gasPrice,gasToken,refundReceiver)
is an Assignment Operation (Slither line:3216)
currentOwner = address(uint160(uint256(r)))
is an Assignment Operation (Slither line:3216)
require(bool,string)(currentOwner > lastOwner && owners[currentOwner] != address(0) && currentOwner != SENTINEL_OWNERS,GS026)
require(bool,string)(uint256(s) >= requiredSignatures.mul(65),GS021)
Checking function: handlePayment(uint256,uint256,uint256,address,address) returns(uint256) (Slither line:3127)
Visibility: private
Checking function: checkSignatures(bytes32,bytes,bytes) returns() (Slither line:3127)
Visibility: public
require(bool,string)(msg.sender == currentOwner || approvedHashes[currentOwner][dataHash] != 0,GS025)
require(bool)(c >= a)
c
require(bool,string)(_threshold > 0,GS001)
require(bool,string)(uint256(s).add(32).add(contractSignatureLen) <= signatures.length,GS023)
i = 0
is an Assignment Operation (Slither line:3216)
require(bool,string)(signatures.length >= requiredSignatures.mul(65),GS020)
signaturePos_signatureSplit_asm_0 = 0x41 * pos
is an Assignment Operation (Slither line:3216)
contractSignatureLen = mload(uint256)(signatures + s + 0x20)
is an Assignment Operation (Slither line:3216)
currentOwner = ecrecover(bytes32,uint8,bytes32,bytes32)(keccak256(bytes)(abi.encodePacked(Ethereum Signed Message:
32,dataHash)),v - 4,r,s)
is an Assignment Operation (Slither line:3216)
currentOwner = ecrecover(bytes32,uint8,bytes32,bytes32)(dataHash,v,r,s)
is an Assignment Operation (Slither line:3216)
i ++
r = mload(uint256)(signatures + signaturePos_signatureSplit_asm_0 + 0x20)
is an Assignment Operation (Slither line:3216)
(v,r,s) = signatureSplit(signatures,i)
is an Assignment Operation (Slither line:3216)
s = mload(uint256)(signatures + signaturePos_signatureSplit_asm_0 + 0x40)
is an Assignment Operation (Slither line:3216)
require(bool,string)(ISignatureValidator(currentOwner).isValidSignature(data,contractSignature) == EIP1271_MAGIC_VALUE,GS024)
0
v = mload(uint256)(signatures + signaturePos_signatureSplit_asm_0 + 0x41) & 0xff
is an Assignment Operation (Slither line:3216)
contractSignature = signatures + s + 0x20
is an Assignment Operation (Slither line:3216)
checkNSignatures(dataHash,data,signatures,_threshold)
require(bool,string)(currentOwner > lastOwner && owners[currentOwner] != address(0) && currentOwner != SENTINEL_OWNERS,GS026)
lastOwner = currentOwner
is an Assignment Operation (Slither line:3216)
currentOwner = address(uint160(uint256(r)))
is an Assignment Operation (Slither line:3216)
require(bool)(c / a == b)
require(bool,string)(uint256(s) >= requiredSignatures.mul(65),GS021)
c
require(bool,string)(uint256(s).add(32) <= signatures.length,GS022)
currentOwner = address(uint160(uint256(r)))
is an Assignment Operation (Slither line:3216)
Checking function: checkNSignatures(bytes32,bytes,bytes,uint256) returns() (Slither line:3127)
Visibility: public
checkNSignatures contains assembly (Slither line:3153)
require(bool,string)(msg.sender == currentOwner || approvedHashes[currentOwner][dataHash] != 0,GS025)
require(bool)(c >= a)
c
require(bool,string)(uint256(s).add(32).add(contractSignatureLen) <= signatures.length,GS023)
i = 0
is an Assignment Operation (Slither line:3216)
require(bool,string)(signatures.length >= requiredSignatures.mul(65),GS020)
signaturePos_signatureSplit_asm_0 = 0x41 * pos
is an Assignment Operation (Slither line:3216)
contractSignatureLen = mload(uint256)(signatures + s + 0x20)
is an Assignment Operation (Slither line:3216)
currentOwner = ecrecover(bytes32,uint8,bytes32,bytes32)(keccak256(bytes)(abi.encodePacked(Ethereum Signed Message:
32,dataHash)),v - 4,r,s)
is an Assignment Operation (Slither line:3216)
currentOwner = ecrecover(bytes32,uint8,bytes32,bytes32)(dataHash,v,r,s)
is an Assignment Operation (Slither line:3216)
i ++
r = mload(uint256)(signatures + signaturePos_signatureSplit_asm_0 + 0x20)
is an Assignment Operation (Slither line:3216)
(v,r,s) = signatureSplit(signatures,i)
is an Assignment Operation (Slither line:3216)
s = mload(uint256)(signatures + signaturePos_signatureSplit_asm_0 + 0x40)
is an Assignment Operation (Slither line:3216)
require(bool,string)(ISignatureValidator(currentOwner).isValidSignature(data,contractSignature) == EIP1271_MAGIC_VALUE,GS024)
0
v = mload(uint256)(signatures + signaturePos_signatureSplit_asm_0 + 0x41) & 0xff
is an Assignment Operation (Slither line:3216)
contractSignature = signatures + s + 0x20
is an Assignment Operation (Slither line:3216)
require(bool,string)(currentOwner > lastOwner && owners[currentOwner] != address(0) && currentOwner != SENTINEL_OWNERS,GS026)
lastOwner = currentOwner
is an Assignment Operation (Slither line:3216)
currentOwner = address(uint160(uint256(r)))
is an Assignment Operation (Slither line:3216)
require(bool)(c / a == b)
require(bool,string)(uint256(s) >= requiredSignatures.mul(65),GS021)
c
require(bool,string)(uint256(s).add(32) <= signatures.length,GS022)
currentOwner = address(uint160(uint256(r)))
is an Assignment Operation (Slither line:3216)
Checking function: requiredTxGas(address,uint256,bytes,Enum.Operation) returns(uint256) (Slither line:3127)
Visibility: external
success = call(uint256,uint256,uint256,uint256,uint256,uint256,uint256)(txGas,to,value,data + 0x20,mload(uint256)(data),0,0)
is an Assignment Operation (Slither line:3216)
revert(string)(string(abi.encodePacked(requiredGas)))
require(bool)(execute(to,value,data,operation,gasleft()()))
success = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(txGas,to,data + 0x20,mload(uint256)(data),0,0)
is an Assignment Operation (Slither line:3216)
Checking function: approveHash(bytes32) returns() (Slither line:3127)
Visibility: external
require(bool,string)(owners[msg.sender] != address(0),GS030)
approvedHashes[msg.sender][hashToApprove] = 1
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ApproveHash(hashToApprove,msg.sender)
Checking function: getChainId() returns(uint256) (Slither line:3127)
Visibility: public
getChainId contains assembly (Slither line:3153)
id = chainid()()
is an Assignment Operation (Slither line:3216)
id
Checking function: domainSeparator() returns(bytes32) (Slither line:3127)
Visibility: public
id = chainid()()
is an Assignment Operation (Slither line:3216)
keccak256(bytes)(abi.encode(DOMAIN_SEPARATOR_TYPEHASH,getChainId(),this))
id
Checking function: encodeTransactionData(address,uint256,bytes,Enum.Operation,uint256,uint256,uint256,address,address,uint256) returns(bytes) (Slither line:3127)
Visibility: public
id = chainid()()
is an Assignment Operation (Slither line:3216)
keccak256(bytes)(abi.encode(DOMAIN_SEPARATOR_TYPEHASH,getChainId(),this))
abi.encodePacked(bytes1(0x19),bytes1(0x01),domainSeparator(),safeTxHash)
id
Checking function: getTransactionHash(address,uint256,bytes,Enum.Operation,uint256,uint256,uint256,address,address,uint256) returns(bytes32) (Slither line:3127)
Visibility: public
id = chainid()()
is an Assignment Operation (Slither line:3216)
keccak256(bytes)(abi.encode(DOMAIN_SEPARATOR_TYPEHASH,getChainId(),this))
keccak256(bytes)(encodeTransactionData(to,value,data,operation,safeTxGas,baseGas,gasPrice,gasToken,refundReceiver,_nonce))
abi.encodePacked(bytes1(0x19),bytes1(0x01),domainSeparator(),safeTxHash)
id
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: setGuard(address) returns() (Slither line:3127)
Visibility: external
setGuard contains assembly (Slither line:3153)
sstore(uint256,uint256)(slot,guard)
sstore(uint256,uint256)
require(bool,string)(msg.sender == address(this),GS031)
requireSelfCall()
authorized()
ChangedGuard(guard)
Checking function: getGuard() returns(address) (Slither line:3127)
Visibility: internal
Checking function: requireSelfCall() returns() (Slither line:3127)
Visibility: private
Checking function: getStorageAt(uint256,uint256) returns(bytes) (Slither line:3127)
Visibility: public
getStorageAt contains assembly (Slither line:3153)
mstore(uint256,uint256)(result + 0x20 + index * 0x20,word_getStorageAt_asm_0)
word_getStorageAt_asm_0 = sload(uint256)(offset + index)
is an Assignment Operation (Slither line:3216)
result
index ++
Checking function: simulateAndRevert(address,bytes) returns() (Slither line:3127)
Visibility: external
simulateAndRevert contains assembly (Slither line:3153)
revert(uint256,uint256)(0,returndatasize()() + 0x40)
mstore(uint256,uint256)(0x00,success_simulateAndRevert_asm_0)
success_simulateAndRevert_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),targetContract,calldataPayload + 0x20,mload(uint256)(calldataPayload),0,0)
is an Assignment Operation (Slither line:3216)
mstore(uint256,uint256)(0x20,returndatasize()())
returndatacopy(uint256,uint256,uint256)(0x40,0,returndatasize()())
Checking function: internalSetFallbackHandler(address) returns() (Slither line:3127)
Checking function: setFallbackHandler(address) returns() (Slither line:3127)
Checking function: fallback() returns() (Slither line:3127)
Checking function: transferToken(address,address,uint256) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: signatureSplit(bytes,uint256) returns(uint8,bytes32,bytes32) (Slither line:3127)
Visibility: internal
Checking function: setupOwners(address[],uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: addOwnerWithThreshold(address,uint256) returns() (Slither line:3127)
Visibility: public
owners[SENTINEL_OWNERS] = owner
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
authorized()
ownerCount ++
requireSelfCall()
AddedOwner(owner)
require(bool,string)(msg.sender == address(this),GS031)
changeThreshold(_threshold)
authorized()
require(bool,string)(_threshold <= ownerCount,GS201)
require(bool,string)(owner != address(0) && owner != SENTINEL_OWNERS && owner != address(this),GS203)
require(bool,string)(_threshold >= 1,GS202)
owners[owner] = owners[SENTINEL_OWNERS]
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(owners[owner] == address(0),GS204)
threshold = _threshold
is an Assignment Operation (Slither line:3216)
ChangedThreshold(threshold)
Checking function: removeOwner(address,address,uint256) returns() (Slither line:3127)
Visibility: public
authorized()
authorized()
requireSelfCall()
require(bool,string)(msg.sender == address(this),GS031)
require(bool,string)(ownerCount - 1 >= _threshold,GS201)
require(bool,string)(owner != address(0) && owner != SENTINEL_OWNERS,GS203)
require(bool,string)(owners[prevOwner] == owner,GS205)
owners[prevOwner] = owners[owner]
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
owners[owner] = address(0)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ownerCount --
require(bool,string)(_threshold <= ownerCount,GS201)
RemovedOwner(owner)
require(bool,string)(_threshold >= 1,GS202)
threshold = _threshold
is an Assignment Operation (Slither line:3216)
changeThreshold(_threshold)
ChangedThreshold(threshold)
Checking function: swapOwner(address,address,address) returns() (Slither line:3127)
Visibility: public
owners[oldOwner] = address(0)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(msg.sender == address(this),GS031)
require(bool,string)(owners[prevOwner] == oldOwner,GS205)
RemovedOwner(oldOwner)
require(bool,string)(newOwner != address(0) && newOwner != SENTINEL_OWNERS && newOwner != address(this),GS203)
owners[newOwner] = owners[oldOwner]
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
requireSelfCall()
AddedOwner(newOwner)
require(bool,string)(owners[newOwner] == address(0),GS204)
owners[prevOwner] = newOwner
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(oldOwner != address(0) && oldOwner != SENTINEL_OWNERS,GS203)
authorized()
Checking function: changeThreshold(uint256) returns() (Slither line:3127)
Visibility: public
require(bool,string)(msg.sender == address(this),GS031)
require(bool,string)(_threshold >= 1,GS202)
authorized()
threshold = _threshold
is an Assignment Operation (Slither line:3216)
requireSelfCall()
ChangedThreshold(threshold)
require(bool,string)(_threshold <= ownerCount,GS201)
Checking function: getThreshold() returns(uint256) (Slither line:3127)
Visibility: public
threshold
Checking function: isOwner(address) returns(bool) (Slither line:3127)
Visibility: public
owner != SENTINEL_OWNERS && owners[owner] != address(0)
Checking function: getOwners() returns(address[]) (Slither line:3127)
Visibility: public
index ++
array[index] = currentOwner
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
array
currentOwner = owners[currentOwner]
is an Assignment Operation (Slither line:3216)
Checking function: setupModules(address,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: enableModule(address) returns() (Slither line:3127)
Visibility: public
require(bool,string)(msg.sender == address(this),GS031)
modules[SENTINEL_MODULES] = module
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(module != address(0) && module != SENTINEL_MODULES,GS101)
EnabledModule(module)
requireSelfCall()
require(bool,string)(modules[module] == address(0),GS102)
modules[module] = modules[SENTINEL_MODULES]
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
authorized()
Checking function: disableModule(address,address) returns() (Slither line:3127)
Visibility: public
require(bool,string)(msg.sender == address(this),GS031)
modules[module] = address(0)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(module != address(0) && module != SENTINEL_MODULES,GS101)
DisabledModule(module)
require(bool,string)(modules[prevModule] == module,GS103)
requireSelfCall()
modules[prevModule] = modules[module]
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
authorized()
Checking function: execTransactionFromModule(address,uint256,bytes,Enum.Operation) returns(bool) (Slither line:3127)
Visibility: public
success = call(uint256,uint256,uint256,uint256,uint256,uint256,uint256)(txGas,to,value,data + 0x20,mload(uint256)(data),0,0)
is an Assignment Operation (Slither line:3216)
ExecutionFromModuleSuccess(msg.sender)
require(bool,string)(msg.sender != SENTINEL_MODULES && modules[msg.sender] != address(0),GS104)
success = execute(to,value,data,operation,gasleft()())
is an Assignment Operation (Slither line:3216)
ExecutionFromModuleFailure(msg.sender)
success = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(txGas,to,data + 0x20,mload(uint256)(data),0,0)
is an Assignment Operation (Slither line:3216)
Checking function: execTransactionFromModuleReturnData(address,uint256,bytes,Enum.Operation) returns(bool,bytes) (Slither line:3127)
Visibility: public
execTransactionFromModuleReturnData contains assembly (Slither line:3153)
returndatacopy(uint256,uint256,uint256)(ptr_execTransactionFromModuleReturnData_asm_0 + 0x20,0,returndatasize()())
require(bool,string)(msg.sender != SENTINEL_MODULES && modules[msg.sender] != address(0),GS104)
returnData = ptr_execTransactionFromModuleReturnData_asm_0
is an Assignment Operation (Slither line:3216)
success = execute(to,value,data,operation,gasleft()())
is an Assignment Operation (Slither line:3216)
success = execTransactionFromModule(to,value,data,operation)
is an Assignment Operation (Slither line:3216)
success = call(uint256,uint256,uint256,uint256,uint256,uint256,uint256)(txGas,to,value,data + 0x20,mload(uint256)(data),0,0)
is an Assignment Operation (Slither line:3216)
ExecutionFromModuleSuccess(msg.sender)
ExecutionFromModuleFailure(msg.sender)
mstore(uint256,uint256)(ptr_execTransactionFromModuleReturnData_asm_0,returndatasize()())
ptr_execTransactionFromModuleReturnData_asm_0 = mload(uint256)(0x40)
is an Assignment Operation (Slither line:3216)
mstore(uint256,uint256)(0x40,ptr_execTransactionFromModuleReturnData_asm_0 + returndatasize()() + 0x20)
success = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(txGas,to,data + 0x20,mload(uint256)(data),0,0)
is an Assignment Operation (Slither line:3216)
Checking function: isModuleEnabled(address) returns(bool) (Slither line:3127)
Visibility: public
SENTINEL_MODULES != module && modules[module] != address(0)
Checking function: getModulesPaginated(address,uint256) returns(address[],address) (Slither line:3127)
Visibility: external
getModulesPaginated contains assembly (Slither line:3153)
mstore(uint256,uint256)(array,moduleCount)
array[moduleCount] = currentModule
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
next = currentModule
is an Assignment Operation (Slither line:3216)
currentModule = modules[currentModule]
is an Assignment Operation (Slither line:3216)
moduleCount ++
array = new address[](pageSize)
is an Assignment Operation (Slither line:3216)
Checking function: execute(address,uint256,bytes,Enum.Operation,uint256) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: receive() returns() (Slither line:3127)

End GnosisSafe.find_setter_in_contract (Slither line:3345)

Checking node of type IF (Slither line:1395)
Checking node of type EXPRESSION (Slither line:1395)
_singleton_fallback_asm_0 = sload(uint256)(0) & 0xffffffffffffffffffffffffffffffffffffffff
Checking node of type EXPRESSION (Slither line:1395)
return(uint256,uint256)(0,returndatasize()())
Checking node of type END_IF (Slither line:1395)
Checking node of type EXPRESSION (Slither line:1395)
revert(uint256,uint256)(0,returndatasize()())
Checking node of type EXPRESSION (Slither line:1395)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
Checking node of type EXPRESSION (Slither line:1395)
success_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_singleton_fallback_asm_0,0,calldatasize()(),0,0)
Checking node of type NEW VARIABLE (Slither line:1395)
_singleton_fallback_asm_0
None
Checking node of type EXPRESSION (Slither line:1395)
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
Checking node of type IF (Slither line:1395)
Checking node of type EXPRESSION (Slither line:1395)
mstore(uint256,uint256)(0,_singleton_fallback_asm_0)
Checking node of type INLINE ASM (Slither line:1395)
Checking node of type ENTRY_POINT (Slither line:1395)
Checking node of type NEW VARIABLE (Slither line:1395)
success_fallback_asm_0
None
Checking node of type END_IF (Slither line:1395)
Checking node of type EXPRESSION (Slither line:1395)
return(uint256,uint256)(0,0x20)

End GnosisSafeProxy.is_upgradeable_proxy (Slither line:1407)

Checking external function fallback
functions_writing_to_variable: singleton
functions_writing_to_variable: checking function GnosisSafeProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function GnosisSafeProxy.constructor (proxy_features line:898)
functions_writing_to_variable: exp = require(bool,string)(_singleton != address(0),Invalid singleton address provided) (proxy_features line:909)
functions_writing_to_variable: exp = singleton = _singleton (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: singleton = _singleton (proxy_features line:912)
functions_writing_to_variable: Identifier: singleton (proxy_features line:924)
get_value_assigned: singleton = _singleton
functions_writing_to_variable: constructor writes _singleton to singleton (proxy_features line:929)
has_compatibility_checks: dependencies: ['_singleton']
has_compatibility_checks: skipping constructor
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: IF
 dominator expression: calldataload(uint256)(0) == 0xa619486e00000000000000000000000000000000000000000000000000000000
can_toggle_delegatecall_on_off: successors:
 NodeType: EXPRESSION  expression: return(uint256,uint256)(0,returndatasize()())
 NodeType: END_IF  expression: None
 NodeType: EXPRESSION  expression: revert(uint256,uint256)(0,returndatasize()())
 NodeType: EXPRESSION  expression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
 NodeType: EXPRESSION  expression: success_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_singleton_fallback_asm_0,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off: delegatecall_condition = False
 NodeType: EXPRESSION  expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
 NodeType: IF  expression: success_fallback_asm_0 == 0
 NodeType: EXPRESSION  expression: mstore(uint256,uint256)(0,_singleton_fallback_asm_0)
 NodeType: NEW VARIABLE  expression: None
 NodeType: END_IF  expression: None
 NodeType: EXPRESSION  expression: return(uint256,uint256)(0,0x20)
Found public function: constructor
Found fallback

Begin Enum.is_proxy (Slither line:1425)


End Enum.is_proxy (Slither line:1428)


Begin Enum.is_upgradeable_proxy (Slither line:1136)

Checking contract: Enum 

End Enum.is_upgradeable_proxy (Slither line:1407)


Begin SelfAuthorized.is_proxy (Slither line:1425)


End SelfAuthorized.is_proxy (Slither line:1428)


Begin SelfAuthorized.is_upgradeable_proxy (Slither line:1136)

Checking contract: SelfAuthorized 

End SelfAuthorized.is_upgradeable_proxy (Slither line:1407)


Begin Executor.is_proxy (Slither line:1425)


End Executor.is_proxy (Slither line:1428)


Begin Executor.is_upgradeable_proxy (Slither line:1136)

Checking contract: Executor 

End Executor.is_upgradeable_proxy (Slither line:1407)


Begin ModuleManager.is_proxy (Slither line:1425)


End ModuleManager.is_proxy (Slither line:1428)


Begin ModuleManager.is_upgradeable_proxy (Slither line:1136)

Checking contract: ModuleManager 

End ModuleManager.is_upgradeable_proxy (Slither line:1407)


Begin OwnerManager.is_proxy (Slither line:1425)


End OwnerManager.is_proxy (Slither line:1428)


Begin OwnerManager.is_upgradeable_proxy (Slither line:1136)

Checking contract: OwnerManager 

End OwnerManager.is_upgradeable_proxy (Slither line:1407)


Begin FallbackManager.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin FallbackManager.find_delegatecall_in_exp_node

Found Expression Node: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:2802)
Expression called: calldatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
0
calldatasize()()

End FallbackManager.find_delegatecall_in_exp_node (Slither line:2858)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin FallbackManager.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(0,0) (Slither line:2802)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
0

End FallbackManager.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin FallbackManager.find_delegatecall_in_asm (Slither line:1541)


End FallbackManager.find_delegatecall_in_asm (Slither line:1637)


Begin FallbackManager.find_delegatecall_in_asm (Slither line:1541)


Found call in YulFunctionCall (Slither line:1563)
Destination param is called 'handler'
Looking for corresponding Variable
Current function: fallback

Begin FallbackManager.find_delegate_variable_from_name
Searching for handler (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking FALLBACK_HANDLER_STORAGE_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking slot (Slither line:1703)

Searching Parameter Variables (Slither line:1797)
fallback contains assembly, searching for sload (Slither line:1875)
{'name': 'slot', 'nodeType': 'YulIdentifier', 'src': '17766:4:0'} (Slither line:1909)

End FallbackManager.find_delegate_variable_from_name (Slither line:1949)


End FallbackManager.find_delegatecall_in_asm (Slither line:1637)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin FallbackManager.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(0,returndatasize()()) (Slither line:2802)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
returndatasize()()

End FallbackManager.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin FallbackManager.find_delegatecall_in_exp_node

Found Expression Node: handler_fallback_asm_0 = sload(uint256)(slot) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: sload(uint256)
Type of call: uint256 (Slither line:2817)
Args:
slot

End FallbackManager.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin FallbackManager.find_delegatecall_in_exp_node

Found Expression Node: mstore(uint256,uint256)(calldatasize()(),caller()() << 96) (Slither line:2802)
Expression called: mstore(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
calldatasize()()
caller()() << 96

End FallbackManager.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin FallbackManager.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(0,returndatasize()()) (Slither line:2802)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
returndatasize()()

End FallbackManager.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin FallbackManager.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:2802)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
0
returndatasize()()

End FallbackManager.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin FallbackManager.find_delegatecall_in_exp_node

Found Expression Node: success_fallback_asm_0 = call(uint256,uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),handler_fallback_asm_0,0,0,calldatasize()() + 20,0,0) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: call(uint256,uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2817)
Args:
gas()()
handler_fallback_asm_0
0
0
calldatasize()() + 20
0
0

End FallbackManager.find_delegatecall_in_exp_node (Slither line:2858)


End FallbackManager.is_proxy (Slither line:1476)


Begin FallbackManager.is_upgradeable_proxy (Slither line:1136)

Checking contract: FallbackManager 

End FallbackManager.is_upgradeable_proxy (Slither line:1407)


Begin Guard.is_proxy (Slither line:1425)


End Guard.is_proxy (Slither line:1428)


Begin Guard.is_upgradeable_proxy (Slither line:1136)

Checking contract: Guard 

End Guard.is_upgradeable_proxy (Slither line:1407)


Begin GuardManager.is_proxy (Slither line:1425)


End GuardManager.is_proxy (Slither line:1428)


Begin GuardManager.is_upgradeable_proxy (Slither line:1136)

Checking contract: GuardManager 

End GuardManager.is_upgradeable_proxy (Slither line:1407)


Begin EtherPaymentFallback.is_proxy (Slither line:1425)


End EtherPaymentFallback.is_proxy (Slither line:1428)


Begin EtherPaymentFallback.is_upgradeable_proxy (Slither line:1136)

Checking contract: EtherPaymentFallback 

End EtherPaymentFallback.is_upgradeable_proxy (Slither line:1407)


Begin Singleton.is_proxy (Slither line:1425)


End Singleton.is_proxy (Slither line:1428)


Begin Singleton.is_upgradeable_proxy (Slither line:1136)

Checking contract: Singleton 

End Singleton.is_upgradeable_proxy (Slither line:1407)


Begin SignatureDecoder.is_proxy (Slither line:1425)


End SignatureDecoder.is_proxy (Slither line:1428)


Begin SignatureDecoder.is_upgradeable_proxy (Slither line:1136)

Checking contract: SignatureDecoder 

End SignatureDecoder.is_upgradeable_proxy (Slither line:1407)


Begin SecuredTokenTransfer.is_proxy (Slither line:1425)


End SecuredTokenTransfer.is_proxy (Slither line:1428)


Begin SecuredTokenTransfer.is_upgradeable_proxy (Slither line:1136)

Checking contract: SecuredTokenTransfer 

End SecuredTokenTransfer.is_upgradeable_proxy (Slither line:1407)


Begin StorageAccessible.is_proxy (Slither line:1425)


End StorageAccessible.is_proxy (Slither line:1428)


Begin StorageAccessible.is_upgradeable_proxy (Slither line:1136)

Checking contract: StorageAccessible 

End StorageAccessible.is_upgradeable_proxy (Slither line:1407)


Begin ISignatureValidatorConstants.is_proxy (Slither line:1425)


End ISignatureValidatorConstants.is_proxy (Slither line:1428)


Begin ISignatureValidatorConstants.is_upgradeable_proxy (Slither line:1136)

Checking contract: ISignatureValidatorConstants 

End ISignatureValidatorConstants.is_upgradeable_proxy (Slither line:1407)


Begin ISignatureValidator.is_proxy (Slither line:1425)


End ISignatureValidator.is_proxy (Slither line:1428)


Begin ISignatureValidator.is_upgradeable_proxy (Slither line:1136)

Checking contract: ISignatureValidator 

End ISignatureValidator.is_upgradeable_proxy (Slither line:1407)


Begin GnosisSafeMath.is_proxy (Slither line:1425)


End GnosisSafeMath.is_proxy (Slither line:1428)


Begin GnosisSafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: GnosisSafeMath 

End GnosisSafeMath.is_upgradeable_proxy (Slither line:1407)


Begin GnosisSafe.is_proxy (Slither line:1425)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin GnosisSafe.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(0,returndatasize()()) (Slither line:2802)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
returndatasize()()

End GnosisSafe.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin GnosisSafe.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:2802)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
0
returndatasize()()

End GnosisSafe.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin GnosisSafe.find_delegatecall_in_exp_node

Found Expression Node: success_fallback_asm_0 = call(uint256,uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),handler_fallback_asm_0,0,0,calldatasize()() + 20,0,0) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: call(uint256,uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2817)
Args:
gas()()
handler_fallback_asm_0
0
0
calldatasize()() + 20
0
0

End GnosisSafe.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin GnosisSafe.find_delegatecall_in_exp_node

Found Expression Node: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:2802)
Expression called: calldatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
0
calldatasize()()

End GnosisSafe.find_delegatecall_in_exp_node (Slither line:2858)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin GnosisSafe.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(0,0) (Slither line:2802)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
0

End GnosisSafe.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin GnosisSafe.find_delegatecall_in_asm (Slither line:1541)


End GnosisSafe.find_delegatecall_in_asm (Slither line:1637)


Begin GnosisSafe.find_delegatecall_in_asm (Slither line:1541)


Found call in YulFunctionCall (Slither line:1563)
Destination param is called 'handler'
Looking for corresponding Variable
Current function: fallback

Begin GnosisSafe.find_delegate_variable_from_name
Searching for handler (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking singleton (Slither line:1689)
Checking SENTINEL_MODULES (Slither line:1689)
Checking modules (Slither line:1689)
Checking SENTINEL_OWNERS (Slither line:1689)
Checking owners (Slither line:1689)
Checking ownerCount (Slither line:1689)
Checking threshold (Slither line:1689)
Checking EIP1271_MAGIC_VALUE (Slither line:1689)
Checking FALLBACK_HANDLER_STORAGE_SLOT (Slither line:1689)
Checking GUARD_STORAGE_SLOT (Slither line:1689)
Checking VERSION (Slither line:1689)
Checking DOMAIN_SEPARATOR_TYPEHASH (Slither line:1689)
Checking SAFE_TX_TYPEHASH (Slither line:1689)
Checking nonce (Slither line:1689)
Checking _deprecatedDomainSeparator (Slither line:1689)
Checking signedMessages (Slither line:1689)
Checking approvedHashes (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking slot (Slither line:1703)

Searching Parameter Variables (Slither line:1797)
fallback contains assembly, searching for sload (Slither line:1875)
{'name': 'slot', 'nodeType': 'YulIdentifier', 'src': '17766:4:0'} (Slither line:1909)

End GnosisSafe.find_delegate_variable_from_name (Slither line:1949)


End GnosisSafe.find_delegatecall_in_asm (Slither line:1637)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin GnosisSafe.find_delegatecall_in_exp_node

Found Expression Node: handler_fallback_asm_0 = sload(uint256)(slot) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: sload(uint256)
Type of call: uint256 (Slither line:2817)
Args:
slot

End GnosisSafe.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin GnosisSafe.find_delegatecall_in_exp_node

Found Expression Node: mstore(uint256,uint256)(calldatasize()(),caller()() << 96) (Slither line:2802)
Expression called: mstore(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
calldatasize()()
caller()() << 96

End GnosisSafe.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin GnosisSafe.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(0,returndatasize()()) (Slither line:2802)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
returndatasize()()

End GnosisSafe.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


End GnosisSafe.is_proxy (Slither line:1476)


Begin GnosisSafe.is_upgradeable_proxy (Slither line:1136)

Checking contract: GnosisSafe 

End GnosisSafe.is_upgradeable_proxy (Slither line:1407)

