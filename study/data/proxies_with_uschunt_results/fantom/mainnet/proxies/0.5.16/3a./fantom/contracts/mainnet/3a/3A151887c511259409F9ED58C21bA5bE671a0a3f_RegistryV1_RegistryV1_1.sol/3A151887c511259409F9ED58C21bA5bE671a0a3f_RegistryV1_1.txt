
Begin ICTokenForRegistryV1.is_proxy (Slither line:1425)


End ICTokenForRegistryV1.is_proxy (Slither line:1428)


Begin ICTokenForRegistryV1.is_upgradeable_proxy (Slither line:1136)

Checking contract: ICTokenForRegistryV1 

End ICTokenForRegistryV1.is_upgradeable_proxy (Slither line:1407)


Begin OTokensFactoryForRegistry.is_proxy (Slither line:1425)


End OTokensFactoryForRegistry.is_proxy (Slither line:1428)


Begin OTokensFactoryForRegistry.is_upgradeable_proxy (Slither line:1136)

Checking contract: OTokensFactoryForRegistry 

End OTokensFactoryForRegistry.is_upgradeable_proxy (Slither line:1407)


Begin PeripheralFactoryForRegistry.is_proxy (Slither line:1425)


End PeripheralFactoryForRegistry.is_proxy (Slither line:1428)


Begin PeripheralFactoryForRegistry.is_upgradeable_proxy (Slither line:1136)

Checking contract: PeripheralFactoryForRegistry 

End PeripheralFactoryForRegistry.is_upgradeable_proxy (Slither line:1407)


Begin RegistryForOToken.is_proxy (Slither line:1425)


End RegistryForOToken.is_proxy (Slither line:1428)


Begin RegistryForOToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: RegistryForOToken 

End RegistryForOToken.is_upgradeable_proxy (Slither line:1407)


Begin ComptrollerForOToken.is_proxy (Slither line:1425)


End ComptrollerForOToken.is_proxy (Slither line:1428)


Begin ComptrollerForOToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: ComptrollerForOToken 

End ComptrollerForOToken.is_upgradeable_proxy (Slither line:1407)


Begin EIP20Interface.is_proxy (Slither line:1425)


End EIP20Interface.is_proxy (Slither line:1428)


Begin EIP20Interface.is_upgradeable_proxy (Slither line:1136)

Checking contract: EIP20Interface 

End EIP20Interface.is_upgradeable_proxy (Slither line:1407)


Begin EIP20NonStandardInterface.is_proxy (Slither line:1425)


End EIP20NonStandardInterface.is_proxy (Slither line:1428)


Begin EIP20NonStandardInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: EIP20NonStandardInterface 

End EIP20NonStandardInterface.is_upgradeable_proxy (Slither line:1407)


Begin RegistryBaseInterface.is_proxy (Slither line:1425)


End RegistryBaseInterface.is_proxy (Slither line:1428)


Begin RegistryBaseInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: RegistryBaseInterface 

End RegistryBaseInterface.is_upgradeable_proxy (Slither line:1407)


Begin RegistryV1Interface.is_proxy (Slither line:1425)


End RegistryV1Interface.is_proxy (Slither line:1428)


Begin RegistryV1Interface.is_upgradeable_proxy (Slither line:1136)

Checking contract: RegistryV1Interface 

End RegistryV1Interface.is_upgradeable_proxy (Slither line:1407)


Begin UnistryAdminStorage.is_proxy (Slither line:1425)


End UnistryAdminStorage.is_proxy (Slither line:1428)


Begin UnistryAdminStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: UnistryAdminStorage 

End UnistryAdminStorage.is_upgradeable_proxy (Slither line:1407)


Begin Ministry.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


Found LowLevelCall (Slither line:2740)


Found delegatecall in LowLevelCall (Slither line:2742)


End Contract.find_delegatecall_in_ir (Slither line:2773)


End Ministry.is_proxy (Slither line:1476)


Begin Ministry.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ministry 
Ministry is delegating to implementation
Looking for setter (Slither line:1200)

Looking for setter in UnistryAdminStorage (Slither line:1204)


Begin UnistryAdminStorage.find_setter_in_contract (Slither line:3119)


End UnistryAdminStorage.find_setter_in_contract (Slither line:3345)


Could not find setter in UnistryAdminStorage 
Looking in Ministry (Slither line:1213)

Begin Ministry.find_setter_in_contract (Slither line:3119)

Checking function: constructor(bool) returns() (Slither line:3127)
Checking function: _setPendingImplementation(address) returns(uint256) (Slither line:3127)
Visibility: public
0
pendingImplementation = newPendingImplementation
is an Assignment Operation (Slither line:3216)
require(bool,string)(msg.sender == admin,Not Admin)
NewPendingImplementation(oldPendingImplementation,pendingImplementation)
Checking function: _acceptImplementation() returns(uint256) (Slither line:3127)
Visibility: public
NewImplementation(oldImplementation,implementation)
require(bool,string)(msg.sender == pendingImplementation && pendingImplementation != address(0),Not the EXISTING registry implementation)
NewPendingImplementation(oldPendingImplementation,pendingImplementation)
implementation = pendingImplementation
is an Assignment Operation (Slither line:3216)

End Ministry.find_setter_in_contract (Slither line:3345)


Implementation set by function: _acceptImplementation in contract: Ministry (Slither line:1264)
Looking for getter (Slither line:1273)


Begin UnistryAdminStorage.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
pendingImplementation

End UnistryAdminStorage.find_getter_in_contract (Slither line:3083)


Begin Ministry.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
pendingImplementation
Checking function: constructor (Slither line:2988)
Checking function: _setPendingImplementation (Slither line:2988)
_setPendingImplementation returns uint256 variable  (Slither line:3008)
RETURN node expression: 0 (Slither line:3028)
Checking function: _acceptImplementation (Slither line:2988)
_acceptImplementation returns uint256 variable  (Slither line:3008)
RETURN node expression: 0 (Slither line:3028)
Checking function: _setPendingAdmin (Slither line:2988)
_setPendingAdmin returns uint256 variable  (Slither line:3008)
RETURN node expression: 0 (Slither line:3028)
Checking function: _acceptAdmin (Slither line:2988)
_acceptAdmin returns uint256 variable  (Slither line:3008)
RETURN node expression: 0 (Slither line:3028)
Checking function: fallback (Slither line:2988)

End Ministry.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in Ministry (Slither line:1305)
or in UnistryAdminStorage (Slither line:1319)

Begin RegistryV0Storage.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
pendingImplementation

End RegistryV0Storage.find_getter_in_contract (Slither line:3083)


End Ministry.is_upgradeable_proxy (Slither line:1332)

impl_address_from_contract_call: pendingImplementation
impl_address_from_contract_call: StateVariable implementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression implementation.delegatecall(msg.data)
Checking public function _setPendingImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,Not Admin)
Checking public function _acceptImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == pendingImplementation && pendingImplementation != address(0),Not the EXISTING registry implementation)
Checking public function _setPendingAdmin
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,Not Admin)
Checking public function _acceptAdmin
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == pendingAdmin && pendingAdmin != address(0),Not the EXISTING pending admin)
Checking public function _setPendingImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,Not Admin)
Checking public function _acceptImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == pendingImplementation && pendingImplementation != address(0),Not the EXISTING registry implementation)
Checking public function _setPendingAdmin
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,Not Admin)
Checking public function _acceptAdmin
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == pendingAdmin && pendingAdmin != address(0),Not the EXISTING pending admin)
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function Ministry.constructor (proxy_features line:898)
functions_writing_to_variable: checking function Ministry._acceptImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == pendingImplementation && pendingImplementation != address(0),Not the EXISTING registry implementation) (proxy_features line:909)
functions_writing_to_variable: exp = oldImplementation = implementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = implementation (proxy_features line:912)
functions_writing_to_variable: exp = oldPendingImplementation = pendingImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldPendingImplementation = pendingImplementation (proxy_features line:912)
functions_writing_to_variable: exp = implementation = pendingImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = pendingImplementation (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = pendingImplementation
functions_writing_to_variable: exp = pendingImplementation = address(0) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: pendingImplementation = address(0) (proxy_features line:912)
functions_writing_to_variable: exp = NewImplementation(oldImplementation,implementation) (proxy_features line:909)
functions_writing_to_variable: exp = NewPendingImplementation(oldPendingImplementation,pendingImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = 0 (proxy_features line:909)
functions_writing_to_variable: _acceptImplementation writes pendingImplementation to implementation (proxy_features line:929)
functions_writing_to_variable: checking function Ministry._acceptAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Ministry._setPendingImplementation (proxy_features line:898)
functions_writing_to_variable: checking function Ministry._setPendingAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Ministry.fallback (proxy_features line:898)
has_compatibility_checks: dependencies: ['pendingImplementation', 'TMP_8', 'newPendingImplementation']
functions_writing_to_variable: pendingImplementation
functions_writing_to_variable: checking function Ministry.constructor (proxy_features line:898)
functions_writing_to_variable: checking function Ministry._acceptImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == pendingImplementation && pendingImplementation != address(0),Not the EXISTING registry implementation) (proxy_features line:909)
functions_writing_to_variable: exp = oldImplementation = implementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = implementation (proxy_features line:912)
functions_writing_to_variable: exp = oldPendingImplementation = pendingImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldPendingImplementation = pendingImplementation (proxy_features line:912)
functions_writing_to_variable: exp = implementation = pendingImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = pendingImplementation (proxy_features line:912)
functions_writing_to_variable: exp = pendingImplementation = address(0) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: pendingImplementation = address(0) (proxy_features line:912)
functions_writing_to_variable: Identifier: pendingImplementation (proxy_features line:924)
get_value_assigned: pendingImplementation = address(0)
functions_writing_to_variable: exp = NewImplementation(oldImplementation,implementation) (proxy_features line:909)
functions_writing_to_variable: exp = NewPendingImplementation(oldPendingImplementation,pendingImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = 0 (proxy_features line:909)
functions_writing_to_variable: checking function Ministry._acceptAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Ministry._setPendingImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == admin,Not Admin) (proxy_features line:909)
functions_writing_to_variable: exp = oldPendingImplementation = pendingImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldPendingImplementation = pendingImplementation (proxy_features line:912)
functions_writing_to_variable: exp = pendingImplementation = newPendingImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: pendingImplementation = newPendingImplementation (proxy_features line:912)
functions_writing_to_variable: Identifier: pendingImplementation (proxy_features line:924)
get_value_assigned: pendingImplementation = newPendingImplementation
functions_writing_to_variable: exp = NewPendingImplementation(oldPendingImplementation,pendingImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = 0 (proxy_features line:909)
functions_writing_to_variable: _setPendingImplementation writes newPendingImplementation to pendingImplementation (proxy_features line:929)
functions_writing_to_variable: checking function Ministry._setPendingAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Ministry.fallback (proxy_features line:898)
has_compatibility_checks: checking public function _acceptImplementation
require(bool,string)(msg.sender == pendingImplementation && pendingImplementation != address(0),Not the EXISTING registry implementation)
has_compatibility_checks: condition msg.sender == pendingImplementation && pendingImplementation != address(0)
check_condition_from_expression: condition msg.sender == pendingImplementation && pendingImplementation != address(0)
has_compatibility_checks: checking public function _setPendingImplementation
require(bool,string)(msg.sender == admin,Not Admin)
has_compatibility_checks: condition msg.sender == admin
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: (success) = implementation.delegatecall(msg.data)
Found public function: constructor
Found public function: _setPendingImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,implementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldPendingImplementation = pendingImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == pendingImplementation && pendingImplementation != address(0),Not the EXISTING registry implementation)
has_time_delay: (node.type) EXPRESSION
(Expression) NewPendingImplementation(oldPendingImplementation,pendingImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = pendingImplementation
has_time_delay: (node.type) RETURN
(Expression) 0
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = implementation
has_time_delay: (node.type) EXPRESSION
(Expression) pendingImplementation = address(0)

Begin PriceOracle.is_proxy (Slither line:1425)


End PriceOracle.is_proxy (Slither line:1428)


Begin PriceOracle.is_upgradeable_proxy (Slither line:1136)

Checking contract: PriceOracle 

End PriceOracle.is_upgradeable_proxy (Slither line:1407)


Begin CTokenAdminStorage.is_proxy (Slither line:1425)


End CTokenAdminStorage.is_proxy (Slither line:1428)


Begin CTokenAdminStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: CTokenAdminStorage 

End CTokenAdminStorage.is_upgradeable_proxy (Slither line:1407)


Begin CTokenDelegatorInterface.is_proxy (Slither line:1425)


End CTokenDelegatorInterface.is_proxy (Slither line:1428)


Begin CTokenDelegatorInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CTokenDelegatorInterface 

End CTokenDelegatorInterface.is_upgradeable_proxy (Slither line:1407)


Begin CTokenViewInterface.is_proxy (Slither line:1425)


End CTokenViewInterface.is_proxy (Slither line:1428)


Begin CTokenViewInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CTokenViewInterface 

End CTokenViewInterface.is_upgradeable_proxy (Slither line:1407)


Begin CErc20StorageV0_01.is_proxy (Slither line:1425)


End CErc20StorageV0_01.is_proxy (Slither line:1428)


Begin CErc20StorageV0_01.is_upgradeable_proxy (Slither line:1136)

Checking contract: CErc20StorageV0_01 

End CErc20StorageV0_01.is_upgradeable_proxy (Slither line:1407)


Begin CErc20StorageV0_02.is_proxy (Slither line:1425)


End CErc20StorageV0_02.is_proxy (Slither line:1428)


Begin CErc20StorageV0_02.is_upgradeable_proxy (Slither line:1136)

Checking contract: CErc20StorageV0_02 

End CErc20StorageV0_02.is_upgradeable_proxy (Slither line:1407)


Begin ONativeInterface.is_proxy (Slither line:1425)


End ONativeInterface.is_proxy (Slither line:1428)


Begin ONativeInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: ONativeInterface 

End ONativeInterface.is_upgradeable_proxy (Slither line:1407)


Begin UnborrowableStakeableOTokenStorage.is_proxy (Slither line:1425)


End UnborrowableStakeableOTokenStorage.is_proxy (Slither line:1428)


Begin UnborrowableStakeableOTokenStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: UnborrowableStakeableOTokenStorage 

End UnborrowableStakeableOTokenStorage.is_upgradeable_proxy (Slither line:1407)


Begin OTokenCompoundingDepositStorage.is_proxy (Slither line:1425)


End OTokenCompoundingDepositStorage.is_proxy (Slither line:1428)


Begin OTokenCompoundingDepositStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: OTokenCompoundingDepositStorage 

End OTokenCompoundingDepositStorage.is_upgradeable_proxy (Slither line:1407)


Begin OMasterStakerStorageV0_05.is_proxy (Slither line:1425)


End OMasterStakerStorageV0_05.is_proxy (Slither line:1428)


Begin OMasterStakerStorageV0_05.is_upgradeable_proxy (Slither line:1136)

Checking contract: OMasterStakerStorageV0_05 

End OMasterStakerStorageV0_05.is_upgradeable_proxy (Slither line:1407)


Begin CLPStakingInterfaceV0_05.is_proxy (Slither line:1425)


End CLPStakingInterfaceV0_05.is_proxy (Slither line:1428)


Begin CLPStakingInterfaceV0_05.is_upgradeable_proxy (Slither line:1136)

Checking contract: CLPStakingInterfaceV0_05 

End CLPStakingInterfaceV0_05.is_upgradeable_proxy (Slither line:1407)


Begin TokenErrorReporter.is_proxy (Slither line:1425)


End TokenErrorReporter.is_proxy (Slither line:1428)


Begin TokenErrorReporter.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenErrorReporter 

End TokenErrorReporter.is_upgradeable_proxy (Slither line:1407)


Begin InterestRateModel.is_proxy (Slither line:1425)


End InterestRateModel.is_proxy (Slither line:1428)


Begin InterestRateModel.is_upgradeable_proxy (Slither line:1136)

Checking contract: InterestRateModel 

End InterestRateModel.is_upgradeable_proxy (Slither line:1407)


Begin ExponentialNoError.is_proxy (Slither line:1425)


End ExponentialNoError.is_proxy (Slither line:1428)


Begin ExponentialNoError.is_upgradeable_proxy (Slither line:1136)

Checking contract: ExponentialNoError 

End ExponentialNoError.is_upgradeable_proxy (Slither line:1407)


Begin RegistryV0Interface.is_proxy (Slither line:1425)


End RegistryV0Interface.is_proxy (Slither line:1428)


Begin RegistryV0Interface.is_upgradeable_proxy (Slither line:1136)

Checking contract: RegistryV0Interface 

End RegistryV0Interface.is_upgradeable_proxy (Slither line:1407)


Begin RegistryV0Storage.is_proxy (Slither line:1425)


End RegistryV0Storage.is_proxy (Slither line:1428)


Begin RegistryV0Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: RegistryV0Storage 

End RegistryV0Storage.is_upgradeable_proxy (Slither line:1407)


Begin ComptrollerInterface.is_proxy (Slither line:1425)


End ComptrollerInterface.is_proxy (Slither line:1428)


Begin ComptrollerInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: ComptrollerInterface 

End ComptrollerInterface.is_upgradeable_proxy (Slither line:1407)


Begin CTokenStorage.is_proxy (Slither line:1425)


End CTokenStorage.is_proxy (Slither line:1428)


Begin CTokenStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: CTokenStorage 

End CTokenStorage.is_upgradeable_proxy (Slither line:1407)


Begin CErc20Interface.is_proxy (Slither line:1425)


End CErc20Interface.is_proxy (Slither line:1428)


Begin CErc20Interface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CErc20Interface 

End CErc20Interface.is_upgradeable_proxy (Slither line:1407)


Begin CompoundingStakeableOTokenStorage.is_proxy (Slither line:1425)


End CompoundingStakeableOTokenStorage.is_proxy (Slither line:1428)


Begin CompoundingStakeableOTokenStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: CompoundingStakeableOTokenStorage 

End CompoundingStakeableOTokenStorage.is_upgradeable_proxy (Slither line:1407)


Begin CLPStakingStorageV0_05.is_proxy (Slither line:1425)


End CLPStakingStorageV0_05.is_proxy (Slither line:1428)


Begin CLPStakingStorageV0_05.is_upgradeable_proxy (Slither line:1136)

Checking contract: CLPStakingStorageV0_05 

End CLPStakingStorageV0_05.is_upgradeable_proxy (Slither line:1407)


Begin CarefulMath.is_proxy (Slither line:1425)


End CarefulMath.is_proxy (Slither line:1428)


Begin CarefulMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: CarefulMath 

End CarefulMath.is_upgradeable_proxy (Slither line:1407)


Begin RegistryV1_1Interface.is_proxy (Slither line:1425)


End RegistryV1_1Interface.is_proxy (Slither line:1428)


Begin RegistryV1_1Interface.is_upgradeable_proxy (Slither line:1136)

Checking contract: RegistryV1_1Interface 

End RegistryV1_1Interface.is_upgradeable_proxy (Slither line:1407)


Begin CTokenInterface.is_proxy (Slither line:1425)


End CTokenInterface.is_proxy (Slither line:1428)


Begin CTokenInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CTokenInterface 

End CTokenInterface.is_upgradeable_proxy (Slither line:1407)


Begin OTokenCompoundingDepositStorageV0_05.is_proxy (Slither line:1425)


End OTokenCompoundingDepositStorageV0_05.is_proxy (Slither line:1428)


Begin OTokenCompoundingDepositStorageV0_05.is_upgradeable_proxy (Slither line:1136)

Checking contract: OTokenCompoundingDepositStorageV0_05 

End OTokenCompoundingDepositStorageV0_05.is_upgradeable_proxy (Slither line:1407)


Begin Exponential.is_proxy (Slither line:1425)


End Exponential.is_proxy (Slither line:1428)


Begin Exponential.is_upgradeable_proxy (Slither line:1136)

Checking contract: Exponential 

End Exponential.is_upgradeable_proxy (Slither line:1407)


Begin RegistryV1Storage.is_proxy (Slither line:1425)


End RegistryV1Storage.is_proxy (Slither line:1428)


Begin RegistryV1Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: RegistryV1Storage 

End RegistryV1Storage.is_upgradeable_proxy (Slither line:1407)


Begin RegistryV1.is_proxy (Slither line:1425)


End RegistryV1.is_proxy (Slither line:1428)


Begin RegistryV1.is_upgradeable_proxy (Slither line:1136)

Checking contract: RegistryV1 

End RegistryV1.is_upgradeable_proxy (Slither line:1407)


Begin CEtherStorageV0_01.is_proxy (Slither line:1425)


End CEtherStorageV0_01.is_proxy (Slither line:1428)


Begin CEtherStorageV0_01.is_upgradeable_proxy (Slither line:1136)

Checking contract: CEtherStorageV0_01 

End CEtherStorageV0_01.is_upgradeable_proxy (Slither line:1407)


Begin CEtherStorageV0_02.is_proxy (Slither line:1425)


End CEtherStorageV0_02.is_proxy (Slither line:1428)


Begin CEtherStorageV0_02.is_upgradeable_proxy (Slither line:1136)

Checking contract: CEtherStorageV0_02 

End CEtherStorageV0_02.is_upgradeable_proxy (Slither line:1407)


Begin CDelegateInterface.is_proxy (Slither line:1425)


End CDelegateInterface.is_proxy (Slither line:1428)


Begin CDelegateInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CDelegateInterface 

End CDelegateInterface.is_upgradeable_proxy (Slither line:1407)


Begin RegistryV1_1Storage.is_proxy (Slither line:1425)


End RegistryV1_1Storage.is_proxy (Slither line:1428)


Begin RegistryV1_1Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: RegistryV1_1Storage 

End RegistryV1_1Storage.is_upgradeable_proxy (Slither line:1407)


Begin ComptrollerErrorReporter.is_proxy (Slither line:1425)


End ComptrollerErrorReporter.is_proxy (Slither line:1428)


Begin ComptrollerErrorReporter.is_upgradeable_proxy (Slither line:1136)

Checking contract: ComptrollerErrorReporter 

End ComptrollerErrorReporter.is_upgradeable_proxy (Slither line:1407)


Begin RegistryV1_1.is_proxy (Slither line:1425)


End RegistryV1_1.is_proxy (Slither line:1428)


Begin RegistryV1_1.is_upgradeable_proxy (Slither line:1136)

Checking contract: RegistryV1_1 

End RegistryV1_1.is_upgradeable_proxy (Slither line:1407)


Begin CToken.is_proxy (Slither line:1425)


End CToken.is_proxy (Slither line:1428)


Begin CToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: CToken 

End CToken.is_upgradeable_proxy (Slither line:1407)

