{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "NativeMetaTransaction (../../smart-contract-sanctuary/bsc/contracts/mainnet/proxies/0.6.12/844f659AF4099eb3E27187824B4502e436D59f66_Metal.sol/844f659AF4099eb3E27187824B4502e436D59f66_Metal.sol#864-1039)",
        "elements": [],
        "description": "NativeMetaTransaction (../../smart-contract-sanctuary/bsc/contracts/mainnet/proxies/0.6.12/844f659AF4099eb3E27187824B4502e436D59f66_Metal.sol/844f659AF4099eb3E27187824B4502e436D59f66_Metal.sol#864-1039) is an upgradeable proxy.\nEXCH was found in a different contract.\n uses Unstructured Storage\n implements EIP-1967\nFound compatibility checks in all upgrade functions.\n",
        "id": "ede90158c0b631e3dac7ec85d633a78900a0c1e439b265d85f2fd47f1972bdbe",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "EIP712Base.EXCH",
          "impl_address_setter": "NativeMetaTransaction.Approve(address,uint256)",
          "impl_address_getter": "NativeMetaTransaction.exchange()",
          "impl_address_location": "EIP712Base (../../smart-contract-sanctuary/bsc/contracts/mainnet/proxies/0.6.12/844f659AF4099eb3E27187824B4502e436D59f66_Metal.sol/844f659AF4099eb3E27187824B4502e436D59f66_Metal.sol#760-856)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "unstructured_storage": true,
          "eip_1967": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "NativeMetaTransaction.Approve(address,uint256)": {
                "check": "require(bool)(extcodesize(uint256)(account) > 0)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "getDomainSeperator()",
              "getChainId()",
              "owner()",
              "renounceOwnership()",
              "transferOwnership(address)",
              "executeMetaTransaction(address,bytes,bytes32,bytes32,uint8)",
              "getNonce(address)",
              "Approve(address,uint256)"
            ]
          }
        }
      },
      {
        "contract": "Metal (../../smart-contract-sanctuary/bsc/contracts/mainnet/proxies/0.6.12/844f659AF4099eb3E27187824B4502e436D59f66_Metal.sol/844f659AF4099eb3E27187824B4502e436D59f66_Metal.sol#1801-1828)",
        "elements": [],
        "description": "Metal (../../smart-contract-sanctuary/bsc/contracts/mainnet/proxies/0.6.12/844f659AF4099eb3E27187824B4502e436D59f66_Metal.sol/844f659AF4099eb3E27187824B4502e436D59f66_Metal.sol#1801-1828) is an upgradeable proxy.\nEXCH was found in a different contract.\n uses Unstructured Storage\n implements EIP-1967\nFound compatibility checks in all upgrade functions.\n",
        "id": "21d994298efd6351630cf0edfc7cb4a7b4f7fccef76c5eb10baa5c7917965c9e",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "EIP712Base.EXCH",
          "impl_address_setter": "NativeMetaTransaction.Approve(address,uint256)",
          "impl_address_getter": "NativeMetaTransaction.exchange()",
          "impl_address_location": "EIP712Base (../../smart-contract-sanctuary/bsc/contracts/mainnet/proxies/0.6.12/844f659AF4099eb3E27187824B4502e436D59f66_Metal.sol/844f659AF4099eb3E27187824B4502e436D59f66_Metal.sol#760-856)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "unstructured_storage": true,
          "eip_1967": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "NativeMetaTransaction.Approve(address,uint256)": {
                "check": "require(bool)(extcodesize(uint256)(account) > 0)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "hasRole(bytes32,address)",
              "getRoleMemberCount(bytes32)",
              "getRoleMember(bytes32,uint256)",
              "getRoleAdmin(bytes32)",
              "grantRole(bytes32,address)",
              "revokeRole(bytes32,address)",
              "renounceRole(bytes32,address)",
              "executeMetaTransaction(address,bytes,bytes32,bytes32,uint8)",
              "getNonce(address)",
              "Approve(address,uint256)",
              "getDomainSeperator()",
              "getChainId()",
              "owner()",
              "renounceOwnership()",
              "transferOwnership(address)",
              "initialize()"
            ]
          }
        }
      }
    ]
  }
}