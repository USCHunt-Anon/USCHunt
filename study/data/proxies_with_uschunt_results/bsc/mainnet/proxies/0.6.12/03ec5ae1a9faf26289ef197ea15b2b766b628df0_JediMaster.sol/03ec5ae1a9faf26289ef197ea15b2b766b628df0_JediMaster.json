{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "JediDispatcher (../../smart-contract-sanctuary/bsc/contracts/mainnet/proxies/0.6.12/03ec5ae1a9faf26289ef197ea15b2b766b628df0_JediMaster.sol/03ec5ae1a9faf26289ef197ea15b2b766b628df0_JediMaster.sol#1045-1146)",
        "elements": [],
        "description": "JediDispatcher (../../smart-contract-sanctuary/bsc/contracts/mainnet/proxies/0.6.12/03ec5ae1a9faf26289ef197ea15b2b766b628df0_JediMaster.sol/03ec5ae1a9faf26289ef197ea15b2b766b628df0_JediMaster.sol#1045-1146) is an upgradeable proxy.\nimplementationPosition is declared in the proxy.\n uses Unstructured Storage\n implements EIP-1967\nMissing compatibility check in JediDispatcher.upgradeTo(address)\n",
        "id": "cc722c0f6598b4b26e1ddef8a9fc9b5d092d6e26892d23c7aecc57f9e73094be",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "JediDispatcher.implementationPosition",
          "impl_address_setter": "JediDispatcher.upgradeTo(address)",
          "impl_address_getter": "JediDispatcher.implementation()",
          "impl_address_location": "JediDispatcher (../../smart-contract-sanctuary/bsc/contracts/mainnet/proxies/0.6.12/03ec5ae1a9faf26289ef197ea15b2b766b628df0_JediMaster.sol/03ec5ae1a9faf26289ef197ea15b2b766b628df0_JediMaster.sol#1045-1146)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)",
          "unstructured_storage": true,
          "eip_1967": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "JediDispatcher.upgradeTo(address)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "owner()",
              "renounceOwnership()",
              "transferOwnership(address)",
              "proxyOwner()",
              "transferProxyOwnership(address)",
              "implementation()",
              "upgradeTo(address)"
            ]
          }
        }
      }
    ]
  }
}