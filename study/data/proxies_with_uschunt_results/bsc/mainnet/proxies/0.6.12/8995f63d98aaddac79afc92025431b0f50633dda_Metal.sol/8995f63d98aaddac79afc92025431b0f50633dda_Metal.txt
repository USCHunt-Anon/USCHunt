
Begin Context.is_proxy (Slither line:1425)


End Context.is_proxy (Slither line:1428)


Begin Context.is_upgradeable_proxy (Slither line:1136)

Checking contract: Context 

End Context.is_upgradeable_proxy (Slither line:1407)


Begin IERC20.is_proxy (Slither line:1425)


End IERC20.is_proxy (Slither line:1428)


Begin IERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20 

End IERC20.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin ERC20.is_proxy (Slither line:1425)


End ERC20.is_proxy (Slither line:1428)


Begin ERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20 

End ERC20.is_upgradeable_proxy (Slither line:1407)


Begin ERC20Tokenlmplementation.is_proxy (Slither line:1425)


End ERC20Tokenlmplementation.is_proxy (Slither line:1428)


Begin ERC20Tokenlmplementation.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20Tokenlmplementation 

End ERC20Tokenlmplementation.is_upgradeable_proxy (Slither line:1407)


Begin Initializable.is_proxy (Slither line:1425)


End Initializable.is_proxy (Slither line:1428)


Begin Initializable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Initializable 

End Initializable.is_upgradeable_proxy (Slither line:1407)


Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin EIP712Base.is_proxy (Slither line:1425)


End EIP712Base.is_proxy (Slither line:1428)


Begin EIP712Base.is_upgradeable_proxy (Slither line:1136)

Checking contract: EIP712Base 

End EIP712Base.is_upgradeable_proxy (Slither line:1407)


Begin NativeMetaTransaction.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin NativeMetaTransaction.find_delegatecall_in_exp_node

Found Expression Node: decentralizedSwap() (Slither line:2802)
Expression called: decentralizedSwap
Type of call: tuple() (Slither line:2817)
Args:

End NativeMetaTransaction.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin NativeMetaTransaction.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_29590_202_0_trade_asm_0 = result_trade_asm_0 (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)

End NativeMetaTransaction.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin NativeMetaTransaction.find_delegatecall_in_asm (Slither line:1541)


End NativeMetaTransaction.find_delegatecall_in_asm (Slither line:1637)


Begin NativeMetaTransaction.find_delegatecall_in_asm (Slither line:1541)


End NativeMetaTransaction.find_delegatecall_in_asm (Slither line:1637)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin NativeMetaTransaction.find_delegatecall_in_exp_node

Found Expression Node: man = sload(uint256)(SWAP) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: sload(uint256)
Type of call: uint256 (Slither line:2817)
Args:
SWAP

End NativeMetaTransaction.find_delegatecall_in_exp_node (Slither line:2858)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin NativeMetaTransaction.find_delegatecall_in_asm (Slither line:1541)


End NativeMetaTransaction.find_delegatecall_in_asm (Slither line:1637)


Begin NativeMetaTransaction.find_delegatecall_in_asm (Slither line:1541)


End NativeMetaTransaction.find_delegatecall_in_asm (Slither line:1637)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin NativeMetaTransaction.find_delegatecall_in_exp_node

Found Expression Node: man = sload(uint256)(EXCH) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: sload(uint256)
Type of call: uint256 (Slither line:2817)
Args:
EXCH

End NativeMetaTransaction.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin NativeMetaTransaction.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(0,returndatasize()()) (Slither line:2802)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
returndatasize()()

End NativeMetaTransaction.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin NativeMetaTransaction.find_delegatecall_in_exp_node

Found Expression Node: require(bool)(msg.sender != trader()) (Slither line:2802)
Expression called: require(bool)
Type of call: tuple() (Slither line:2817)
Args:
msg.sender != trader()

End NativeMetaTransaction.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin NativeMetaTransaction.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'man'
Looking for corresponding Variable
Current function: trade

Begin NativeMetaTransaction.find_delegate_variable_from_name
Searching for man (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking _initialized (Slither line:1689)
Checking _initializing (Slither line:1689)
Checking _owner (Slither line:1689)
Checking __gap (Slither line:1689)
Checking ERC712_VERSION (Slither line:1689)
Checking EXCH (Slither line:1689)
Checking SWAP (Slither line:1689)
Checking INIT (Slither line:1689)
Checking APPR (Slither line:1689)
Checking EIP712_DOMAIN_TYPEHASH (Slither line:1689)
Checking domainSeperator (Slither line:1689)
Checking META_TRANSACTION_TYPEHASH (Slither line:1689)
Checking nonces (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking man (Slither line:1800)
man is a Parameter in NativeMetaTransaction.trade (Slither line:1805)
CallExpression: decentralizedSwap() (Slither line:1819)
AssignmentOperation: result_trade_asm_0 (Slither line:1811)
AssignmentOperation: sload(uint256)(SWAP) (Slither line:1811)
CallExpression: sload(uint256)(SWAP) (Slither line:1819)
AssignmentOperation: sload(uint256)(EXCH) (Slither line:1811)
CallExpression: sload(uint256)(EXCH) (Slither line:1819)
CallExpression: revert(uint256,uint256)(0,returndatasize()()) (Slither line:1819)
CallExpression: require(bool)(msg.sender != trader()) (Slither line:1819)
CallExpression: return(uint256,uint256)(0,returndatasize()()) (Slither line:1819)
CallExpression: trade(exchange()) (Slither line:1819)
Found where trade is called: trade(exchange()) (Slither line:1832)
The value passed to parameter #0 is exchange() (Slither line:1835)

Begin NativeMetaTransaction.find_delegate_from_call_exp

exchange() (Slither line:2003)
called = exchange (Slither line:2010)
AssignmentOperation: man = sload(uint256)(EXCH) (Slither line:2117)
CallExpression: sload(uint256) (Slither line:2123)
Found storage slot: EXCH (Slither line:2133)
exchange returns a variable of type address   called man (Slither line:2193)
exchange contains assembly - looking for sload (Slither line:2199)

End NativeMetaTransaction.find_delegate_from_call_exp (Slither line:2328)

CallExpression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:1819)
AssignmentOperation: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),man,0,calldatasize()(),0,0) (Slither line:1811)
CallExpression: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),man,0,calldatasize()(),0,0) (Slither line:1819)
CallExpression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:1819)
trade contains assembly, searching for sload (Slither line:1875)

End NativeMetaTransaction.find_delegate_variable_from_name (Slither line:1949)


End NativeMetaTransaction.find_delegatecall_in_asm (Slither line:1637)

Setting NativeMetaTransaction._delegate_variable = NativeMetaTransaction._proxy_impl_slot: EXCH (Slither line:1473)


End NativeMetaTransaction.is_proxy (Slither line:1476)


Begin NativeMetaTransaction.is_upgradeable_proxy (Slither line:1136)

Checking contract: NativeMetaTransaction 
Call destination EXCH is constant (Slither line:1146)

EXCH is the implementation storage slot (Slither line:1149)

NativeMetaTransaction is delegating to EXCH
Looking for setter (Slither line:1200)

Looking for setter in EIP712Base (Slither line:1204)


Begin EIP712Base.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: _initializeEIP712(string) returns() (Slither line:3127)
Checking function: _setDomainSeperator(string) returns() (Slither line:3127)
Visibility: internal
Checking function: getDomainSeperator() returns(bytes32) (Slither line:3127)
Visibility: public
domainSeperator
Checking function: getChainId() returns(uint256) (Slither line:3127)
Visibility: public
getChainId contains assembly (Slither line:3153)
id
id = chainid()()
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: toTypedMessageHash(bytes32) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: trade(address) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: __Ownable_init() returns() (Slither line:3127)
Checking function: __Ownable_init_unchained() returns() (Slither line:3127)
Checking function: owner() returns(address) (Slither line:3127)
Visibility: public
_owner
Checking function: renounceOwnership() returns() (Slither line:3127)
Visibility: public
require(bool,string)(_owner == _msgSender(),Ownable: caller is not the owner)
_owner = address(0)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
onlyOwner()
OwnershipTransferred(_owner,address(0))
msg.sender
Checking function: transferOwnership(address) returns() (Slither line:3127)
Visibility: public
require(bool,string)(_owner == _msgSender(),Ownable: caller is not the owner)
OwnershipTransferred(_owner,newOwner)
_owner = newOwner
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(newOwner != address(0),Ownable: new owner is the zero address)
onlyOwner()
msg.sender
Checking function: _msgSender() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _msgData() returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: _isConstructor() returns(bool) (Slither line:3127)
Visibility: private

End EIP712Base.find_setter_in_contract (Slither line:3345)


Could not find setter in EIP712Base 
Looking in NativeMetaTransaction (Slither line:1213)

Begin NativeMetaTransaction.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: executeMetaTransaction(address,bytes,bytes32,bytes32,uint8) returns(bytes) (Slither line:3127)
Visibility: public
nonces[userAddress] = nonces[userAddress].add(1)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
MetaTransactionExecuted(userAddress,msg.sender,functionSignature)
require(bool,string)(signer != address(0),NativeMetaTransaction: INVALID_SIGNER)
signer == ecrecover(bytes32,uint8,bytes32,bytes32)(toTypedMessageHash(hashMetaTransaction(metaTx)),sigV,sigR,sigS)
require(bool,string)(success,Function call not successful)
(success,returnData) = address(this).call(abi.encodePacked(functionSignature,userAddress))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(c >= a,SafeMath: addition overflow)
c
keccak256(bytes)(abi.encode(META_TRANSACTION_TYPEHASH,metaTx.nonce,metaTx.from,keccak256(bytes)(metaTx.functionSignature)))
returnData
domainSeperator
keccak256(bytes)(abi.encodePacked(,getDomainSeperator(),messageHash))
require(bool,string)(verify(userAddress,metaTx,sigR,sigS,sigV),Signer and signature do not match)
Checking function: hashMetaTransaction(NativeMetaTransaction.MetaTransaction) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: decentralizedSwap() returns() (Slither line:3127)
Visibility: internal
Checking function: exchange() returns(address) (Slither line:3127)
Visibility: internal
Checking function: approval(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: decentralize(address) returns() (Slither line:3127)
Visibility: internal
Checking function: constructor() returns() (Slither line:3127)
Checking function: trader() returns(address) (Slither line:3127)
Visibility: internal
Checking function: getNonce(address) returns(uint256) (Slither line:3127)
Visibility: public
nonce = nonces[user]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: verify(address,NativeMetaTransaction.MetaTransaction,bytes32,bytes32,uint8) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: Approve(address,uint256) returns() (Slither line:3127)
Visibility: external
require(bool)(Address.isContract(spender))
switch_expr_29590_202_0_trade_asm_0 = result_trade_asm_0
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
sstore(uint256,uint256)(EXCH,spender)
sstore(uint256,uint256)

End NativeMetaTransaction.find_setter_in_contract (Slither line:3345)


Implementation set by function: Approve in contract: NativeMetaTransaction (Slither line:1264)
Looking for getter (Slither line:1273)


Begin EIP712Base.find_getter_in_contract (Slither line:2974)

EXCH is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: __Ownable_init (Slither line:2988)
Checking function: __Ownable_init_unchained (Slither line:2988)
Checking function: owner (Slither line:2988)
owner returns address variable  (Slither line:3008)
RETURN node expression: _owner (Slither line:3028)
Checking function: renounceOwnership (Slither line:2988)
Checking function: transferOwnership (Slither line:2988)
Checking function: _msgSender (Slither line:2988)
_msgSender returns address variable  (Slither line:3008)
RETURN node expression: msg.sender (Slither line:3028)
Checking function: _msgData (Slither line:2988)
_msgData returns bytes variable  (Slither line:3008)
RETURN node expression: msg.data (Slither line:3028)
Checking function: _isConstructor (Slither line:2988)
_isConstructor returns bool variable  (Slither line:3008)
RETURN node expression: cs == 0 (Slither line:3028)
Checking function: _initializeEIP712 (Slither line:2988)
Checking function: _setDomainSeperator (Slither line:2988)
Checking function: getDomainSeperator (Slither line:2988)
getDomainSeperator returns bytes32 variable  (Slither line:3008)
RETURN node expression: domainSeperator (Slither line:3028)
Checking function: getChainId (Slither line:2988)
getChainId returns uint256 variable  (Slither line:3008)
RETURN node expression: id (Slither line:3028)
Checking function: toTypedMessageHash (Slither line:2988)
toTypedMessageHash returns bytes32 variable  (Slither line:3008)
RETURN node expression: keccak256(bytes)(abi.encodePacked(,getDomainSeperator(),messageHash)) (Slither line:3028)
Checking function: trade (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End EIP712Base.find_getter_in_contract (Slither line:3083)


Begin NativeMetaTransaction.find_getter_in_contract (Slither line:2974)

EXCH is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: _initializeEIP712 (Slither line:2988)
Checking function: _setDomainSeperator (Slither line:2988)
Checking function: getDomainSeperator (Slither line:2988)
getDomainSeperator returns bytes32 variable  (Slither line:3008)
RETURN node expression: domainSeperator (Slither line:3028)
Checking function: getChainId (Slither line:2988)
getChainId returns uint256 variable  (Slither line:3008)
getChainId contains assembly (Slither line:3051)
getChainId contains assembly (Slither line:3051)
RETURN node expression: id (Slither line:3028)
getChainId contains assembly (Slither line:3051)
getChainId contains assembly (Slither line:3051)
getChainId contains assembly (Slither line:3051)
Checking function: toTypedMessageHash (Slither line:2988)
toTypedMessageHash returns bytes32 variable  (Slither line:3008)
RETURN node expression: keccak256(bytes)(abi.encodePacked(,getDomainSeperator(),messageHash)) (Slither line:3028)
Checking function: trade (Slither line:2988)
Checking function: __Ownable_init (Slither line:2988)
Checking function: __Ownable_init_unchained (Slither line:2988)
Checking function: owner (Slither line:2988)
owner returns address variable  (Slither line:3008)
RETURN node expression: _owner (Slither line:3028)
Checking function: renounceOwnership (Slither line:2988)
Checking function: transferOwnership (Slither line:2988)
Checking function: _msgSender (Slither line:2988)
_msgSender returns address variable  (Slither line:3008)
RETURN node expression: msg.sender (Slither line:3028)
Checking function: _msgData (Slither line:2988)
_msgData returns bytes variable  (Slither line:3008)
RETURN node expression: msg.data (Slither line:3028)
Checking function: _isConstructor (Slither line:2988)
_isConstructor returns bool variable  (Slither line:3008)
_isConstructor contains assembly (Slither line:3051)
_isConstructor contains assembly (Slither line:3051)
RETURN node expression: cs == 0 (Slither line:3028)
_isConstructor contains assembly (Slither line:3051)
_isConstructor contains assembly (Slither line:3051)
_isConstructor contains assembly (Slither line:3051)
_isConstructor contains assembly (Slither line:3051)
Checking function: executeMetaTransaction (Slither line:2988)
executeMetaTransaction returns bytes variable  (Slither line:3008)
RETURN node expression: returnData (Slither line:3028)
Checking function: hashMetaTransaction (Slither line:2988)
hashMetaTransaction returns bytes32 variable  (Slither line:3008)
RETURN node expression: keccak256(bytes)(abi.encode(META_TRANSACTION_TYPEHASH,metaTx.nonce,metaTx.from,keccak256(bytes)(metaTx.functionSignature))) (Slither line:3028)
Checking function: decentralizedSwap (Slither line:2988)
Checking function: exchange (Slither line:2988)
exchange returns address variable called man (Slither line:3008)
exchange contains assembly (Slither line:3051)
exchange contains assembly (Slither line:3051)
exchange contains assembly (Slither line:3051)

End NativeMetaTransaction.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: exchange in contract: NativeMetaTransaction (Slither line:1285)

End NativeMetaTransaction.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: NativeMetaTransaction
Setter found in contract NativeMetaTransaction
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable EXCH
impl_address_from_contract_call: getter is exchange
getter.full_name = exchange()
library call: Address.isContract
library call: SafeMath.add
impl_address_from_contract_call: CallExpression decentralizedSwap()
impl_address_from_contract_call: CallExpression sload(uint256)(SWAP)
impl_address_from_contract_call: arg is SWAP
impl_address_from_contract_call: CallExpression sload(uint256)(EXCH)
impl_address_from_contract_call: arg is EXCH
impl_address_from_contract_call: CallExpression revert(uint256,uint256)(0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression require(bool)(msg.sender != trader())
impl_address_from_contract_call: arg is msg.sender != trader()
impl_address_from_contract_call: CallExpression return(uint256,uint256)(0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression trade(exchange())
impl_address_from_contract_call: arg is exchange()
impl_address_from_contract_call: CallExpression exchange()
impl_address_from_contract_call: CallExpression calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is calldatasize()()
impl_address_from_contract_call: CallExpression calldatasize()()
impl_address_from_contract_call: CallExpression delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),man,0,calldatasize()(),0,0)
impl_address_from_contract_call: arg is gas()()
impl_address_from_contract_call: CallExpression gas()()
impl_address_from_contract_call: CallExpression returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
Checking public function getDomainSeperator
Checking public function getChainId
Checking public function owner
Checking public function renounceOwnership
Checking public function transferOwnership
Checking public function executeMetaTransaction
Checking public function getNonce
Checking external function Approve
Found 'msg.sender ==' in expression: msg.sender == trader()
Checking external function fallback
Found 'msg.sender !=' in expression: require(bool)(msg.sender != trader())
Checking external function receive
Found 'msg.sender !=' in expression: require(bool)(msg.sender != trader())
functions_writing_to_variable: EXCH
functions_writing_to_variable: checking function NativeMetaTransaction.executeMetaTransaction (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.trader (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.hashMetaTransaction (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.getNonce (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.getChainId (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction._msgData (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.__Ownable_init_unchained (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.decentralizedSwap (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.verify (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.owner (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.toTypedMessageHash (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction._isConstructor (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.Approve (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(EXCH,spender)
functions_writing_to_variable: Approve writes spender to EXCH using sstore (proxy_features line:998)
functions_writing_to_variable: checking function NativeMetaTransaction.exchange (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = ERC712_VERSION = 1 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: ERC712_VERSION = 1 (proxy_features line:912)
functions_writing_to_variable: exp = EXCH = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: EXCH = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: EXCH (proxy_features line:924)
get_value_assigned: EXCH = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: exp = SWAP = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: SWAP = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:912)
functions_writing_to_variable: exp = INIT = 0x70f657164e5b75689b64b7fd7aa19f663f1fc8e078b6ff0f3592cdfed062b08f (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: INIT = 0x70f657164e5b75689b64b7fd7aa19f663f1fc8e078b6ff0f3592cdfed062b08f (proxy_features line:912)
functions_writing_to_variable: exp = APPR = 0xd8a5a3c0dbbf7fb9753f0e039243de225eb961abd6db69cc663d514f4b783f1e (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: APPR = 0xd8a5a3c0dbbf7fb9753f0e039243de225eb961abd6db69cc663d514f4b783f1e (proxy_features line:912)
functions_writing_to_variable: exp = EIP712_DOMAIN_TYPEHASH = keccak256(bytes)(bytes(EIP712Domain(string name,string version,address verifyingContract,bytes32 salt))) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: EIP712_DOMAIN_TYPEHASH = keccak256(bytes)(bytes(EIP712Domain(string name,string version,address verifyingContract,bytes32 salt))) (proxy_features line:912)
functions_writing_to_variable: exp = META_TRANSACTION_TYPEHASH = keccak256(bytes)(bytes(MetaTransaction(uint256 nonce,address from,bytes functionSignature))) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: META_TRANSACTION_TYPEHASH = keccak256(bytes)(bytes(MetaTransaction(uint256 nonce,address from,bytes functionSignature))) (proxy_features line:912)
functions_writing_to_variable: checking function NativeMetaTransaction.renounceOwnership (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.fallback (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.approval (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(EXCH,spender)
functions_writing_to_variable: approval writes spender to EXCH using sstore (proxy_features line:998)
functions_writing_to_variable: checking function NativeMetaTransaction._initializeEIP712 (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction._msgSender (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.trade (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction._setDomainSeperator (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.receive (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.decentralize (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.transferOwnership (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.constructor (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(EXCH,spender)
functions_writing_to_variable: constructor writes spender to EXCH using sstore (proxy_features line:998)
functions_writing_to_variable: checking function NativeMetaTransaction.getDomainSeperator (proxy_features line:898)
functions_writing_to_variable: checking function NativeMetaTransaction.__Ownable_init (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: checking external function Approve
require(bool)(Address.isContract(spender))
has_compatibility_checks: condition Address.isContract(spender)
check_condition_from_expression: modifier calls: ['onlyTrader()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = msg.sender == trader()
has_compatibility_checks: IF node exp = switch_expr_29590_202_0_trade_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_29590_202_0_trade_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
has_compatibility_checks: IF node exp = amount < (~ (uint256(1) << 255))
require(bool)(msg.sender != trader())
has_compatibility_checks: condition msg.sender != trader()
has_compatibility_checks: skipping internal function approval
has_compatibility_checks: skipping constructor
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result_trade_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),man,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
Found public function: getDomainSeperator
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(Address.isContract(spender))
has_time_delay: (node.type) EXPRESSION
(Expression) switch_expr_29590_202_0_trade_asm_0 = result_trade_asm_0
has_time_delay: (node.type) IF
(Expression) msg.sender == trader()
has_time_delay: (node.type) EXPRESSION
(Expression) sstore(uint256,uint256)(EXCH,spender)
has_time_delay: (node.type) EXPRESSION
(Expression) man = sload(uint256)(SWAP)
has_time_delay: (node.type) IF
(Expression) switch_expr_29590_202_0_trade_asm_0 == 0
has_time_delay: (node.type) IF
(Expression) amount < (~ (uint256(1) << 255))
has_time_delay: (node.type) EXPRESSION
(Expression) man = sload(uint256)(EXCH)
has_time_delay: (node.type) EXPRESSION
(Expression) revert(uint256,uint256)(0,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(msg.sender != trader())
has_time_delay: (node.type) EXPRESSION
(Expression) approval(spender,amount)
has_time_delay: (node.type) EXPRESSION
(Expression) return(uint256,uint256)(0,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) trade(exchange())
has_time_delay: (node.type) EXPRESSION
(Expression) decentralizedSwap()
has_time_delay: (node.type) EXPRESSION
(Expression) onlyTrader()
has_time_delay: (node.type) EXPRESSION
(Expression) calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) result_trade_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),man,0,calldatasize()(),0,0)
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) EXPRESSION
(Expression) returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())

Begin ContextMixin.is_proxy (Slither line:1425)


End ContextMixin.is_proxy (Slither line:1428)


Begin ContextMixin.is_upgradeable_proxy (Slither line:1136)

Checking contract: ContextMixin 

End ContextMixin.is_upgradeable_proxy (Slither line:1407)


Begin EnumerableSet.is_proxy (Slither line:1425)


End EnumerableSet.is_proxy (Slither line:1428)


Begin EnumerableSet.is_upgradeable_proxy (Slither line:1136)

Checking contract: EnumerableSet 

End EnumerableSet.is_upgradeable_proxy (Slither line:1407)


Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin AccessControl.is_proxy (Slither line:1425)


End AccessControl.is_proxy (Slither line:1428)


Begin AccessControl.is_upgradeable_proxy (Slither line:1136)

Checking contract: AccessControl 

End AccessControl.is_upgradeable_proxy (Slither line:1407)


Begin AccessControlMixin.is_proxy (Slither line:1425)


End AccessControlMixin.is_proxy (Slither line:1428)


Begin AccessControlMixin.is_upgradeable_proxy (Slither line:1136)

Checking contract: AccessControlMixin 

End AccessControlMixin.is_upgradeable_proxy (Slither line:1407)


Begin Metal.is_proxy (Slither line:1425)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin Metal.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'man'
Looking for corresponding Variable
Current function: trade

Begin Metal.find_delegate_variable_from_name
Searching for man (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking _initialized (Slither line:1689)
Checking _initializing (Slither line:1689)
Checking _owner (Slither line:1689)
Checking __gap (Slither line:1689)
Checking ERC712_VERSION (Slither line:1689)
Checking EXCH (Slither line:1689)
Checking SWAP (Slither line:1689)
Checking INIT (Slither line:1689)
Checking APPR (Slither line:1689)
Checking EIP712_DOMAIN_TYPEHASH (Slither line:1689)
Checking domainSeperator (Slither line:1689)
Checking META_TRANSACTION_TYPEHASH (Slither line:1689)
Checking nonces (Slither line:1689)
Checking _roles (Slither line:1689)
Checking DEFAULT_ADMIN_ROLE (Slither line:1689)
Checking _revertMsg (Slither line:1689)
Checking _balances (Slither line:1689)
Checking _allowances (Slither line:1689)
Checking _totalSupply (Slither line:1689)
Checking _name (Slither line:1689)
Checking _symbol (Slither line:1689)
Checking _decimals (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking man (Slither line:1800)
man is a Parameter in Metal.trade (Slither line:1805)
CallExpression: return(uint256,uint256)(0,returndatasize()()) (Slither line:1819)
CallExpression: trade(exchange()) (Slither line:1819)
Found where trade is called: trade(exchange()) (Slither line:1832)
The value passed to parameter #0 is exchange() (Slither line:1835)

Begin Metal.find_delegate_from_call_exp

exchange() (Slither line:2003)
called = exchange (Slither line:2010)
AssignmentOperation: man = sload(uint256)(EXCH) (Slither line:2117)
CallExpression: sload(uint256) (Slither line:2123)
Found storage slot: EXCH (Slither line:2133)
exchange returns a variable of type address   called man (Slither line:2193)
exchange contains assembly - looking for sload (Slither line:2199)

End Metal.find_delegate_from_call_exp (Slither line:2328)

CallExpression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:1819)
AssignmentOperation: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),man,0,calldatasize()(),0,0) (Slither line:1811)
CallExpression: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),man,0,calldatasize()(),0,0) (Slither line:1819)
CallExpression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:1819)
CallExpression: decentralizedSwap() (Slither line:1819)
AssignmentOperation: result_trade_asm_0 (Slither line:1811)
AssignmentOperation: sload(uint256)(SWAP) (Slither line:1811)
CallExpression: sload(uint256)(SWAP) (Slither line:1819)
AssignmentOperation: sload(uint256)(EXCH) (Slither line:1811)
CallExpression: sload(uint256)(EXCH) (Slither line:1819)
CallExpression: revert(uint256,uint256)(0,returndatasize()()) (Slither line:1819)
CallExpression: require(bool)(msg.sender != trader()) (Slither line:1819)
trade contains assembly, searching for sload (Slither line:1875)

End Metal.find_delegate_variable_from_name (Slither line:1949)


End Metal.find_delegatecall_in_asm (Slither line:1637)

Setting Metal._delegate_variable = Metal._proxy_impl_slot: EXCH (Slither line:1473)


End Metal.is_proxy (Slither line:1476)


Begin Metal.is_upgradeable_proxy (Slither line:1136)

Checking contract: Metal 
Call destination EXCH is constant (Slither line:1146)

EXCH is the implementation storage slot (Slither line:1149)

Metal is delegating to EXCH
Looking for setter (Slither line:1200)

Looking for setter in EIP712Base (Slither line:1204)


Begin EIP712Base.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: _initializeEIP712(string) returns() (Slither line:3127)
Checking function: _setDomainSeperator(string) returns() (Slither line:3127)
Visibility: internal
Checking function: getDomainSeperator() returns(bytes32) (Slither line:3127)
Visibility: public
domainSeperator
Checking function: getChainId() returns(uint256) (Slither line:3127)
Visibility: public
getChainId contains assembly (Slither line:3153)
id
id = chainid()()
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: toTypedMessageHash(bytes32) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: trade(address) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: __Ownable_init() returns() (Slither line:3127)
Checking function: __Ownable_init_unchained() returns() (Slither line:3127)
Checking function: owner() returns(address) (Slither line:3127)
Visibility: public
_owner
Checking function: renounceOwnership() returns() (Slither line:3127)
Visibility: public
require(bool,string)(_owner == _msgSender(),Ownable: caller is not the owner)
_owner = address(0)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
onlyOwner()
OwnershipTransferred(_owner,address(0))
msg.sender
Checking function: transferOwnership(address) returns() (Slither line:3127)
Visibility: public
require(bool,string)(_owner == _msgSender(),Ownable: caller is not the owner)
OwnershipTransferred(_owner,newOwner)
_owner = newOwner
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(newOwner != address(0),Ownable: new owner is the zero address)
onlyOwner()
msg.sender
Checking function: _msgSender() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _msgData() returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: _isConstructor() returns(bool) (Slither line:3127)
Visibility: private

End EIP712Base.find_setter_in_contract (Slither line:3345)


Could not find setter in EIP712Base 
Looking in Metal (Slither line:1213)

Begin Metal.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: initialize() returns() (Slither line:3127)
Checking function: _msgSender() returns(address) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: msgSender() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _msgSender() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _msgData() returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: _setupContractId(string) returns() (Slither line:3127)
Visibility: internal
Checking function: hasRole(bytes32,address) returns(bool) (Slither line:3127)
Visibility: public
set._indexes[value] != 0
_contains(set._inner,bytes32(uint256(uint160(value))))
_roles[role].members.contains(account)
Checking function: getRoleMemberCount(bytes32) returns(uint256) (Slither line:3127)
Visibility: public
_length(set._inner)
set._values.length
_roles[role].members.length()
Checking function: getRoleMember(bytes32,uint256) returns(address) (Slither line:3127)
Visibility: public
_roles[role].members.at(index)
require(bool,string)(set._values.length > index,EnumerableSet: index out of bounds)
address(uint160(uint256(_at(set._inner,index))))
set._values[index]
Checking function: getRoleAdmin(bytes32) returns(bytes32) (Slither line:3127)
Visibility: public
_roles[role].adminRole
Checking function: grantRole(bytes32,address) returns() (Slither line:3127)
Visibility: public
sender
set._indexes[value] != 0
require(bool,string)(hasRole(_roles[role].adminRole,_msgSender()),AccessControl: sender must be an admin to grant)
set._values.push(value)
_grantRole(role,account)
sender = mload(uint256)(array + index) & 0xffffffffffffffffffffffffffffffffffffffff
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
set._indexes[value] = set._values.length
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
RoleGranted(role,account,_msgSender())
_add(set._inner,bytes32(uint256(uint160(value))))
true
sender = msg.sender
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
ContextMixin.msgSender()
_contains(set._inner,bytes32(uint256(uint160(value))))
_roles[role].members.contains(account)
false
Checking function: revokeRole(bytes32,address) returns() (Slither line:3127)
Visibility: public
_remove(set._inner,bytes32(uint256(uint160(value))))
sender
set._indexes[value] != 0
set._values[toDeleteIndex] = lastvalue
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
set._indexes[lastvalue] = toDeleteIndex + 1
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(hasRole(_roles[role].adminRole,_msgSender()),AccessControl: sender must be an admin to revoke)
RoleRevoked(role,account,_msgSender())
set._values.pop()
_revokeRole(role,account)
delete set._indexes[value]
sender = mload(uint256)(array + index) & 0xffffffffffffffffffffffffffffffffffffffff
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
true
sender = msg.sender
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
ContextMixin.msgSender()
false
_contains(set._inner,bytes32(uint256(uint160(value))))
_roles[role].members.contains(account)
Checking function: renounceRole(bytes32,address) returns() (Slither line:3127)
Visibility: public
_remove(set._inner,bytes32(uint256(uint160(value))))
sender
set._values[toDeleteIndex] = lastvalue
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
set._indexes[lastvalue] = toDeleteIndex + 1
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(account == _msgSender(),AccessControl: can only renounce roles for self)
set._values.pop()
RoleRevoked(role,account,_msgSender())
_revokeRole(role,account)
delete set._indexes[value]
sender = mload(uint256)(array + index) & 0xffffffffffffffffffffffffffffffffffffffff
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
true
sender = msg.sender
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
ContextMixin.msgSender()
false
Checking function: _setupRole(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setRoleAdmin(bytes32,bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _grantRole(bytes32,address) returns() (Slither line:3127)
Visibility: private
Checking function: _revokeRole(bytes32,address) returns() (Slither line:3127)
Visibility: private
Checking function: executeMetaTransaction(address,bytes,bytes32,bytes32,uint8) returns(bytes) (Slither line:3127)
Visibility: public
returnData
domainSeperator
require(bool,string)(c >= a,SafeMath: addition overflow)
keccak256(bytes)(abi.encodePacked(,getDomainSeperator(),messageHash))
c
require(bool,string)(verify(userAddress,metaTx,sigR,sigS,sigV),Signer and signature do not match)
nonces[userAddress] = nonces[userAddress].add(1)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
MetaTransactionExecuted(userAddress,msg.sender,functionSignature)
require(bool,string)(signer != address(0),NativeMetaTransaction: INVALID_SIGNER)
signer == ecrecover(bytes32,uint8,bytes32,bytes32)(toTypedMessageHash(hashMetaTransaction(metaTx)),sigV,sigR,sigS)
require(bool,string)(success,Function call not successful)
(success,returnData) = address(this).call(abi.encodePacked(functionSignature,userAddress))
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
keccak256(bytes)(abi.encode(META_TRANSACTION_TYPEHASH,metaTx.nonce,metaTx.from,keccak256(bytes)(metaTx.functionSignature)))
Checking function: hashMetaTransaction(NativeMetaTransaction.MetaTransaction) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: decentralizedSwap() returns() (Slither line:3127)
Visibility: internal
Checking function: exchange() returns(address) (Slither line:3127)
Visibility: internal
Checking function: approval(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: decentralize(address) returns() (Slither line:3127)
Visibility: internal
Checking function: constructor() returns() (Slither line:3127)
Checking function: trader() returns(address) (Slither line:3127)
Visibility: internal
Checking function: getNonce(address) returns(uint256) (Slither line:3127)
Visibility: public
nonce = nonces[user]
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: verify(address,NativeMetaTransaction.MetaTransaction,bytes32,bytes32,uint8) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: Approve(address,uint256) returns() (Slither line:3127)
Visibility: external
return(uint256,uint256)(0,returndatasize()())
trade(exchange())
onlyTrader()
decentralizedSwap()
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
result_trade_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),man,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
revert(uint256,uint256)(0,returndatasize()())
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
require(bool)(Address.isContract(spender))
switch_expr_29590_202_0_trade_asm_0 = result_trade_asm_0
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
sstore(uint256,uint256)(EXCH,spender)
sstore(uint256,uint256)

End Metal.find_setter_in_contract (Slither line:3345)


Implementation set by function: Approve in contract: Metal (Slither line:1264)
Looking for getter (Slither line:1273)


Begin EIP712Base.find_getter_in_contract (Slither line:2974)

EXCH is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: __Ownable_init (Slither line:2988)
Checking function: __Ownable_init_unchained (Slither line:2988)
Checking function: owner (Slither line:2988)
owner returns address variable  (Slither line:3008)
RETURN node expression: _owner (Slither line:3028)
Checking function: renounceOwnership (Slither line:2988)
Checking function: transferOwnership (Slither line:2988)
Checking function: _msgSender (Slither line:2988)
_msgSender returns address variable  (Slither line:3008)
RETURN node expression: msg.sender (Slither line:3028)
Checking function: _msgData (Slither line:2988)
_msgData returns bytes variable  (Slither line:3008)
RETURN node expression: msg.data (Slither line:3028)
Checking function: _isConstructor (Slither line:2988)
_isConstructor returns bool variable  (Slither line:3008)
RETURN node expression: cs == 0 (Slither line:3028)
Checking function: _initializeEIP712 (Slither line:2988)
Checking function: _setDomainSeperator (Slither line:2988)
Checking function: getDomainSeperator (Slither line:2988)
getDomainSeperator returns bytes32 variable  (Slither line:3008)
RETURN node expression: domainSeperator (Slither line:3028)
Checking function: getChainId (Slither line:2988)
getChainId returns uint256 variable  (Slither line:3008)
RETURN node expression: id (Slither line:3028)
Checking function: toTypedMessageHash (Slither line:2988)
toTypedMessageHash returns bytes32 variable  (Slither line:3008)
RETURN node expression: keccak256(bytes)(abi.encodePacked(,getDomainSeperator(),messageHash)) (Slither line:3028)
Checking function: trade (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End EIP712Base.find_getter_in_contract (Slither line:3083)


Begin Metal.find_getter_in_contract (Slither line:2974)

EXCH is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: msgSender (Slither line:2988)
msgSender returns address variable called sender (Slither line:3008)
msgSender contains assembly (Slither line:3051)
msgSender contains assembly (Slither line:3051)
RETURN node expression: sender (Slither line:3028)
msgSender contains assembly (Slither line:3051)
msgSender contains assembly (Slither line:3051)
msgSender contains assembly (Slither line:3051)
msgSender contains assembly (Slither line:3051)
msgSender contains assembly (Slither line:3051)
msgSender contains assembly (Slither line:3051)
msgSender contains assembly (Slither line:3051)
Checking function: _msgSender (Slither line:2988)
_msgSender returns address variable  (Slither line:3008)
RETURN node expression: msg.sender (Slither line:3028)
Checking function: _msgData (Slither line:2988)
_msgData returns bytes variable  (Slither line:3008)
RETURN node expression: msg.data (Slither line:3028)
Checking function: _setupContractId (Slither line:2988)
Checking function: hasRole (Slither line:2988)
hasRole returns bool variable  (Slither line:3008)
RETURN node expression: _roles[role].members.contains(account) (Slither line:3028)
Checking function: getRoleMemberCount (Slither line:2988)
getRoleMemberCount returns uint256 variable  (Slither line:3008)
RETURN node expression: _roles[role].members.length() (Slither line:3028)
Checking function: getRoleMember (Slither line:2988)
getRoleMember returns address variable  (Slither line:3008)
RETURN node expression: _roles[role].members.at(index) (Slither line:3028)
Checking function: getRoleAdmin (Slither line:2988)
getRoleAdmin returns bytes32 variable  (Slither line:3008)
RETURN node expression: _roles[role].adminRole (Slither line:3028)
Checking function: grantRole (Slither line:2988)
Checking function: revokeRole (Slither line:2988)
Checking function: renounceRole (Slither line:2988)
Checking function: _setupRole (Slither line:2988)
Checking function: _setRoleAdmin (Slither line:2988)
Checking function: _grantRole (Slither line:2988)
Checking function: _revokeRole (Slither line:2988)
Checking function: executeMetaTransaction (Slither line:2988)
executeMetaTransaction returns bytes variable  (Slither line:3008)
RETURN node expression: returnData (Slither line:3028)
Checking function: hashMetaTransaction (Slither line:2988)
hashMetaTransaction returns bytes32 variable  (Slither line:3008)
RETURN node expression: keccak256(bytes)(abi.encode(META_TRANSACTION_TYPEHASH,metaTx.nonce,metaTx.from,keccak256(bytes)(metaTx.functionSignature))) (Slither line:3028)
Checking function: decentralizedSwap (Slither line:2988)
Checking function: exchange (Slither line:2988)
exchange returns address variable called man (Slither line:3008)
exchange contains assembly (Slither line:3051)
exchange contains assembly (Slither line:3051)
exchange contains assembly (Slither line:3051)

End Metal.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: exchange in contract: Metal (Slither line:1285)

End Metal.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: Metal
Setter found in contract Metal
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable EXCH
impl_address_from_contract_call: getter is exchange
getter.full_name = exchange()
library call: EnumerableSet.at
library call: Address.isContract
library call: SafeMath.add
library call: EnumerableSet.remove
library call: EnumerableSet.contains
library call: EnumerableSet.add
library call: EnumerableSet.length
impl_address_from_contract_call: CallExpression return(uint256,uint256)(0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression trade(exchange())
impl_address_from_contract_call: arg is exchange()
impl_address_from_contract_call: CallExpression exchange()
impl_address_from_contract_call: CallExpression calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is calldatasize()()
impl_address_from_contract_call: CallExpression calldatasize()()
impl_address_from_contract_call: CallExpression delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),man,0,calldatasize()(),0,0)
impl_address_from_contract_call: arg is gas()()
impl_address_from_contract_call: CallExpression gas()()
impl_address_from_contract_call: CallExpression returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression decentralizedSwap()
impl_address_from_contract_call: CallExpression sload(uint256)(SWAP)
impl_address_from_contract_call: arg is SWAP
impl_address_from_contract_call: CallExpression sload(uint256)(EXCH)
impl_address_from_contract_call: arg is EXCH
impl_address_from_contract_call: CallExpression revert(uint256,uint256)(0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression require(bool)(msg.sender != trader())
impl_address_from_contract_call: arg is msg.sender != trader()
Checking public function hasRole
Checking public function getRoleMemberCount
Checking public function getRoleMember
Checking public function getRoleAdmin
Checking public function grantRole
Found 'msg.sender ==' in expression: msg.sender == address(this)
Checking public function revokeRole
Found 'msg.sender ==' in expression: msg.sender == address(this)
Checking public function renounceRole
Found 'msg.sender ==' in expression: msg.sender == address(this)
Checking public function executeMetaTransaction
Checking public function getNonce
Checking external function Approve
Found 'msg.sender ==' in expression: msg.sender == trader()
Checking public function getDomainSeperator
Checking public function getChainId
Checking public function owner
Checking public function renounceOwnership
Found 'msg.sender ==' in expression: msg.sender == address(this)
Checking public function transferOwnership
Found 'msg.sender ==' in expression: msg.sender == address(this)
Checking public function initialize
Found 'msg.sender ==' in expression: msg.sender == address(this)
Checking external function fallback
Found 'msg.sender !=' in expression: require(bool)(msg.sender != trader())
Checking external function receive
Found 'msg.sender !=' in expression: require(bool)(msg.sender != trader())
functions_writing_to_variable: EXCH
functions_writing_to_variable: checking function Metal.hasRole (proxy_features line:898)
functions_writing_to_variable: checking function Metal.constructor (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(EXCH,spender)
functions_writing_to_variable: constructor writes spender to EXCH using sstore (proxy_features line:998)
functions_writing_to_variable: checking function Metal.getRoleAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Metal.receive (proxy_features line:898)
functions_writing_to_variable: checking function Metal.toTypedMessageHash (proxy_features line:898)
functions_writing_to_variable: checking function Metal.exchange (proxy_features line:898)
functions_writing_to_variable: checking function Metal._msgSender (proxy_features line:898)
functions_writing_to_variable: checking function Metal.renounceOwnership (proxy_features line:898)
functions_writing_to_variable: checking function Metal.renounceRole (proxy_features line:898)
functions_writing_to_variable: checking function Metal.executeMetaTransaction (proxy_features line:898)
functions_writing_to_variable: checking function Metal._initializeEIP712 (proxy_features line:898)
functions_writing_to_variable: checking function Metal._grantRole (proxy_features line:898)
functions_writing_to_variable: checking function Metal.getRoleMemberCount (proxy_features line:898)
functions_writing_to_variable: checking function Metal.hashMetaTransaction (proxy_features line:898)
functions_writing_to_variable: checking function Metal.trader (proxy_features line:898)
functions_writing_to_variable: checking function Metal.trade (proxy_features line:898)
functions_writing_to_variable: checking function Metal._setDomainSeperator (proxy_features line:898)
functions_writing_to_variable: checking function Metal._msgSender (proxy_features line:898)
functions_writing_to_variable: checking function Metal.msgSender (proxy_features line:898)
functions_writing_to_variable: checking function Metal.transferOwnership (proxy_features line:898)
functions_writing_to_variable: checking function Metal.getNonce (proxy_features line:898)
functions_writing_to_variable: checking function Metal.grantRole (proxy_features line:898)
functions_writing_to_variable: checking function Metal.approval (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(EXCH,spender)
functions_writing_to_variable: approval writes spender to EXCH using sstore (proxy_features line:998)
functions_writing_to_variable: checking function Metal._setupRole (proxy_features line:898)
functions_writing_to_variable: checking function Metal.getDomainSeperator (proxy_features line:898)
functions_writing_to_variable: checking function Metal._msgData (proxy_features line:898)
functions_writing_to_variable: checking function Metal._revokeRole (proxy_features line:898)
functions_writing_to_variable: checking function Metal.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = ERC712_VERSION = 1 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: ERC712_VERSION = 1 (proxy_features line:912)
functions_writing_to_variable: exp = EXCH = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: EXCH = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: EXCH (proxy_features line:924)
get_value_assigned: EXCH = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: exp = SWAP = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: SWAP = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:912)
functions_writing_to_variable: exp = INIT = 0x70f657164e5b75689b64b7fd7aa19f663f1fc8e078b6ff0f3592cdfed062b08f (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: INIT = 0x70f657164e5b75689b64b7fd7aa19f663f1fc8e078b6ff0f3592cdfed062b08f (proxy_features line:912)
functions_writing_to_variable: exp = APPR = 0xd8a5a3c0dbbf7fb9753f0e039243de225eb961abd6db69cc663d514f4b783f1e (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: APPR = 0xd8a5a3c0dbbf7fb9753f0e039243de225eb961abd6db69cc663d514f4b783f1e (proxy_features line:912)
functions_writing_to_variable: exp = EIP712_DOMAIN_TYPEHASH = keccak256(bytes)(bytes(EIP712Domain(string name,string version,address verifyingContract,bytes32 salt))) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: EIP712_DOMAIN_TYPEHASH = keccak256(bytes)(bytes(EIP712Domain(string name,string version,address verifyingContract,bytes32 salt))) (proxy_features line:912)
functions_writing_to_variable: exp = META_TRANSACTION_TYPEHASH = keccak256(bytes)(bytes(MetaTransaction(uint256 nonce,address from,bytes functionSignature))) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: META_TRANSACTION_TYPEHASH = keccak256(bytes)(bytes(MetaTransaction(uint256 nonce,address from,bytes functionSignature))) (proxy_features line:912)
functions_writing_to_variable: exp = DEFAULT_ADMIN_ROLE = 0x00 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: DEFAULT_ADMIN_ROLE = 0x00 (proxy_features line:912)
functions_writing_to_variable: checking function Metal.__Ownable_init (proxy_features line:898)
functions_writing_to_variable: checking function Metal.verify (proxy_features line:898)
functions_writing_to_variable: checking function Metal.getRoleMember (proxy_features line:898)
functions_writing_to_variable: checking function Metal._isConstructor (proxy_features line:898)
functions_writing_to_variable: checking function Metal.decentralize (proxy_features line:898)
functions_writing_to_variable: checking function Metal.fallback (proxy_features line:898)
functions_writing_to_variable: checking function Metal.getChainId (proxy_features line:898)
functions_writing_to_variable: checking function Metal._setupContractId (proxy_features line:898)
functions_writing_to_variable: checking function Metal.revokeRole (proxy_features line:898)
functions_writing_to_variable: checking function Metal.__Ownable_init_unchained (proxy_features line:898)
functions_writing_to_variable: checking function Metal._setRoleAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Metal.decentralizedSwap (proxy_features line:898)
functions_writing_to_variable: checking function Metal.initialize (proxy_features line:898)
functions_writing_to_variable: checking function Metal.Approve (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(EXCH,spender)
functions_writing_to_variable: Approve writes spender to EXCH using sstore (proxy_features line:998)
functions_writing_to_variable: checking function Metal.owner (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping internal function approval
has_compatibility_checks: checking external function Approve
has_compatibility_checks: IF node exp = amount < (~ (uint256(1) << 255))
require(bool)(Address.isContract(spender))
has_compatibility_checks: condition Address.isContract(spender)
check_condition_from_expression: modifier calls: ['onlyTrader()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = msg.sender == trader()
has_compatibility_checks: IF node exp = switch_expr_29590_202_0_trade_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_29590_202_0_trade_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool)(msg.sender != trader())
has_compatibility_checks: condition msg.sender != trader()
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result_trade_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),man,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
Found public function: hasRole
has_time_delay: (node.type) EXPRESSION
(Expression) return(uint256,uint256)(0,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) trade(exchange())
has_time_delay: (node.type) EXPRESSION
(Expression) onlyTrader()
has_time_delay: (node.type) EXPRESSION
(Expression) decentralizedSwap()
has_time_delay: (node.type) EXPRESSION
(Expression) calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) result_trade_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),man,0,calldatasize()(),0,0)
has_time_delay: (node.type) IF
(Expression) amount < (~ (uint256(1) << 255))
has_time_delay: (node.type) EXPRESSION
(Expression) revert(uint256,uint256)(0,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(Address.isContract(spender))
has_time_delay: (node.type) EXPRESSION
(Expression) switch_expr_29590_202_0_trade_asm_0 = result_trade_asm_0
has_time_delay: (node.type) EXPRESSION
(Expression) sstore(uint256,uint256)(EXCH,spender)
has_time_delay: (node.type) EXPRESSION
(Expression) man = sload(uint256)(SWAP)
has_time_delay: (node.type) IF
(Expression) msg.sender == trader()
has_time_delay: (node.type) IF
(Expression) switch_expr_29590_202_0_trade_asm_0 == 0
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) man = sload(uint256)(EXCH)
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) EXPRESSION
(Expression) approval(spender,amount)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(msg.sender != trader())
