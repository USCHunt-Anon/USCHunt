
Begin NFTExchangeProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin NFTExchangeProxy.find_delegatecall_in_exp_node

Found Expression Node: size_fallback_asm_0 = returndatasize()() (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: returndatasize()
Type of call: uint256 (Slither line:2817)
Args:

End NFTExchangeProxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin NFTExchangeProxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(_impl != address(0),NFTExchangeProxy: Not set the implementation yet) (Slither line:2802)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2817)
Args:
_impl != address(0)
NFTExchangeProxy: Not set the implementation yet

End NFTExchangeProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin NFTExchangeProxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,size_fallback_asm_0) (Slither line:2802)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
ptr_fallback_asm_0
0
size_fallback_asm_0

End NFTExchangeProxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin NFTExchangeProxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called '_impl'
Looking for corresponding Variable
Current function: fallback

Begin NFTExchangeProxy.find_delegate_variable_from_name
Searching for _impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking implementationPosition (Slither line:1689)
Checking proxyOwnerPosition (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking _impl (Slither line:1703)
_impl is a Local Variable in NFTExchangeProxy.fallback (Slither line:1707)
Expression: implementation() (Slither line:1719)

Begin NFTExchangeProxy.find_delegate_from_call_exp

implementation() (Slither line:2003)
called = implementation (Slither line:2010)
AssignmentOperation: impl = sload(uint256)(position) (Slither line:2117)
CallExpression: sload(uint256) (Slither line:2123)
Found storage slot: implementationPosition (Slither line:2140)
implementation returns a variable of type address   called impl (Slither line:2193)
implementation contains assembly - looking for sload (Slither line:2199)

End NFTExchangeProxy.find_delegate_from_call_exp (Slither line:2328)

Call Expression
End NFTExchangeProxy.find_delegate_variable_by_name (Slither line:1739)


End NFTExchangeProxy.find_delegatecall_in_asm (Slither line:1637)

Setting NFTExchangeProxy._delegate_variable = NFTExchangeProxy._proxy_impl_slot: implementationPosition (Slither line:1473)


End NFTExchangeProxy.is_proxy (Slither line:1476)


Begin NFTExchangeProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: NFTExchangeProxy 
Call destination implementationPosition is constant (Slither line:1146)

implementationPosition is the implementation storage slot (Slither line:1149)

NFTExchangeProxy is delegating to implementationPosition
Looking for setter (Slither line:1200)


Begin NFTExchangeProxy.find_setter_in_contract (Slither line:3119)

Expression: keccak256(bytes)(implementation.contract:2022) (Slither line:3122)
Checking function: constructor() returns() (Slither line:3127)
Checking function: proxyOwner() returns(address) (Slither line:3127)
Visibility: public
proxyOwner contains assembly (Slither line:3153)
owner = sload(uint256)(position)
is an Assignment Operation (Slither line:3216)
keccak256(bytes)(implementation.contract:2022)
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: public
implementation contains assembly (Slither line:3153)
impl = sload(uint256)(position)
is an Assignment Operation (Slither line:3216)
keccak256(bytes)(implementation.contract:2022)
Checking function: setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: public
owner = sload(uint256)(position)
is an Assignment Operation (Slither line:3216)
keccak256(bytes)(implementation.contract:2022)
require(bool,string)(currentImplementation != _newImplementation,NFTExchangeProxy: Upgrade the current proxy contract)
setImplementation(_newImplementation)
_upgradeTo(_implementation)
Upgraded(_newImplementation)
onlyProxyOwner()
require(bool)(msg.sender == proxyOwner())
sstore(uint256,uint256)(position,_impl)
sstore(uint256,uint256)

End NFTExchangeProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: NFTExchangeProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin NFTExchangeProxy.find_getter_in_contract (Slither line:2974)

implementationPosition is a Variable object
keccak256(bytes)(implementation.contract:2022)
Checking function: constructor (Slither line:2988)
Checking function: proxyOwner (Slither line:2988)
proxyOwner returns address variable called owner (Slither line:3008)
proxyOwner contains assembly (Slither line:3051)
proxyOwner contains assembly (Slither line:3051)
proxyOwner contains assembly (Slither line:3051)
proxyOwner contains assembly (Slither line:3051)
Checking function: implementation (Slither line:2988)
implementation returns address variable called impl (Slither line:3008)
implementation contains assembly (Slither line:3051)

End NFTExchangeProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: implementation in contract: NFTExchangeProxy (Slither line:1285)

End NFTExchangeProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: NFTExchangeProxy
Setter found in contract NFTExchangeProxy
Checking public function proxyOwner
Checking public function implementation
Checking public function upgradeTo
Found 'msg.sender ==' in expression: require(bool)(msg.sender == proxyOwner())
Checking public function transferProxyOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == proxyOwner())
Checking public function setSuperAdmin
Found 'msg.sender ==' in expression: require(bool)(msg.sender == proxyOwner())
Checking external function fallback
Checking external function receive
functions_writing_to_variable: implementationPosition
functions_writing_to_variable: checking function NFTExchangeProxy.upgradeTo (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(position,_impl)
functions_writing_to_variable: upgradeTo writes _impl to implementationPosition using sstore (proxy_features line:998)
functions_writing_to_variable: checking function NFTExchangeProxy.setSuperAdmin (proxy_features line:898)
functions_writing_to_variable: checking function NFTExchangeProxy.setImplementation (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(position,_impl)
functions_writing_to_variable: setImplementation writes _impl to implementationPosition using sstore (proxy_features line:998)
functions_writing_to_variable: checking function NFTExchangeProxy.receive (proxy_features line:898)
functions_writing_to_variable: checking function NFTExchangeProxy.constructor (proxy_features line:898)
functions_writing_to_variable: checking function NFTExchangeProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = implementationPosition = keccak256(bytes)(implementation.contract:2022) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementationPosition = keccak256(bytes)(implementation.contract:2022) (proxy_features line:912)
functions_writing_to_variable: Identifier: implementationPosition (proxy_features line:924)
get_value_assigned: implementationPosition = keccak256(bytes)(implementation.contract:2022)
functions_writing_to_variable: exp = proxyOwnerPosition = keccak256(bytes)(owner.contract:2022) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: proxyOwnerPosition = keccak256(bytes)(owner.contract:2022) (proxy_features line:912)
functions_writing_to_variable: checking function NFTExchangeProxy.setUpgradabilityOwner (proxy_features line:898)
functions_writing_to_variable: checking function NFTExchangeProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function NFTExchangeProxy._upgradeTo (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(position,_impl)
functions_writing_to_variable: _upgradeTo writes _impl to implementationPosition using sstore (proxy_features line:998)
functions_writing_to_variable: checking function NFTExchangeProxy.proxyOwner (proxy_features line:898)
functions_writing_to_variable: checking function NFTExchangeProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function NFTExchangeProxy.transferProxyOwnership (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: checking public function upgradeTo
require(bool,string)(currentImplementation != _newImplementation,NFTExchangeProxy: Upgrade the current proxy contract)
has_compatibility_checks: condition currentImplementation != _newImplementation
require(bool)(msg.sender == proxyOwner())
has_compatibility_checks: condition msg.sender == proxyOwner()
has_compatibility_checks: skipping internal function setImplementation
has_compatibility_checks: skipping internal function _upgradeTo
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool,string)(_impl != address(0),NFTExchangeProxy: Not set the implementation yet)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_impl,ptr_fallback_asm_0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: _impl = implementation()
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: ptr_fallback_asm_0 = mload(uint256)(0x40)
Found public function: constructor
Found public function: proxyOwner
has_time_delay: (node.type) EXPRESSION
(Expression) owner = sload(uint256)(position)
has_time_delay: (node.type) NEW VARIABLE
(Expression) currentImplementation = implementation()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(currentImplementation != _newImplementation,NFTExchangeProxy: Upgrade the current proxy contract)
has_time_delay: (node.type) EXPRESSION
(Expression) setImplementation(_newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = implementationPosition
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(_implementation)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(_newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = implementationPosition
has_time_delay: (node.type) EXPRESSION
(Expression) onlyProxyOwner()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(msg.sender == proxyOwner())
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = proxyOwnerPosition
has_time_delay: (node.type) EXPRESSION
(Expression) sstore(uint256,uint256)(position,_impl)
has_time_delay: (node.type) EXPRESSION
(Expression) impl = sload(uint256)(position)
