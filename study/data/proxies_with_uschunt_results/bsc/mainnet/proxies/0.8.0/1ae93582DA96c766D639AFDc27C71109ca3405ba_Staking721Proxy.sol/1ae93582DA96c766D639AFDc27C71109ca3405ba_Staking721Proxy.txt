
Begin Staking721Proxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Staking721Proxy.find_delegatecall_in_exp_node

Found Expression Node: ptr__delegatecall_asm_0 = mload(uint256)(0x40) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: mload(uint256)
Type of call: uint256 (Slither line:2817)
Args:
0x40

End Staking721Proxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Staking721Proxy.find_delegatecall_in_exp_node

Found Expression Node: _delegatecall() (Slither line:2802)
Expression called: _delegatecall
Type of call: tuple() (Slither line:2817)
Args:

Found delegatecall in expression:
_delegatecall (Slither line:2824)


End Staking721Proxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin Staking721Proxy.find_delegatecall_in_asm (Slither line:1541)


End Staking721Proxy.find_delegatecall_in_asm (Slither line:1637)


Begin Staking721Proxy.find_delegatecall_in_asm (Slither line:1541)


End Staking721Proxy.find_delegatecall_in_asm (Slither line:1637)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Staking721Proxy.find_delegatecall_in_exp_node

Found Expression Node: calldatacopy(uint256,uint256,uint256)(ptr__delegatecall_asm_0,0,calldatasize()()) (Slither line:2802)
Expression called: calldatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
ptr__delegatecall_asm_0
0
calldatasize()()

End Staking721Proxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Staking721Proxy.find_delegatecall_in_exp_node

Found Expression Node: result__delegatecall_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()() - 10000,_impl,ptr__delegatecall_asm_0,calldatasize()(),0,0) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2817)
Args:
gas()() - 10000
_impl
ptr__delegatecall_asm_0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2824)

Destination is _impl (Slither line:2828)
dest.value: _impl (Slither line:2831)
Expression: implementation() (Slither line:2836)

Begin Staking721Proxy.find_delegate_from_call_exp

implementation() (Slither line:2003)
called = implementation (Slither line:2010)
AssignmentOperation: impl = sload(uint256)(position) (Slither line:2117)
CallExpression: sload(uint256) (Slither line:2123)
Found storage slot: implementationPosition (Slither line:2140)
implementation returns a variable of type address   called impl (Slither line:2193)
implementation contains assembly - looking for sload (Slither line:2199)

End Staking721Proxy.find_delegate_from_call_exp (Slither line:2328)


End Staking721Proxy.find_delegatecall_in_exp_node (Slither line:2858)

Setting Staking721Proxy._delegate_variable = Staking721Proxy._proxy_impl_slot: implementationPosition (Slither line:1473)


End Staking721Proxy.is_proxy (Slither line:1476)


Begin Staking721Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Staking721Proxy 
Call destination implementationPosition is constant (Slither line:1146)

implementationPosition is the implementation storage slot (Slither line:1149)

Staking721Proxy is delegating to implementationPosition
Looking for setter (Slither line:1200)


Begin Staking721Proxy.find_setter_in_contract (Slither line:3119)

Expression: keccak256(bytes)(implementation.contract.staking721:2021) (Slither line:3122)
Checking function: constructor(address) returns() (Slither line:3127)
Checking function: proxyOwner() returns(address) (Slither line:3127)
Visibility: public
proxyOwner contains assembly (Slither line:3153)
owner = sload(uint256)(position)
is an Assignment Operation (Slither line:3216)
keccak256(bytes)(implementation.contract.staking721:2021)
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: public
implementation contains assembly (Slither line:3153)
impl = sload(uint256)(position)
is an Assignment Operation (Slither line:3216)
keccak256(bytes)(implementation.contract.staking721:2021)
Checking function: transferProxyOwnership(address) returns() (Slither line:3127)
Visibility: public
owner = sload(uint256)(position)
is an Assignment Operation (Slither line:3216)
keccak256(bytes)(implementation.contract.staking721:2021)
require(bool,string)(msg.sender == proxyOwner(),Only proxy owner call execute this function)
onlyProxyOwner()
require(bool,string)(_newOwner != address(0),New owner address must not be zero address)
sstore(uint256,uint256)(position,_newProxyOwner)
sstore(uint256,uint256)
ProxyOwnershipTransferred(proxyOwner(),_newOwner)
_setUpgradeabilityOwner(_newOwner)
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: public
require(bool,string)(msg.sender == proxyOwner(),Only proxy owner call execute this function)
sstore(uint256,uint256)(position,_newImplementation)
sstore(uint256,uint256)

End Staking721Proxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: Staking721Proxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin Staking721Proxy.find_getter_in_contract (Slither line:2974)

implementationPosition is a Variable object
keccak256(bytes)(implementation.contract.staking721:2021)
Checking function: constructor (Slither line:2988)
Checking function: proxyOwner (Slither line:2988)
proxyOwner returns address variable called owner (Slither line:3008)
proxyOwner contains assembly (Slither line:3051)
proxyOwner contains assembly (Slither line:3051)
proxyOwner contains assembly (Slither line:3051)
proxyOwner contains assembly (Slither line:3051)
Checking function: implementation (Slither line:2988)
implementation returns address variable called impl (Slither line:3008)
implementation contains assembly (Slither line:3051)

End Staking721Proxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: implementation in contract: Staking721Proxy (Slither line:1285)

End Staking721Proxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: Staking721Proxy
Setter found in contract Staking721Proxy
Checking public function proxyOwner
Checking public function implementation
Checking public function transferProxyOwnership
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == proxyOwner(),Only proxy owner call execute this function)
Checking public function upgradeTo
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == proxyOwner(),Only proxy owner call execute this function)
Checking external function setAdmin
Checking external function setSuperAdmin
Checking external function emercencyWithdrawToken
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == proxyOwner(),Only proxy owner call execute this function)
Checking external function withdrawFund
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == proxyOwner(),Only proxy owner call execute this function)
Checking external function setTaxFee
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == proxyOwner(),Only proxy owner call execute this function)
Checking external function setFeeRecipientAddress
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == proxyOwner(),Only proxy owner call execute this function)
Checking external function fallback
functions_writing_to_variable: implementationPosition
functions_writing_to_variable: checking function Staking721Proxy.emercencyWithdrawToken (proxy_features line:898)
functions_writing_to_variable: checking function Staking721Proxy.constructor (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(position,_newImplementation)
functions_writing_to_variable: constructor writes _newImplementation to implementationPosition using sstore (proxy_features line:998)
functions_writing_to_variable: checking function Staking721Proxy.setSuperAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Staking721Proxy.upgradeTo (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(position,_newImplementation)
functions_writing_to_variable: upgradeTo writes _newImplementation to implementationPosition using sstore (proxy_features line:998)
functions_writing_to_variable: checking function Staking721Proxy.setTaxFee (proxy_features line:898)
functions_writing_to_variable: checking function Staking721Proxy._delegatecall (proxy_features line:898)
functions_writing_to_variable: checking function Staking721Proxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function Staking721Proxy.transferProxyOwnership (proxy_features line:898)
functions_writing_to_variable: checking function Staking721Proxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function Staking721Proxy.proxyOwner (proxy_features line:898)
functions_writing_to_variable: checking function Staking721Proxy._setImplementation (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(position,_newImplementation)
functions_writing_to_variable: _setImplementation writes _newImplementation to implementationPosition using sstore (proxy_features line:998)
functions_writing_to_variable: checking function Staking721Proxy._setUpgradeabilityOwner (proxy_features line:898)
functions_writing_to_variable: checking function Staking721Proxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = implementationPosition = keccak256(bytes)(implementation.contract.staking721:2021) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementationPosition = keccak256(bytes)(implementation.contract.staking721:2021) (proxy_features line:912)
functions_writing_to_variable: Identifier: implementationPosition (proxy_features line:924)
get_value_assigned: implementationPosition = keccak256(bytes)(implementation.contract.staking721:2021)
functions_writing_to_variable: exp = proxyOwnerPosition = keccak256(bytes)(owner.contract.staking721:2021) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: proxyOwnerPosition = keccak256(bytes)(owner.contract.staking721:2021) (proxy_features line:912)
functions_writing_to_variable: checking function Staking721Proxy.setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Staking721Proxy.setFeeRecipientAddress (proxy_features line:898)
functions_writing_to_variable: checking function Staking721Proxy.withdrawFund (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking public function upgradeTo
require(bool,string)(msg.sender == proxyOwner(),Only proxy owner call execute this function)
has_compatibility_checks: condition msg.sender == proxyOwner()
require(bool,string)(currentImplementation != _newImplementation,New implementation address must not be the same as old implementation address)
has_compatibility_checks: condition currentImplementation != _newImplementation
check_condition_from_expression: modifier calls: ['onlyProxyOwner()']
check_condition_from_expression: condition implementation() != _newImplementation
has_compatibility_checks: skipping internal function _setImplementation
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: _delegatecall()
Found public function: constructor
Found public function: proxyOwner
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == proxyOwner(),Only proxy owner call execute this function)
has_time_delay: (node.type) EXPRESSION
(Expression) sstore(uint256,uint256)(position,_newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = implementationPosition
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = proxyOwnerPosition
has_time_delay: (node.type) NEW VARIABLE
(Expression) currentImplementation = implementation()
has_time_delay: (node.type) EXPRESSION
(Expression) impl = sload(uint256)(position)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(currentImplementation != _newImplementation,New implementation address must not be the same as old implementation address)
has_time_delay: (node.type) EXPRESSION
(Expression) owner = sload(uint256)(position)
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(_newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(_newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) onlyProxyOwner()
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = implementationPosition
