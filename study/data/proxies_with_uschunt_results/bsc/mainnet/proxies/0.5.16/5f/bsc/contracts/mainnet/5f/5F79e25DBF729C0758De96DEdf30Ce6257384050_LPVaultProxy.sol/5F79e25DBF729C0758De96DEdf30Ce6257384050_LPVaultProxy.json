{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "LPVaultProxy (../../smart-contract-sanctuary/bsc/contracts/mainnet/proxies/0.5.16/5f/bsc/contracts/mainnet/5f/5F79e25DBF729C0758De96DEdf30Ce6257384050_LPVaultProxy.sol/5F79e25DBF729C0758De96DEdf30Ce6257384050_LPVaultProxy.sol#348-486)",
        "elements": [],
        "description": "LPVaultProxy (../../smart-contract-sanctuary/bsc/contracts/mainnet/proxies/0.5.16/5f/bsc/contracts/mainnet/5f/5F79e25DBF729C0758De96DEdf30Ce6257384050_LPVaultProxy.sol/5F79e25DBF729C0758De96DEdf30Ce6257384050_LPVaultProxy.sol#348-486) is an upgradeable proxy.\nlpVaultImplementation was found in a different contract.\nlpVaultImplementation is an address state variable.\n uses Inherited Storage\nMissing compatibility check in LPVaultProxy._acceptImplementation()\nMissing compatibility check in LPVaultProxy._setPendingImplementation(address)\n",
        "id": "837c442f69bdf336ab514ceb0b92e47c5d2f13bf629f380b89313045a2760c29",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "LPVaultAdminStorage.lpVaultImplementation",
          "impl_address_setter": "LPVaultProxy._acceptImplementation()",
          "impl_address_getter": "not found",
          "impl_address_location": "LPVaultAdminStorage (../../smart-contract-sanctuary/bsc/contracts/mainnet/proxies/0.5.16/5f/bsc/contracts/mainnet/5f/5F79e25DBF729C0758De96DEdf30Ce6257384050_LPVaultProxy.sol/5F79e25DBF729C0758De96DEdf30Ce6257384050_LPVaultProxy.sol#277-297)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "LPVaultProxy._acceptImplementation()": "missing",
              "LPVaultProxy._setPendingImplementation(address)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "_setPendingImplementation(address)",
              "_acceptImplementation()",
              "_setPendingAdmin(address)",
              "_acceptAdmin()"
            ]
          }
        }
      }
    ]
  }
}