
Begin UnitrollerAdminStorage.is_proxy (Slither line:1425)


End UnitrollerAdminStorage.is_proxy (Slither line:1428)


Begin UnitrollerAdminStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: UnitrollerAdminStorage 

End UnitrollerAdminStorage.is_upgradeable_proxy (Slither line:1407)


Begin BamitrollerErrorReporter.is_proxy (Slither line:1425)


End BamitrollerErrorReporter.is_proxy (Slither line:1428)


Begin BamitrollerErrorReporter.is_upgradeable_proxy (Slither line:1136)

Checking contract: BamitrollerErrorReporter 

End BamitrollerErrorReporter.is_upgradeable_proxy (Slither line:1407)


Begin Unitroller.is_proxy (Slither line:1425)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin Unitroller.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let free_mem_ptr := mload(0x40) (Slither line:1576)
    returndatacopy(free_mem_ptr, 0, returndatasize()) (Slither line:1576)
    switch success (Slither line:1576)
    case 0 { (Slither line:1576)
        revert(free_mem_ptr, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
    default { (Slither line:1576)
        return(free_mem_ptr, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
} (Slither line:1576)

End Unitroller.find_delegatecall_in_asm (Slither line:1637)


Begin Unitroller.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let free_mem_ptr := mload(0x40) (Slither line:1576)
    returndatacopy(free_mem_ptr, 0, returndatasize()) (Slither line:1576)
    switch success (Slither line:1576)
    case 0 { (Slither line:1576)
        revert(free_mem_ptr, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
    default { (Slither line:1576)
        return(free_mem_ptr, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
} (Slither line:1576)

End Unitroller.find_delegatecall_in_asm (Slither line:1637)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


Found LowLevelCall (Slither line:2740)


Found delegatecall in LowLevelCall (Slither line:2742)


End Contract.find_delegatecall_in_ir (Slither line:2773)


End Unitroller.is_proxy (Slither line:1476)


Begin Unitroller.is_upgradeable_proxy (Slither line:1136)

Checking contract: Unitroller 
Unitroller is delegating to BamitrollerImplementation
Looking for setter (Slither line:1200)

Looking for setter in UnitrollerAdminStorage (Slither line:1204)


Begin UnitrollerAdminStorage.find_setter_in_contract (Slither line:3119)


End UnitrollerAdminStorage.find_setter_in_contract (Slither line:3345)


Could not find setter in UnitrollerAdminStorage 
Looking in Unitroller (Slither line:1213)

Begin Unitroller.find_setter_in_contract (Slither line:3119)

Checking function: constructor() returns() (Slither line:3127)
Checking function: _setPendingImplementation(address) returns(uint256) (Slither line:3127)
Visibility: public
uint256(Error.NO_ERROR)
uint256(err)
pendingBamitrollerImplementation = newPendingImplementation
is an Assignment Operation (Slither line:3216)
Failure(uint256(err),uint256(info),0)
fail(Error.UNAUTHORIZED,FailureInfo.SET_PENDING_IMPLEMENTATION_OWNER_CHECK)
NewPendingImplementation(oldPendingImplementation,pendingBamitrollerImplementation)
Checking function: _acceptImplementation() returns(uint256) (Slither line:3127)
Visibility: public
BamitrollerImplementation = pendingBamitrollerImplementation
is an Assignment Operation (Slither line:3216)

End Unitroller.find_setter_in_contract (Slither line:3345)


Implementation set by function: _acceptImplementation in contract: Unitroller (Slither line:1264)
Looking for getter (Slither line:1273)


Begin UnitrollerAdminStorage.find_getter_in_contract (Slither line:2974)

BamitrollerImplementation is a Variable object
pendingBamitrollerImplementation

End UnitrollerAdminStorage.find_getter_in_contract (Slither line:3083)


Begin Unitroller.find_getter_in_contract (Slither line:2974)

BamitrollerImplementation is a Variable object
pendingBamitrollerImplementation
Checking function: fail (Slither line:2988)
fail returns uint256 variable  (Slither line:3008)
RETURN node expression: uint256(err) (Slither line:3028)
Checking function: failOpaque (Slither line:2988)
failOpaque returns uint256 variable  (Slither line:3008)
RETURN node expression: uint256(err) (Slither line:3028)
Checking function: constructor (Slither line:2988)
Checking function: _setPendingImplementation (Slither line:2988)
_setPendingImplementation returns uint256 variable  (Slither line:3008)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
RETURN node expression: fail(Error.UNAUTHORIZED,FailureInfo.SET_PENDING_IMPLEMENTATION_OWNER_CHECK) (Slither line:3028)
Checking function: _acceptImplementation (Slither line:2988)
_acceptImplementation returns uint256 variable  (Slither line:3008)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
RETURN node expression: fail(Error.UNAUTHORIZED,FailureInfo.ACCEPT_PENDING_IMPLEMENTATION_ADDRESS_CHECK) (Slither line:3028)
Checking function: _setPendingAdmin (Slither line:2988)
_setPendingAdmin returns uint256 variable  (Slither line:3008)
RETURN node expression: fail(Error.UNAUTHORIZED,FailureInfo.SET_PENDING_ADMIN_OWNER_CHECK) (Slither line:3028)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
Checking function: _acceptAdmin (Slither line:2988)
_acceptAdmin returns uint256 variable  (Slither line:3008)
RETURN node expression: fail(Error.UNAUTHORIZED,FailureInfo.ACCEPT_ADMIN_PENDING_ADMIN_CHECK) (Slither line:3028)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
Checking function: fallback (Slither line:2988)

End Unitroller.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in Unitroller (Slither line:1305)
or in UnitrollerAdminStorage (Slither line:1319)
Checking for BamitrollerImplementation at slot 2 in contract UnitrollerAdminStorage (Slither line:1355)
Found BamitrollerImplementation at slot 2 in contract UnitrollerAdminStorage (Slither line:1362)

Begin UnitrollerAdminStorage.find_getter_in_contract (Slither line:2974)

BamitrollerImplementation is a Variable object
pendingBamitrollerImplementation

End UnitrollerAdminStorage.find_getter_in_contract (Slither line:3083)

impl_address_from_contract_call: pendingBamitrollerImplementation
impl_address_from_contract_call: StateVariable BamitrollerImplementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression BamitrollerImplementation.delegatecall(msg.data)
Checking public function _setPendingImplementation
Checking public function _acceptImplementation
Checking public function _setPendingAdmin
Checking public function _acceptAdmin
Found 'msg.sender ==' in expression: msg.sender != pendingAdmin || msg.sender == address(0)
Checking public function _setPendingImplementation
Checking public function _acceptImplementation
Checking public function _setPendingAdmin
Checking public function _acceptAdmin
Found 'msg.sender ==' in expression: msg.sender != pendingAdmin || msg.sender == address(0)
Checking external function fallback
functions_writing_to_variable: BamitrollerImplementation
functions_writing_to_variable: checking function Unitroller.failOpaque (proxy_features line:898)
functions_writing_to_variable: checking function Unitroller._acceptImplementation (proxy_features line:898)
functions_writing_to_variable: exp = msg.sender != pendingBamitrollerImplementation || pendingBamitrollerImplementation == address(0) (proxy_features line:909)
functions_writing_to_variable: exp = fail(Error.UNAUTHORIZED,FailureInfo.ACCEPT_PENDING_IMPLEMENTATION_ADDRESS_CHECK) (proxy_features line:909)
functions_writing_to_variable: exp = oldImplementation = BamitrollerImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = BamitrollerImplementation (proxy_features line:912)
functions_writing_to_variable: exp = oldPendingImplementation = pendingBamitrollerImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldPendingImplementation = pendingBamitrollerImplementation (proxy_features line:912)
functions_writing_to_variable: exp = BamitrollerImplementation = pendingBamitrollerImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: BamitrollerImplementation = pendingBamitrollerImplementation (proxy_features line:912)
functions_writing_to_variable: Identifier: BamitrollerImplementation (proxy_features line:924)
get_value_assigned: BamitrollerImplementation = pendingBamitrollerImplementation
functions_writing_to_variable: exp = pendingBamitrollerImplementation = address(0) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: pendingBamitrollerImplementation = address(0) (proxy_features line:912)
functions_writing_to_variable: exp = NewImplementation(oldImplementation,BamitrollerImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = NewPendingImplementation(oldPendingImplementation,pendingBamitrollerImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = uint256(Error.NO_ERROR) (proxy_features line:909)
functions_writing_to_variable: exp = Failure(uint256(err),uint256(info),0) (proxy_features line:909)
functions_writing_to_variable: exp = uint256(err) (proxy_features line:909)
functions_writing_to_variable: _acceptImplementation writes pendingBamitrollerImplementation to BamitrollerImplementation (proxy_features line:929)
functions_writing_to_variable: checking function Unitroller.constructor (proxy_features line:898)
functions_writing_to_variable: checking function Unitroller._setPendingImplementation (proxy_features line:898)
functions_writing_to_variable: checking function Unitroller.fail (proxy_features line:898)
functions_writing_to_variable: checking function Unitroller._setPendingAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Unitroller.fallback (proxy_features line:898)
functions_writing_to_variable: checking function Unitroller._acceptAdmin (proxy_features line:898)
has_compatibility_checks: dependencies: ['pendingBamitrollerImplementation', 'newPendingImplementation', 'TMP_25']
functions_writing_to_variable: pendingBamitrollerImplementation
functions_writing_to_variable: checking function Unitroller.failOpaque (proxy_features line:898)
functions_writing_to_variable: checking function Unitroller._acceptImplementation (proxy_features line:898)
functions_writing_to_variable: exp = msg.sender != pendingBamitrollerImplementation || pendingBamitrollerImplementation == address(0) (proxy_features line:909)
functions_writing_to_variable: exp = fail(Error.UNAUTHORIZED,FailureInfo.ACCEPT_PENDING_IMPLEMENTATION_ADDRESS_CHECK) (proxy_features line:909)
functions_writing_to_variable: exp = oldImplementation = BamitrollerImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = BamitrollerImplementation (proxy_features line:912)
functions_writing_to_variable: exp = oldPendingImplementation = pendingBamitrollerImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldPendingImplementation = pendingBamitrollerImplementation (proxy_features line:912)
functions_writing_to_variable: exp = BamitrollerImplementation = pendingBamitrollerImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: BamitrollerImplementation = pendingBamitrollerImplementation (proxy_features line:912)
functions_writing_to_variable: exp = pendingBamitrollerImplementation = address(0) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: pendingBamitrollerImplementation = address(0) (proxy_features line:912)
functions_writing_to_variable: Identifier: pendingBamitrollerImplementation (proxy_features line:924)
get_value_assigned: pendingBamitrollerImplementation = address(0)
functions_writing_to_variable: exp = NewImplementation(oldImplementation,BamitrollerImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = NewPendingImplementation(oldPendingImplementation,pendingBamitrollerImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = uint256(Error.NO_ERROR) (proxy_features line:909)
functions_writing_to_variable: exp = Failure(uint256(err),uint256(info),0) (proxy_features line:909)
functions_writing_to_variable: exp = uint256(err) (proxy_features line:909)
functions_writing_to_variable: checking function Unitroller.constructor (proxy_features line:898)
functions_writing_to_variable: checking function Unitroller._setPendingImplementation (proxy_features line:898)
functions_writing_to_variable: exp = msg.sender != admin (proxy_features line:909)
functions_writing_to_variable: exp = fail(Error.UNAUTHORIZED,FailureInfo.SET_PENDING_IMPLEMENTATION_OWNER_CHECK) (proxy_features line:909)
functions_writing_to_variable: exp = oldPendingImplementation = pendingBamitrollerImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldPendingImplementation = pendingBamitrollerImplementation (proxy_features line:912)
functions_writing_to_variable: exp = pendingBamitrollerImplementation = newPendingImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: pendingBamitrollerImplementation = newPendingImplementation (proxy_features line:912)
functions_writing_to_variable: Identifier: pendingBamitrollerImplementation (proxy_features line:924)
get_value_assigned: pendingBamitrollerImplementation = newPendingImplementation
functions_writing_to_variable: exp = NewPendingImplementation(oldPendingImplementation,pendingBamitrollerImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = uint256(Error.NO_ERROR) (proxy_features line:909)
functions_writing_to_variable: exp = Failure(uint256(err),uint256(info),0) (proxy_features line:909)
functions_writing_to_variable: exp = uint256(err) (proxy_features line:909)
functions_writing_to_variable: _setPendingImplementation writes newPendingImplementation to pendingBamitrollerImplementation (proxy_features line:929)
functions_writing_to_variable: checking function Unitroller.fail (proxy_features line:898)
functions_writing_to_variable: checking function Unitroller._setPendingAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Unitroller.fallback (proxy_features line:898)
functions_writing_to_variable: checking function Unitroller._acceptAdmin (proxy_features line:898)
has_compatibility_checks: checking public function _acceptImplementation
has_compatibility_checks: IF node exp = msg.sender != pendingBamitrollerImplementation || pendingBamitrollerImplementation == address(0)
has_compatibility_checks: checking public function _setPendingImplementation
has_compatibility_checks: IF node exp = msg.sender != admin
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: (success) = BamitrollerImplementation.delegatecall(msg.data)
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: constructor
Found public function: _setPendingImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) BamitrollerImplementation = pendingBamitrollerImplementation
has_time_delay: (node.type) RETURN
(Expression) uint256(Error.NO_ERROR)
has_time_delay: (node.type) IF
(Expression) msg.sender != pendingBamitrollerImplementation || pendingBamitrollerImplementation == address(0)
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = BamitrollerImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) pendingBamitrollerImplementation = address(0)
has_time_delay: (node.type) RETURN
(Expression) uint256(err)
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,BamitrollerImplementation)
has_time_delay: (node.type) RETURN
(Expression) fail(Error.UNAUTHORIZED,FailureInfo.ACCEPT_PENDING_IMPLEMENTATION_ADDRESS_CHECK)
has_time_delay: (node.type) EXPRESSION
(Expression) Failure(uint256(err),uint256(info),0)
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldPendingImplementation = pendingBamitrollerImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) NewPendingImplementation(oldPendingImplementation,pendingBamitrollerImplementation)
