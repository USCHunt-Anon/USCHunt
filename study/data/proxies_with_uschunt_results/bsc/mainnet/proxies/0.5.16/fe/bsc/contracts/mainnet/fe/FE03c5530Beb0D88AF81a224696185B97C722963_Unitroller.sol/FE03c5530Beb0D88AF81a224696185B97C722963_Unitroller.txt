
Begin EIP20NonStandardInterface.is_proxy (Slither line:1425)


End EIP20NonStandardInterface.is_proxy (Slither line:1428)


Begin EIP20NonStandardInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: EIP20NonStandardInterface 

End EIP20NonStandardInterface.is_upgradeable_proxy (Slither line:1407)


Begin EIP20Interface.is_proxy (Slither line:1425)


End EIP20Interface.is_proxy (Slither line:1428)


Begin EIP20Interface.is_upgradeable_proxy (Slither line:1136)

Checking contract: EIP20Interface 

End EIP20Interface.is_upgradeable_proxy (Slither line:1407)


Begin PriceOracle.is_proxy (Slither line:1425)


End PriceOracle.is_proxy (Slither line:1428)


Begin PriceOracle.is_upgradeable_proxy (Slither line:1136)

Checking contract: PriceOracle 

End PriceOracle.is_upgradeable_proxy (Slither line:1407)


Begin ExponentialNoError.is_proxy (Slither line:1425)


End ExponentialNoError.is_proxy (Slither line:1428)


Begin ExponentialNoError.is_upgradeable_proxy (Slither line:1136)

Checking contract: ExponentialNoError 

End ExponentialNoError.is_upgradeable_proxy (Slither line:1407)


Begin UnitrollerEvents.is_proxy (Slither line:1425)


End UnitrollerEvents.is_proxy (Slither line:1428)


Begin UnitrollerEvents.is_upgradeable_proxy (Slither line:1136)

Checking contract: UnitrollerEvents 

End UnitrollerEvents.is_upgradeable_proxy (Slither line:1407)


Begin EsgtrollerInterface.is_proxy (Slither line:1425)


End EsgtrollerInterface.is_proxy (Slither line:1428)


Begin EsgtrollerInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: EsgtrollerInterface 

End EsgtrollerInterface.is_upgradeable_proxy (Slither line:1407)


Begin TokenErrorReporter.is_proxy (Slither line:1425)


End TokenErrorReporter.is_proxy (Slither line:1428)


Begin TokenErrorReporter.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenErrorReporter 

End TokenErrorReporter.is_upgradeable_proxy (Slither line:1407)


Begin CErc20Storage.is_proxy (Slither line:1425)


End CErc20Storage.is_proxy (Slither line:1428)


Begin CErc20Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: CErc20Storage 

End CErc20Storage.is_upgradeable_proxy (Slither line:1407)


Begin CDelegationStorage.is_proxy (Slither line:1425)


End CDelegationStorage.is_proxy (Slither line:1428)


Begin CDelegationStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: CDelegationStorage 

End CDelegationStorage.is_upgradeable_proxy (Slither line:1407)


Begin CDelegateInterface.is_proxy (Slither line:1425)


End CDelegateInterface.is_proxy (Slither line:1428)


Begin CDelegateInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CDelegateInterface 

End CDelegateInterface.is_upgradeable_proxy (Slither line:1407)


Begin CarefulMath.is_proxy (Slither line:1425)


End CarefulMath.is_proxy (Slither line:1428)


Begin CarefulMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: CarefulMath 

End CarefulMath.is_upgradeable_proxy (Slither line:1407)


Begin InterestRateModel.is_proxy (Slither line:1425)


End InterestRateModel.is_proxy (Slither line:1428)


Begin InterestRateModel.is_upgradeable_proxy (Slither line:1136)

Checking contract: InterestRateModel 

End InterestRateModel.is_upgradeable_proxy (Slither line:1407)


Begin UnitrollerAdminStorage.is_proxy (Slither line:1425)


End UnitrollerAdminStorage.is_proxy (Slither line:1428)


Begin UnitrollerAdminStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: UnitrollerAdminStorage 

End UnitrollerAdminStorage.is_upgradeable_proxy (Slither line:1407)


Begin EsgtrollerErrorReporter.is_proxy (Slither line:1425)


End EsgtrollerErrorReporter.is_proxy (Slither line:1428)


Begin EsgtrollerErrorReporter.is_upgradeable_proxy (Slither line:1136)

Checking contract: EsgtrollerErrorReporter 

End EsgtrollerErrorReporter.is_upgradeable_proxy (Slither line:1407)


Begin CErc20Interface.is_proxy (Slither line:1425)


End CErc20Interface.is_proxy (Slither line:1428)


Begin CErc20Interface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CErc20Interface 

End CErc20Interface.is_upgradeable_proxy (Slither line:1407)


Begin Unitroller.is_proxy (Slither line:1425)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin Unitroller.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let free_mem_ptr := mload(0x40) (Slither line:1576)
    returndatacopy(free_mem_ptr, 0, returndatasize()) (Slither line:1576)
    switch success (Slither line:1576)
    case 0 { (Slither line:1576)
        revert(free_mem_ptr, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
    default { (Slither line:1576)
        return(free_mem_ptr, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
} (Slither line:1576)

End Unitroller.find_delegatecall_in_asm (Slither line:1637)


Begin Unitroller.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let free_mem_ptr := mload(0x40) (Slither line:1576)
    returndatacopy(free_mem_ptr, 0, returndatasize()) (Slither line:1576)
    switch success (Slither line:1576)
    case 0 { (Slither line:1576)
        revert(free_mem_ptr, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
    default { (Slither line:1576)
        return(free_mem_ptr, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
} (Slither line:1576)

End Unitroller.find_delegatecall_in_asm (Slither line:1637)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


Found LowLevelCall (Slither line:2740)


Found delegatecall in LowLevelCall (Slither line:2742)


End Contract.find_delegatecall_in_ir (Slither line:2773)


End Unitroller.is_proxy (Slither line:1476)


Begin Unitroller.is_upgradeable_proxy (Slither line:1136)

Checking contract: Unitroller 
Unitroller is delegating to esgtrollerImplementation
Looking for setter (Slither line:1200)

Looking for setter in UnitrollerAdminStorage (Slither line:1204)


Begin UnitrollerAdminStorage.find_setter_in_contract (Slither line:3119)


End UnitrollerAdminStorage.find_setter_in_contract (Slither line:3345)


Could not find setter in UnitrollerAdminStorage 
Looking in Unitroller (Slither line:1213)

Begin Unitroller.find_setter_in_contract (Slither line:3119)

Checking function: constructor(address,address,address,bytes) returns() (Slither line:3127)
Checking function: _setImplementation(address,bytes) returns() (Slither line:3127)
Visibility: public
delegateTo(esgtrollerImplementation,data)
require(bool,string)(implementation_ != address(0),Unitroller::_setImplementation: invalid implementation address)
delegateToImplementation(abi.encodeWithSignature(_becomeImplementation(bytes),becomeImplementationData))
returnData
NewImplementation(oldImplementation,esgtrollerImplementation)
require(bool,string)(msg.sender == admin,Unitroller::_setImplementation: admin only)
esgtrollerImplementation = implementation_
is an Assignment Operation (Slither line:3216)

End Unitroller.find_setter_in_contract (Slither line:3345)


Implementation set by function: _setImplementation in contract: Unitroller (Slither line:1264)
Looking for getter (Slither line:1273)


Begin UnitrollerAdminStorage.find_getter_in_contract (Slither line:2974)

esgtrollerImplementation is a Variable object
implementation_

End UnitrollerAdminStorage.find_getter_in_contract (Slither line:3083)


Begin Unitroller.find_getter_in_contract (Slither line:2974)

esgtrollerImplementation is a Variable object
implementation_
Checking function: constructor (Slither line:2988)
Checking function: _setImplementation (Slither line:2988)
Checking function: _setPendingAdmin (Slither line:2988)
Checking function: _acceptAdmin (Slither line:2988)
Checking function: delegateTo (Slither line:2988)
delegateTo returns bytes variable  (Slither line:3008)
RETURN node expression: returnData (Slither line:3028)
Checking function: delegateToImplementation (Slither line:2988)
delegateToImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: delegateTo(esgtrollerImplementation,data) (Slither line:3028)
Checking function: fallback (Slither line:2988)

End Unitroller.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in Unitroller (Slither line:1305)
or in UnitrollerAdminStorage (Slither line:1319)

Begin EsgtrollerV1Storage.find_getter_in_contract (Slither line:2974)

esgtrollerImplementation is a Variable object
implementation_

End EsgtrollerV1Storage.find_getter_in_contract (Slither line:3083)


End Unitroller.is_upgradeable_proxy (Slither line:1332)

impl_address_from_contract_call: implementation_
impl_address_from_contract_call: StateVariable esgtrollerImplementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression esgtrollerImplementation.delegatecall(msg.data)
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,Unitroller::_setImplementation: admin only)
Checking public function _setPendingAdmin
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,Unitroller:_setPendingAdmin: admin only)
Checking public function _acceptAdmin
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == pendingAdmin && msg.sender != address(0),Unitroller:_acceptAdmin: pending admin only)
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,Unitroller::_setImplementation: admin only)
Checking public function _setPendingAdmin
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,Unitroller:_setPendingAdmin: admin only)
Checking public function _acceptAdmin
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == pendingAdmin && msg.sender != address(0),Unitroller:_acceptAdmin: pending admin only)
Checking public function delegateToImplementation
Checking external function fallback
functions_writing_to_variable: esgtrollerImplementation
functions_writing_to_variable: checking function Unitroller._setPendingAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Unitroller.delegateTo (proxy_features line:898)
functions_writing_to_variable: checking function Unitroller.fallback (proxy_features line:898)
functions_writing_to_variable: checking function Unitroller._setImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == admin,Unitroller::_setImplementation: admin only) (proxy_features line:909)
functions_writing_to_variable: exp = require(bool,string)(implementation_ != address(0),Unitroller::_setImplementation: invalid implementation address) (proxy_features line:909)
functions_writing_to_variable: exp = oldImplementation = esgtrollerImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = esgtrollerImplementation (proxy_features line:912)
functions_writing_to_variable: exp = esgtrollerImplementation = implementation_ (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: esgtrollerImplementation = implementation_ (proxy_features line:912)
functions_writing_to_variable: Identifier: esgtrollerImplementation (proxy_features line:924)
get_value_assigned: esgtrollerImplementation = implementation_
functions_writing_to_variable: exp = delegateToImplementation(abi.encodeWithSignature(_becomeImplementation(bytes),becomeImplementationData)) (proxy_features line:909)
functions_writing_to_variable: exp = NewImplementation(oldImplementation,esgtrollerImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = delegateTo(esgtrollerImplementation,data) (proxy_features line:909)
functions_writing_to_variable: exp = (success,returnData) = callee.delegatecall(data) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: (success,returnData) = callee.delegatecall(data) (proxy_features line:912)
functions_writing_to_variable: exp = returnData (proxy_features line:909)
functions_writing_to_variable: _setImplementation writes implementation_ to esgtrollerImplementation (proxy_features line:929)
functions_writing_to_variable: checking function Unitroller._acceptAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Unitroller.constructor (proxy_features line:898)
get_value_assigned: esgtrollerImplementation = implementation_
functions_writing_to_variable: constructor writes implementation_ to esgtrollerImplementation (proxy_features line:1013)
functions_writing_to_variable: checking function Unitroller.delegateToImplementation (proxy_features line:898)
has_compatibility_checks: dependencies: ['implementation_', 'implementation_']
has_compatibility_checks: checking public function _setImplementation
require(bool,string)(implementation_ != address(0),Unitroller::_setImplementation: invalid implementation address)
has_compatibility_checks: condition implementation_ != address(0)
check_condition_from_expression: condition implementation_ != address(0)
require(bool,string)(msg.sender == admin,Unitroller::_setImplementation: admin only)
has_compatibility_checks: condition msg.sender == admin
has_compatibility_checks: skipping constructor
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: (success) = esgtrollerImplementation.delegatecall(msg.data)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: constructor
Found public function: _setImplementation
has_time_delay: (node.type) RETURN
(Expression) delegateTo(esgtrollerImplementation,data)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(implementation_ != address(0),Unitroller::_setImplementation: invalid implementation address)
has_time_delay: (node.type) EXPRESSION
(Expression) delegateToImplementation(abi.encodeWithSignature(_becomeImplementation(bytes),becomeImplementationData))
has_time_delay: (node.type) RETURN
(Expression) returnData
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,esgtrollerImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = esgtrollerImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == admin,Unitroller::_setImplementation: admin only)
has_time_delay: (node.type) EXPRESSION
(Expression) esgtrollerImplementation = implementation_
has_time_delay: (node.type) EXPRESSION
(Expression) (success,returnData) = callee.delegatecall(data)

Begin EsgtrollerV1Storage.is_proxy (Slither line:1425)


End EsgtrollerV1Storage.is_proxy (Slither line:1428)


Begin EsgtrollerV1Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: EsgtrollerV1Storage 

End EsgtrollerV1Storage.is_upgradeable_proxy (Slither line:1407)


Begin ETokenStorage.is_proxy (Slither line:1425)


End ETokenStorage.is_proxy (Slither line:1428)


Begin ETokenStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: ETokenStorage 

End ETokenStorage.is_upgradeable_proxy (Slither line:1407)


Begin CDelegatorInterface.is_proxy (Slither line:1425)


End CDelegatorInterface.is_proxy (Slither line:1428)


Begin CDelegatorInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CDelegatorInterface 

End CDelegatorInterface.is_upgradeable_proxy (Slither line:1407)


Begin Exponential.is_proxy (Slither line:1425)


End Exponential.is_proxy (Slither line:1428)


Begin Exponential.is_upgradeable_proxy (Slither line:1136)

Checking contract: Exponential 

End Exponential.is_upgradeable_proxy (Slither line:1407)


Begin ETokenInterface.is_proxy (Slither line:1425)


End ETokenInterface.is_proxy (Slither line:1428)


Begin ETokenInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: ETokenInterface 

End ETokenInterface.is_upgradeable_proxy (Slither line:1407)


Begin EsgtrollerV2Storage.is_proxy (Slither line:1425)


End EsgtrollerV2Storage.is_proxy (Slither line:1428)


Begin EsgtrollerV2Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: EsgtrollerV2Storage 

End EsgtrollerV2Storage.is_upgradeable_proxy (Slither line:1407)


Begin EToken.is_proxy (Slither line:1425)


End EToken.is_proxy (Slither line:1428)


Begin EToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: EToken 

End EToken.is_upgradeable_proxy (Slither line:1407)


Begin EsgtrollerV3Storage.is_proxy (Slither line:1425)


End EsgtrollerV3Storage.is_proxy (Slither line:1428)


Begin EsgtrollerV3Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: EsgtrollerV3Storage 

End EsgtrollerV3Storage.is_upgradeable_proxy (Slither line:1407)


Begin EsgtrollerV4Storage.is_proxy (Slither line:1425)


End EsgtrollerV4Storage.is_proxy (Slither line:1428)


Begin EsgtrollerV4Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: EsgtrollerV4Storage 

End EsgtrollerV4Storage.is_upgradeable_proxy (Slither line:1407)


Begin EsgtrollerV5Storage.is_proxy (Slither line:1425)


End EsgtrollerV5Storage.is_proxy (Slither line:1428)


Begin EsgtrollerV5Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: EsgtrollerV5Storage 

End EsgtrollerV5Storage.is_upgradeable_proxy (Slither line:1407)

