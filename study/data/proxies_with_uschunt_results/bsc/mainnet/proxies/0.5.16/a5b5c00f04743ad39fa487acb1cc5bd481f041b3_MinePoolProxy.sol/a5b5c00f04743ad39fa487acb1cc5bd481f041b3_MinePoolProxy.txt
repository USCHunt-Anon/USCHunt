
Begin ReentrancyGuard.is_proxy (Slither line:1425)


End ReentrancyGuard.is_proxy (Slither line:1428)


Begin ReentrancyGuard.is_upgradeable_proxy (Slither line:1136)

Checking contract: ReentrancyGuard 

End ReentrancyGuard.is_upgradeable_proxy (Slither line:1407)


Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin Halt.is_proxy (Slither line:1425)


End Halt.is_proxy (Slither line:1428)


Begin Halt.is_upgradeable_proxy (Slither line:1136)

Checking contract: Halt 

End Halt.is_upgradeable_proxy (Slither line:1407)


Begin whiteListUint32.is_proxy (Slither line:1425)


End whiteListUint32.is_proxy (Slither line:1428)


Begin whiteListUint32.is_upgradeable_proxy (Slither line:1136)

Checking contract: whiteListUint32 

End whiteListUint32.is_upgradeable_proxy (Slither line:1407)


Begin whiteListUint256.is_proxy (Slither line:1425)


End whiteListUint256.is_proxy (Slither line:1428)


Begin whiteListUint256.is_upgradeable_proxy (Slither line:1136)

Checking contract: whiteListUint256 

End whiteListUint256.is_upgradeable_proxy (Slither line:1407)


Begin whiteListAddress.is_proxy (Slither line:1425)


End whiteListAddress.is_proxy (Slither line:1428)


Begin whiteListAddress.is_upgradeable_proxy (Slither line:1136)

Checking contract: whiteListAddress 

End whiteListAddress.is_upgradeable_proxy (Slither line:1407)


Begin Operator.is_proxy (Slither line:1425)


End Operator.is_proxy (Slither line:1428)


Begin Operator.is_upgradeable_proxy (Slither line:1136)

Checking contract: Operator 

End Operator.is_upgradeable_proxy (Slither line:1407)


Begin IMultiSignature.is_proxy (Slither line:1425)


End IMultiSignature.is_proxy (Slither line:1428)


Begin IMultiSignature.is_upgradeable_proxy (Slither line:1136)

Checking contract: IMultiSignature 

End IMultiSignature.is_upgradeable_proxy (Slither line:1407)


Begin multiSignatureClient.is_proxy (Slither line:1425)


End multiSignatureClient.is_proxy (Slither line:1428)


Begin multiSignatureClient.is_upgradeable_proxy (Slither line:1136)

Checking contract: multiSignatureClient 

End multiSignatureClient.is_upgradeable_proxy (Slither line:1407)


Begin MinePoolData.is_proxy (Slither line:1425)


End MinePoolData.is_proxy (Slither line:1428)


Begin MinePoolData.is_upgradeable_proxy (Slither line:1136)

Checking contract: MinePoolData 

End MinePoolData.is_upgradeable_proxy (Slither line:1407)


Begin ZOSLibAddress.is_proxy (Slither line:1425)


End ZOSLibAddress.is_proxy (Slither line:1428)


Begin ZOSLibAddress.is_upgradeable_proxy (Slither line:1136)

Checking contract: ZOSLibAddress 

End ZOSLibAddress.is_upgradeable_proxy (Slither line:1407)


Begin Proxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2802)
Expression called: _fallback
Type of call: tuple() (Slither line:2817)
Args:

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin Proxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in Proxy._delegate (Slither line:1805)
CallExpression: _fallback() (Slither line:1819)
CallExpression: _willFallback() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin Proxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
Got abstract function, looking for overriding function (Slither line:2025)
Failure (Slither line:2033)
_implementation returns a variable of type address   (Slither line:2193)
Return value is LocalVariable:  (Slither line:2266)
has no expression (Slither line:2326)

End Proxy.find_delegate_from_call_exp (Slither line:2328)

_delegate contains assembly, searching for sload (Slither line:1875)

End Proxy.find_delegate_variable_from_name (Slither line:1949)


Begin Proxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2683)


End Proxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2710)


End Proxy.find_delegatecall_in_asm (Slither line:1637)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: _willFallback() (Slither line:2802)
Expression called: _willFallback
Type of call: tuple() (Slither line:2817)
Args:

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2802)
Expression called: _delegate
Type of call: tuple() (Slither line:2817)
Args:
_implementation()

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 

End Proxy.is_upgradeable_proxy (Slither line:1407)


Begin MinePoolProxy.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin MinePoolProxy.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2802)
Expression called: _delegate
Type of call: tuple() (Slither line:2817)
Args:
_implementation()

End MinePoolProxy.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin MinePoolProxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2802)
Expression called: _fallback
Type of call: tuple() (Slither line:2817)
Args:

End MinePoolProxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin MinePoolProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin MinePoolProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking multiSignaturePositon (Slither line:1689)
Checking _owner (Slither line:1689)
Checking _operators (Slither line:1689)
Checking halted (Slither line:1689)
Checking reentrancyLock (Slither line:1689)
Checking phx (Slither line:1689)
Checking lp (Slither line:1689)
Checking lastUpdateTime (Slither line:1689)
Checking rewardPerTokenStored (Slither line:1689)
Checking rewardRate (Slither line:1689)
Checking rewardPerduration (Slither line:1689)
Checking duration (Slither line:1689)
Checking rewards (Slither line:1689)
Checking userRewardPerTokenPaid (Slither line:1689)
Checking periodFinish (Slither line:1689)
Checking startTime (Slither line:1689)
Checking totalsupply (Slither line:1689)
Checking balances (Slither line:1689)
Checking _phxFeeRatio (Slither line:1689)
Checking _htFeeAmount (Slither line:1689)
Checking _feeReciever (Slither line:1689)
Checking IMPLEMENTATION_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in MinePoolProxy._delegate (Slither line:1805)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin MinePoolProxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
Got abstract function, looking for overriding function (Slither line:2025)
Success (Slither line:2032)
_implementation returns a variable of type address   called impl (Slither line:2193)
_implementation contains assembly - looking for sload (Slither line:2199)
Looking in ASSEMBLY node (Slither line:2206)
{ impl := sload(slot) }  (Slither line:2210)
Return value set by sload in asm (Slither line:2212)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2232)

End MinePoolProxy.find_delegate_from_call_exp (Slither line:2328)

CallExpression: _fallback() (Slither line:1819)
CallExpression: _willFallback() (Slither line:1819)
_delegate contains assembly, searching for sload (Slither line:1875)

End MinePoolProxy.find_delegate_variable_from_name (Slither line:1949)


Begin MinePoolProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2683)


End MinePoolProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2710)


End MinePoolProxy.find_delegatecall_in_asm (Slither line:1637)

Setting MinePoolProxy._delegate_variable = MinePoolProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End MinePoolProxy.is_proxy (Slither line:1476)


Begin MinePoolProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: MinePoolProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

MinePoolProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)


Begin MinePoolProxy.find_setter_in_contract (Slither line:3119)

Expression: keccak256(bytes)(org.Phoenix.implementation.unlocksc) (Slither line:3122)
Checking function: constructor(address,address) returns() (Slither line:3127)
Checking function: proxyType() returns(uint256) (Slither line:3127)
Visibility: public
2
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: public
_implementation()
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: public
saveValue(msgHash,newIndex)
require(bool,string)(_operators[index] == msg.sender,Operator: caller is not the eligible Operator)
{ sstore(position, value) } (Slither line:3163)
require(bool,string)(ZOSLibAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
_setImplementation(newImplementation)
Upgraded(newImplementation)
checkMultiSignature()
    sstore(slot, newImplementation) (Slither line:3163)
_upgradeTo reads and/or writes to variable slot (Slither line:3170)
_upgradeTo reads and/or writes to variable IMPLEMENTATION_SLOT (Slither line:3170)
_upgradeTo reads and/or writes to variable ZOSLibAddress (Slither line:3170)
_upgradeTo reads and/or writes to variable newImplementation (Slither line:3170)

End MinePoolProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: _upgradeTo in contract: MinePoolProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin MinePoolProxy.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
keccak256(bytes)(org.Phoenix.implementation.unlocksc)
Checking function: setHalt (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: owner (Slither line:2988)
owner returns address variable  (Slither line:3008)
RETURN node expression: _owner (Slither line:3028)
Checking function: isOwner (Slither line:2988)
isOwner returns bool variable  (Slither line:3008)
RETURN node expression: msg.sender == _owner (Slither line:3028)
Checking function: renounceOwnership (Slither line:2988)
Checking function: transferOwnership (Slither line:2988)
Checking function: _transferOwnership (Slither line:2988)
Checking function: setOperator (Slither line:2988)
Checking function: getOperator (Slither line:2988)
getOperator returns address variable  (Slither line:3008)
RETURN node expression: _operators[index] (Slither line:3028)
Checking function: constructor (Slither line:2988)
Checking function: getMultiSignatureAddress (Slither line:2988)
getMultiSignatureAddress returns address variable  (Slither line:3008)
RETURN node expression: address(getValue(multiSignaturePositon)) (Slither line:3028)
Checking function: checkMultiSignature (Slither line:2988)
Checking function: saveValue (Slither line:2988)
Checking function: getValue (Slither line:2988)
getValue returns uint256 variable called value (Slither line:3008)
getValue contains assembly (Slither line:3051)
getValue contains assembly (Slither line:3051)
Checking function: fallback (Slither line:2988)
Checking function: _delegate (Slither line:2988)
Checking function: _willFallback (Slither line:2988)
Checking function: _fallback (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: proxyType (Slither line:2988)
proxyType returns uint256 variable  (Slither line:3008)
RETURN node expression: 2 (Slither line:3028)
Checking function: implementation (Slither line:2988)
implementation returns address variable  (Slither line:3008)
RETURN node expression: _implementation() (Slither line:3028)
Checking function: _implementation (Slither line:2988)
_implementation returns address variable called impl (Slither line:3008)
_implementation contains assembly (Slither line:3051)
_implementation contains assembly (Slither line:3051)
_implementation contains assembly (Slither line:3051)

End MinePoolProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: _implementation in contract: MinePoolProxy (Slither line:1285)

End MinePoolProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: MinePoolProxy
Setter found in contract MinePoolProxy
Checking public function setHalt
Found 'msg.sender ==' in expression: msg.sender == _owner
Checking public function setHalt
Found 'msg.sender ==' in expression: msg.sender == _owner
Checking public function owner
Checking public function isOwner
Found 'msg.sender ==' in expression: msg.sender == _owner
Checking public function renounceOwnership
Found 'msg.sender ==' in expression: msg.sender == _owner
Checking public function transferOwnership
Found 'msg.sender ==' in expression: msg.sender == _owner
Checking public function setOperator
Found 'msg.sender ==' in expression: msg.sender == _owner
Checking public function getOperator
Checking public function getMultiSignatureAddress
Checking public function proxyType
Checking public function implementation
Checking public function _upgradeTo
Checking external function fallback
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function MinePoolProxy.getOperator (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy.constructor (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: constructor writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function MinePoolProxy.renounceOwnership (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy.saveValue (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy.proxyType (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy.getValue (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy.constructor (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy.transferOwnership (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy.setHalt (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy._transferOwnership (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy.constructor (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = multiSignaturePositon = keccak256(bytes)(org.Finnexus.multiSignature.storage) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: multiSignaturePositon = keccak256(bytes)(org.Finnexus.multiSignature.storage) (proxy_features line:912)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = keccak256(bytes)(org.Phoenix.implementation.unlocksc) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = keccak256(bytes)(org.Phoenix.implementation.unlocksc) (proxy_features line:912)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:924)
get_value_assigned: IMPLEMENTATION_SLOT = keccak256(bytes)(org.Phoenix.implementation.unlocksc)
functions_writing_to_variable: checking function MinePoolProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy.getMultiSignatureAddress (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy._upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function MinePoolProxy.owner (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy.setOperator (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy._setImplementation (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function MinePoolProxy.isOwner (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy.slitherConstructorVariables (proxy_features line:898)
functions_writing_to_variable: checking function MinePoolProxy.checkMultiSignature (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking public function _upgradeTo
require(bool,string)(_operators[index] == msg.sender,Operator: caller is not the eligible Operator)
has_compatibility_checks: condition _operators[index] == msg.sender
require(bool,string)(ZOSLibAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition ZOSLibAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['validCall()', 'onlyOperator(0)']
check_condition_from_expression: condition size > 0
require(bool,string)(newIndex > 0,multiSignatureClient : This tx is not aprroved)
has_compatibility_checks: condition newIndex > 0
has_compatibility_checks: skipping internal function _setImplementation
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
Found public function: setHalt
has_time_delay: (node.type) EXPRESSION
(Expression) saveValue(msgHash,newIndex)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(_operators[index] == msg.sender,Operator: caller is not the eligible Operator)
has_time_delay: (node.type) NEW VARIABLE
(Expression) msgHash = keccak256(bytes)(abi.encodePacked(msg.sender,address(this),value,msg.data))
has_time_delay: (node.type) NEW VARIABLE
(Expression) multiSign = getMultiSignatureAddress()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(ZOSLibAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) index = getValue(msgHash)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) checkMultiSignature()
has_time_delay: (node.type) NEW VARIABLE
(Expression) newIndex = IMultiSignature(multiSign).getValidSignature(msgHash,index)
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) RETURN
(Expression) address(getValue(multiSignaturePositon))
has_time_delay: (node.type) EXPRESSION
(Expression) onlyOperator(0)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(newIndex > 0,multiSignatureClient : This tx is not aprroved)
has_time_delay: (node.type) EXPRESSION
(Expression) validCall()
has_time_delay: comparing (Identifier) newIndex to 0
