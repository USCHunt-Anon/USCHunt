
Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin ERC20.is_proxy (Slither line:1425)


End ERC20.is_proxy (Slither line:1428)


Begin ERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20 

End ERC20.is_upgradeable_proxy (Slither line:1407)


Begin StandardToken.is_proxy (Slither line:1425)


End StandardToken.is_proxy (Slither line:1428)


Begin StandardToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: StandardToken 

End StandardToken.is_upgradeable_proxy (Slither line:1407)


Begin EURT.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin EURT.find_delegatecall_in_exp_node

Found Expression Node: require(bool)(impl != address(0)) (Slither line:2802)
Expression called: require(bool)
Type of call: tuple() (Slither line:2817)
Args:
impl != address(0)

End EURT.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin EURT.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let ptr := mload(0x40) (Slither line:1576)
    calldatacopy(ptr, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'impl'
Looking for corresponding Variable
Current function: fallback

Begin EURT.find_delegate_variable_from_name
Searching for impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking totalSupply (Slither line:1689)
Checking balances (Slither line:1689)
Checking allowed (Slither line:1689)
Checking decimals (Slither line:1689)
Checking name (Slither line:1689)
Checking symbol (Slither line:1689)
Checking users (Slither line:1689)
Checking userIds (Slither line:1689)
Checking lastUserId (Slither line:1689)
Checking directBonusPer (Slither line:1689)
Checking owner (Slither line:1689)
Checking deployer (Slither line:1689)
Checking implementation (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking impl (Slither line:1703)
impl is a Local Variable in EURT.fallback (Slither line:1707)
Expression: implementation (Slither line:1719)
Identifier value: implementation (Slither line:1725)
implementation is a State Variable in contract EURT (Slither line:1730)

End EURT.find_delegate_variable_by_name


End EURT.find_delegatecall_in_asm (Slither line:1637)


End EURT.is_proxy (Slither line:1476)


Begin EURT.is_upgradeable_proxy (Slither line:1136)

Checking contract: EURT 
EURT is delegating to implementation
Looking for setter (Slither line:1200)


Begin EURT.find_setter_in_contract (Slither line:3119)

Checking function: constructor(uint8,uint256,address) returns() (Slither line:3127)
Checking function: fallback() returns() (Slither line:3127)
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
_setImplementation(_newImplementation)
implementation = _newImp
is an Assignment Operation (Slither line:3216)

End EURT.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: EURT (Slither line:1264)
Looking for getter (Slither line:1273)


Begin EURT.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
_newImp
Checking function: getSupply (Slither line:2988)
getSupply returns uint256 variable  (Slither line:3008)
RETURN node expression: totalSupply (Slither line:3028)
Checking function: balanceOf (Slither line:2988)
balanceOf returns uint256 variable called balance (Slither line:3008)
RETURN node expression: balances[_owner] (Slither line:3028)
Checking function: transfer (Slither line:2988)
transfer returns bool variable called success (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: transferFrom (Slither line:2988)
transferFrom returns bool variable called success (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: approve (Slither line:2988)
approve returns bool variable called success (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: allowance (Slither line:2988)
allowance returns uint256 variable called remaining (Slither line:3008)
RETURN node expression: allowed[_owner][_spender] (Slither line:3028)
Checking function: constructor (Slither line:2988)
Checking function: fallback (Slither line:2988)
Checking function: upgradeTo (Slither line:2988)
Checking function: _setImplementation (Slither line:2988)
Checking function: getInvesments (Slither line:2988)
getInvesments returns uint256[] variable  (Slither line:3008)
getInvesments returns uint256[] variable  (Slither line:3008)
RETURN node expression: (deposit_amount_i,deposit_time_i) (Slither line:3028)
Checking function: isUserExists (Slither line:2988)
isUserExists returns bool variable  (Slither line:3008)
RETURN node expression: (users[user].id != 0) (Slither line:3028)
Checking function: bytesToAddress (Slither line:2988)
bytesToAddress returns address variable called addr (Slither line:3008)
Checking function: slitherConstructorVariables (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End EURT.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in EURT (Slither line:1305)

Begin SafeMath.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
_newImp
Checking function: mul (Slither line:2988)
mul returns uint256 variable  (Slither line:3008)
RETURN node expression: 0 (Slither line:3028)
RETURN node expression: c (Slither line:3028)
Checking function: div (Slither line:2988)
div returns uint256 variable  (Slither line:3008)
RETURN node expression: c (Slither line:3028)
Checking function: sub (Slither line:2988)
sub returns uint256 variable  (Slither line:3008)
RETURN node expression: a - b (Slither line:3028)
Checking function: add (Slither line:2988)
add returns uint256 variable  (Slither line:3008)
RETURN node expression: c (Slither line:3028)

End SafeMath.find_getter_in_contract (Slither line:3083)

Checking public function getSupply
Checking public function balanceOf
Checking public function transfer
Checking public function transferFrom
Checking public function approve
Checking public function allowance
Checking external function upgradeTo
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == deployer,Only Deployer)
Checking external function getInvesments
Checking public function isUserExists
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function EURT.transferFrom (proxy_features line:898)
functions_writing_to_variable: checking function EURT.approve (proxy_features line:898)
functions_writing_to_variable: checking function EURT.constructor (proxy_features line:898)
functions_writing_to_variable: checking function EURT.isUserExists (proxy_features line:898)
functions_writing_to_variable: checking function EURT.upgradeTo (proxy_features line:898)
get_value_assigned: implementation = _newImp
functions_writing_to_variable: upgradeTo writes _newImp to implementation (proxy_features line:1013)
functions_writing_to_variable: checking function EURT.getInvesments (proxy_features line:898)
functions_writing_to_variable: checking function EURT.getSupply (proxy_features line:898)
functions_writing_to_variable: checking function EURT.fallback (proxy_features line:898)
functions_writing_to_variable: checking function EURT.bytesToAddress (proxy_features line:898)
functions_writing_to_variable: checking function EURT.slitherConstructorVariables (proxy_features line:898)
functions_writing_to_variable: checking function EURT.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function EURT.transfer (proxy_features line:898)
functions_writing_to_variable: checking function EURT.balanceOf (proxy_features line:898)
functions_writing_to_variable: checking function EURT._setImplementation (proxy_features line:898)
functions_writing_to_variable: exp = implementation = _newImp (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = _newImp (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = _newImp
functions_writing_to_variable: _setImplementation writes _newImp to implementation (proxy_features line:929)
functions_writing_to_variable: checking function EURT.allowance (proxy_features line:898)
has_compatibility_checks: dependencies: ['_newImplementation', '_newImp']
has_compatibility_checks: checking external function upgradeTo
require(bool,string)(msg.sender == deployer,Only Deployer)
has_compatibility_checks: condition msg.sender == deployer
require(bool)(implementation != _newImplementation)
has_compatibility_checks: condition implementation != _newImplementation
check_condition_from_expression: modifier calls: ['onlyDeployer()']
check_condition_from_expression: condition _newImp != _newImplementation
has_compatibility_checks: skipping internal function _setImplementation
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    let ptr := mload(0x40)
    calldatacopy(ptr, 0, calldatasize())
    let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)
    let size := returndatasize()
    returndatacopy(ptr, 0, size)
    switch result
    case 0 {
        revert(ptr, size)
    }
    default {
        return(ptr, size)
    }
}
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: impl = implementation
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool)(impl != address(0))
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: getSupply
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(_newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = _newImp
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == deployer,Only Deployer)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(implementation != _newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) onlyDeployer()
