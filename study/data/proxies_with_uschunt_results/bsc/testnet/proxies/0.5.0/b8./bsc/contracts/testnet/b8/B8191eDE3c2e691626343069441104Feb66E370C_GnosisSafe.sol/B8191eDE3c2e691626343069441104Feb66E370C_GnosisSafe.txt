
Begin SelfAuthorized.is_proxy (Slither line:1425)


End SelfAuthorized.is_proxy (Slither line:1428)


Begin SelfAuthorized.is_upgradeable_proxy (Slither line:1136)

Checking contract: SelfAuthorized 

End SelfAuthorized.is_upgradeable_proxy (Slither line:1407)


Begin MasterCopy.is_proxy (Slither line:1425)


End MasterCopy.is_proxy (Slither line:1428)


Begin MasterCopy.is_upgradeable_proxy (Slither line:1136)

Checking contract: MasterCopy 

End MasterCopy.is_upgradeable_proxy (Slither line:1407)


Begin Module.is_proxy (Slither line:1425)


End Module.is_proxy (Slither line:1428)


Begin Module.is_upgradeable_proxy (Slither line:1136)

Checking contract: Module 

End Module.is_upgradeable_proxy (Slither line:1407)


Begin Enum.is_proxy (Slither line:1425)


End Enum.is_proxy (Slither line:1428)


Begin Enum.is_upgradeable_proxy (Slither line:1136)

Checking contract: Enum 

End Enum.is_upgradeable_proxy (Slither line:1407)


Begin Executor.is_proxy (Slither line:1425)


End Executor.is_proxy (Slither line:1428)


Begin Executor.is_upgradeable_proxy (Slither line:1136)

Checking contract: Executor 

End Executor.is_upgradeable_proxy (Slither line:1407)


Begin SecuredTokenTransfer.is_proxy (Slither line:1425)


End SecuredTokenTransfer.is_proxy (Slither line:1428)


Begin SecuredTokenTransfer.is_upgradeable_proxy (Slither line:1136)

Checking contract: SecuredTokenTransfer 

End SecuredTokenTransfer.is_upgradeable_proxy (Slither line:1407)


Begin ModuleManager.is_proxy (Slither line:1425)


End ModuleManager.is_proxy (Slither line:1428)


Begin ModuleManager.is_upgradeable_proxy (Slither line:1136)

Checking contract: ModuleManager 

End ModuleManager.is_upgradeable_proxy (Slither line:1407)


Begin OwnerManager.is_proxy (Slither line:1425)


End OwnerManager.is_proxy (Slither line:1428)


Begin OwnerManager.is_upgradeable_proxy (Slither line:1136)

Checking contract: OwnerManager 

End OwnerManager.is_upgradeable_proxy (Slither line:1407)


Begin FallbackManager.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin FallbackManager.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    handler := sload(slot) (Slither line:1576)
} (Slither line:1576)

End FallbackManager.find_delegatecall_in_asm (Slither line:1637)


Begin FallbackManager.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    handler := sload(slot) (Slither line:1576)
} (Slither line:1576)

End FallbackManager.find_delegatecall_in_asm (Slither line:1637)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin FallbackManager.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let success := call(gas(), handler, 0, 0, calldatasize(), 0, 0) (Slither line:1576)
    returndatacopy(0, 0, returndatasize()) (Slither line:1576)
    if eq(success, 0) (Slither line:1576)
    { (Slither line:1576)
        revert(0, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
    return(0, returndatasize()) (Slither line:1576)
} (Slither line:1576)

End FallbackManager.find_delegatecall_in_asm (Slither line:1637)


Begin FallbackManager.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let success := call(gas(), handler, 0, 0, calldatasize(), 0, 0) (Slither line:1576)

Found call in inline asm (Slither line:1622)
Destination param is called 'handler'
Looking for corresponding Variable
Current function: fallback

Begin FallbackManager.find_delegate_variable_from_name
Searching for handler (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking FALLBACK_HANDLER_STORAGE_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking handler (Slither line:1703)
handler is a Local Variable in FallbackManager.fallback (Slither line:1707)
No expression found for handler
Looking for assignment operation (Slither line:1761)
AssignmentOperation: FALLBACK_HANDLER_STORAGE_SLOT (Slither line:1767)
Checking slot (Slither line:1703)

Searching Parameter Variables (Slither line:1797)
fallback contains assembly, searching for sload (Slither line:1875)

End FallbackManager.find_delegate_variable_from_name (Slither line:1939)


Begin FallbackManager.find_delegate_sloaded_from_hardcoded_slot (Slither line:2673)


End FallbackManager.find_delegate_sloaded_from_hardcoded_slot (Slither line:2700)


End FallbackManager.find_delegatecall_in_asm (Slither line:1637)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


End FallbackManager.is_proxy (Slither line:1476)


Begin FallbackManager.is_upgradeable_proxy (Slither line:1136)

Checking contract: FallbackManager 

End FallbackManager.is_upgradeable_proxy (Slither line:1407)


Begin SignatureDecoder.is_proxy (Slither line:1425)


End SignatureDecoder.is_proxy (Slither line:1428)


Begin SignatureDecoder.is_upgradeable_proxy (Slither line:1136)

Checking contract: SignatureDecoder 

End SignatureDecoder.is_upgradeable_proxy (Slither line:1407)


Begin ISignatureValidatorConstants.is_proxy (Slither line:1425)


End ISignatureValidatorConstants.is_proxy (Slither line:1428)


Begin ISignatureValidatorConstants.is_upgradeable_proxy (Slither line:1136)

Checking contract: ISignatureValidatorConstants 

End ISignatureValidatorConstants.is_upgradeable_proxy (Slither line:1407)


Begin ISignatureValidator.is_proxy (Slither line:1425)


End ISignatureValidator.is_proxy (Slither line:1428)


Begin ISignatureValidator.is_upgradeable_proxy (Slither line:1136)

Checking contract: ISignatureValidator 

End ISignatureValidator.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin GnosisSafe.is_proxy (Slither line:1425)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin GnosisSafe.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    handler := sload(slot) (Slither line:1576)
} (Slither line:1576)

End GnosisSafe.find_delegatecall_in_asm (Slither line:1637)


Begin GnosisSafe.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    handler := sload(slot) (Slither line:1576)
} (Slither line:1576)

End GnosisSafe.find_delegatecall_in_asm (Slither line:1637)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin GnosisSafe.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let success := call(gas(), handler, 0, 0, calldatasize(), 0, 0) (Slither line:1576)
    returndatacopy(0, 0, returndatasize()) (Slither line:1576)
    if eq(success, 0) (Slither line:1576)
    { (Slither line:1576)
        revert(0, returndatasize()) (Slither line:1576)
    } (Slither line:1576)
    return(0, returndatasize()) (Slither line:1576)
} (Slither line:1576)

End GnosisSafe.find_delegatecall_in_asm (Slither line:1637)


Begin GnosisSafe.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let success := call(gas(), handler, 0, 0, calldatasize(), 0, 0) (Slither line:1576)

Found call in inline asm (Slither line:1622)
Destination param is called 'handler'
Looking for corresponding Variable
Current function: fallback

Begin GnosisSafe.find_delegate_variable_from_name
Searching for handler (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking masterCopy (Slither line:1689)
Checking SENTINEL_MODULES (Slither line:1689)
Checking modules (Slither line:1689)
Checking SENTINEL_OWNERS (Slither line:1689)
Checking owners (Slither line:1689)
Checking ownerCount (Slither line:1689)
Checking threshold (Slither line:1689)
Checking EIP1271_MAGIC_VALUE (Slither line:1689)
Checking FALLBACK_HANDLER_STORAGE_SLOT (Slither line:1689)
Checking NAME (Slither line:1689)
Checking VERSION (Slither line:1689)
Checking DOMAIN_SEPARATOR_TYPEHASH (Slither line:1689)
Checking SAFE_TX_TYPEHASH (Slither line:1689)
Checking SAFE_MSG_TYPEHASH (Slither line:1689)
Checking nonce (Slither line:1689)
Checking domainSeparator (Slither line:1689)
Checking signedMessages (Slither line:1689)
Checking approvedHashes (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking handler (Slither line:1703)
handler is a Local Variable in GnosisSafe.fallback (Slither line:1707)
No expression found for handler
Looking for assignment operation (Slither line:1761)
AssignmentOperation: FALLBACK_HANDLER_STORAGE_SLOT (Slither line:1767)
Checking slot (Slither line:1703)

Searching Parameter Variables (Slither line:1797)
fallback contains assembly, searching for sload (Slither line:1875)

End GnosisSafe.find_delegate_variable_from_name (Slither line:1939)


Begin GnosisSafe.find_delegate_sloaded_from_hardcoded_slot (Slither line:2673)


End GnosisSafe.find_delegate_sloaded_from_hardcoded_slot (Slither line:2700)


End GnosisSafe.find_delegatecall_in_asm (Slither line:1637)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


End GnosisSafe.is_proxy (Slither line:1476)


Begin GnosisSafe.is_upgradeable_proxy (Slither line:1136)

Checking contract: GnosisSafe 

End GnosisSafe.is_upgradeable_proxy (Slither line:1407)

