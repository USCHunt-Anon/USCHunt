{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "DexProxy (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.5.0/8a2538099535669403c2d22cff41a358e8d82ca6_DexProxy.sol/8a2538099535669403c2d22cff41a358e8d82ca6_DexProxy.sol#539-666)",
        "elements": [],
        "description": "DexProxy (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.5.0/8a2538099535669403c2d22cff41a358e8d82ca6_DexProxy.sol/8a2538099535669403c2d22cff41a358e8d82ca6_DexProxy.sol#539-666) is an upgradeable proxy.\ndelegates was found in a different contract.\ndelegates is a mapping of type mapping(bytes4 => address)\ndelegates maps function signatures to addresses, suggesting multiple implementations.\nMissing compatibility check in DexProxy.updateContract(address,string,string)\nMissing compatibility check in DexProxy.constructor()\n",
        "id": "5039a831f1808d0e5265f455561d0f7c9481b785a695b07f1f2e88dcde8ba436",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "ProxyBaseStorage.delegates",
          "impl_address_setter": "DexProxy.updateContract(address,string,string)",
          "impl_address_getter": "not found",
          "impl_address_location": "ProxyBaseStorage (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.5.0/8a2538099535669403c2d22cff41a358e8d82ca6_DexProxy.sol/8a2538099535669403c2d22cff41a358e8d82ca6_DexProxy.sol#55-75)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "mapping(bytes4 => address)",
          "impl_mapping_from_msg_sig": true,
          "eip_2535": false,
          "eip_1538": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "DexProxy.updateContract(address,string,string)": "missing",
              "DexProxy.constructor()": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "owner()",
              "isOwner()",
              "renounceOwnership()",
              "transferOwnership(address)",
              "updateContract(address,string,string)",
              "updateContract(address,string,string)"
            ]
          }
        }
      }
    ]
  }
}