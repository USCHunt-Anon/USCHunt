
Begin Proxy.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool)(_impl != address(0)) (Slither line:2792)
Expression called: require(bool)
Type of call: tuple() (Slither line:2807)
Args:
_impl != address(0)

End Proxy.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let ptr := mload(0x40) (Slither line:1576)
    calldatacopy(ptr, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called '_impl'
Looking for corresponding Variable
Current function: fallback

Begin Proxy.find_delegate_variable_from_name
Searching for _impl (Slither line:1674)

Searching State Variables (Slither line:1687)

Searching Local Variables (Slither line:1698)
Checking _impl (Slither line:1703)
_impl is a Local Variable in Proxy.fallback (Slither line:1707)
Expression: implementation() (Slither line:1719)

Begin Proxy.find_delegate_from_call_exp

implementation() (Slither line:1993)
called = implementation (Slither line:2000)
Got abstract function, looking for overriding function (Slither line:2015)
Failure (Slither line:2023)
implementation returns a variable of type address   (Slither line:2183)
Return value is LocalVariable:  (Slither line:2256)
has no expression (Slither line:2316)

End Proxy.find_delegate_from_call_exp (Slither line:2318)

Call Expression
End Proxy.find_delegate_variable_by_name (Slither line:1739)


Begin Proxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2673)


End Proxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2700)


End Proxy.find_delegatecall_in_asm (Slither line:1637)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 

End Proxy.is_upgradeable_proxy (Slither line:1407)


Begin UpgradeabilityProxy.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin UpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let ptr := mload(0x40) (Slither line:1576)
    calldatacopy(ptr, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called '_impl'
Looking for corresponding Variable
Current function: fallback

Begin UpgradeabilityProxy.find_delegate_variable_from_name
Searching for _impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_POSITION (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking _impl (Slither line:1703)
_impl is a Local Variable in UpgradeabilityProxy.fallback (Slither line:1707)
Expression: implementation() (Slither line:1719)

Begin UpgradeabilityProxy.find_delegate_from_call_exp

implementation() (Slither line:1993)
called = implementation (Slither line:2000)
Got abstract function, looking for overriding function (Slither line:2015)
Success (Slither line:2022)
implementation returns a variable of type address   called impl (Slither line:2183)
implementation contains assembly - looking for sload (Slither line:2189)
Looking in ASSEMBLY node (Slither line:2196)
{  (Slither line:2200)
    impl := sload(position)  (Slither line:2200)
Return value set by sload in asm (Slither line:2202)
Found storage slot: IMPLEMENTATION_POSITION (Slither line:2222)

End UpgradeabilityProxy.find_delegate_from_call_exp (Slither line:2318)

Call Expression
End UpgradeabilityProxy.find_delegate_variable_by_name (Slither line:1739)


Begin UpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2673)


End UpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2700)


End UpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

Setting UpgradeabilityProxy._delegate_variable = UpgradeabilityProxy._proxy_impl_slot: IMPLEMENTATION_POSITION (Slither line:1473)


End UpgradeabilityProxy.is_proxy (Slither line:1476)


Begin UpgradeabilityProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: UpgradeabilityProxy 
Call destination IMPLEMENTATION_POSITION is constant (Slither line:1146)

IMPLEMENTATION_POSITION is the implementation storage slot (Slither line:1149)

UpgradeabilityProxy is delegating to IMPLEMENTATION_POSITION
Looking for setter (Slither line:1200)


Begin UpgradeabilityProxy.find_setter_in_contract (Slither line:3109)

Expression: keccak256(bytes)(sales.721.proxy.implementation) (Slither line:3112)
Checking function: constructor() returns() (Slither line:3117)
Checking function: implementation() returns(address) (Slither line:3117)
Visibility: public
implementation contains assembly (Slither line:3143)
Checking function: _setImplementation(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3117)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3117)
Visibility: internal
Checking function: fallback() returns() (Slither line:3117)
Checking function: implementation() returns(address) (Slither line:3117)
Visibility: public

End UpgradeabilityProxy.find_setter_in_contract (Slither line:3315)


Could not find implementation setter in UpgradeabilityProxy (Slither line:1269)
Looking for getter (Slither line:1273)


Begin UpgradeabilityProxy.find_getter_in_contract (Slither line:2964)

IMPLEMENTATION_POSITION is a Variable object
keccak256(bytes)(sales.721.proxy.implementation)
Checking function: fallback (Slither line:2978)
Checking function: constructor (Slither line:2978)
Checking function: implementation (Slither line:2978)
implementation returns address variable called impl (Slither line:2998)
implementation contains assembly (Slither line:3041)

End UpgradeabilityProxy.find_getter_in_contract (Slither line:3073)


Implementation retrieved by function: implementation in contract: UpgradeabilityProxy (Slither line:1285)

Begin UpgradeabilityProxy.getter_return_is_non_constant (Slither line:2873)

Found getter function but not setter
Checking if getter calls any other function
INLINE ASM: None (Slither line:2878)
NEW VARIABLE: position = IMPLEMENTATION_POSITION (Slither line:2878)
ENTRY_POINT: None (Slither line:2878)

End UpgradeabilityProxy.getter_return_is_non_constant (Slither line:2932)


End UpgradeabilityProxy.is_upgradeable_proxy (Slither line:1293)


Begin OwnedUpgradeabilityProxy.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin OwnedUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool)(_impl != address(0)) (Slither line:2792)
Expression called: require(bool)
Type of call: tuple() (Slither line:2807)
Args:
_impl != address(0)

End OwnedUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin OwnedUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let ptr := mload(0x40) (Slither line:1576)
    calldatacopy(ptr, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called '_impl'
Looking for corresponding Variable
Current function: fallback

Begin OwnedUpgradeabilityProxy.find_delegate_variable_from_name
Searching for _impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_POSITION (Slither line:1689)
Checking PROXY_OWNER_POSITION (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking _impl (Slither line:1703)
_impl is a Local Variable in OwnedUpgradeabilityProxy.fallback (Slither line:1707)
Expression: implementation() (Slither line:1719)

Begin OwnedUpgradeabilityProxy.find_delegate_from_call_exp

implementation() (Slither line:1993)
called = implementation (Slither line:2000)
Got abstract function, looking for overriding function (Slither line:2015)
Success (Slither line:2022)
implementation returns a variable of type address   called impl (Slither line:2183)
implementation contains assembly - looking for sload (Slither line:2189)
Looking in ASSEMBLY node (Slither line:2196)
{  (Slither line:2200)
    impl := sload(position)  (Slither line:2200)
Return value set by sload in asm (Slither line:2202)
Found storage slot: IMPLEMENTATION_POSITION (Slither line:2222)

End OwnedUpgradeabilityProxy.find_delegate_from_call_exp (Slither line:2318)

Call Expression
End OwnedUpgradeabilityProxy.find_delegate_variable_by_name (Slither line:1739)


Begin OwnedUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2673)


End OwnedUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2700)


End OwnedUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

Setting OwnedUpgradeabilityProxy._delegate_variable = OwnedUpgradeabilityProxy._proxy_impl_slot: IMPLEMENTATION_POSITION (Slither line:1473)


End OwnedUpgradeabilityProxy.is_proxy (Slither line:1476)


Begin OwnedUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: OwnedUpgradeabilityProxy 
Call destination IMPLEMENTATION_POSITION is constant (Slither line:1146)

IMPLEMENTATION_POSITION is the implementation storage slot (Slither line:1149)

OwnedUpgradeabilityProxy is delegating to IMPLEMENTATION_POSITION
Looking for setter (Slither line:1200)

Looking for setter in UpgradeabilityProxy (Slither line:1204)


Begin UpgradeabilityProxy.find_setter_in_contract (Slither line:3109)

Expression: keccak256(bytes)(sales.721.proxy.implementation) (Slither line:3112)
Checking function: constructor() returns() (Slither line:3117)
Checking function: implementation() returns(address) (Slither line:3117)
Visibility: public
implementation contains assembly (Slither line:3143)
Checking function: _setImplementation(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3117)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3117)
Visibility: internal
Checking function: fallback() returns() (Slither line:3117)
Checking function: implementation() returns(address) (Slither line:3117)
Visibility: public

End UpgradeabilityProxy.find_setter_in_contract (Slither line:3315)


Could not find setter in UpgradeabilityProxy 
Looking in OwnedUpgradeabilityProxy (Slither line:1213)

Begin OwnedUpgradeabilityProxy.find_setter_in_contract (Slither line:3109)

Expression: keccak256(bytes)(sales.721.proxy.implementation) (Slither line:3112)
Checking function: constructor(address) returns() (Slither line:3117)
Checking function: proxyOwner() returns(address) (Slither line:3117)
Visibility: public
proxyOwner contains assembly (Slither line:3143)
Checking function: transferProxyOwnership(address) returns() (Slither line:3117)
Visibility: public
_setUpgradeabilityOwner(_newOwner)
require(bool)(msg.sender == proxyOwner())
    sstore(position, _newProxyOwner) (Slither line:3153)
transferProxyOwnership reads and/or writes to variable position (Slither line:3160)
transferProxyOwnership reads and/or writes to variable PROXY_OWNER_POSITION (Slither line:3160)
ProxyOwnershipTransferred(proxyOwner(),_newOwner)
onlyProxyOwner()
require(bool)(_newOwner != address(0))
Checking function: upgradeTo(address) returns() (Slither line:3117)
Visibility: public
onlyProxyOwner()
require(bool)(msg.sender == proxyOwner())
require(bool)(currentImplementation != _newImplementation)
_setImplementation(_newImplementation)
Upgraded(_newImplementation)
    sstore(position, _newImplementation) (Slither line:3153)
upgradeTo reads and/or writes to variable position (Slither line:3160)
upgradeTo reads and/or writes to variable IMPLEMENTATION_POSITION (Slither line:3160)

End OwnedUpgradeabilityProxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: upgradeTo in contract: OwnedUpgradeabilityProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin UpgradeabilityProxy.find_getter_in_contract (Slither line:2964)

IMPLEMENTATION_POSITION is a Variable object
keccak256(bytes)(sales.721.proxy.implementation)

End UpgradeabilityProxy.find_getter_in_contract (Slither line:3073)


Implementation retrieved by function: implementation in contract: UpgradeabilityProxy (Slither line:1285)

End OwnedUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: OwnedUpgradeabilityProxy
Setter found in contract OwnedUpgradeabilityProxy
impl_address_from_contract_call: keccak256(bytes)(sales.721.proxy.implementation)
impl_address_from_contract_call: StateVariable IMPLEMENTATION_POSITION
impl_address_from_contract_call: getter is implementation
getter.full_name = implementation()
impl_address_from_contract_call: CallExpression implementation()
impl_address_from_contract_call: CallExpression require(bool)(_impl != address(0))
impl_address_from_contract_call: arg is _impl != address(0)
called: keccak256(bytes)
Checking public function implementation
Checking public function implementation
Checking public function proxyOwner
Checking public function transferProxyOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == proxyOwner())
Checking public function upgradeTo
Found 'msg.sender ==' in expression: require(bool)(msg.sender == proxyOwner())
Checking external function fallback
functions_writing_to_variable: IMPLEMENTATION_POSITION
functions_writing_to_variable: checking function OwnedUpgradeabilityProxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function OwnedUpgradeabilityProxy.proxyOwner (proxy_features line:893)
functions_writing_to_variable: checking function OwnedUpgradeabilityProxy.transferProxyOwnership (proxy_features line:893)
functions_writing_to_variable: checking function OwnedUpgradeabilityProxy.upgradeTo (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(position, _newImplementation)
(proxy_features line:948)
_newImplementation
functions_writing_to_variable: upgradeTo writes _newImplementation to IMPLEMENTATION_POSITION w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function OwnedUpgradeabilityProxy._setUpgradeabilityOwner (proxy_features line:893)
functions_writing_to_variable: checking function OwnedUpgradeabilityProxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: exp = IMPLEMENTATION_POSITION = keccak256(bytes)(sales.721.proxy.implementation) (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_POSITION = keccak256(bytes)(sales.721.proxy.implementation) (proxy_features line:907)
functions_writing_to_variable: Identifier: IMPLEMENTATION_POSITION (proxy_features line:919)
get_value_assigned: IMPLEMENTATION_POSITION = keccak256(bytes)(sales.721.proxy.implementation)
functions_writing_to_variable: exp = PROXY_OWNER_POSITION = keccak256(bytes)(sales.721.proxy.owner) (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: PROXY_OWNER_POSITION = keccak256(bytes)(sales.721.proxy.owner) (proxy_features line:907)
functions_writing_to_variable: checking function OwnedUpgradeabilityProxy.implementation (proxy_features line:893)
functions_writing_to_variable: checking function OwnedUpgradeabilityProxy.constructor (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(position, _newImplementation)
(proxy_features line:948)
_newImplementation
functions_writing_to_variable: constructor writes _newImplementation to IMPLEMENTATION_POSITION w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function OwnedUpgradeabilityProxy._setImplementation (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(position, _newImplementation)
(proxy_features line:948)
_newImplementation
functions_writing_to_variable: _setImplementation writes _newImplementation to IMPLEMENTATION_POSITION w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function OwnedUpgradeabilityProxy._upgradeTo (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(position, _newImplementation)
(proxy_features line:948)
_newImplementation
functions_writing_to_variable: _upgradeTo writes _newImplementation to IMPLEMENTATION_POSITION w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function OwnedUpgradeabilityProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function OwnedUpgradeabilityProxy.implementation (proxy_features line:893)
has_compatibility_checks: dependencies: []
has_compatibility_checks: checking public function upgradeTo
require(bool)(msg.sender == proxyOwner())
has_compatibility_checks: condition msg.sender == proxyOwner()
require(bool)(currentImplementation != _newImplementation)
has_compatibility_checks: condition currentImplementation != _newImplementation
check_condition_from_expression: modifier calls: ['onlyProxyOwner()']
check_condition_from_expression: condition implementation() != _newImplementation
has_compatibility_checks: checking public function constructor
require(bool)(currentImplementation != _newImplementation)
has_compatibility_checks: condition currentImplementation != _newImplementation
check_condition_from_expression: condition implementation() != _newImplementation
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: skipping internal function _upgradeTo
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    let ptr := mload(0x40)
    calldatacopy(ptr, 0, calldatasize())
    let result := delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)
    let size := returndatasize()
    returndatacopy(ptr, 0, size)
    switch result
    case 0 {
        revert(ptr, size)
    }
    default {
        return(ptr, size)
    }
}
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: _impl = implementation()
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool)(_impl != address(0))
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: constructor
Found public function: implementation
has_time_delay: (node.type) EXPRESSION
(Expression) onlyProxyOwner()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(msg.sender == proxyOwner())
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = IMPLEMENTATION_POSITION
has_time_delay: (node.type) NEW VARIABLE
(Expression) currentImplementation = implementation()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(currentImplementation != _newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(_newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = PROXY_OWNER_POSITION
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(_newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = IMPLEMENTATION_POSITION
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(_implementation)
