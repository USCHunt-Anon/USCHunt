{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.8.7/b0./bsc/contracts/testnet/b0/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol#16-83)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.8.7/b0./bsc/contracts/testnet/b0/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol#16-83) is a proxy, but doesn't seem upgradeable.\n",
        "id": "cb70bcec6d81585d7521ef499de1dc4cc025c9eb09a62b94cfe4ec81796afff6",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "BaseUpgradeabilityProxy (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.8.7/b0./bsc/contracts/testnet/b0/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol#123-174)",
        "elements": [],
        "description": "BaseUpgradeabilityProxy (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.8.7/b0./bsc/contracts/testnet/b0/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol#123-174) is a proxy, but doesn't seem upgradeable.\n",
        "id": "c667fa13bf5e18ab61b823c0ad9b6e92fc3f1c87b349a854e6819be3f724d050",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "UpgradeabilityProxy (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.8.7/b0./bsc/contracts/testnet/b0/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol#1616-1636)",
        "elements": [],
        "description": "UpgradeabilityProxy (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.8.7/b0./bsc/contracts/testnet/b0/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol#1616-1636) is an upgradeable proxy.\nIMPLEMENTATION_SLOT was found in a different contract.\n uses Unstructured Storage\n uses non-standard slot: 0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3\n uses Inherited Storage\nFound compatibility checks in all upgrade functions.\nTo remove upgradeability, delete upgradeTo from ProxyJordan\n",
        "id": "a43f46879d57ed0bde67cf013431117a92b12ab748457214e9be4b1deeb2135c",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "BaseUpgradeabilityProxy.IMPLEMENTATION_SLOT",
          "impl_address_setter": "ProxyJordan.upgradeTo(address)",
          "impl_address_getter": "BaseUpgradeabilityProxy._implementation()",
          "impl_address_location": "BaseUpgradeabilityProxy (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.8.7/b0./bsc/contracts/testnet/b0/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol#123-174)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3",
          "unstructured_storage": true,
          "eip_1967": false,
          "eip_1822": false,
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "UpgradeabilityProxy.constructor(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "ProxyJordan.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "ProxyJordan.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove upgradeTo from ProxyJordan"
        }
      },
      {
        "contract": "ProxyJordan (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.8.7/b0./bsc/contracts/testnet/b0/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol#1646-1756)",
        "elements": [],
        "description": "ProxyJordan (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.8.7/b0./bsc/contracts/testnet/b0/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol#1646-1756) is an upgradeable proxy.\nIMPLEMENTATION_SLOT was found in a different contract.\n uses Unstructured Storage\n uses non-standard slot: 0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3\n uses Inherited Storage\nFound compatibility checks in all upgrade functions.\n",
        "id": "62a23db6550b1532bf10115c82fb99267985c96570bcc457df6214849d0ced2e",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "BaseUpgradeabilityProxy.IMPLEMENTATION_SLOT",
          "impl_address_setter": "ProxyJordan.upgradeTo(address)",
          "impl_address_getter": "BaseUpgradeabilityProxy._implementation()",
          "impl_address_location": "BaseUpgradeabilityProxy (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.8.7/b0./bsc/contracts/testnet/b0/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol/B03AeBe2d2FC7f929E5F261fFD19226EDBF9CF59_ProxyJordan.sol#123-174)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3",
          "unstructured_storage": true,
          "eip_1967": false,
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "ProxyJordan.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "ProxyJordan.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "erc20": [
              "totalSupply()",
              "balanceOf(address)",
              "transfer(address,uint256)",
              "transferFrom(address,address,uint256)",
              "approve(address,uint256)",
              "allowance(address,address)",
              "name()",
              "symbol()",
              "decimals()"
            ],
            "other": [
              "initialize()",
              "increaseAllowance(address,uint256)",
              "decreaseAllowance(address,uint256)",
              "sendShares()",
              "provideLP(uint256)",
              "isExcludedFromFee(address)",
              "includeInFee(address)",
              "excludeFromFee(address)",
              "setMarketingAddress(address)",
              "setStakingAddress(address)",
              "setTeamAddress(address)",
              "setOperatorsAddresses(address,address,address)",
              "setStakingShare(uint256)",
              "setMarketingShare(uint256)",
              "setTeamShare(uint256)",
              "setLPShare(uint256)",
              "setBuyTax(uint256)",
              "getBuyTax()",
              "setSellTax(uint256)",
              "getSellTax()",
              "getTokenAutoSwapLimit()",
              "setTokenAutoSwapLimit(uint256)",
              "getBNBAutoTransferLimit()",
              "setBNBAutoTransferLimit(uint256)",
              "setSwapAndLiquifyEnabled(bool)",
              "setAutoSplitSharesEnables(bool)",
              "enableUniswap()",
              "setAcceptedSlippage(uint256)",
              "getAcceptedSlippage()",
              "setAcceptedFeeOnAdd(uint256)",
              "getAcceptedFeeOnAdd()",
              "setRouterAddress(address)",
              "totalTeamTaxCollected()",
              "totalMarketingTaxCollected()",
              "totalStakingTaxCollected()",
              "totalLPTaxCollected()",
              "totalTaxCollected()",
              "getDeltaReserve()",
              "depositIntoReserve(uint256)",
              "burn(uint256)",
              "O_BuyValue(uint256)",
              "O_SellValue(uint256)",
              "owner()",
              "renounceOwnership()",
              "transferOwnership(address)",
              "getUnlockTime()",
              "getTime()",
              "lock(uint256)",
              "unlock()",
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      }
    ]
  }
}