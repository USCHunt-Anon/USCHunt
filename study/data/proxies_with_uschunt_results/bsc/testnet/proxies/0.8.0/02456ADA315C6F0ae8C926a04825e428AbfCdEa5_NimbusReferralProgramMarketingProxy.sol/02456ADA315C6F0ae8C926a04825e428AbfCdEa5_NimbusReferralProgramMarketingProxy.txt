
Begin IBEP20.is_proxy (Slither line:1425)


End IBEP20.is_proxy (Slither line:1428)


Begin IBEP20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBEP20 

End IBEP20.is_upgradeable_proxy (Slither line:1407)


Begin INimbusReferralProgramUsers.is_proxy (Slither line:1425)


End INimbusReferralProgramUsers.is_proxy (Slither line:1428)


Begin INimbusReferralProgramUsers.is_upgradeable_proxy (Slither line:1136)

Checking contract: INimbusReferralProgramUsers 

End INimbusReferralProgramUsers.is_upgradeable_proxy (Slither line:1407)


Begin INimbusVesting.is_proxy (Slither line:1425)


End INimbusVesting.is_proxy (Slither line:1428)


Begin INimbusVesting.is_upgradeable_proxy (Slither line:1136)

Checking contract: INimbusVesting 

End INimbusVesting.is_upgradeable_proxy (Slither line:1407)


Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin NimbusReferralProgramMarketingStorage.is_proxy (Slither line:1425)


End NimbusReferralProgramMarketingStorage.is_proxy (Slither line:1428)


Begin NimbusReferralProgramMarketingStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: NimbusReferralProgramMarketingStorage 

End NimbusReferralProgramMarketingStorage.is_upgradeable_proxy (Slither line:1407)


Begin NimbusReferralProgramMarketingProxy.is_proxy (Slither line:1425)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin NimbusReferralProgramMarketingProxy.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(ptr_fallback_asm_0,size_fallback_asm_0) (Slither line:2792)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2807)
Args:
ptr_fallback_asm_0
size_fallback_asm_0

End NimbusReferralProgramMarketingProxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin NimbusReferralProgramMarketingProxy.find_delegatecall_in_exp_node

Found Expression Node: size_fallback_asm_0 = returndatasize()() (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)
Expression called: returndatasize()
Type of call: uint256 (Slither line:2807)
Args:

End NimbusReferralProgramMarketingProxy.find_delegatecall_in_exp_node (Slither line:2848)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin NimbusReferralProgramMarketingProxy.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(ptr_fallback_asm_0,size_fallback_asm_0) (Slither line:2792)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2807)
Args:
ptr_fallback_asm_0
size_fallback_asm_0

End NimbusReferralProgramMarketingProxy.find_delegatecall_in_exp_node (Slither line:2848)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin NimbusReferralProgramMarketingProxy.find_delegatecall_in_exp_node

Found Expression Node: ptr_fallback_asm_0 = mload(uint256)(0x40) (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)
Expression called: mload(uint256)
Type of call: uint256 (Slither line:2807)
Args:
0x40

End NimbusReferralProgramMarketingProxy.find_delegatecall_in_exp_node (Slither line:2848)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin NimbusReferralProgramMarketingProxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,size_fallback_asm_0) (Slither line:2792)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2807)
Args:
ptr_fallback_asm_0
0
size_fallback_asm_0

End NimbusReferralProgramMarketingProxy.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin NimbusReferralProgramMarketingProxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_8549_98_0_fallback_asm_0 = result_fallback_asm_0 (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)

End NimbusReferralProgramMarketingProxy.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin NimbusReferralProgramMarketingProxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'target_'
Looking for corresponding Variable
Current function: fallback

Begin NimbusReferralProgramMarketingProxy.find_delegate_variable_from_name
Searching for target_ (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking owner (Slither line:1689)
Checking newOwner (Slither line:1689)
Checking NBU (Slither line:1689)
Checking rpUsers (Slither line:1689)
Checking vestingContract (Slither line:1689)
Checking totalFixedAirdropped (Slither line:1689)
Checking totalVariableAirdropped (Slither line:1689)
Checking airdropProgramCap (Slither line:1689)
Checking PERCENTAGE_PRECISION (Slither line:1689)
Checking MARKETING_CATEGORY (Slither line:1689)
Checking REFERRAL_LINES (Slither line:1689)
Checking isRegionManager (Slither line:1689)
Checking isHeadOfLocation (Slither line:1689)
Checking userHeadOfLocations (Slither line:1689)
Checking headOfLocationRegionManagers (Slither line:1689)
Checking regionalManagers (Slither line:1689)
Checking headOfLocations (Slither line:1689)
Checking headOfLocationTurnover (Slither line:1689)
Checking regionalManagerTurnover (Slither line:1689)
Checking userPersonalTurnover (Slither line:1689)
Checking userStructureTurnover (Slither line:1689)
Checking userQualificationLevel (Slither line:1689)
Checking userQualificationOrigin (Slither line:1689)
Checking userMaxLevelPayment (Slither line:1689)
Checking qualificationsCount (Slither line:1689)
Checking qualifications (Slither line:1689)
Checking vestingFirstPeriodDuration (Slither line:1689)
Checking vestingSecondPeriodDuration (Slither line:1689)
Checking isAllowedContract (Slither line:1689)
Checking registrators (Slither line:1689)
Checking target (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking data (Slither line:1703)
Checking target_ (Slither line:1703)
target_ is a Local Variable in NimbusReferralProgramMarketingProxy.fallback (Slither line:1707)
Expression: target (Slither line:1719)
Identifier value: target (Slither line:1725)
target is a State Variable in contract NimbusReferralProgramMarketingProxy (Slither line:1730)

End NimbusReferralProgramMarketingProxy.find_delegate_variable_by_name


End NimbusReferralProgramMarketingProxy.find_delegatecall_in_asm (Slither line:1637)


End NimbusReferralProgramMarketingProxy.is_proxy (Slither line:1476)


Begin NimbusReferralProgramMarketingProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: NimbusReferralProgramMarketingProxy 
NimbusReferralProgramMarketingProxy is delegating to target
Looking for setter (Slither line:1200)


Begin NimbusReferralProgramMarketingProxy.find_setter_in_contract (Slither line:3109)

Checking function: constructor(address) returns() (Slither line:3117)
Checking function: fallback() returns() (Slither line:3117)
Checking function: setTarget(address) returns() (Slither line:3117)
Visibility: external
size > 0
target = _newTarget
is an Assignment Operation (Slither line:3206)

End NimbusReferralProgramMarketingProxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: setTarget in contract: NimbusReferralProgramMarketingProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin NimbusReferralProgramMarketingProxy.find_getter_in_contract (Slither line:2964)

target is a Variable object
_newTarget
Checking function: constructor (Slither line:2978)
Checking function: getOwner (Slither line:2978)
getOwner returns address variable  (Slither line:2998)
RETURN node expression: owner (Slither line:3018)
Checking function: transferOwnership (Slither line:2978)
Checking function: acceptOwnership (Slither line:2978)
Checking function: constructor (Slither line:2978)
Checking function: fallback (Slither line:2978)
Checking function: setTarget (Slither line:2978)
Checking function: _setTarget (Slither line:2978)
Checking function: slitherConstructorConstantVariables (Slither line:2978)

End NimbusReferralProgramMarketingProxy.find_getter_in_contract (Slither line:3073)

Could not find implementation getter in NimbusReferralProgramMarketingProxy (Slither line:1305)

Begin IBEP20.find_getter_in_contract (Slither line:2964)

target is a Variable object
_newTarget

End IBEP20.find_getter_in_contract (Slither line:3073)

Checking external function getOwner
Checking external function transferOwnership
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == owner,Ownable: Caller is not the owner)
Checking external function acceptOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == newOwner)
Checking external function setTarget
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == owner,Ownable: Caller is not the owner)
Checking external function fallback
functions_writing_to_variable: target
functions_writing_to_variable: checking function NimbusReferralProgramMarketingProxy._setTarget (proxy_features line:893)
functions_writing_to_variable: exp = require(bool,string)(Address.isContract(_newTarget),Target not a contract) (proxy_features line:904)
functions_writing_to_variable: exp = target = _newTarget (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: target = _newTarget (proxy_features line:907)
functions_writing_to_variable: Identifier: target (proxy_features line:919)
get_value_assigned: target = _newTarget
functions_writing_to_variable: exp = SetTarget(_newTarget) (proxy_features line:904)
functions_writing_to_variable: _setTarget writes _newTarget to target (proxy_features line:924)
functions_writing_to_variable: checking function NimbusReferralProgramMarketingProxy.acceptOwnership (proxy_features line:893)
functions_writing_to_variable: checking function NimbusReferralProgramMarketingProxy.setTarget (proxy_features line:893)
get_value_assigned: target = _newTarget
functions_writing_to_variable: setTarget writes _newTarget to target (proxy_features line:1008)
functions_writing_to_variable: checking function NimbusReferralProgramMarketingProxy.transferOwnership (proxy_features line:893)
functions_writing_to_variable: checking function NimbusReferralProgramMarketingProxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: checking function NimbusReferralProgramMarketingProxy.constructor (proxy_features line:893)
get_value_assigned: target = _newTarget
functions_writing_to_variable: constructor writes _newTarget to target (proxy_features line:1008)
functions_writing_to_variable: checking function NimbusReferralProgramMarketingProxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function NimbusReferralProgramMarketingProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function NimbusReferralProgramMarketingProxy.getOwner (proxy_features line:893)
has_compatibility_checks: dependencies: ['_newTarget', '_newTarget', '_newTarget']
has_compatibility_checks: skipping internal function _setTarget
has_compatibility_checks: checking external function setTarget
require(bool,string)(msg.sender == owner,Ownable: Caller is not the owner)
has_compatibility_checks: condition msg.sender == owner
require(bool,string)(Address.isContract(_newTarget),Target not a contract)
has_compatibility_checks: condition Address.isContract(_newTarget)
check_condition_from_expression: modifier calls: ['onlyOwner()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: checking public function constructor
require(bool,string)(Address.isContract(_newTarget),Target not a contract)
has_compatibility_checks: condition Address.isContract(_newTarget)
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: END_IF
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: data = msg.data
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: target_ = target
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: IF
 dominator expression: gasleft()() <= 2300
can_toggle_delegatecall_on_off: successors:
 NodeType: INLINE ASM  expression: {'AST': {'nodeType': 'YulBlock', 'src': '8322:336:0', 'statements': [{'nodeType': 'YulVariableDeclaration', 'src': '8337:78:0', 'value': {'arguments': [{'arguments': [], 'functionName': {'name': 'gas', 'nodeType': 'YulIdentifier', 'src': '8364:3:0'}, 'nodeType': 'YulFunctionCall', 'src': '8364:5:0'}, {'name': 'target_', 'nodeType': 'YulIdentifier', 'src': '8371:7:0'}, {'arguments': [{'name': 'data', 'nodeType': 'YulIdentifier', 'src': '8384:4:0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '8390:4:0', 'type': '', 'value': '0x20'}], 'functionName': {'name': 'add', 'nodeType': 'YulIdentifier', 'src': '8380:3:0'}, 'nodeType': 'YulFunctionCall', 'src': '8380:15:0'}, {'arguments': [{'name': 'data', 'nodeType': 'YulIdentifier', 'src': '8403:4:0'}], 'functionName': {'name': 'mload', 'nodeType': 'YulIdentifier', 'src': '8397:5:0'}, 'nodeType': 'YulFunctionCall', 'src': '8397:11:0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '8410:1:0', 'type': '', 'value': '0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '8413:1:0', 'type': '', 'value': '0'}], 'functionName': {'name': 'delegatecall', 'nodeType': 'YulIdentifier', 'src': '8351:12:0'}, 'nodeType': 'YulFunctionCall', 'src': '8351:64:0'}, 'variables': [{'name': 'result', 'nodeType': 'YulTypedName', 'src': '8341:6:0', 'type': ''}]}, {'nodeType': 'YulVariableDeclaration', 'src': '8429:28:0', 'value': {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '8441:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '8441:16:0'}, 'variables': [{'name': 'size', 'nodeType': 'YulTypedName', 'src': '8433:4:0', 'type': ''}]}, {'nodeType': 'YulVariableDeclaration', 'src': '8471:22:0', 'value': {'arguments': [{'kind': 'number', 'nodeType': 'YulLiteral', 'src': '8488:4:0', 'type': '', 'value': '0x40'}], 'functionName': {'name': 'mload', 'nodeType': 'YulIdentifier', 'src': '8482:5:0'}, 'nodeType': 'YulFunctionCall', 'src': '8482:11:0'}, 'variables': [{'name': 'ptr', 'nodeType': 'YulTypedName', 'src': '8475:3:0', 'type': ''}]}, {'expression': {'arguments': [{'name': 'ptr', 'nodeType': 'YulIdentifier', 'src': '8522:3:0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '8527:1:0', 'type': '', 'value': '0'}, {'name': 'size', 'nodeType': 'YulIdentifier', 'src': '8530:4:0'}], 'functionName': {'name': 'returndatacopy', 'nodeType': 'YulIdentifier', 'src': '8507:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '8507:28:0'}, 'nodeType': 'YulExpressionStatement', 'src': '8507:28:0'}, {'cases': [{'body': {'nodeType': 'YulBlock', 'src': '8583:21:0', 'statements': [{'expression': {'arguments': [{'name': 'ptr', 'nodeType': 'YulIdentifier', 'src': '8592:3:0'}, {'name': 'size', 'nodeType': 'YulIdentifier', 'src': '8597:4:0'}], 'functionName': {'name': 'revert', 'nodeType': 'YulIdentifier', 'src': '8585:6:0'}, 'nodeType': 'YulFunctionCall', 'src': '8585:17:0'}, 'nodeType': 'YulExpressionStatement', 'src': '8585:17:0'}]}, 'nodeType': 'YulCase', 'src': '8576:28:0', 'value': {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '8581:1:0', 'type': '', 'value': '0'}}, {'body': {'nodeType': 'YulBlock', 'src': '8626:21:0', 'statements': [{'expression': {'arguments': [{'name': 'ptr', 'nodeType': 'YulIdentifier', 'src': '8635:3:0'}, {'name': 'size', 'nodeType': 'YulIdentifier', 'src': '8640:4:0'}], 'functionName': {'name': 'return', 'nodeType': 'YulIdentifier', 'src': '8628:6:0'}, 'nodeType': 'YulFunctionCall', 'src': '8628:17:0'}, 'nodeType': 'YulExpressionStatement', 'src': '8628:17:0'}]}, 'nodeType': 'YulCase', 'src': '8618:29:0', 'value': 'default'}], 'expression': {'name': 'result', 'nodeType': 'YulIdentifier', 'src': '8556:6:0'}, 'nodeType': 'YulSwitch', 'src': '8549:98:0'}]}, 'evmVersion': 'istanbul', 'externalReferences': [{'declaration': 636, 'isOffset': False, 'isSlot': False, 'src': '8384:4:0', 'valueSize': 1}, {'declaration': 636, 'isOffset': False, 'isSlot': False, 'src': '8403:4:0', 'valueSize': 1}, {'declaration': 632, 'isOffset': False, 'isSlot': False, 'src': '8371:7:0', 'valueSize': 1}], 'id': 640, 'nodeType': 'InlineAssembly', 'src': '8313:345:0'}
 NodeType: NEW VARIABLE  expression: None
 NodeType: NEW VARIABLE  expression: target_ = target
 NodeType: END_IF  expression: None
 NodeType: NEW VARIABLE  expression: None
 NodeType: EXPRESSION  expression: returndatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,size_fallback_asm_0)
 NodeType: EXPRESSION  expression: result_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),target_,data + 0x20,mload(uint256)(data),0,0)
can_toggle_delegatecall_on_off: delegatecall_condition = False
 NodeType: EXPRESSION  expression: ptr_fallback_asm_0 = mload(uint256)(0x40)
 NodeType: EXPRESSION  expression: size_fallback_asm_0 = returndatasize()()
 NodeType: EXPRESSION  expression: revert(uint256,uint256)(ptr_fallback_asm_0,size_fallback_asm_0)
 NodeType: END_IF  expression: None
 NodeType: NEW VARIABLE  expression: data = msg.data
 NodeType: RETURN  expression: None
 NodeType: EXPRESSION  expression: return(uint256,uint256)(ptr_fallback_asm_0,size_fallback_asm_0)
 NodeType: IF  expression: switch_expr_8549_98_0_fallback_asm_0 == 0
 NodeType: EXPRESSION  expression: switch_expr_8549_98_0_fallback_asm_0 = result_fallback_asm_0
 NodeType: NEW VARIABLE  expression: None
 NodeType: NEW VARIABLE  expression: None
Found public function: constructor
Found external function: getOwner
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) target = _newTarget
has_time_delay: (node.type) EXPRESSION
(Expression) onlyOwner()
has_time_delay: (node.type) EXPRESSION
(Expression) _setTarget(_newTarget)
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == owner,Ownable: Caller is not the owner)
has_time_delay: (node.type) EXPRESSION
(Expression) SetTarget(_newTarget)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(Address.isContract(_newTarget),Target not a contract)
