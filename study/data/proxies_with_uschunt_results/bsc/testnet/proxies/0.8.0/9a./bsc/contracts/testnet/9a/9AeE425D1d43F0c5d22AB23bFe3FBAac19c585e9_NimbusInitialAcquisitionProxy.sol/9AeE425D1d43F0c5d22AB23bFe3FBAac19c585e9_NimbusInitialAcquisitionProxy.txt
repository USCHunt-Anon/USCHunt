
Begin IBEP20.is_proxy (Slither line:1425)


End IBEP20.is_proxy (Slither line:1428)


Begin IBEP20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBEP20 

End IBEP20.is_upgradeable_proxy (Slither line:1407)


Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin Pausable.is_proxy (Slither line:1425)


End Pausable.is_proxy (Slither line:1428)


Begin Pausable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Pausable 

End Pausable.is_upgradeable_proxy (Slither line:1407)


Begin IBEP165.is_proxy (Slither line:1425)


End IBEP165.is_proxy (Slither line:1428)


Begin IBEP165.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBEP165 

End IBEP165.is_upgradeable_proxy (Slither line:1407)


Begin ERC165.is_proxy (Slither line:1425)


End ERC165.is_proxy (Slither line:1428)


Begin ERC165.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC165 

End ERC165.is_upgradeable_proxy (Slither line:1407)


Begin IBEP721.is_proxy (Slither line:1425)


End IBEP721.is_proxy (Slither line:1428)


Begin IBEP721.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBEP721 

End IBEP721.is_upgradeable_proxy (Slither line:1407)


Begin ISmartLP.is_proxy (Slither line:1425)


End ISmartLP.is_proxy (Slither line:1428)


Begin ISmartLP.is_upgradeable_proxy (Slither line:1136)

Checking contract: ISmartLP 

End ISmartLP.is_upgradeable_proxy (Slither line:1407)


Begin IStakingMain.is_proxy (Slither line:1425)


End IStakingMain.is_proxy (Slither line:1428)


Begin IStakingMain.is_upgradeable_proxy (Slither line:1136)

Checking contract: IStakingMain 

End IStakingMain.is_upgradeable_proxy (Slither line:1407)


Begin IVestingNFT.is_proxy (Slither line:1425)


End IVestingNFT.is_proxy (Slither line:1428)


Begin IVestingNFT.is_upgradeable_proxy (Slither line:1136)

Checking contract: IVestingNFT 

End IVestingNFT.is_upgradeable_proxy (Slither line:1407)


Begin INimbusReferralProgram.is_proxy (Slither line:1425)


End INimbusReferralProgram.is_proxy (Slither line:1428)


Begin INimbusReferralProgram.is_upgradeable_proxy (Slither line:1136)

Checking contract: INimbusReferralProgram 

End INimbusReferralProgram.is_upgradeable_proxy (Slither line:1407)


Begin INimbusStakingPool.is_proxy (Slither line:1425)


End INimbusStakingPool.is_proxy (Slither line:1428)


Begin INimbusStakingPool.is_upgradeable_proxy (Slither line:1136)

Checking contract: INimbusStakingPool 

End INimbusStakingPool.is_upgradeable_proxy (Slither line:1407)


Begin IWBNB.is_proxy (Slither line:1425)


End IWBNB.is_proxy (Slither line:1428)


Begin IWBNB.is_upgradeable_proxy (Slither line:1136)

Checking contract: IWBNB 

End IWBNB.is_upgradeable_proxy (Slither line:1407)


Begin INimbusRouter.is_proxy (Slither line:1425)


End INimbusRouter.is_proxy (Slither line:1428)


Begin INimbusRouter.is_upgradeable_proxy (Slither line:1136)

Checking contract: INimbusRouter 

End INimbusRouter.is_upgradeable_proxy (Slither line:1407)


Begin INimbusReferralProgramMarketing.is_proxy (Slither line:1425)


End INimbusReferralProgramMarketing.is_proxy (Slither line:1428)


Begin INimbusReferralProgramMarketing.is_upgradeable_proxy (Slither line:1136)

Checking contract: INimbusReferralProgramMarketing 

End INimbusReferralProgramMarketing.is_upgradeable_proxy (Slither line:1407)


Begin IPriceFeed.is_proxy (Slither line:1425)


End IPriceFeed.is_proxy (Slither line:1428)


Begin IPriceFeed.is_upgradeable_proxy (Slither line:1136)

Checking contract: IPriceFeed 

End IPriceFeed.is_upgradeable_proxy (Slither line:1407)


Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin NimbusInitialAcquisitionStorage.is_proxy (Slither line:1425)


End NimbusInitialAcquisitionStorage.is_proxy (Slither line:1428)


Begin NimbusInitialAcquisitionStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: NimbusInitialAcquisitionStorage 

End NimbusInitialAcquisitionStorage.is_upgradeable_proxy (Slither line:1407)


Begin TransferHelper.is_proxy (Slither line:1425)


End TransferHelper.is_proxy (Slither line:1428)


Begin TransferHelper.is_upgradeable_proxy (Slither line:1136)

Checking contract: TransferHelper 

End TransferHelper.is_upgradeable_proxy (Slither line:1407)


Begin NimbusInitialAcquisitionProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin NimbusInitialAcquisitionProxy.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(ptr_fallback_asm_0,size_fallback_asm_0) (Slither line:2792)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2807)
Args:
ptr_fallback_asm_0
size_fallback_asm_0

End NimbusInitialAcquisitionProxy.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin NimbusInitialAcquisitionProxy.find_delegatecall_in_exp_node

Found Expression Node: ptr_fallback_asm_0 = mload(uint256)(0x40) (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)
Expression called: mload(uint256)
Type of call: uint256 (Slither line:2807)
Args:
0x40

End NimbusInitialAcquisitionProxy.find_delegatecall_in_exp_node (Slither line:2848)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin NimbusInitialAcquisitionProxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,size_fallback_asm_0) (Slither line:2792)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2807)
Args:
ptr_fallback_asm_0
0
size_fallback_asm_0

End NimbusInitialAcquisitionProxy.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin NimbusInitialAcquisitionProxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_13032_106_0_fallback_asm_0 = result_fallback_asm_0 (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)

End NimbusInitialAcquisitionProxy.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin NimbusInitialAcquisitionProxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'target_'
Looking for corresponding Variable
Current function: fallback

Begin NimbusInitialAcquisitionProxy.find_delegate_variable_from_name
Searching for target_ (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking owner (Slither line:1689)
Checking newOwner (Slither line:1689)
Checking _paused (Slither line:1689)
Checking SYSTEM_TOKEN (Slither line:1689)
Checking NBU_WBNB (Slither line:1689)
Checking referralProgram (Slither line:1689)
Checking referralProgramMarketing (Slither line:1689)
Checking priceFeed (Slither line:1689)
Checking nftVesting (Slither line:1689)
Checking nftCashback (Slither line:1689)
Checking nftSmartStaker (Slither line:1689)
Checking nftVestingUri (Slither line:1689)
Checking allowAccuralMarketingReward (Slither line:1689)
Checking stakingPools (Slither line:1689)
Checking userPurchases (Slither line:1689)
Checking userPurchasesEquivalent (Slither line:1689)
Checking recipient (Slither line:1689)
Checking swapRouter (Slither line:1689)
Checking allowedTokens (Slither line:1689)
Checking swapToken (Slither line:1689)
Checking sponsorBonus (Slither line:1689)
Checking swapTokenAmountForSponsorBonusThreshold (Slither line:1689)
Checking unclaimedSponsorBonus (Slither line:1689)
Checking unclaimedSponsorBonusEquivalent (Slither line:1689)
Checking usePriceFeeds (Slither line:1689)
Checking cashbackBonus (Slither line:1689)
Checking swapTokenAmountForCashbackBonusThreshold (Slither line:1689)
Checking vestingRedeemingAllowed (Slither line:1689)
Checking target (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking data (Slither line:1703)
Checking target_ (Slither line:1703)
target_ is a Local Variable in NimbusInitialAcquisitionProxy.fallback (Slither line:1707)
Expression: target (Slither line:1719)
Identifier value: target (Slither line:1725)
target is a State Variable in contract NimbusInitialAcquisitionProxy (Slither line:1730)

End NimbusInitialAcquisitionProxy.find_delegate_variable_by_name


End NimbusInitialAcquisitionProxy.find_delegatecall_in_asm (Slither line:1637)


End NimbusInitialAcquisitionProxy.is_proxy (Slither line:1476)


Begin NimbusInitialAcquisitionProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: NimbusInitialAcquisitionProxy 
NimbusInitialAcquisitionProxy is delegating to target
Looking for setter (Slither line:1200)


Begin NimbusInitialAcquisitionProxy.find_setter_in_contract (Slither line:3109)

Checking function: constructor(address) returns() (Slither line:3117)
Checking function: fallback() returns() (Slither line:3117)
Checking function: setTarget(address) returns() (Slither line:3117)
Visibility: external
SetTarget(_newTarget)
size > 0
require(bool,string)(Address.isContract(_newTarget),Target not a contract)
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3206)
target = _newTarget
is an Assignment Operation (Slither line:3206)

End NimbusInitialAcquisitionProxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: setTarget in contract: NimbusInitialAcquisitionProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin NimbusInitialAcquisitionProxy.find_getter_in_contract (Slither line:2964)

target is a Variable object
_newTarget
Checking function: constructor (Slither line:2978)
Checking function: paused (Slither line:2978)
paused returns bool variable  (Slither line:2998)
RETURN node expression: _paused (Slither line:3018)
Checking function: pause (Slither line:2978)
Checking function: unpause (Slither line:2978)
Checking function: constructor (Slither line:2978)
Checking function: getOwner (Slither line:2978)
getOwner returns address variable  (Slither line:2998)
RETURN node expression: owner (Slither line:3018)
Checking function: transferOwnership (Slither line:2978)
Checking function: acceptOwnership (Slither line:2978)
Checking function: constructor (Slither line:2978)
Checking function: fallback (Slither line:2978)
Checking function: setTarget (Slither line:2978)
Checking function: _setTarget (Slither line:2978)

End NimbusInitialAcquisitionProxy.find_getter_in_contract (Slither line:3073)

Could not find implementation getter in NimbusInitialAcquisitionProxy (Slither line:1305)

Begin IBEP20.find_getter_in_contract (Slither line:2964)

target is a Variable object
_newTarget

End IBEP20.find_getter_in_contract (Slither line:3073)

Checking public function paused
Checking external function pause
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == owner,Ownable: Caller is not the owner)
Checking external function unpause
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == owner,Ownable: Caller is not the owner)
Checking external function getOwner
Checking external function transferOwnership
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == owner,Ownable: Caller is not the owner)
Checking external function acceptOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == newOwner)
Checking external function setTarget
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == owner,Ownable: Caller is not the owner)
Checking external function fallback
functions_writing_to_variable: target
functions_writing_to_variable: checking function NimbusInitialAcquisitionProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function NimbusInitialAcquisitionProxy.unpause (proxy_features line:893)
functions_writing_to_variable: checking function NimbusInitialAcquisitionProxy.pause (proxy_features line:893)
functions_writing_to_variable: checking function NimbusInitialAcquisitionProxy._setTarget (proxy_features line:893)
functions_writing_to_variable: exp = require(bool,string)(Address.isContract(_newTarget),Target not a contract) (proxy_features line:904)
functions_writing_to_variable: exp = target = _newTarget (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: target = _newTarget (proxy_features line:907)
functions_writing_to_variable: Identifier: target (proxy_features line:919)
get_value_assigned: target = _newTarget
functions_writing_to_variable: exp = SetTarget(_newTarget) (proxy_features line:904)
functions_writing_to_variable: _setTarget writes _newTarget to target (proxy_features line:924)
functions_writing_to_variable: checking function NimbusInitialAcquisitionProxy.getOwner (proxy_features line:893)
functions_writing_to_variable: checking function NimbusInitialAcquisitionProxy.constructor (proxy_features line:893)
get_value_assigned: target = _newTarget
functions_writing_to_variable: constructor writes _newTarget to target (proxy_features line:1008)
functions_writing_to_variable: checking function NimbusInitialAcquisitionProxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function NimbusInitialAcquisitionProxy.paused (proxy_features line:893)
functions_writing_to_variable: checking function NimbusInitialAcquisitionProxy.setTarget (proxy_features line:893)
get_value_assigned: target = _newTarget
functions_writing_to_variable: setTarget writes _newTarget to target (proxy_features line:1008)
functions_writing_to_variable: checking function NimbusInitialAcquisitionProxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function NimbusInitialAcquisitionProxy.acceptOwnership (proxy_features line:893)
functions_writing_to_variable: checking function NimbusInitialAcquisitionProxy.transferOwnership (proxy_features line:893)
has_compatibility_checks: dependencies: ['_newTarget', '_newTarget', '_newTarget']
has_compatibility_checks: skipping internal function _setTarget
has_compatibility_checks: checking public function constructor
require(bool,string)(Address.isContract(_newTarget),Target not a contract)
has_compatibility_checks: condition Address.isContract(_newTarget)
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: checking external function setTarget
require(bool,string)(Address.isContract(_newTarget),Target not a contract)
has_compatibility_checks: condition Address.isContract(_newTarget)
check_condition_from_expression: modifier calls: ['onlyOwner()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
require(bool,string)(msg.sender == owner,Ownable: Caller is not the owner)
has_compatibility_checks: condition msg.sender == owner
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: IF
 dominator expression: gasleft()() <= 2300
can_toggle_delegatecall_on_off: successors:
 NodeType: EXPRESSION  expression: result_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),target_,data + 0x20,mload(uint256)(data),0,0)
can_toggle_delegatecall_on_off: delegatecall_condition = False
 NodeType: EXPRESSION  expression: revert(uint256,uint256)(ptr_fallback_asm_0,size_fallback_asm_0)
 NodeType: END_IF  expression: None
 NodeType: NEW VARIABLE  expression: data = msg.data
 NodeType: RETURN  expression: None
 NodeType: IF  expression: switch_expr_13032_106_0_fallback_asm_0 == 0
 NodeType: EXPRESSION  expression: switch_expr_13032_106_0_fallback_asm_0 = result_fallback_asm_0
 NodeType: EXPRESSION  expression: return(uint256,uint256)(ptr_fallback_asm_0,size_fallback_asm_0)
 NodeType: NEW VARIABLE  expression: None
 NodeType: NEW VARIABLE  expression: None
 NodeType: NEW VARIABLE  expression: None
 NodeType: END_IF  expression: None
 NodeType: INLINE ASM  expression: {'AST': {'nodeType': 'YulBlock', 'src': '12785:368:0', 'statements': [{'nodeType': 'YulVariableDeclaration', 'src': '12804:78:0', 'value': {'arguments': [{'arguments': [], 'functionName': {'name': 'gas', 'nodeType': 'YulIdentifier', 'src': '12831:3:0'}, 'nodeType': 'YulFunctionCall', 'src': '12831:5:0'}, {'name': 'target_', 'nodeType': 'YulIdentifier', 'src': '12838:7:0'}, {'arguments': [{'name': 'data', 'nodeType': 'YulIdentifier', 'src': '12851:4:0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '12857:4:0', 'type': '', 'value': '0x20'}], 'functionName': {'name': 'add', 'nodeType': 'YulIdentifier', 'src': '12847:3:0'}, 'nodeType': 'YulFunctionCall', 'src': '12847:15:0'}, {'arguments': [{'name': 'data', 'nodeType': 'YulIdentifier', 'src': '12870:4:0'}], 'functionName': {'name': 'mload', 'nodeType': 'YulIdentifier', 'src': '12864:5:0'}, 'nodeType': 'YulFunctionCall', 'src': '12864:11:0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '12877:1:0', 'type': '', 'value': '0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '12880:1:0', 'type': '', 'value': '0'}], 'functionName': {'name': 'delegatecall', 'nodeType': 'YulIdentifier', 'src': '12818:12:0'}, 'nodeType': 'YulFunctionCall', 'src': '12818:64:0'}, 'variables': [{'name': 'result', 'nodeType': 'YulTypedName', 'src': '12808:6:0', 'type': ''}]}, {'nodeType': 'YulVariableDeclaration', 'src': '12900:28:0', 'value': {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '12912:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '12912:16:0'}, 'variables': [{'name': 'size', 'nodeType': 'YulTypedName', 'src': '12904:4:0', 'type': ''}]}, {'nodeType': 'YulVariableDeclaration', 'src': '12946:22:0', 'value': {'arguments': [{'kind': 'number', 'nodeType': 'YulLiteral', 'src': '12963:4:0', 'type': '', 'value': '0x40'}], 'functionName': {'name': 'mload', 'nodeType': 'YulIdentifier', 'src': '12957:5:0'}, 'nodeType': 'YulFunctionCall', 'src': '12957:11:0'}, 'variables': [{'name': 'ptr', 'nodeType': 'YulTypedName', 'src': '12950:3:0', 'type': ''}]}, {'expression': {'arguments': [{'name': 'ptr', 'nodeType': 'YulIdentifier', 'src': '13001:3:0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '13006:1:0', 'type': '', 'value': '0'}, {'name': 'size', 'nodeType': 'YulIdentifier', 'src': '13009:4:0'}], 'functionName': {'name': 'returndatacopy', 'nodeType': 'YulIdentifier', 'src': '12986:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '12986:28:0'}, 'nodeType': 'YulExpressionStatement', 'src': '12986:28:0'}, {'cases': [{'body': {'nodeType': 'YulBlock', 'src': '13070:21:0', 'statements': [{'expression': {'arguments': [{'name': 'ptr', 'nodeType': 'YulIdentifier', 'src': '13079:3:0'}, {'name': 'size', 'nodeType': 'YulIdentifier', 'src': '13084:4:0'}], 'functionName': {'name': 'revert', 'nodeType': 'YulIdentifier', 'src': '13072:6:0'}, 'nodeType': 'YulFunctionCall', 'src': '13072:17:0'}, 'nodeType': 'YulExpressionStatement', 'src': '13072:17:0'}]}, 'nodeType': 'YulCase', 'src': '13063:28:0', 'value': {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '13068:1:0', 'type': '', 'value': '0'}}, {'body': {'nodeType': 'YulBlock', 'src': '13117:21:0', 'statements': [{'expression': {'arguments': [{'name': 'ptr', 'nodeType': 'YulIdentifier', 'src': '13126:3:0'}, {'name': 'size', 'nodeType': 'YulIdentifier', 'src': '13131:4:0'}], 'functionName': {'name': 'return', 'nodeType': 'YulIdentifier', 'src': '13119:6:0'}, 'nodeType': 'YulFunctionCall', 'src': '13119:17:0'}, 'nodeType': 'YulExpressionStatement', 'src': '13119:17:0'}]}, 'nodeType': 'YulCase', 'src': '13109:29:0', 'value': 'default'}], 'expression': {'name': 'result', 'nodeType': 'YulIdentifier', 'src': '13039:6:0'}, 'nodeType': 'YulSwitch', 'src': '13032:106:0'}]}, 'evmVersion': 'istanbul', 'externalReferences': [{'declaration': 1095, 'isOffset': False, 'isSlot': False, 'src': '12851:4:0', 'valueSize': 1}, {'declaration': 1095, 'isOffset': False, 'isSlot': False, 'src': '12870:4:0', 'valueSize': 1}, {'declaration': 1091, 'isOffset': False, 'isSlot': False, 'src': '12838:7:0', 'valueSize': 1}], 'id': 1099, 'nodeType': 'InlineAssembly', 'src': '12776:377:0'}
 NodeType: NEW VARIABLE  expression: target_ = target
 NodeType: NEW VARIABLE  expression: None
 NodeType: EXPRESSION  expression: returndatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,size_fallback_asm_0)
 NodeType: EXPRESSION  expression: ptr_fallback_asm_0 = mload(uint256)(0x40)
 NodeType: EXPRESSION  expression: size_fallback_asm_0 = returndatasize()()
Found public function: paused
has_time_delay: (node.type) EXPRESSION
(Expression) SetTarget(_newTarget)
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(Address.isContract(_newTarget),Target not a contract)
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) EXPRESSION
(Expression) target = _newTarget
has_time_delay: (node.type) EXPRESSION
(Expression) onlyOwner()
has_time_delay: (node.type) EXPRESSION
(Expression) _setTarget(_newTarget)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == owner,Ownable: Caller is not the owner)
