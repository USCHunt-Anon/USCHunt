
Begin Context.is_proxy (Slither line:1425)


End Context.is_proxy (Slither line:1428)


Begin Context.is_upgradeable_proxy (Slither line:1136)

Checking contract: Context 

End Context.is_upgradeable_proxy (Slither line:1407)


Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin IERC20.is_proxy (Slither line:1425)


End IERC20.is_proxy (Slither line:1428)


Begin IERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20 

End IERC20.is_upgradeable_proxy (Slither line:1407)


Begin IERC20Metadata.is_proxy (Slither line:1425)


End IERC20Metadata.is_proxy (Slither line:1428)


Begin IERC20Metadata.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20Metadata 

End IERC20Metadata.is_upgradeable_proxy (Slither line:1407)


Begin ERC20.is_proxy (Slither line:1425)


End ERC20.is_proxy (Slither line:1428)


Begin ERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20 

End ERC20.is_upgradeable_proxy (Slither line:1407)


Begin Storage.is_proxy (Slither line:1425)


End Storage.is_proxy (Slither line:1428)


Begin Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: Storage 

End Storage.is_upgradeable_proxy (Slither line:1407)


Begin StakingPool.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin StakingPool.find_delegatecall_in_exp_node

Found Expression Node: free_mem_ptr_delegateAndReturn_asm_0 = mload(uint256)(0x40) (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)
Expression called: mload(uint256)
Type of call: uint256 (Slither line:2807)
Args:
0x40

End StakingPool.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin StakingPool.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(free_mem_ptr_delegateAndReturn_asm_0,0,returndatasize()()) (Slither line:2792)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2807)
Args:
free_mem_ptr_delegateAndReturn_asm_0
0
returndatasize()()

End StakingPool.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin StakingPool.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(free_mem_ptr_delegateAndReturn_asm_0,returndatasize()()) (Slither line:2792)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2807)
Args:
free_mem_ptr_delegateAndReturn_asm_0
returndatasize()()

End StakingPool.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin StakingPool.find_delegatecall_in_exp_node

Found Expression Node: delegateAndReturn() (Slither line:2792)
Expression called: delegateAndReturn
Type of call: bytes memory (Slither line:2807)
Args:

End StakingPool.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin StakingPool.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(free_mem_ptr_delegateAndReturn_asm_0,returndatasize()()) (Slither line:2792)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2807)
Args:
free_mem_ptr_delegateAndReturn_asm_0
returndatasize()()

End StakingPool.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin StakingPool.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_20490_141_0_delegateAndReturn_asm_0 = success (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)

End StakingPool.find_delegatecall_in_exp_node (Slither line:2848)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin StakingPool.find_delegatecall_in_asm (Slither line:1541)


End StakingPool.find_delegatecall_in_asm (Slither line:1637)


Begin StakingPool.find_delegatecall_in_asm (Slither line:1541)


End StakingPool.find_delegatecall_in_asm (Slither line:1637)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


Found LowLevelCall (Slither line:2730)


Found delegatecall in LowLevelCall (Slither line:2732)


End Contract.find_delegatecall_in_ir (Slither line:2763)


End StakingPool.is_proxy (Slither line:1476)


Begin StakingPool.is_upgradeable_proxy (Slither line:1136)

Checking contract: StakingPool 
StakingPool is delegating to implementation
Looking for setter (Slither line:1200)

Looking for setter in Storage (Slither line:1204)


Begin Storage.find_setter_in_contract (Slither line:3109)


End Storage.find_setter_in_contract (Slither line:3315)


Could not find setter in Storage 
Looking in StakingPool (Slither line:1213)

Begin StakingPool.find_setter_in_contract (Slither line:3109)

Checking function: constructor(address,bool,address,address,address,string,string) returns() (Slither line:3117)
Checking function: delegateTo(address,bytes) returns(bytes) (Slither line:3117)
Visibility: internal
Checking function: _setImplementation(address) returns(bool) (Slither line:3117)
Visibility: external
require(bool,string)(canBeChanged,StakingPool::_setImplementation: Implementation can not be changed)
_owner
implementation = implementation_
is an Assignment Operation (Slither line:3206)

End StakingPool.find_setter_in_contract (Slither line:3315)


Implementation set by function: _setImplementation in contract: StakingPool (Slither line:1264)
Looking for getter (Slither line:1273)


Begin Storage.find_getter_in_contract (Slither line:2964)

implementation is a Variable object
implementation_

End Storage.find_getter_in_contract (Slither line:3073)


Begin StakingPool.find_getter_in_contract (Slither line:2964)

implementation is a Variable object
implementation_
Checking function: constructor (Slither line:2978)
Checking function: owner (Slither line:2978)
owner returns address variable  (Slither line:2998)
RETURN node expression: _owner (Slither line:3018)
Checking function: renounceOwnership (Slither line:2978)
Checking function: transferOwnership (Slither line:2978)
Checking function: _setOwner (Slither line:2978)
Checking function: _msgSender (Slither line:2978)
_msgSender returns address variable  (Slither line:2998)
RETURN node expression: msg.sender (Slither line:3018)
Checking function: _msgData (Slither line:2978)
_msgData returns bytes variable  (Slither line:2998)
RETURN node expression: msg.data (Slither line:3018)
Checking function: constructor (Slither line:2978)
Checking function: delegateTo (Slither line:2978)
delegateTo returns bytes variable  (Slither line:2998)
RETURN node expression: returnData (Slither line:3018)
Checking function: _setImplementation (Slither line:2978)
_setImplementation returns bool variable  (Slither line:2998)
RETURN node expression: true (Slither line:3018)
Checking function: _renounceImplCanBeChange (Slither line:2978)
_renounceImplCanBeChange returns bool variable  (Slither line:2998)
RETURN node expression: true (Slither line:3018)
Checking function: delegateAndReturn (Slither line:2978)
delegateAndReturn returns bytes variable  (Slither line:2998)
Checking function: fallback (Slither line:2978)

End StakingPool.find_getter_in_contract (Slither line:3073)

Could not find implementation getter in StakingPool (Slither line:1305)
or in Storage (Slither line:1319)
Checking for implementation at slot 0 in contract Ownable (Slither line:1355)
Found _owner at slot 0 in contract Ownable (Slither line:1362)
Checking for _owner at slot 0 in contract ERC20 (Slither line:1355)
Found _balances at slot 0 in contract ERC20 (Slither line:1362)
Checking for _balances at slot 0 in contract Storage (Slither line:1355)
Found implementation at slot 0 in contract Storage (Slither line:1362)

Begin Storage.find_getter_in_contract (Slither line:2964)

implementation is a Variable object
implementation_

End Storage.find_getter_in_contract (Slither line:3073)

impl_address_from_contract_call: implementation_
impl_address_from_contract_call: StateVariable implementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression mload(uint256)(0x40)
impl_address_from_contract_call: arg is 0x40
impl_address_from_contract_call: CallExpression returndatacopy(uint256,uint256,uint256)(free_mem_ptr_delegateAndReturn_asm_0,0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_delegateAndReturn_asm_0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression revert(uint256,uint256)(free_mem_ptr_delegateAndReturn_asm_0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_delegateAndReturn_asm_0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression delegateAndReturn()
impl_address_from_contract_call: CallExpression return(uint256,uint256)(free_mem_ptr_delegateAndReturn_asm_0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_delegateAndReturn_asm_0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression implementation.delegatecall(msg.data)
Checking public function owner
Checking public function renounceOwnership
Checking public function transferOwnership
Checking external function _setImplementation
Checking public function _renounceImplCanBeChange
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function StakingPool.owner (proxy_features line:893)
functions_writing_to_variable: checking function StakingPool.delegateAndReturn (proxy_features line:893)
functions_writing_to_variable: checking function StakingPool._msgData (proxy_features line:893)
functions_writing_to_variable: checking function StakingPool._setOwner (proxy_features line:893)
functions_writing_to_variable: checking function StakingPool._msgSender (proxy_features line:893)
functions_writing_to_variable: checking function StakingPool.constructor (proxy_features line:893)
functions_writing_to_variable: exp = require(bool,string)(implAndTerms_ != address(0) && whitelist_ != address(0) && stakeToken_ != address(0) && reservoir_ != address(0),StakingPool::constructor: address is 0) (proxy_features line:904)
functions_writing_to_variable: exp = implementation = implAndTerms_ (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: implementation = implAndTerms_ (proxy_features line:907)
functions_writing_to_variable: Identifier: implementation (proxy_features line:919)
get_value_assigned: implementation = implAndTerms_
functions_writing_to_variable: exp = canBeChanged = implCanBeChanged_ (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: canBeChanged = implCanBeChanged_ (proxy_features line:907)
functions_writing_to_variable: exp = delegateTo(implementation,abi.encodeWithSignature(initialize(address,address,address,string,string),whitelist_,stakeToken_,reservoir_,name_,symbol_)) (proxy_features line:904)
functions_writing_to_variable: constructor writes implAndTerms_ to implementation (proxy_features line:924)
functions_writing_to_variable: checking function StakingPool.delegateTo (proxy_features line:893)
functions_writing_to_variable: checking function StakingPool._renounceImplCanBeChange (proxy_features line:893)
functions_writing_to_variable: checking function StakingPool.constructor (proxy_features line:893)
functions_writing_to_variable: checking function StakingPool.transferOwnership (proxy_features line:893)
functions_writing_to_variable: checking function StakingPool.renounceOwnership (proxy_features line:893)
functions_writing_to_variable: checking function StakingPool.fallback (proxy_features line:893)
functions_writing_to_variable: checking function StakingPool._setImplementation (proxy_features line:893)
functions_writing_to_variable: exp = require(bool,string)(canBeChanged,StakingPool::_setImplementation: Implementation can not be changed) (proxy_features line:904)
functions_writing_to_variable: exp = implementation = implementation_ (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: implementation = implementation_ (proxy_features line:907)
functions_writing_to_variable: Identifier: implementation (proxy_features line:919)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: exp = true (proxy_features line:904)
functions_writing_to_variable: exp = onlyOwner() (proxy_features line:904)
functions_writing_to_variable: exp = require(bool,string)(owner() == _msgSender(),Ownable: caller is not the owner) (proxy_features line:904)
functions_writing_to_variable: exp = _owner (proxy_features line:904)
functions_writing_to_variable: exp = msg.sender (proxy_features line:904)
functions_writing_to_variable: _setImplementation writes implementation_ to implementation (proxy_features line:924)
has_compatibility_checks: dependencies: ['implAndTerms_', 'implementation_']
has_compatibility_checks: checking public function constructor
require(bool,string)(implAndTerms_ != address(0) && whitelist_ != address(0) && stakeToken_ != address(0) && reservoir_ != address(0),StakingPool::constructor: address is 0)
has_compatibility_checks: condition implAndTerms_ != address(0) && whitelist_ != address(0) && stakeToken_ != address(0) && reservoir_ != address(0)
check_condition_from_expression: condition implAndTerms_ != address(0) && whitelist_ != address(0) && stakeToken_ != address(0) && reservoir_ != address(0)
has_compatibility_checks: IF node exp = success == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(returnData + 0x20,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(returnData + 0x20,returndatasize()())']
has_compatibility_checks: ConditionalExpression if success == 0 then revert(uint256,uint256)(returnData + 0x20,returndatasize()()) else returnData
has_compatibility_checks: checking external function _setImplementation
require(bool,string)(canBeChanged,StakingPool::_setImplementation: Implementation can not be changed)
has_compatibility_checks: condition canBeChanged
check_condition_from_expression: Identifier canBeChanged
require(bool,string)(owner() == _msgSender(),Ownable: caller is not the owner)
has_compatibility_checks: condition owner() == _msgSender()
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: (success) = implementation.delegatecall(msg.data)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
Found public function: owner
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(canBeChanged,StakingPool::_setImplementation: Implementation can not be changed)
has_time_delay: (node.type) RETURN
(Expression) _owner
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = implementation_
has_time_delay: (node.type) RETURN
(Expression) msg.sender
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(owner() == _msgSender(),Ownable: caller is not the owner)
has_time_delay: (node.type) RETURN
(Expression) true
has_time_delay: (node.type) EXPRESSION
(Expression) onlyOwner()
