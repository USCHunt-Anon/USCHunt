{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "StakingPool (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.8.0/69c29660BA3bcE4731d9E6afa9C84b7633584e93_StakingPool.sol/69c29660BA3bcE4731d9E6afa9C84b7633584e93_StakingPool.sol#557-627)",
        "elements": [],
        "description": "StakingPool (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.8.0/69c29660BA3bcE4731d9E6afa9C84b7633584e93_StakingPool.sol/69c29660BA3bcE4731d9E6afa9C84b7633584e93_StakingPool.sol#557-627) is an upgradeable proxy.\nimplementation was found in a different contract.\nimplementation is an address state variable.\nMissing compatibility check in StakingPool._setImplementation(address)\nFound compatibility check in StakingPool.constructor(address,bool,address,address,address,string,string)\n",
        "id": "82258a131b88304b1828c0365f108f95f8395f7c264695db44142e02afad137e",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "Storage.implementation",
          "impl_address_setter": "StakingPool._setImplementation(address)",
          "impl_address_getter": "not found",
          "impl_address_location": "Storage (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.8.0/69c29660BA3bcE4731d9E6afa9C84b7633584e93_StakingPool.sol/69c29660BA3bcE4731d9E6afa9C84b7633584e93_StakingPool.sol#551-554)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "StakingPool._setImplementation(address)": "missing",
              "StakingPool.constructor(address,bool,address,address,address,string,string)": "require(bool,string)(implAndTerms_ != address(0) && whitelist_ != address(0) && stakeToken_ != address(0) && reservoir_ != address(0),StakingPool::constructor: address is 0)"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "owner()",
              "renounceOwnership()",
              "transferOwnership(address)",
              "_setImplementation(address)",
              "_renounceImplCanBeChange()"
            ]
          }
        }
      }
    ]
  }
}