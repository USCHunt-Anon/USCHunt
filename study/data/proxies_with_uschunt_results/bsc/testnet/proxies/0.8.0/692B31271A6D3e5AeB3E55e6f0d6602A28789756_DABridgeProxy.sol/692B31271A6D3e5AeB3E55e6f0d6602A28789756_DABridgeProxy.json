{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "DABridgeProxy (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.8.0/692B31271A6D3e5AeB3E55e6f0d6602A28789756_DABridgeProxy.sol/692B31271A6D3e5AeB3E55e6f0d6602A28789756_DABridgeProxy.sol#4-110)",
        "elements": [],
        "description": "DABridgeProxy (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.8.0/692B31271A6D3e5AeB3E55e6f0d6602A28789756_DABridgeProxy.sol/692B31271A6D3e5AeB3E55e6f0d6602A28789756_DABridgeProxy.sol#4-110) is an upgradeable proxy.\nimplementationPosition is declared in the proxy.\n uses Unstructured Storage\n uses non-standard slot: keccak256(bytes)(implementation.contract.diamond-alpha-bridge:2022)\nMissing compatibility check in DABridgeProxy.constructor(address)\nFound compatibility check in DABridgeProxy.upgradeTo(address)\n",
        "id": "f9daf22c4dcf6a042098e8160773f3e053e83c05a0a3a463429257d4a392327b",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "DABridgeProxy.implementationPosition",
          "impl_address_setter": "DABridgeProxy.upgradeTo(address)",
          "impl_address_getter": "DABridgeProxy.implementation()",
          "impl_address_location": "DABridgeProxy (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.8.0/692B31271A6D3e5AeB3E55e6f0d6602A28789756_DABridgeProxy.sol/692B31271A6D3e5AeB3E55e6f0d6602A28789756_DABridgeProxy.sol#4-110)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "keccak256(bytes)(implementation.contract.diamond-alpha-bridge:2022)",
          "unstructured_storage": true,
          "eip_1967": false,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "DABridgeProxy.constructor(address)": "missing",
              "DABridgeProxy.upgradeTo(address)": "require(bool,string)(currentImplementation != _newImplementation,DABridgeProxy: Cannot upgrade to the current implementation)"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "implementation()",
              "transferProxyOwnership(address)",
              "upgradeTo(address)"
            ]
          }
        }
      }
    ]
  }
}