
Begin ExistingWithoutABI.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin ExistingWithoutABI.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let offset := 0x000de0b6b3a7640000 (Slither line:1576)
    if iszero(eq(caller(), memUser)) (Slither line:1576)
    { (Slither line:1576)
        revert(3, 3) (Slither line:1576)
    } (Slither line:1576)
    let ptr := mload(0x40) (Slither line:1576)
    mstore(ptr, sig) (Slither line:1576)
    mstore(add(ptr, 0x04), _val) (Slither line:1576)
    let result := call(600000, sload(dc_slot), offset, ptr, 0x24, ptr, 0x00) (Slither line:1576)
    if eq(result, 0) (Slither line:1576)
    { (Slither line:1576)
        revert(0, 0) (Slither line:1576)
    } (Slither line:1576)
    mstore(0x40, add(ptr, 0x24)) (Slither line:1576)
} (Slither line:1576)

End ExistingWithoutABI.find_delegatecall_in_asm (Slither line:1637)


Begin ExistingWithoutABI.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let offset := 0x000de0b6b3a7640000 (Slither line:1576)
    if iszero(eq(caller(), memUser)) (Slither line:1576)
    { (Slither line:1576)
        revert(3, 3) (Slither line:1576)
    } (Slither line:1576)
    let ptr := mload(0x40) (Slither line:1576)
    mstore(ptr, sig) (Slither line:1576)
    mstore(add(ptr, 0x04), _val) (Slither line:1576)
    let result := call(600000, sload(dc_slot), offset, ptr, 0x24, ptr, 0x00) (Slither line:1576)

Found call in inline asm (Slither line:1622)
Destination param is called 'dc_slot'
Looking for corresponding Variable
Current function: fallback

Begin ExistingWithoutABI.find_delegate_variable_from_name
Searching for dc_slot (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking dc (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking _val (Slither line:1703)
Checking sig (Slither line:1703)
Checking memUser (Slither line:1703)

Searching Parameter Variables (Slither line:1797)
fallback contains assembly, searching for sload (Slither line:1875)

Begin ExistingWithoutABI.find_delegate_variable_from_name
Searching for dc (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking dc (Slither line:1689)
dc is a State Variable in contract ExistingWithoutABI (Slither line:1693)

End ExistingWithoutABI.find_delegate_variable_by_name


End ExistingWithoutABI.find_delegate_variable_from_name (Slither line:1939)


End ExistingWithoutABI.find_delegatecall_in_asm (Slither line:1637)


End ExistingWithoutABI.is_proxy (Slither line:1476)


Begin ExistingWithoutABI.is_upgradeable_proxy (Slither line:1136)

Checking contract: ExistingWithoutABI 
ExistingWithoutABI is delegating to dc
Looking for setter (Slither line:1200)


Begin ExistingWithoutABI.find_setter_in_contract (Slither line:3109)

Checking function: ExistingWithoutABI(address) returns() (Slither line:3117)
Checking function: fallback() returns() (Slither line:3117)

End ExistingWithoutABI.find_setter_in_contract (Slither line:3315)


Could not find implementation setter in ExistingWithoutABI (Slither line:1269)
Looking for getter (Slither line:1273)


Begin ExistingWithoutABI.find_getter_in_contract (Slither line:2964)

dc is a Variable object
Checking function: ExistingWithoutABI (Slither line:2978)
Checking function: fallback (Slither line:2978)

End ExistingWithoutABI.find_getter_in_contract (Slither line:3073)

Could not find implementation getter in ExistingWithoutABI (Slither line:1305)
Checking node of type NEW VARIABLE (Slither line:1395)
_val
_val = 1
Checking node of type NEW VARIABLE (Slither line:1395)
memUser
memUser = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4
Checking node of type INLINE ASM (Slither line:1395)
Checking node of type NEW VARIABLE (Slither line:1395)
sig
sig = bytes4(keccak256()(setA(uint256)))
Checking node of type ENTRY_POINT (Slither line:1395)

End ExistingWithoutABI.is_upgradeable_proxy (Slither line:1407)

Checking public function fallback
functions_writing_to_variable: dc
functions_writing_to_variable: checking function ExistingWithoutABI.ExistingWithoutABI (proxy_features line:893)
functions_writing_to_variable: exp = dc = _t (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: dc = _t (proxy_features line:907)
functions_writing_to_variable: Identifier: dc (proxy_features line:919)
get_value_assigned: dc = _t
functions_writing_to_variable: ExistingWithoutABI writes _t to dc (proxy_features line:924)
functions_writing_to_variable: checking function ExistingWithoutABI.fallback (proxy_features line:893)
has_compatibility_checks: dependencies: ['_t']
has_compatibility_checks: checking public function ExistingWithoutABI
Found public function: ExistingWithoutABI
Found fallback
