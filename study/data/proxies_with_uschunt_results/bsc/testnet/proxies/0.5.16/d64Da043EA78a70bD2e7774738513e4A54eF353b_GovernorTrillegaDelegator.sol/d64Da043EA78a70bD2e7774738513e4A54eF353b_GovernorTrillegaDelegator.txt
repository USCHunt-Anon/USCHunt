
Begin GovernorTrillegaEvents.is_proxy (Slither line:1425)


End GovernorTrillegaEvents.is_proxy (Slither line:1428)


Begin GovernorTrillegaEvents.is_upgradeable_proxy (Slither line:1136)

Checking contract: GovernorTrillegaEvents 

End GovernorTrillegaEvents.is_upgradeable_proxy (Slither line:1407)


Begin GovernorTrillegaDelegatorStorage.is_proxy (Slither line:1425)


End GovernorTrillegaDelegatorStorage.is_proxy (Slither line:1428)


Begin GovernorTrillegaDelegatorStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: GovernorTrillegaDelegatorStorage 

End GovernorTrillegaDelegatorStorage.is_upgradeable_proxy (Slither line:1407)


Begin GovernorTrillegaDelegateStorageV1.is_proxy (Slither line:1425)


End GovernorTrillegaDelegateStorageV1.is_proxy (Slither line:1428)


Begin GovernorTrillegaDelegateStorageV1.is_upgradeable_proxy (Slither line:1136)

Checking contract: GovernorTrillegaDelegateStorageV1 

End GovernorTrillegaDelegateStorageV1.is_upgradeable_proxy (Slither line:1407)


Begin TimelockInterface.is_proxy (Slither line:1425)


End TimelockInterface.is_proxy (Slither line:1428)


Begin TimelockInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: TimelockInterface 

End TimelockInterface.is_upgradeable_proxy (Slither line:1407)


Begin gTrillInterface.is_proxy (Slither line:1425)


End gTrillInterface.is_proxy (Slither line:1428)


Begin gTrillInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: gTrillInterface 

End gTrillInterface.is_upgradeable_proxy (Slither line:1407)


Begin sTrillInterface.is_proxy (Slither line:1425)


End sTrillInterface.is_proxy (Slither line:1428)


Begin sTrillInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: sTrillInterface 

End sTrillInterface.is_upgradeable_proxy (Slither line:1407)


Begin GovernorAlpha.is_proxy (Slither line:1425)


End GovernorAlpha.is_proxy (Slither line:1428)


Begin GovernorAlpha.is_upgradeable_proxy (Slither line:1136)

Checking contract: GovernorAlpha 

End GovernorAlpha.is_upgradeable_proxy (Slither line:1407)


Begin GovernorTrillegaDelegator.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


Found LowLevelCall (Slither line:2730)


Found delegatecall in LowLevelCall (Slither line:2732)


End Contract.find_delegatecall_in_ir (Slither line:2763)


End GovernorTrillegaDelegator.is_proxy (Slither line:1476)


Begin GovernorTrillegaDelegator.is_upgradeable_proxy (Slither line:1136)

Checking contract: GovernorTrillegaDelegator 
GovernorTrillegaDelegator is delegating to implementation
Looking for setter (Slither line:1200)

Looking for setter in GovernorTrillegaDelegatorStorage (Slither line:1204)


Begin GovernorTrillegaDelegatorStorage.find_setter_in_contract (Slither line:3109)


End GovernorTrillegaDelegatorStorage.find_setter_in_contract (Slither line:3315)


Could not find setter in GovernorTrillegaDelegatorStorage 
Looking in GovernorTrillegaDelegator (Slither line:1213)

Begin GovernorTrillegaDelegator.find_setter_in_contract (Slither line:3109)

Checking function: constructor(address,address,address,address,address,uint256,uint256,uint256) returns() (Slither line:3117)
Checking function: _setImplementation(address) returns() (Slither line:3117)
Visibility: public
require(bool,string)(implementation_ != address(0),GovernorBravoDelegator::_setImplementation: invalid implementation address)
NewImplementation(oldImplementation,implementation)
require(bool,string)(msg.sender == admin,GovernorBravoDelegator::_setImplementation: admin only)
implementation = implementation_
is an Assignment Operation (Slither line:3206)

End GovernorTrillegaDelegator.find_setter_in_contract (Slither line:3315)


Implementation set by function: _setImplementation in contract: GovernorTrillegaDelegator (Slither line:1264)
Looking for getter (Slither line:1273)


Begin GovernorTrillegaDelegatorStorage.find_getter_in_contract (Slither line:2964)

implementation is a Variable object
implementation_

End GovernorTrillegaDelegatorStorage.find_getter_in_contract (Slither line:3073)


Begin GovernorTrillegaDelegator.find_getter_in_contract (Slither line:2964)

implementation is a Variable object
implementation_
Checking function: constructor (Slither line:2978)
Checking function: _setImplementation (Slither line:2978)
Checking function: delegateTo (Slither line:2978)
Checking function: fallback (Slither line:2978)

End GovernorTrillegaDelegator.find_getter_in_contract (Slither line:3073)

Could not find implementation getter in GovernorTrillegaDelegator (Slither line:1305)
or in GovernorTrillegaDelegatorStorage (Slither line:1319)

Begin GovernorTrillegaDelegateStorageV1.find_getter_in_contract (Slither line:2964)

implementation is a Variable object
implementation_

End GovernorTrillegaDelegateStorageV1.find_getter_in_contract (Slither line:3073)


End GovernorTrillegaDelegator.is_upgradeable_proxy (Slither line:1332)

impl_address_from_contract_call: implementation_
impl_address_from_contract_call: StateVariable implementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression implementation.delegatecall(msg.data)
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,GovernorBravoDelegator::_setImplementation: admin only)
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,GovernorBravoDelegator::_setImplementation: admin only)
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function GovernorTrillegaDelegator._setImplementation (proxy_features line:893)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == admin,GovernorBravoDelegator::_setImplementation: admin only) (proxy_features line:904)
functions_writing_to_variable: exp = require(bool,string)(implementation_ != address(0),GovernorBravoDelegator::_setImplementation: invalid implementation address) (proxy_features line:904)
functions_writing_to_variable: exp = oldImplementation = implementation (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: oldImplementation = implementation (proxy_features line:907)
functions_writing_to_variable: exp = implementation = implementation_ (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: implementation = implementation_ (proxy_features line:907)
functions_writing_to_variable: Identifier: implementation (proxy_features line:919)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: exp = NewImplementation(oldImplementation,implementation) (proxy_features line:904)
functions_writing_to_variable: _setImplementation writes implementation_ to implementation (proxy_features line:924)
functions_writing_to_variable: checking function GovernorTrillegaDelegator.delegateTo (proxy_features line:893)
functions_writing_to_variable: checking function GovernorTrillegaDelegator.constructor (proxy_features line:893)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: constructor writes implementation_ to implementation (proxy_features line:1008)
functions_writing_to_variable: checking function GovernorTrillegaDelegator.fallback (proxy_features line:893)
has_compatibility_checks: dependencies: ['implementation_', 'implementation_']
has_compatibility_checks: checking public function _setImplementation
require(bool,string)(implementation_ != address(0),GovernorBravoDelegator::_setImplementation: invalid implementation address)
has_compatibility_checks: condition implementation_ != address(0)
check_condition_from_expression: condition implementation_ != address(0)
require(bool,string)(msg.sender == admin,GovernorBravoDelegator::_setImplementation: admin only)
has_compatibility_checks: condition msg.sender == admin
has_compatibility_checks: checking public function constructor
require(bool,string)(implementation_ != address(0),GovernorBravoDelegator::_setImplementation: invalid implementation address)
has_compatibility_checks: condition implementation_ != address(0)
check_condition_from_expression: condition implementation_ != address(0)
require(bool,string)(msg.sender == admin,GovernorBravoDelegator::_setImplementation: admin only)
has_compatibility_checks: condition msg.sender == admin
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: (success) = implementation.delegatecall(msg.data)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: constructor
Found public function: _setImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(implementation_ != address(0),GovernorBravoDelegator::_setImplementation: invalid implementation address)
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,implementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = implementation
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == admin,GovernorBravoDelegator::_setImplementation: admin only)
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = implementation_
