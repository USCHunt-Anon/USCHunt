{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "ReadProxy (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.5.16/4a./bsc/contracts/testnet/4a/4ABf615437fb7eCE1b6702E57B23a7547F945545_ReadProxy.sol/4ABf615437fb7eCE1b6702E57B23a7547F945545_ReadProxy.sol#88-117)",
        "elements": [],
        "description": "ReadProxy (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.5.16/4a./bsc/contracts/testnet/4a/4ABf615437fb7eCE1b6702E57B23a7547F945545_ReadProxy.sol/4ABf615437fb7eCE1b6702E57B23a7547F945545_ReadProxy.sol#88-117) is an upgradeable proxy.\nReadProxy uses `call` instead of `delegatecall`\ntarget is declared in the proxy.\ntarget is an address state variable\nMissing compatibility check in ReadProxy.setTarget(address)\n",
        "id": "17bb779433f74d47a747b814f53eba97626dbf00d8c71b949c2127974c8ec61b",
        "features": {
          "upgradeable": true,
          "uses_call_instead_of_delegatecall": true,
          "impl_address_variable": "ReadProxy.target",
          "impl_address_setter": "ReadProxy.setTarget(address)",
          "impl_address_getter": "not found",
          "impl_address_location": "ReadProxy (../../smart-contract-sanctuary/bsc/contracts/testnet/sorted/0.5.16/4a./bsc/contracts/testnet/4a/4ABf615437fb7eCE1b6702E57B23a7547F945545_ReadProxy.sol/4ABf615437fb7eCE1b6702E57B23a7547F945545_ReadProxy.sol#88-117)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "master_copy_coupling": "missing implementation source",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "ReadProxy.setTarget(address)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "nominateNewOwner(address)",
              "acceptOwnership()",
              "setTarget(address)"
            ]
          }
        }
      }
    ]
  }
}