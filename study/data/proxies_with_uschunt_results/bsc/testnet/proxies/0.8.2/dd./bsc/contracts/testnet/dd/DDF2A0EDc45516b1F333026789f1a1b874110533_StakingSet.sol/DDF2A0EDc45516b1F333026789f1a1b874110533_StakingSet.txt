
Begin TransferHelper.is_proxy (Slither line:1425)


End TransferHelper.is_proxy (Slither line:1428)


Begin TransferHelper.is_upgradeable_proxy (Slither line:1136)

Checking contract: TransferHelper 

End TransferHelper.is_upgradeable_proxy (Slither line:1407)


Begin Strings.is_proxy (Slither line:1425)


End Strings.is_proxy (Slither line:1428)


Begin Strings.is_upgradeable_proxy (Slither line:1136)

Checking contract: Strings 

End Strings.is_upgradeable_proxy (Slither line:1407)


Begin Context.is_proxy (Slither line:1425)


End Context.is_proxy (Slither line:1428)


Begin Context.is_upgradeable_proxy (Slither line:1136)

Checking contract: Context 

End Context.is_upgradeable_proxy (Slither line:1407)


Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin ReentrancyGuard.is_proxy (Slither line:1425)


End ReentrancyGuard.is_proxy (Slither line:1428)


Begin ReentrancyGuard.is_upgradeable_proxy (Slither line:1136)

Checking contract: ReentrancyGuard 

End ReentrancyGuard.is_upgradeable_proxy (Slither line:1407)


Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin IERC721Receiver.is_proxy (Slither line:1425)


End IERC721Receiver.is_proxy (Slither line:1428)


Begin IERC721Receiver.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC721Receiver 

End IERC721Receiver.is_upgradeable_proxy (Slither line:1407)


Begin IBEP165.is_proxy (Slither line:1425)


End IBEP165.is_proxy (Slither line:1428)


Begin IBEP165.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBEP165 

End IBEP165.is_upgradeable_proxy (Slither line:1407)


Begin ERC165.is_proxy (Slither line:1425)


End ERC165.is_proxy (Slither line:1428)


Begin ERC165.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC165 

End ERC165.is_upgradeable_proxy (Slither line:1407)


Begin IBEP721.is_proxy (Slither line:1425)


End IBEP721.is_proxy (Slither line:1428)


Begin IBEP721.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBEP721 

End IBEP721.is_upgradeable_proxy (Slither line:1407)


Begin IBEP721Metadata.is_proxy (Slither line:1425)


End IBEP721Metadata.is_proxy (Slither line:1428)


Begin IBEP721Metadata.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBEP721Metadata 

End IBEP721Metadata.is_upgradeable_proxy (Slither line:1407)


Begin IBEP20.is_proxy (Slither line:1425)


End IBEP20.is_proxy (Slither line:1428)


Begin IBEP20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBEP20 

End IBEP20.is_upgradeable_proxy (Slither line:1407)


Begin IRouter.is_proxy (Slither line:1425)


End IRouter.is_proxy (Slither line:1428)


Begin IRouter.is_upgradeable_proxy (Slither line:1136)

Checking contract: IRouter 

End IRouter.is_upgradeable_proxy (Slither line:1407)


Begin IPancakeRouter.is_proxy (Slither line:1425)


End IPancakeRouter.is_proxy (Slither line:1428)


Begin IPancakeRouter.is_upgradeable_proxy (Slither line:1136)

Checking contract: IPancakeRouter 

End IPancakeRouter.is_upgradeable_proxy (Slither line:1407)


Begin INbuStaking.is_proxy (Slither line:1425)


End INbuStaking.is_proxy (Slither line:1428)


Begin INbuStaking.is_upgradeable_proxy (Slither line:1136)

Checking contract: INbuStaking 

End INbuStaking.is_upgradeable_proxy (Slither line:1407)


Begin IGnbuStaking.is_proxy (Slither line:1425)


End IGnbuStaking.is_proxy (Slither line:1428)


Begin IGnbuStaking.is_upgradeable_proxy (Slither line:1136)

Checking contract: IGnbuStaking 

End IGnbuStaking.is_upgradeable_proxy (Slither line:1407)


Begin INimbusBNB.is_proxy (Slither line:1425)


End INimbusBNB.is_proxy (Slither line:1428)


Begin INimbusBNB.is_upgradeable_proxy (Slither line:1136)

Checking contract: INimbusBNB 

End INimbusBNB.is_upgradeable_proxy (Slither line:1407)


Begin IBinanceBNB.is_proxy (Slither line:1425)


End IBinanceBNB.is_proxy (Slither line:1428)


Begin IBinanceBNB.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBinanceBNB 

End IBinanceBNB.is_upgradeable_proxy (Slither line:1407)


Begin StakingSetStorage.is_proxy (Slither line:1425)


End StakingSetStorage.is_proxy (Slither line:1428)


Begin StakingSetStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: StakingSetStorage 

End StakingSetStorage.is_upgradeable_proxy (Slither line:1407)


Begin StakingSetProxy.is_proxy (Slither line:1425)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin StakingSetProxy.find_delegatecall_in_exp_node

Found Expression Node: size_fallback_asm_0 = returndatasize()() (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)
Expression called: returndatasize()
Type of call: uint256 (Slither line:2807)
Args:

End StakingSetProxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin StakingSetProxy.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(ptr_fallback_asm_0,size_fallback_asm_0) (Slither line:2792)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2807)
Args:
ptr_fallback_asm_0
size_fallback_asm_0

End StakingSetProxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin StakingSetProxy.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(ptr_fallback_asm_0,size_fallback_asm_0) (Slither line:2792)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2807)
Args:
ptr_fallback_asm_0
size_fallback_asm_0

End StakingSetProxy.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin StakingSetProxy.find_delegatecall_in_exp_node

Found Expression Node: ptr_fallback_asm_0 = mload(uint256)(0x40) (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)
Expression called: mload(uint256)
Type of call: uint256 (Slither line:2807)
Args:
0x40

End StakingSetProxy.find_delegatecall_in_exp_node (Slither line:2848)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin StakingSetProxy.find_delegatecall_in_exp_node

Found Expression Node: revert()() (Slither line:2792)
Expression called: revert()
Type of call: tuple() (Slither line:2807)
Args:

End StakingSetProxy.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin StakingSetProxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,size_fallback_asm_0) (Slither line:2792)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2807)
Args:
ptr_fallback_asm_0
0
size_fallback_asm_0

End StakingSetProxy.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin StakingSetProxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_16455_98_0_fallback_asm_0 = result_fallback_asm_0 (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)

End StakingSetProxy.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin StakingSetProxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'target_'
Looking for corresponding Variable
Current function: fallback

Begin StakingSetProxy.find_delegate_variable_from_name
Searching for target_ (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking owner (Slither line:1689)
Checking newOwner (Slither line:1689)
Checking _guardCounter (Slither line:1689)
Checking nimbusBNB (Slither line:1689)
Checking binanceBNB (Slither line:1689)
Checking nimbusRouter (Slither line:1689)
Checking pancakeRouter (Slither line:1689)
Checking NbuStaking (Slither line:1689)
Checking GnbuStaking (Slither line:1689)
Checking nbuToken (Slither line:1689)
Checking gnbuToken (Slither line:1689)
Checking tokenCount (Slither line:1689)
Checking minPurchaseAmount (Slither line:1689)
Checking rewardDuration (Slither line:1689)
Checking _userRewards (Slither line:1689)
Checking _balancesRewardEquivalentNbu (Slither line:1689)
Checking _balancesRewardEquivalentGnbu (Slither line:1689)
Checking _balancesRewardEquivalentCake (Slither line:1689)
Checking tikSupplies (Slither line:1689)
Checking weightedStakeDate (Slither line:1689)
Checking _name (Slither line:1689)
Checking _symbol (Slither line:1689)
Checking _owners (Slither line:1689)
Checking _balances (Slither line:1689)
Checking _tokenApprovals (Slither line:1689)
Checking _operatorApprovals (Slither line:1689)
Checking _userTokens (Slither line:1689)
Checking target (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking target_ (Slither line:1703)
target_ is a Local Variable in StakingSetProxy.fallback (Slither line:1707)
Expression: target (Slither line:1719)
Identifier value: target (Slither line:1725)
target is a State Variable in contract StakingSetProxy (Slither line:1730)

End StakingSetProxy.find_delegate_variable_by_name


End StakingSetProxy.find_delegatecall_in_asm (Slither line:1637)


End StakingSetProxy.is_proxy (Slither line:1476)


Begin StakingSetProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: StakingSetProxy 
StakingSetProxy is delegating to target
Looking for setter (Slither line:1200)


Begin StakingSetProxy.find_setter_in_contract (Slither line:3109)

Checking function: constructor(address) returns() (Slither line:3117)
Checking function: initialize(address,address,address,address) returns() (Slither line:3117)
Checking function: fallback() returns() (Slither line:3117)
Checking function: setTarget(address) returns() (Slither line:3117)
Visibility: external
SetTarget(_newTarget)
require(bool,string)(msg.sender == owner,Ownable: Caller is not the owner)
size > 0
require(bool,string)(Address.isContract(_newTarget),Target not a contract)
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3206)
onlyOwner()
target = _newTarget
is an Assignment Operation (Slither line:3206)

End StakingSetProxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: setTarget in contract: StakingSetProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin StakingSetProxy.find_getter_in_contract (Slither line:2964)

target is a Variable object
_newTarget
Checking function: supportsInterface (Slither line:2978)
supportsInterface returns bool variable  (Slither line:2998)
RETURN node expression: interfaceId == type()(IBEP165).interfaceId (Slither line:3018)
Checking function: constructor (Slither line:2978)
Checking function: _msgSender (Slither line:2978)
_msgSender returns address variable  (Slither line:2998)
RETURN node expression: msg.sender (Slither line:3018)
Checking function: _msgData (Slither line:2978)
_msgData returns bytes variable  (Slither line:2998)
RETURN node expression: msg.data (Slither line:3018)
Checking function: constructor (Slither line:2978)
Checking function: getOwner (Slither line:2978)
getOwner returns address variable  (Slither line:2998)
RETURN node expression: owner (Slither line:3018)
Checking function: transferOwnership (Slither line:2978)
Checking function: acceptOwnership (Slither line:2978)
Checking function: constructor (Slither line:2978)
Checking function: initialize (Slither line:2978)
Checking function: fallback (Slither line:2978)
Checking function: setTarget (Slither line:2978)
Checking function: _setTarget (Slither line:2978)

End StakingSetProxy.find_getter_in_contract (Slither line:3073)

Could not find implementation getter in StakingSetProxy (Slither line:1305)
Checking for target at slot 27 in contract StakingSet (Slither line:1355)
Found target at slot 27 in contract StakingSet (Slither line:1362)

Begin StakingSet.find_getter_in_contract (Slither line:2964)

target is a Variable object
Checking function: supportsInterface (Slither line:2978)
supportsInterface returns bool variable  (Slither line:2998)
RETURN node expression: interfaceId == type()(IBEP165).interfaceId (Slither line:3018)
Checking function: constructor (Slither line:2978)
Checking function: _msgSender (Slither line:2978)
_msgSender returns address variable  (Slither line:2998)
RETURN node expression: msg.sender (Slither line:3018)
Checking function: _msgData (Slither line:2978)
_msgData returns bytes variable  (Slither line:2998)
RETURN node expression: msg.data (Slither line:3018)
Checking function: constructor (Slither line:2978)
Checking function: getOwner (Slither line:2978)
getOwner returns address variable  (Slither line:2998)
RETURN node expression: owner (Slither line:3018)
Checking function: transferOwnership (Slither line:2978)
Checking function: acceptOwnership (Slither line:2978)
Checking function: initialize (Slither line:2978)
Checking function: receive (Slither line:2978)
Checking function: buyStakingSet (Slither line:2978)
Checking function: withdrawUserRewards (Slither line:2978)
Checking function: burnStakingSet (Slither line:2978)
Checking function: getTokenRewardsAmounts (Slither line:2978)
getTokenRewardsAmounts returns uint256 variable called NbuUserRewards (Slither line:2998)
getTokenRewardsAmounts returns uint256 variable called GnbuUserRewards (Slither line:2998)
Checking function: getTotalAmountsOfRewards (Slither line:2978)
getTotalAmountsOfRewards returns uint256 variable called nbuReward (Slither line:2998)
Checking function: getUserTokens (Slither line:2978)
getUserTokens returns uint256[] variable  (Slither line:2998)
RETURN node expression: _userTokens[user] (Slither line:3018)
Checking function: _withdrawUserRewards (Slither line:2978)
Checking function: supportsInterface (Slither line:2978)
supportsInterface returns bool variable  (Slither line:2998)
RETURN node expression: interfaceId == type()(IBEP721).interfaceId || interfaceId == type()(IBEP721Metadata).interfaceId || super.supportsInterface(interfaceId) (Slither line:3018)
Checking function: balanceOf (Slither line:2978)
balanceOf returns uint256 variable  (Slither line:2998)
RETURN node expression: _balances[owner] (Slither line:3018)
Checking function: ownerOf (Slither line:2978)
ownerOf returns address variable  (Slither line:2998)
RETURN node expression: owner (Slither line:3018)
Checking function: name (Slither line:2978)
name returns string variable  (Slither line:2998)
RETURN node expression: _name (Slither line:3018)
Checking function: symbol (Slither line:2978)
symbol returns string variable  (Slither line:2998)
RETURN node expression: _symbol (Slither line:3018)
Checking function: tokenURI (Slither line:2978)
tokenURI returns string variable  (Slither line:2998)
RETURN node expression: string(abi.encodePacked(baseURI,tokenId.toString())) (Slither line:3018)
RETURN node expression:  (Slither line:3018)
Checking function: approve (Slither line:2978)
Checking function: getApproved (Slither line:2978)
getApproved returns address variable  (Slither line:2998)
RETURN node expression: _tokenApprovals[tokenId] (Slither line:3018)
Checking function: setApprovalForAll (Slither line:2978)
Checking function: isApprovedForAll (Slither line:2978)
isApprovedForAll returns bool variable  (Slither line:2998)
RETURN node expression: _operatorApprovals[owner][operator] (Slither line:3018)
Checking function: transferFrom (Slither line:2978)
Checking function: safeTransferFrom (Slither line:2978)
Checking function: safeTransferFrom (Slither line:2978)
Checking function: _baseURI (Slither line:2978)
_baseURI returns string variable  (Slither line:2998)
RETURN node expression:  (Slither line:3018)
Checking function: _safeTransfer (Slither line:2978)
Checking function: _exists (Slither line:2978)
_exists returns bool variable  (Slither line:2998)
RETURN node expression: _owners[tokenId] != address(0) (Slither line:3018)
Checking function: _isApprovedOrOwner (Slither line:2978)
_isApprovedOrOwner returns bool variable  (Slither line:2998)
RETURN node expression: (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner,spender)) (Slither line:3018)
Checking function: _safeMint (Slither line:2978)
Checking function: _safeMint (Slither line:2978)
Checking function: _mint (Slither line:2978)
Checking function: _burn (Slither line:2978)
Checking function: _transfer (Slither line:2978)
Checking function: _remove (Slither line:2978)
Checking function: _approve (Slither line:2978)
Checking function: _setApprovalForAll (Slither line:2978)
Checking function: _checkOnERC721Received (Slither line:2978)
_checkOnERC721Received returns bool variable  (Slither line:2998)
RETURN node expression: retval == IERC721Receiver.onERC721Received.selector (Slither line:3018)
RETURN node expression: true (Slither line:3018)
Checking function: rescue (Slither line:2978)
Checking function: rescue (Slither line:2978)
Checking function: updateNimbusRouter (Slither line:2978)
Checking function: updateNbuStaking (Slither line:2978)
Checking function: updateGnbuStaking (Slither line:2978)
Checking function: updateTokenAllowance (Slither line:2978)
Checking function: updateMinPurchaseAmount (Slither line:2978)

End StakingSet.find_getter_in_contract (Slither line:3073)

Checking public function supportsInterface
Checking external function supportsInterface
Checking external function getOwner
Checking external function transferOwnership
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == owner,Ownable: Caller is not the owner)
Checking external function acceptOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == newOwner)
Checking external function initialize
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == owner,Ownable: Caller is not the owner)
Checking external function setTarget
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == owner,Ownable: Caller is not the owner)
Checking external function fallback
functions_writing_to_variable: target
functions_writing_to_variable: checking function StakingSetProxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function StakingSetProxy.constructor (proxy_features line:893)
get_value_assigned: target = _newTarget
functions_writing_to_variable: constructor writes _newTarget to target (proxy_features line:1008)
functions_writing_to_variable: checking function StakingSetProxy.supportsInterface (proxy_features line:893)
functions_writing_to_variable: checking function StakingSetProxy.initialize (proxy_features line:893)
functions_writing_to_variable: checking function StakingSetProxy.acceptOwnership (proxy_features line:893)
functions_writing_to_variable: checking function StakingSetProxy.setTarget (proxy_features line:893)
get_value_assigned: target = _newTarget
functions_writing_to_variable: setTarget writes _newTarget to target (proxy_features line:1008)
functions_writing_to_variable: checking function StakingSetProxy._msgSender (proxy_features line:893)
functions_writing_to_variable: checking function StakingSetProxy.transferOwnership (proxy_features line:893)
functions_writing_to_variable: checking function StakingSetProxy._setTarget (proxy_features line:893)
functions_writing_to_variable: exp = require(bool,string)(Address.isContract(_newTarget),Target not a contract) (proxy_features line:904)
functions_writing_to_variable: exp = target = _newTarget (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: target = _newTarget (proxy_features line:907)
functions_writing_to_variable: Identifier: target (proxy_features line:919)
get_value_assigned: target = _newTarget
functions_writing_to_variable: exp = SetTarget(_newTarget) (proxy_features line:904)
functions_writing_to_variable: _setTarget writes _newTarget to target (proxy_features line:924)
functions_writing_to_variable: checking function StakingSetProxy.supportsInterface (proxy_features line:893)
functions_writing_to_variable: checking function StakingSetProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function StakingSetProxy.getOwner (proxy_features line:893)
functions_writing_to_variable: checking function StakingSetProxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function StakingSetProxy._msgData (proxy_features line:893)
has_compatibility_checks: dependencies: ['_newTarget', '_newTarget', '_newTarget']
has_compatibility_checks: checking public function constructor
require(bool,string)(Address.isContract(_newTarget),Target not a contract)
has_compatibility_checks: condition Address.isContract(_newTarget)
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: checking external function setTarget
require(bool,string)(msg.sender == owner,Ownable: Caller is not the owner)
has_compatibility_checks: condition msg.sender == owner
require(bool,string)(Address.isContract(_newTarget),Target not a contract)
has_compatibility_checks: condition Address.isContract(_newTarget)
check_condition_from_expression: modifier calls: ['onlyOwner()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: skipping internal function _setTarget
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),target_,data + 0x20,mload(uint256)(data),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: END_IF
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: data = msg.data
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: target_ = target
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: IF
 dominator expression: gasleft()() <= 2300
can_toggle_delegatecall_on_off: successors:
 NodeType: INLINE ASM  expression: {'AST': {'nodeType': 'YulBlock', 'src': '16228:336:0', 'statements': [{'nodeType': 'YulVariableDeclaration', 'src': '16243:78:0', 'value': {'arguments': [{'arguments': [], 'functionName': {'name': 'gas', 'nodeType': 'YulIdentifier', 'src': '16270:3:0'}, 'nodeType': 'YulFunctionCall', 'src': '16270:5:0'}, {'name': 'target_', 'nodeType': 'YulIdentifier', 'src': '16277:7:0'}, {'arguments': [{'name': 'data', 'nodeType': 'YulIdentifier', 'src': '16290:4:0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '16296:4:0', 'type': '', 'value': '0x20'}], 'functionName': {'name': 'add', 'nodeType': 'YulIdentifier', 'src': '16286:3:0'}, 'nodeType': 'YulFunctionCall', 'src': '16286:15:0'}, {'arguments': [{'name': 'data', 'nodeType': 'YulIdentifier', 'src': '16309:4:0'}], 'functionName': {'name': 'mload', 'nodeType': 'YulIdentifier', 'src': '16303:5:0'}, 'nodeType': 'YulFunctionCall', 'src': '16303:11:0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '16316:1:0', 'type': '', 'value': '0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '16319:1:0', 'type': '', 'value': '0'}], 'functionName': {'name': 'delegatecall', 'nodeType': 'YulIdentifier', 'src': '16257:12:0'}, 'nodeType': 'YulFunctionCall', 'src': '16257:64:0'}, 'variables': [{'name': 'result', 'nodeType': 'YulTypedName', 'src': '16247:6:0', 'type': ''}]}, {'nodeType': 'YulVariableDeclaration', 'src': '16335:28:0', 'value': {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '16347:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '16347:16:0'}, 'variables': [{'name': 'size', 'nodeType': 'YulTypedName', 'src': '16339:4:0', 'type': ''}]}, {'nodeType': 'YulVariableDeclaration', 'src': '16377:22:0', 'value': {'arguments': [{'kind': 'number', 'nodeType': 'YulLiteral', 'src': '16394:4:0', 'type': '', 'value': '0x40'}], 'functionName': {'name': 'mload', 'nodeType': 'YulIdentifier', 'src': '16388:5:0'}, 'nodeType': 'YulFunctionCall', 'src': '16388:11:0'}, 'variables': [{'name': 'ptr', 'nodeType': 'YulTypedName', 'src': '16381:3:0', 'type': ''}]}, {'expression': {'arguments': [{'name': 'ptr', 'nodeType': 'YulIdentifier', 'src': '16428:3:0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '16433:1:0', 'type': '', 'value': '0'}, {'name': 'size', 'nodeType': 'YulIdentifier', 'src': '16436:4:0'}], 'functionName': {'name': 'returndatacopy', 'nodeType': 'YulIdentifier', 'src': '16413:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '16413:28:0'}, 'nodeType': 'YulExpressionStatement', 'src': '16413:28:0'}, {'cases': [{'body': {'nodeType': 'YulBlock', 'src': '16489:21:0', 'statements': [{'expression': {'arguments': [{'name': 'ptr', 'nodeType': 'YulIdentifier', 'src': '16498:3:0'}, {'name': 'size', 'nodeType': 'YulIdentifier', 'src': '16503:4:0'}], 'functionName': {'name': 'revert', 'nodeType': 'YulIdentifier', 'src': '16491:6:0'}, 'nodeType': 'YulFunctionCall', 'src': '16491:17:0'}, 'nodeType': 'YulExpressionStatement', 'src': '16491:17:0'}]}, 'nodeType': 'YulCase', 'src': '16482:28:0', 'value': {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '16487:1:0', 'type': '', 'value': '0'}}, {'body': {'nodeType': 'YulBlock', 'src': '16532:21:0', 'statements': [{'expression': {'arguments': [{'name': 'ptr', 'nodeType': 'YulIdentifier', 'src': '16541:3:0'}, {'name': 'size', 'nodeType': 'YulIdentifier', 'src': '16546:4:0'}], 'functionName': {'name': 'return', 'nodeType': 'YulIdentifier', 'src': '16534:6:0'}, 'nodeType': 'YulFunctionCall', 'src': '16534:17:0'}, 'nodeType': 'YulExpressionStatement', 'src': '16534:17:0'}]}, 'nodeType': 'YulCase', 'src': '16524:29:0', 'value': 'default'}], 'expression': {'name': 'result', 'nodeType': 'YulIdentifier', 'src': '16462:6:0'}, 'nodeType': 'YulSwitch', 'src': '16455:98:0'}]}, 'evmVersion': 'istanbul', 'externalReferences': [{'declaration': 1478, 'isOffset': False, 'isSlot': False, 'src': '16290:4:0', 'valueSize': 1}, {'declaration': 1478, 'isOffset': False, 'isSlot': False, 'src': '16309:4:0', 'valueSize': 1}, {'declaration': 1474, 'isOffset': False, 'isSlot': False, 'src': '16277:7:0', 'valueSize': 1}], 'id': 1482, 'nodeType': 'InlineAssembly', 'src': '16219:345:0'}
 NodeType: END_IF  expression: None
 NodeType: NEW VARIABLE  expression: target_ = target
 NodeType: NEW VARIABLE  expression: None
 NodeType: EXPRESSION  expression: returndatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,size_fallback_asm_0)
 NodeType: EXPRESSION  expression: ptr_fallback_asm_0 = mload(uint256)(0x40)
 NodeType: EXPRESSION  expression: size_fallback_asm_0 = returndatasize()()
 NodeType: EXPRESSION  expression: result_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),target_,data + 0x20,mload(uint256)(data),0,0)
can_toggle_delegatecall_on_off: delegatecall_condition = False
 NodeType: IF  expression: switch_expr_16455_98_0_fallback_asm_0 == 0
 NodeType: EXPRESSION  expression: revert(uint256,uint256)(ptr_fallback_asm_0,size_fallback_asm_0)
 NodeType: END_IF  expression: None
 NodeType: NEW VARIABLE  expression: data = msg.data
 NodeType: EXPRESSION  expression: return(uint256,uint256)(ptr_fallback_asm_0,size_fallback_asm_0)
 NodeType: EXPRESSION  expression: revert()()
 NodeType: EXPRESSION  expression: switch_expr_16455_98_0_fallback_asm_0 = result_fallback_asm_0
 NodeType: NEW VARIABLE  expression: None
 NodeType: NEW VARIABLE  expression: None
 NodeType: NEW VARIABLE  expression: None
Found public function: supportsInterface
has_time_delay: (node.type) EXPRESSION
(Expression) SetTarget(_newTarget)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == owner,Ownable: Caller is not the owner)
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(Address.isContract(_newTarget),Target not a contract)
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) EXPRESSION
(Expression) onlyOwner()
has_time_delay: (node.type) EXPRESSION
(Expression) target = _newTarget
has_time_delay: (node.type) EXPRESSION
(Expression) _setTarget(_newTarget)

Begin StakingSet.is_proxy (Slither line:1425)


End StakingSet.is_proxy (Slither line:1428)


Begin StakingSet.is_upgradeable_proxy (Slither line:1136)

Checking contract: StakingSet 

End StakingSet.is_upgradeable_proxy (Slither line:1407)

