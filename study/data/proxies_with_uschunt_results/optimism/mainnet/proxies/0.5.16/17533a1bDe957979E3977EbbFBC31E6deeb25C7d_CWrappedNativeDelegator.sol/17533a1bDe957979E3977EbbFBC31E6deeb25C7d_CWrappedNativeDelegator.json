{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "CWrappedNativeDelegator (../../smart-contract-sanctuary/optimism/contracts/mainnet/proxies/0.5.16/17533a1bDe957979E3977EbbFBC31E6deeb25C7d_CWrappedNativeDelegator.sol/17533a1bDe957979E3977EbbFBC31E6deeb25C7d_CWrappedNativeDelegator.sol#2728-3368)",
        "elements": [],
        "description": "CWrappedNativeDelegator (../../smart-contract-sanctuary/optimism/contracts/mainnet/proxies/0.5.16/17533a1bDe957979E3977EbbFBC31E6deeb25C7d_CWrappedNativeDelegator.sol/17533a1bDe957979E3977EbbFBC31E6deeb25C7d_CWrappedNativeDelegator.sol#2728-3368) is an upgradeable proxy.\nimplementation was found in a different contract.\nimplementation is an address state variable.\n uses Inherited Storage\nMissing compatibility check in CWrappedNativeDelegator._setImplementation(address,bool,bytes)\n",
        "id": "f69f3e757151a2ee346c0849c08188e6d384cc012c0db587feb66fa35c33ba72",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "CErc20Storage.implementation",
          "impl_address_setter": "CWrappedNativeDelegator._setImplementation(address,bool,bytes)",
          "impl_address_getter": "not found",
          "impl_address_location": "CErc20Storage (../../smart-contract-sanctuary/optimism/contracts/mainnet/proxies/0.5.16/17533a1bDe957979E3977EbbFBC31E6deeb25C7d_CWrappedNativeDelegator.sol/17533a1bDe957979E3977EbbFBC31E6deeb25C7d_CWrappedNativeDelegator.sol#1230-1240)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "CWrappedNativeDelegator._setImplementation(address,bool,bytes)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "erc20": [
              "balanceOf(address)",
              "transfer(address,uint256)",
              "transferFrom(address,address,uint256)",
              "approve(address,uint256)",
              "allowance(address,address)"
            ],
            "other": [
              "_setImplementation(address,bool,bytes)",
              "mintNative()",
              "redeemNative(uint256)",
              "redeemUnderlyingNative(uint256)",
              "borrowNative(uint256)",
              "repayBorrowNative()",
              "repayBorrowBehalfNative(address)",
              "liquidateBorrowNative(address,CTokenInterface)",
              "flashLoan(ERC3156FlashBorrowerInterface,address,uint256,bytes)",
              "_addReservesNative()",
              "collateralCap()",
              "totalCollateralTokens()",
              "mint(uint256)",
              "redeem(uint256)",
              "redeemUnderlying(uint256)",
              "borrow(uint256)",
              "repayBorrow(uint256)",
              "repayBorrowBehalf(address,uint256)",
              "liquidateBorrow(address,uint256,CTokenInterface)",
              "_addReserves(uint256)",
              "balanceOfUnderlying(address)",
              "getAccountSnapshot(address)",
              "borrowRatePerBlock()",
              "supplyRatePerBlock()",
              "totalBorrowsCurrent()",
              "borrowBalanceCurrent(address)",
              "borrowBalanceStored(address)",
              "exchangeRateCurrent()",
              "exchangeRateStored()",
              "getCash()",
              "accrueInterest()",
              "seize(address,address,uint256)",
              "_setPendingAdmin(address)",
              "_acceptAdmin()",
              "_setComptroller(ComptrollerInterface)",
              "_setReserveFactor(uint256)",
              "_reduceReserves(uint256)",
              "_setInterestRateModel(InterestRateModel)",
              "_setImplementation(address,bool,bytes)",
              "mint(uint256)",
              "mintNative()",
              "redeem(uint256)",
              "redeemNative(uint256)",
              "redeemUnderlying(uint256)",
              "redeemUnderlyingNative(uint256)",
              "borrow(uint256)",
              "borrowNative(uint256)",
              "repayBorrow(uint256)",
              "repayBorrowNative()",
              "repayBorrowBehalf(address,uint256)",
              "repayBorrowBehalfNative(address)",
              "liquidateBorrow(address,uint256,CTokenInterface)",
              "liquidateBorrowNative(address,CTokenInterface)",
              "flashLoan(ERC3156FlashBorrowerInterface,address,uint256,bytes)",
              "collateralCap()",
              "totalCollateralTokens()",
              "balanceOfUnderlying(address)",
              "getAccountSnapshot(address)",
              "borrowRatePerBlock()",
              "supplyRatePerBlock()",
              "totalBorrowsCurrent()",
              "borrowBalanceCurrent(address)",
              "borrowBalanceStored(address)",
              "exchangeRateCurrent()",
              "exchangeRateStored()",
              "getCash()",
              "accrueInterest()",
              "seize(address,address,uint256)",
              "_setPendingAdmin(address)",
              "_setComptroller(ComptrollerInterface)",
              "_setReserveFactor(uint256)",
              "_acceptAdmin()",
              "_addReserves(uint256)",
              "_addReservesNative()",
              "_reduceReserves(uint256)",
              "_setInterestRateModel(InterestRateModel)",
              "delegateToImplementation(bytes)",
              "delegateToViewImplementation(bytes)"
            ]
          }
        }
      }
    ]
  }
}