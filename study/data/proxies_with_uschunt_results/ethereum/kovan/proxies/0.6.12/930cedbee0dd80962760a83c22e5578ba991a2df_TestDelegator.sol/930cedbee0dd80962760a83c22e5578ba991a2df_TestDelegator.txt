
Begin Context.is_proxy (Slither line:1425)


End Context.is_proxy (Slither line:1428)


Begin Context.is_upgradeable_proxy (Slither line:1136)

Checking contract: Context 

End Context.is_upgradeable_proxy (Slither line:1407)


Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin TestDelegator.is_proxy (Slither line:1425)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


Found LowLevelCall (Slither line:2730)


Found delegatecall in LowLevelCall (Slither line:2732)


End Contract.find_delegatecall_in_ir (Slither line:2763)


End TestDelegator.is_proxy (Slither line:1476)


Begin TestDelegator.is_upgradeable_proxy (Slither line:1136)

Checking contract: TestDelegator 
TestDelegator is delegating to implementation
Looking for setter (Slither line:1200)


Begin TestDelegator.find_setter_in_contract (Slither line:3109)

Checking function: constructor(address) returns() (Slither line:3117)
Checking function: _setImplementation(address) returns() (Slither line:3117)
Visibility: public
implementation = implementation_
is an Assignment Operation (Slither line:3206)

End TestDelegator.find_setter_in_contract (Slither line:3315)


Implementation set by function: _setImplementation in contract: TestDelegator (Slither line:1264)
Looking for getter (Slither line:1273)


Begin TestDelegator.find_getter_in_contract (Slither line:2964)

implementation is a Variable object
implementation_
Checking function: constructor (Slither line:2978)
Checking function: owner (Slither line:2978)
owner returns address variable  (Slither line:2998)
RETURN node expression: _owner (Slither line:3018)
Checking function: renounceOwnership (Slither line:2978)
Checking function: transferOwnership (Slither line:2978)
Checking function: _msgSender (Slither line:2978)
_msgSender returns address variable  (Slither line:2998)
RETURN node expression: msg.sender (Slither line:3018)
Checking function: _msgData (Slither line:2978)
_msgData returns bytes variable  (Slither line:2998)
RETURN node expression: msg.data (Slither line:3018)
Checking function: constructor (Slither line:2978)
Checking function: _setImplementation (Slither line:2978)
Checking function: delegateTo (Slither line:2978)
delegateTo returns bytes variable  (Slither line:2998)
RETURN node expression: returnData (Slither line:3018)
Checking function: receive (Slither line:2978)
Checking function: fallback (Slither line:2978)

End TestDelegator.find_getter_in_contract (Slither line:3073)

Could not find implementation getter in TestDelegator (Slither line:1305)

Begin Context.find_getter_in_contract (Slither line:2964)

implementation is a Variable object
implementation_
Checking function: _msgSender (Slither line:2978)
_msgSender returns address variable  (Slither line:2998)
RETURN node expression: msg.sender (Slither line:3018)
Checking function: _msgData (Slither line:2978)
_msgData returns bytes variable  (Slither line:2998)
RETURN node expression: msg.data (Slither line:3018)

End Context.find_getter_in_contract (Slither line:3073)

Checking public function owner
Checking public function renounceOwnership
Checking public function transferOwnership
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,UNAUTHORIZED)
Checking external function receive
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function TestDelegator._msgSender (proxy_features line:893)
functions_writing_to_variable: checking function TestDelegator.constructor (proxy_features line:893)
functions_writing_to_variable: checking function TestDelegator.constructor (proxy_features line:893)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: constructor writes implementation_ to implementation (proxy_features line:1008)
functions_writing_to_variable: checking function TestDelegator.receive (proxy_features line:893)
functions_writing_to_variable: checking function TestDelegator.transferOwnership (proxy_features line:893)
functions_writing_to_variable: checking function TestDelegator.renounceOwnership (proxy_features line:893)
functions_writing_to_variable: checking function TestDelegator.delegateTo (proxy_features line:893)
functions_writing_to_variable: checking function TestDelegator._setImplementation (proxy_features line:893)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == admin,UNAUTHORIZED) (proxy_features line:904)
functions_writing_to_variable: exp = oldImplementation = implementation (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: oldImplementation = implementation (proxy_features line:907)
functions_writing_to_variable: exp = implementation = implementation_ (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: implementation = implementation_ (proxy_features line:907)
functions_writing_to_variable: Identifier: implementation (proxy_features line:919)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: exp = NewImplementation(oldImplementation,implementation) (proxy_features line:904)
functions_writing_to_variable: _setImplementation writes implementation_ to implementation (proxy_features line:924)
functions_writing_to_variable: checking function TestDelegator.owner (proxy_features line:893)
functions_writing_to_variable: checking function TestDelegator.fallback (proxy_features line:893)
functions_writing_to_variable: checking function TestDelegator._msgData (proxy_features line:893)
has_compatibility_checks: dependencies: ['implementation_', '_implementation']
has_compatibility_checks: checking public function constructor
require(bool,string)(msg.sender == admin,UNAUTHORIZED)
has_compatibility_checks: condition msg.sender == admin
has_compatibility_checks: checking public function _setImplementation
require(bool,string)(msg.sender == admin,UNAUTHORIZED)
has_compatibility_checks: condition msg.sender == admin
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: (success) = implementation.delegatecall(msg.data)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: owner
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = implementation
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = implementation_
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == admin,UNAUTHORIZED)
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,implementation)
