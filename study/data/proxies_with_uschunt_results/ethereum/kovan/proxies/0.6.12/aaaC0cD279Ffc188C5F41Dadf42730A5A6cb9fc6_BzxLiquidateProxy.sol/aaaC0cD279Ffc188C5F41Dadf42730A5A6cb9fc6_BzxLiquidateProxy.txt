
Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin Context.is_proxy (Slither line:1425)


End Context.is_proxy (Slither line:1428)


Begin Context.is_upgradeable_proxy (Slither line:1136)

Checking contract: Context 

End Context.is_upgradeable_proxy (Slither line:1407)


Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin BzxLiquidateProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin BzxLiquidateProxy.find_delegatecall_in_exp_node

Found Expression Node: result__fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),impl,0,calldatasize()(),0,0) (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2807)
Args:
gas()()
impl
0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2814)

Destination is impl (Slither line:2818)
dest.value: impl (Slither line:2821)
Expression: implementation (Slither line:2826)

End BzxLiquidateProxy.find_delegatecall_in_exp_node (Slither line:2848)


End BzxLiquidateProxy.is_proxy (Slither line:1476)


Begin BzxLiquidateProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: BzxLiquidateProxy 
BzxLiquidateProxy is delegating to implementation
Looking for setter (Slither line:1200)


Begin BzxLiquidateProxy.find_setter_in_contract (Slither line:3109)

Checking function: constructor(address) returns() (Slither line:3117)
Checking function: fallback() returns() (Slither line:3117)
Checking function: receive() returns() (Slither line:3117)
Checking function: _fallback() returns() (Slither line:3117)
Checking function: replaceImplementation(address) returns() (Slither line:3117)
Visibility: public
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3206)
msg.sender
onlyOwner()
implementation = impl
is an Assignment Operation (Slither line:3206)

End BzxLiquidateProxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: replaceImplementation in contract: BzxLiquidateProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin BzxLiquidateProxy.find_getter_in_contract (Slither line:2964)

implementation is a Variable object
impl
Checking function: constructor (Slither line:2978)
Checking function: owner (Slither line:2978)
owner returns address variable  (Slither line:2998)
RETURN node expression: _owner (Slither line:3018)
Checking function: renounceOwnership (Slither line:2978)
Checking function: transferOwnership (Slither line:2978)
Checking function: _msgSender (Slither line:2978)
_msgSender returns address variable  (Slither line:2998)
RETURN node expression: msg.sender (Slither line:3018)
Checking function: _msgData (Slither line:2978)
_msgData returns bytes variable  (Slither line:2998)
RETURN node expression: msg.data (Slither line:3018)
Checking function: constructor (Slither line:2978)
Checking function: fallback (Slither line:2978)
Checking function: receive (Slither line:2978)
Checking function: _fallback (Slither line:2978)
Checking function: replaceImplementation (Slither line:2978)

End BzxLiquidateProxy.find_getter_in_contract (Slither line:3073)

Could not find implementation getter in BzxLiquidateProxy (Slither line:1305)

Begin Address.find_getter_in_contract (Slither line:2964)

implementation is a Variable object
impl
Checking function: isContract (Slither line:2978)
isContract returns bool variable  (Slither line:2998)
RETURN node expression: size > 0 (Slither line:3018)
Checking function: sendValue (Slither line:2978)
Checking function: functionCall (Slither line:2978)
functionCall returns bytes variable  (Slither line:2998)
RETURN node expression: functionCall(target,data,Address: low-level call failed) (Slither line:3018)
Checking function: functionCall (Slither line:2978)
functionCall returns bytes variable  (Slither line:2998)
RETURN node expression: _functionCallWithValue(target,data,0,errorMessage) (Slither line:3018)
Checking function: functionCallWithValue (Slither line:2978)
functionCallWithValue returns bytes variable  (Slither line:2998)
RETURN node expression: functionCallWithValue(target,data,value,Address: low-level call with value failed) (Slither line:3018)
Checking function: functionCallWithValue (Slither line:2978)
functionCallWithValue returns bytes variable  (Slither line:2998)
RETURN node expression: _functionCallWithValue(target,data,value,errorMessage) (Slither line:3018)
Checking function: _functionCallWithValue (Slither line:2978)
_functionCallWithValue returns bytes variable  (Slither line:2998)
RETURN node expression: returndata (Slither line:3018)

End Address.find_getter_in_contract (Slither line:3073)

Checking public function owner
Checking public function renounceOwnership
Checking public function transferOwnership
Checking public function replaceImplementation
Checking external function fallback
Checking external function receive
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function BzxLiquidateProxy.owner (proxy_features line:893)
functions_writing_to_variable: checking function BzxLiquidateProxy._msgData (proxy_features line:893)
functions_writing_to_variable: checking function BzxLiquidateProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function BzxLiquidateProxy._msgSender (proxy_features line:893)
functions_writing_to_variable: checking function BzxLiquidateProxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function BzxLiquidateProxy.constructor (proxy_features line:893)
get_value_assigned: implementation = impl
functions_writing_to_variable: constructor writes impl to implementation (proxy_features line:1008)
functions_writing_to_variable: checking function BzxLiquidateProxy._fallback (proxy_features line:893)
functions_writing_to_variable: checking function BzxLiquidateProxy.transferOwnership (proxy_features line:893)
functions_writing_to_variable: checking function BzxLiquidateProxy.renounceOwnership (proxy_features line:893)
functions_writing_to_variable: checking function BzxLiquidateProxy.receive (proxy_features line:893)
functions_writing_to_variable: checking function BzxLiquidateProxy.replaceImplementation (proxy_features line:893)
functions_writing_to_variable: exp = require(bool,string)(Address.isContract(impl),not a contract) (proxy_features line:904)
functions_writing_to_variable: exp = implementation = impl (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: implementation = impl (proxy_features line:907)
functions_writing_to_variable: Identifier: implementation (proxy_features line:919)
get_value_assigned: implementation = impl
functions_writing_to_variable: exp = onlyOwner() (proxy_features line:904)
functions_writing_to_variable: exp = require(bool,string)(_owner == _msgSender(),Ownable: caller is not the owner) (proxy_features line:904)
functions_writing_to_variable: exp = size = extcodesize(uint256)(account) (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: size = extcodesize(uint256)(account) (proxy_features line:907)
functions_writing_to_variable: exp = size > 0 (proxy_features line:904)
functions_writing_to_variable: exp = msg.sender (proxy_features line:904)
functions_writing_to_variable: replaceImplementation writes impl to implementation (proxy_features line:924)
has_compatibility_checks: dependencies: ['impl', '_impl']
has_compatibility_checks: checking public function constructor
require(bool,string)(Address.isContract(impl),not a contract)
has_compatibility_checks: condition Address.isContract(impl)
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
require(bool,string)(_owner == _msgSender(),Ownable: caller is not the owner)
has_compatibility_checks: condition _owner == _msgSender()
has_compatibility_checks: checking public function replaceImplementation
require(bool,string)(Address.isContract(impl),not a contract)
has_compatibility_checks: condition Address.isContract(impl)
check_condition_from_expression: modifier calls: ['onlyOwner()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
require(bool,string)(_owner == _msgSender(),Ownable: caller is not the owner)
has_compatibility_checks: condition _owner == _msgSender()
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result__fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),impl,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: IF
 dominator expression: gasleft()() <= 2300
can_toggle_delegatecall_on_off: successors:
 NodeType: EXPRESSION  expression: result__fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),impl,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off: delegatecall_condition = False
 NodeType: NEW VARIABLE  expression: None
 NodeType: EXPRESSION  expression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
 NodeType: EXPRESSION  expression: revert(uint256,uint256)(0,returndatasize()())
 NodeType: END_IF  expression: None
 NodeType: INLINE ASM  expression: {'AST': {'nodeType': 'YulBlock', 'src': '9505:317:0', 'statements': [{'expression': {'arguments': [{'kind': 'number', 'nodeType': 'YulLiteral', 'src': '9532:1:0', 'type': '', 'value': '0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '9535:1:0', 'type': '', 'value': '0'}, {'arguments': [], 'functionName': {'name': 'calldatasize', 'nodeType': 'YulIdentifier', 'src': '9538:12:0'}, 'nodeType': 'YulFunctionCall', 'src': '9538:14:0'}], 'functionName': {'name': 'calldatacopy', 'nodeType': 'YulIdentifier', 'src': '9519:12:0'}, 'nodeType': 'YulFunctionCall', 'src': '9519:34:0'}, 'nodeType': 'YulExpressionStatement', 'src': '9519:34:0'}, {'nodeType': 'YulVariableDeclaration', 'src': '9566:64:0', 'value': {'arguments': [{'arguments': [], 'functionName': {'name': 'gas', 'nodeType': 'YulIdentifier', 'src': '9593:3:0'}, 'nodeType': 'YulFunctionCall', 'src': '9593:5:0'}, {'name': 'impl', 'nodeType': 'YulIdentifier', 'src': '9600:4:0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '9606:1:0', 'type': '', 'value': '0'}, {'arguments': [], 'functionName': {'name': 'calldatasize', 'nodeType': 'YulIdentifier', 'src': '9609:12:0'}, 'nodeType': 'YulFunctionCall', 'src': '9609:14:0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '9625:1:0', 'type': '', 'value': '0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '9628:1:0', 'type': '', 'value': '0'}], 'functionName': {'name': 'delegatecall', 'nodeType': 'YulIdentifier', 'src': '9580:12:0'}, 'nodeType': 'YulFunctionCall', 'src': '9580:50:0'}, 'variables': [{'name': 'result', 'nodeType': 'YulTypedName', 'src': '9570:6:0', 'type': ''}]}, {'expression': {'arguments': [{'kind': 'number', 'nodeType': 'YulLiteral', 'src': '9659:1:0', 'type': '', 'value': '0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '9662:1:0', 'type': '', 'value': '0'}, {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '9665:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '9665:16:0'}], 'functionName': {'name': 'returndatacopy', 'nodeType': 'YulIdentifier', 'src': '9644:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '9644:38:0'}, 'nodeType': 'YulExpressionStatement', 'src': '9644:38:0'}, {'cases': [{'body': {'nodeType': 'YulBlock', 'src': '9729:31:0', 'statements': [{'expression': {'arguments': [{'kind': 'number', 'nodeType': 'YulLiteral', 'src': '9738:1:0', 'type': '', 'value': '0'}, {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '9741:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '9741:16:0'}], 'functionName': {'name': 'revert', 'nodeType': 'YulIdentifier', 'src': '9731:6:0'}, 'nodeType': 'YulFunctionCall', 'src': '9731:27:0'}, 'nodeType': 'YulExpressionStatement', 'src': '9731:27:0'}]}, 'nodeType': 'YulCase', 'src': '9722:38:0', 'value': {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '9727:1:0', 'type': '', 'value': '0'}}, {'body': {'nodeType': 'YulBlock', 'src': '9781:31:0', 'statements': [{'expression': {'arguments': [{'kind': 'number', 'nodeType': 'YulLiteral', 'src': '9790:1:0', 'type': '', 'value': '0'}, {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '9793:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '9793:16:0'}], 'functionName': {'name': 'return', 'nodeType': 'YulIdentifier', 'src': '9783:6:0'}, 'nodeType': 'YulFunctionCall', 'src': '9783:27:0'}, 'nodeType': 'YulExpressionStatement', 'src': '9783:27:0'}]}, 'nodeType': 'YulCase', 'src': '9773:39:0', 'value': 'default'}], 'expression': {'name': 'result', 'nodeType': 'YulIdentifier', 'src': '9703:6:0'}, 'nodeType': 'YulSwitch', 'src': '9696:116:0'}]}, 'evmVersion': 'istanbul', 'externalReferences': [{'declaration': 360, 'isOffset': False, 'isSlot': False, 'src': '9600:4:0', 'valueSize': 1}], 'id': 363, 'nodeType': 'InlineAssembly', 'src': '9496:326:0'}
 NodeType: RETURN  expression: None
 NodeType: EXPRESSION  expression: return(uint256,uint256)(0,returndatasize()())
 NodeType: NEW VARIABLE  expression: None
 NodeType: IF  expression: switch_expr_9696_116_0__fallback_asm_0 == 0
 NodeType: EXPRESSION  expression: switch_expr_9696_116_0__fallback_asm_0 = result__fallback_asm_0
 NodeType: EXPRESSION  expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
 NodeType: END_IF  expression: None
 NodeType: NEW VARIABLE  expression: impl = implementation
Found public function: owner
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) RETURN
(Expression) msg.sender
has_time_delay: (node.type) EXPRESSION
(Expression) onlyOwner()
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = impl
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(Address.isContract(impl),not a contract)
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(_owner == _msgSender(),Ownable: caller is not the owner)
