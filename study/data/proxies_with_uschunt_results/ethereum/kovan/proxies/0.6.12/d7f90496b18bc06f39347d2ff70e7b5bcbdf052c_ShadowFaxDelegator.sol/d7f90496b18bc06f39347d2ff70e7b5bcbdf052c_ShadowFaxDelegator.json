{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "ShadowFaxDelegator (../../smart-contract-sanctuary/ethereum/contracts/kovan/sorted/0.6.12/d7f90496b18bc06f39347d2ff70e7b5bcbdf052c_ShadowFaxDelegator.sol/d7f90496b18bc06f39347d2ff70e7b5bcbdf052c_ShadowFaxDelegator.sol#117-193)",
        "elements": [],
        "description": "ShadowFaxDelegator (../../smart-contract-sanctuary/ethereum/contracts/kovan/sorted/0.6.12/d7f90496b18bc06f39347d2ff70e7b5bcbdf052c_ShadowFaxDelegator.sol/d7f90496b18bc06f39347d2ff70e7b5bcbdf052c_ShadowFaxDelegator.sol#117-193) is an upgradeable proxy.\nimplementation was found in a different contract.\nimplementation is an address state variable.\nMissing compatibility check in ShadowFaxDelegator.constructor(address,address)\nMissing compatibility check in ShadowFaxDelegator._setImplementation(address)\n",
        "id": "391393c15d20f1178238cfe4eae7406cdacecda93327f95c8be0fdacccb6e582",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "ShadowFaxAdminStorage.implementation",
          "impl_address_setter": "ShadowFaxDelegator._setImplementation(address)",
          "impl_address_getter": "not found",
          "impl_address_location": "ShadowFaxAdminStorage (../../smart-contract-sanctuary/ethereum/contracts/kovan/sorted/0.6.12/d7f90496b18bc06f39347d2ff70e7b5bcbdf052c_ShadowFaxDelegator.sol/d7f90496b18bc06f39347d2ff70e7b5bcbdf052c_ShadowFaxDelegator.sol#106-110)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "ShadowFaxDelegator.constructor(address,address)": "missing",
              "ShadowFaxDelegator._setImplementation(address)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "owner()",
              "renounceOwnership()",
              "transferOwnership(address)",
              "_setImplementation(address)",
              "_setAdmin(address)"
            ]
          }
        }
      }
    ]
  }
}