
Begin IInvitation.is_proxy (Slither line:1425)


End IInvitation.is_proxy (Slither line:1428)


Begin IInvitation.is_upgradeable_proxy (Slither line:1136)

Checking contract: IInvitation 

End IInvitation.is_upgradeable_proxy (Slither line:1407)


Begin DelegationStorage.is_proxy (Slither line:1425)


End DelegationStorage.is_proxy (Slither line:1428)


Begin DelegationStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: DelegationStorage 

End DelegationStorage.is_upgradeable_proxy (Slither line:1407)


Begin DelegatorInterface.is_proxy (Slither line:1425)


End DelegatorInterface.is_proxy (Slither line:1428)


Begin DelegatorInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: DelegatorInterface 

End DelegatorInterface.is_upgradeable_proxy (Slither line:1407)


Begin DelegateInterface.is_proxy (Slither line:1425)


End DelegateInterface.is_proxy (Slither line:1428)


Begin DelegateInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: DelegateInterface 

End DelegateInterface.is_upgradeable_proxy (Slither line:1407)


Begin IERC20.is_proxy (Slither line:1425)


End IERC20.is_proxy (Slither line:1428)


Begin IERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20 

End IERC20.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin SafeERC20.is_proxy (Slither line:1425)


End SafeERC20.is_proxy (Slither line:1428)


Begin SafeERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeERC20 

End SafeERC20.is_upgradeable_proxy (Slither line:1407)


Begin Context.is_proxy (Slither line:1425)


End Context.is_proxy (Slither line:1428)


Begin Context.is_upgradeable_proxy (Slither line:1136)

Checking contract: Context 

End Context.is_upgradeable_proxy (Slither line:1407)


Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin IUniswapV2Pair.is_proxy (Slither line:1425)


End IUniswapV2Pair.is_proxy (Slither line:1428)


Begin IUniswapV2Pair.is_upgradeable_proxy (Slither line:1136)

Checking contract: IUniswapV2Pair 

End IUniswapV2Pair.is_upgradeable_proxy (Slither line:1407)


Begin ActivityBase.is_proxy (Slither line:1425)


End ActivityBase.is_proxy (Slither line:1428)


Begin ActivityBase.is_upgradeable_proxy (Slither line:1136)

Checking contract: ActivityBase 

End ActivityBase.is_upgradeable_proxy (Slither line:1407)


Begin MarketingMining.is_proxy (Slither line:1425)


End MarketingMining.is_proxy (Slither line:1428)


Begin MarketingMining.is_upgradeable_proxy (Slither line:1136)

Checking contract: MarketingMining 

End MarketingMining.is_upgradeable_proxy (Slither line:1407)


Begin MarketingMiningDelegator.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin MarketingMiningDelegator.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(free_mem_ptr_fallback_asm_0,0,returndatasize()()) (Slither line:2792)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2807)
Args:
free_mem_ptr_fallback_asm_0
0
returndatasize()()

End MarketingMiningDelegator.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin MarketingMiningDelegator.find_delegatecall_in_exp_node

Found Expression Node: free_mem_ptr_fallback_asm_0 = mload(uint256)(0x40) (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)
Expression called: mload(uint256)
Type of call: uint256 (Slither line:2807)
Args:
0x40

End MarketingMiningDelegator.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin MarketingMiningDelegator.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(free_mem_ptr_fallback_asm_0,returndatasize()()) (Slither line:2792)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2807)
Args:
free_mem_ptr_fallback_asm_0
returndatasize()()

End MarketingMiningDelegator.find_delegatecall_in_exp_node (Slither line:2848)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin MarketingMiningDelegator.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(free_mem_ptr_fallback_asm_0,returndatasize()()) (Slither line:2792)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2807)
Args:
free_mem_ptr_fallback_asm_0
returndatasize()()

End MarketingMiningDelegator.find_delegatecall_in_exp_node (Slither line:2848)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin MarketingMiningDelegator.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_57731_225_0_fallback_asm_0 = success (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)

End MarketingMiningDelegator.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin MarketingMiningDelegator.find_delegatecall_in_asm (Slither line:1541)


End MarketingMiningDelegator.find_delegatecall_in_asm (Slither line:1637)


Begin MarketingMiningDelegator.find_delegatecall_in_asm (Slither line:1541)


End MarketingMiningDelegator.find_delegatecall_in_asm (Slither line:1637)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


Found LowLevelCall (Slither line:2730)


Found delegatecall in LowLevelCall (Slither line:2732)


End Contract.find_delegatecall_in_ir (Slither line:2763)


End MarketingMiningDelegator.is_proxy (Slither line:1476)


Begin MarketingMiningDelegator.is_upgradeable_proxy (Slither line:1136)

Checking contract: MarketingMiningDelegator 
MarketingMiningDelegator is delegating to implementation
Looking for setter (Slither line:1200)

Looking for setter in DelegationStorage (Slither line:1204)


Begin DelegationStorage.find_setter_in_contract (Slither line:3109)


End DelegationStorage.find_setter_in_contract (Slither line:3315)


Could not find setter in DelegationStorage 
Looking in MarketingMiningDelegator (Slither line:1213)

Begin MarketingMiningDelegator.find_setter_in_contract (Slither line:3109)

Checking function: constructor(address,address,uint256,uint256,uint256,address,address,address,address,bytes) returns() (Slither line:3117)
Checking function: _setImplementation(address,bool,bytes) returns() (Slither line:3117)
Visibility: public
delegateToImplementation(abi.encodeWithSignature(_becomeImplementation(bytes),becomeImplementationData))
NewImplementation(oldImplementation,implementation)
revert(uint256,uint256)(returnData + 0x20,returndatasize()())
require(bool,string)(admin == msg.sender,invalid authorized)
checkAdmin()
(success,returnData) = callee.delegatecall(data)
is an Assignment Operation (Slither line:3206)
delegateTo(implementation,data)
delegateToImplementation(abi.encodeWithSignature(_resignImplementation()))
returnData
implementation = implementation_
is an Assignment Operation (Slither line:3206)

End MarketingMiningDelegator.find_setter_in_contract (Slither line:3315)


Implementation set by function: _setImplementation in contract: MarketingMiningDelegator (Slither line:1264)
Looking for getter (Slither line:1273)


Begin DelegationStorage.find_getter_in_contract (Slither line:2964)

implementation is a Variable object
implementation_

End DelegationStorage.find_getter_in_contract (Slither line:3073)


Begin MarketingMiningDelegator.find_getter_in_contract (Slither line:2964)

implementation is a Variable object
implementation_
Checking function: initialize (Slither line:2978)
Checking function: add (Slither line:2978)
Checking function: setAllocationPoint (Slither line:2978)
Checking function: setSHDPerBlock (Slither line:2978)
Checking function: setIsDepositAvailable (Slither line:2978)
Checking function: setIsRevenueWithdrawable (Slither line:2978)
Checking function: massUpdatePools (Slither line:2978)
Checking function: addAvailableDividend (Slither line:2978)
Checking function: updatePoolDividend (Slither line:2978)
Checking function: depositETH (Slither line:2978)
Checking function: withdrawETH (Slither line:2978)
Checking function: updateAfterDeposit (Slither line:2978)
Checking function: deposit (Slither line:2978)
Checking function: withdraw (Slither line:2978)
Checking function: updateAfterwithdraw (Slither line:2978)
Checking function: safeSHARDTransfer (Slither line:2978)
Checking function: getMultiplier (Slither line:2978)
getMultiplier returns uint256 variable  (Slither line:2998)
RETURN node expression: _to.sub(_from).mul(BONUS_MULTIPLIER) (Slither line:3018)
RETURN node expression: _to.sub(_from) (Slither line:3018)
RETURN node expression: bonusEndBlock.sub(_from).mul(BONUS_MULTIPLIER).add(_to.sub(bonusEndBlock)) (Slither line:3018)
Checking function: pendingSHARD (Slither line:2978)
pendingSHARD returns uint256 variable called _pending (Slither line:2998)
pendingSHARD returns uint256 variable called _potential (Slither line:2998)
pendingSHARD returns uint256 variable called _blockNumber (Slither line:2998)
Checking function: pendingSHARDByPids (Slither line:2978)
pendingSHARDByPids returns uint256[] variable called _pending (Slither line:2998)
pendingSHARDByPids returns uint256[] variable called _potential (Slither line:2998)
pendingSHARDByPids returns uint256 variable called _blockNumber (Slither line:2998)
Checking function: calculatePendingSHARD (Slither line:2978)
calculatePendingSHARD returns uint256 variable called _pending (Slither line:2998)
calculatePendingSHARD returns uint256 variable called _potential (Slither line:2998)
Checking function: getDepositWeight (Slither line:2978)
getDepositWeight returns uint256 variable called weight (Slither line:2998)
RETURN node expression: _amount (Slither line:3018)
Checking function: getPoolLength (Slither line:2978)
getPoolLength returns uint256 variable  (Slither line:2998)
RETURN node expression: poolInfo.length (Slither line:3018)
Checking function: getPoolInfo (Slither line:2978)
getPoolInfo returns uint256 variable called _allocPoint (Slither line:2998)
getPoolInfo returns uint256 variable called _accumulativeDividend (Slither line:2998)
getPoolInfo returns uint256 variable called _usersTotalWeight (Slither line:2998)
getPoolInfo returns uint256 variable called _tokenAmount (Slither line:2998)
getPoolInfo returns address variable called _tokenAddress (Slither line:2998)
getPoolInfo returns uint256 variable called _accs (Slither line:2998)
Checking function: getPagePoolInfo (Slither line:2978)
getPagePoolInfo returns uint256[] variable called _allocPoint (Slither line:2998)
getPagePoolInfo returns uint256[] variable called _accumulativeDividend (Slither line:2998)
getPagePoolInfo returns uint256[] variable called _usersTotalWeight (Slither line:2998)
getPagePoolInfo returns uint256[] variable called _tokenAmount (Slither line:2998)
getPagePoolInfo returns address[] variable called _tokenAddress (Slither line:2998)
getPagePoolInfo returns uint256[] variable called _accs (Slither line:2998)
Checking function: getUserInfoByPids (Slither line:2978)
getUserInfoByPids returns uint256[] variable called _amount (Slither line:2998)
getUserInfoByPids returns uint256[] variable called _modifiedWeight (Slither line:2998)
getUserInfoByPids returns uint256[] variable called _revenue (Slither line:2998)
getUserInfoByPids returns uint256[] variable called _userDividend (Slither line:2998)
getUserInfoByPids returns uint256[] variable called _rewardDebt (Slither line:2998)
Checking function: updateUserRevenue (Slither line:2978)
updateUserRevenue returns uint256 variable  (Slither line:2998)
RETURN node expression: _user.revenue (Slither line:3018)
Checking function: updateInvitorWeight (Slither line:2978)
Checking function: updateUserWeight (Slither line:2978)
Checking function: updateAfterModifyStartBlock (Slither line:2978)
Checking function: setDividendWeight (Slither line:2978)
Checking function: setDeveloperDAOFund (Slither line:2978)
Checking function: setTokenAmountLimit (Slither line:2978)
Checking function: setTokenAmountLimitFeeRate (Slither line:2978)
Checking function: setContracSenderFeeRate (Slither line:2978)
Checking function: setStartBlock (Slither line:2978)
Checking function: transferAdmin (Slither line:2978)
Checking function: setMarketingFund (Slither line:2978)
Checking function: updateAfterModifyStartBlock (Slither line:2978)
Checking function: calculateDividend (Slither line:2978)
calculateDividend returns uint256 variable called _marketingFundDividend (Slither line:2998)
calculateDividend returns uint256 variable called _devDividend (Slither line:2998)
calculateDividend returns uint256 variable called _userDividend (Slither line:2998)
Checking function: judgeContractSender (Slither line:2978)
Checking function: checkAdmin (Slither line:2978)
Checking function: constructor (Slither line:2978)
Checking function: owner (Slither line:2978)
owner returns address variable  (Slither line:2998)
RETURN node expression: _owner (Slither line:3018)
Checking function: renounceOwnership (Slither line:2978)
Checking function: transferOwnership (Slither line:2978)
Checking function: _msgSender (Slither line:2978)
_msgSender returns address variable  (Slither line:2998)
RETURN node expression: msg.sender (Slither line:3018)
Checking function: _msgData (Slither line:2978)
_msgData returns bytes variable  (Slither line:2998)
RETURN node expression: msg.data (Slither line:3018)
Checking function: constructor (Slither line:2978)
Checking function: _setImplementation (Slither line:2978)
Checking function: delegateTo (Slither line:2978)
delegateTo returns bytes variable  (Slither line:2998)
RETURN node expression: returnData (Slither line:3018)
Checking function: delegateToImplementation (Slither line:2978)
delegateToImplementation returns bytes variable  (Slither line:2998)
RETURN node expression: delegateTo(implementation,data) (Slither line:3018)
Checking function: delegateToViewImplementation (Slither line:2978)
delegateToViewImplementation returns bytes variable  (Slither line:2998)
RETURN node expression: abi.decode(returnData,(bytes)) (Slither line:3018)
Checking function: fallback (Slither line:2978)
Checking function: add (Slither line:2978)
Checking function: setAllocationPoint (Slither line:2978)
Checking function: setSHDPerBlock (Slither line:2978)
Checking function: setIsDepositAvailable (Slither line:2978)
Checking function: setIsRevenueWithdrawable (Slither line:2978)
Checking function: setStartBlock (Slither line:2978)
Checking function: massUpdatePools (Slither line:2978)
Checking function: addAvailableDividend (Slither line:2978)
Checking function: updatePoolDividend (Slither line:2978)
Checking function: depositETH (Slither line:2978)
Checking function: deposit (Slither line:2978)
Checking function: withdraw (Slither line:2978)
Checking function: withdrawETH (Slither line:2978)
Checking function: setDeveloperDAOFund (Slither line:2978)
Checking function: setDividendWeight (Slither line:2978)
Checking function: setTokenAmountLimit (Slither line:2978)
Checking function: setTokenAmountLimitFeeRate (Slither line:2978)
Checking function: setContracSenderFeeRate (Slither line:2978)
Checking function: transferAdmin (Slither line:2978)
Checking function: setMarketingFund (Slither line:2978)
Checking function: pendingSHARD (Slither line:2978)
pendingSHARD returns uint256 variable  (Slither line:2998)
pendingSHARD returns uint256 variable  (Slither line:2998)
pendingSHARD returns uint256 variable  (Slither line:2998)
RETURN node expression: abi.decode(data,(uint256,uint256,uint256)) (Slither line:3018)
Checking function: pendingSHARDByPids (Slither line:2978)
pendingSHARDByPids returns uint256[] variable called _pending (Slither line:2998)
pendingSHARDByPids returns uint256[] variable called _potential (Slither line:2998)
pendingSHARDByPids returns uint256 variable called _blockNumber (Slither line:2998)
RETURN node expression: abi.decode(data,(uint256[],uint256[],uint256)) (Slither line:3018)
Checking function: getPoolLength (Slither line:2978)
getPoolLength returns uint256 variable  (Slither line:2998)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3018)
Checking function: getMultiplier (Slither line:2978)
getMultiplier returns uint256 variable  (Slither line:2998)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3018)
Checking function: getPoolInfo (Slither line:2978)
getPoolInfo returns uint256 variable called _allocPoint (Slither line:2998)
getPoolInfo returns uint256 variable called _accumulativeDividend (Slither line:2998)
getPoolInfo returns uint256 variable called _usersTotalWeight (Slither line:2998)
getPoolInfo returns uint256 variable called _tokenAmount (Slither line:2998)
getPoolInfo returns address variable called _tokenAddress (Slither line:2998)
getPoolInfo returns uint256 variable called _accs (Slither line:2998)
RETURN node expression: abi.decode(data,(uint256,uint256,uint256,uint256,address,uint256)) (Slither line:3018)
Checking function: getPagePoolInfo (Slither line:2978)
getPagePoolInfo returns uint256[] variable called _allocPoint (Slither line:2998)
getPagePoolInfo returns uint256[] variable called _accumulativeDividend (Slither line:2998)
getPagePoolInfo returns uint256[] variable called _usersTotalWeight (Slither line:2998)
getPagePoolInfo returns uint256[] variable called _tokenAmount (Slither line:2998)
getPagePoolInfo returns address[] variable called _tokenAddress (Slither line:2998)
getPagePoolInfo returns uint256[] variable called _accs (Slither line:2998)
RETURN node expression: abi.decode(data,(uint256[],uint256[],uint256[],uint256[],address[],uint256[])) (Slither line:3018)
Checking function: getUserInfoByPids (Slither line:2978)
getUserInfoByPids returns uint256[] variable called _amount (Slither line:2998)
getUserInfoByPids returns uint256[] variable called _modifiedWeight (Slither line:2998)
getUserInfoByPids returns uint256[] variable called _revenue (Slither line:2998)
getUserInfoByPids returns uint256[] variable called _userDividend (Slither line:2998)
getUserInfoByPids returns uint256[] variable called _rewardDebt (Slither line:2998)
RETURN node expression: abi.decode(data,(uint256[],uint256[],uint256[],uint256[],uint256[])) (Slither line:3018)
Checking function: slitherConstructorVariables (Slither line:2978)
Checking function: slitherConstructorConstantVariables (Slither line:2978)

End MarketingMiningDelegator.find_getter_in_contract (Slither line:3073)

Could not find implementation getter in MarketingMiningDelegator (Slither line:1305)
or in DelegationStorage (Slither line:1319)

Begin DelegatorInterface.find_getter_in_contract (Slither line:2964)

implementation is a Variable object
implementation_

End DelegatorInterface.find_getter_in_contract (Slither line:3073)


End MarketingMiningDelegator.is_upgradeable_proxy (Slither line:1332)

impl_address_from_contract_call: implementation_
impl_address_from_contract_call: StateVariable implementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression returndatacopy(uint256,uint256,uint256)(free_mem_ptr_fallback_asm_0,0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_fallback_asm_0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression mload(uint256)(0x40)
impl_address_from_contract_call: arg is 0x40
impl_address_from_contract_call: CallExpression revert(uint256,uint256)(free_mem_ptr_fallback_asm_0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_fallback_asm_0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression return(uint256,uint256)(free_mem_ptr_fallback_asm_0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_fallback_asm_0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression implementation.delegatecall(msg.data)
Checking public function initialize
Checking public function add
Checking public function setAllocationPoint
Checking public function setSHDPerBlock
Checking public function setIsDepositAvailable
Checking public function setIsRevenueWithdrawable
Checking public function initialize
Checking public function add
Checking public function setAllocationPoint
Checking public function setSHDPerBlock
Checking public function setIsDepositAvailable
Checking public function setIsRevenueWithdrawable
Checking public function massUpdatePools
Checking public function addAvailableDividend
Checking public function updatePoolDividend
Checking external function depositETH
Checking external function withdrawETH
Checking public function deposit
Checking public function withdraw
Checking public function getMultiplier
Checking external function pendingSHARD
Checking external function pendingSHARDByPids
Checking public function getDepositWeight
Checking public function getPoolLength
Checking public function getPoolInfo
Checking public function getPagePoolInfo
Checking public function getUserInfoByPids
Checking public function setDividendWeight
Checking public function setDeveloperDAOFund
Checking public function setTokenAmountLimit
Checking public function setTokenAmountLimitFeeRate
Checking public function setContracSenderFeeRate
Checking public function setStartBlock
Checking public function transferAdmin
Checking public function setMarketingFund
Checking public function owner
Checking public function renounceOwnership
Checking public function transferOwnership
Checking public function _setImplementation
Checking public function _setImplementation
Checking public function delegateToImplementation
Checking public function delegateToViewImplementation
Checking public function add
Checking public function setAllocationPoint
Checking public function setSHDPerBlock
Checking public function setIsDepositAvailable
Checking public function setIsRevenueWithdrawable
Checking public function setStartBlock
Checking public function massUpdatePools
Checking public function addAvailableDividend
Checking public function updatePoolDividend
Checking external function depositETH
Checking public function deposit
Checking public function withdraw
Checking external function withdrawETH
Checking public function setDeveloperDAOFund
Checking public function setDividendWeight
Checking public function setTokenAmountLimit
Checking public function setTokenAmountLimitFeeRate
Checking public function setContracSenderFeeRate
Checking public function transferAdmin
Checking public function setMarketingFund
Checking external function pendingSHARD
Checking external function pendingSHARDByPids
Checking public function getPoolLength
Checking public function getMultiplier
Checking public function getPoolInfo
Checking public function getPagePoolInfo
Checking public function getUserInfoByPids
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function MarketingMiningDelegator.transferAdmin (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.checkAdmin (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setMarketingFund (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.pendingSHARD (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.getUserInfoByPids (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.constructor (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.pendingSHARDByPids (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.owner (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.getPoolLength (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.renounceOwnership (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.getMultiplier (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setIsRevenueWithdrawable (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.getPoolInfo (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.transferOwnership (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.getPagePoolInfo (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator._msgSender (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.getUserInfoByPids (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator._msgData (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.updateUserRevenue (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator._setImplementation (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setStartBlock (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setStartBlock (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.depositETH (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setSHDPerBlock (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.massUpdatePools (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.getMultiplier (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.withdrawETH (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.addAvailableDividend (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.transferAdmin (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.getDepositWeight (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.constructor (proxy_features line:893)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: constructor writes implementation_ to implementation (proxy_features line:1008)
functions_writing_to_variable: checking function MarketingMiningDelegator.updatePoolDividend (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setDividendWeight (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.updateAfterDeposit (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.pendingSHARD (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setMarketingFund (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator._setImplementation (proxy_features line:893)
functions_writing_to_variable: exp = checkAdmin() (proxy_features line:904)
functions_writing_to_variable: exp = allowResign (proxy_features line:904)
functions_writing_to_variable: exp = delegateToImplementation(abi.encodeWithSignature(_resignImplementation())) (proxy_features line:904)
functions_writing_to_variable: exp = oldImplementation = implementation (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: oldImplementation = implementation (proxy_features line:907)
functions_writing_to_variable: exp = implementation = implementation_ (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: implementation = implementation_ (proxy_features line:907)
functions_writing_to_variable: Identifier: implementation (proxy_features line:919)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: exp = delegateToImplementation(abi.encodeWithSignature(_becomeImplementation(bytes),becomeImplementationData)) (proxy_features line:904)
functions_writing_to_variable: exp = NewImplementation(oldImplementation,implementation) (proxy_features line:904)
functions_writing_to_variable: exp = delegateTo(implementation,data) (proxy_features line:904)
functions_writing_to_variable: exp = require(bool,string)(admin == msg.sender,invalid authorized) (proxy_features line:904)
functions_writing_to_variable: exp = (success,returnData) = callee.delegatecall(data) (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: (success,returnData) = callee.delegatecall(data) (proxy_features line:907)
functions_writing_to_variable: exp = success == 0 (proxy_features line:904)
functions_writing_to_variable: exp = revert(uint256,uint256)(returnData + 0x20,returndatasize()()) (proxy_features line:904)
functions_writing_to_variable: exp = returnData (proxy_features line:904)
functions_writing_to_variable: _setImplementation writes implementation_ to implementation (proxy_features line:924)
functions_writing_to_variable: checking function MarketingMiningDelegator.updateInvitorWeight (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.depositETH (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setAllocationPoint (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.delegateTo (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setIsDepositAvailable (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setDeveloperDAOFund (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.deposit (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.updateAfterModifyStartBlock (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.updateUserWeight (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.delegateToImplementation (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.deposit (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.getPoolLength (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.withdraw (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.initialize (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.add (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.pendingSHARDByPids (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.delegateToViewImplementation (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.calculateDividend (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setIsRevenueWithdrawable (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setTokenAmountLimit (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.withdrawETH (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.fallback (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.withdraw (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.getPoolInfo (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setDeveloperDAOFund (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.judgeContractSender (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.massUpdatePools (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setTokenAmountLimitFeeRate (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.add (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.slitherConstructorVariables (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setDividendWeight (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setAllocationPoint (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.getPagePoolInfo (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setTokenAmountLimit (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.addAvailableDividend (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.updateAfterwithdraw (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setSHDPerBlock (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.calculatePendingSHARD (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setContracSenderFeeRate (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setTokenAmountLimitFeeRate (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.updatePoolDividend (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setIsDepositAvailable (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.setContracSenderFeeRate (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.updateAfterModifyStartBlock (proxy_features line:893)
functions_writing_to_variable: checking function MarketingMiningDelegator.safeSHARDTransfer (proxy_features line:893)
has_compatibility_checks: dependencies: ['implementation_', 'implementation_']
has_compatibility_checks: checking public function constructor
has_compatibility_checks: IF node exp = success == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(returnData + 0x20,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(returnData + 0x20,returndatasize()())']
has_compatibility_checks: ConditionalExpression if success == 0 then revert(uint256,uint256)(returnData + 0x20,returndatasize()()) else returnData
require(bool,string)(admin == msg.sender,invalid authorized)
has_compatibility_checks: condition admin == msg.sender
has_compatibility_checks: IF node exp = allowResign
has_compatibility_checks: checking public function _setImplementation
has_compatibility_checks: IF node exp = success == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(returnData + 0x20,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(returnData + 0x20,returndatasize()())']
has_compatibility_checks: ConditionalExpression if success == 0 then revert(uint256,uint256)(returnData + 0x20,returndatasize()()) else returnData
require(bool,string)(admin == msg.sender,invalid authorized)
has_compatibility_checks: condition admin == msg.sender
has_compatibility_checks: IF node exp = allowResign
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: IF
 dominator expression: msg.value > 0
can_toggle_delegatecall_on_off: successors:
 NodeType: EXPRESSION  expression: returndatacopy(uint256,uint256,uint256)(free_mem_ptr_fallback_asm_0,0,returndatasize()())
 NodeType: EXPRESSION  expression: free_mem_ptr_fallback_asm_0 = mload(uint256)(0x40)
 NodeType: EXPRESSION  expression: revert(uint256,uint256)(free_mem_ptr_fallback_asm_0,returndatasize()())
 NodeType: RETURN  expression: None
 NodeType: NEW VARIABLE  expression: None
 NodeType: EXPRESSION  expression: return(uint256,uint256)(free_mem_ptr_fallback_asm_0,returndatasize()())
 NodeType: IF  expression: switch_expr_57731_225_0_fallback_asm_0 == 0
 NodeType: END_IF  expression: None
 NodeType: EXPRESSION  expression: switch_expr_57731_225_0_fallback_asm_0 = success
 NodeType: NEW VARIABLE  expression: None
 NodeType: NEW VARIABLE  expression: None
 NodeType: INLINE ASM  expression: {'AST': {'nodeType': 'YulBlock', 'src': '57608:359:0', 'statements': [{'nodeType': 'YulVariableDeclaration', 'src': '57623:31:0', 'value': {'arguments': [{'kind': 'number', 'nodeType': 'YulLiteral', 'src': '57649:4:0', 'type': '', 'value': '0x40'}], 'functionName': {'name': 'mload', 'nodeType': 'YulIdentifier', 'src': '57643:5:0'}, 'nodeType': 'YulFunctionCall', 'src': '57643:11:0'}, 'variables': [{'name': 'free_mem_ptr', 'nodeType': 'YulTypedName', 'src': '57627:12:0', 'type': ''}]}, {'expression': {'arguments': [{'name': 'free_mem_ptr', 'nodeType': 'YulIdentifier', 'src': '57683:12:0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '57697:1:0', 'type': '', 'value': '0'}, {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '57700:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '57700:16:0'}], 'functionName': {'name': 'returndatacopy', 'nodeType': 'YulIdentifier', 'src': '57668:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '57668:49:0'}, 'nodeType': 'YulExpressionStatement', 'src': '57668:49:0'}, {'cases': [{'body': {'nodeType': 'YulBlock', 'src': '57770:80:0', 'statements': [{'expression': {'arguments': [{'name': 'free_mem_ptr', 'nodeType': 'YulIdentifier', 'src': '57800:12:0'}, {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '57814:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '57814:16:0'}], 'functionName': {'name': 'revert', 'nodeType': 'YulIdentifier', 'src': '57793:6:0'}, 'nodeType': 'YulFunctionCall', 'src': '57793:38:0'}, 'nodeType': 'YulExpressionStatement', 'src': '57793:38:0'}]}, 'nodeType': 'YulCase', 'src': '57763:87:0', 'value': {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '57768:1:0', 'type': '', 'value': '0'}}, {'body': {'nodeType': 'YulBlock', 'src': '57876:80:0', 'statements': [{'expression': {'arguments': [{'name': 'free_mem_ptr', 'nodeType': 'YulIdentifier', 'src': '57906:12:0'}, {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '57920:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '57920:16:0'}], 'functionName': {'name': 'return', 'nodeType': 'YulIdentifier', 'src': '57899:6:0'}, 'nodeType': 'YulFunctionCall', 'src': '57899:38:0'}, 'nodeType': 'YulExpressionStatement', 'src': '57899:38:0'}]}, 'nodeType': 'YulCase', 'src': '57868:88:0', 'value': 'default'}], 'expression': {'name': 'success', 'nodeType': 'YulIdentifier', 'src': '57738:7:0'}, 'nodeType': 'YulSwitch', 'src': '57731:225:0'}]}, 'evmVersion': 'istanbul', 'externalReferences': [{'declaration': 4038, 'isOffset': False, 'isSlot': False, 'src': '57738:7:0', 'valueSize': 1}], 'id': 4045, 'nodeType': 'InlineAssembly', 'src': '57599:368:0'}
 NodeType: END_IF  expression: None
 NodeType: EXPRESSION  expression: (success) = implementation.delegatecall(msg.data)
can_toggle_delegatecall_on_off: delegatecall_condition = False
Found public function: initialize
has_time_delay: (node.type) IF
(Expression) success == 0
has_time_delay: (node.type) EXPRESSION
(Expression) delegateToImplementation(abi.encodeWithSignature(_becomeImplementation(bytes),becomeImplementationData))
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,implementation)
has_time_delay: (node.type) EXPRESSION
(Expression) revert(uint256,uint256)(returnData + 0x20,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(admin == msg.sender,invalid authorized)
has_time_delay: (node.type) EXPRESSION
(Expression) checkAdmin()
has_time_delay: (node.type) IF
(Expression) allowResign
has_time_delay: (node.type) EXPRESSION
(Expression) (success,returnData) = callee.delegatecall(data)
has_time_delay: (node.type) RETURN
(Expression) delegateTo(implementation,data)
has_time_delay: (node.type) EXPRESSION
(Expression) delegateToImplementation(abi.encodeWithSignature(_resignImplementation()))
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = implementation
has_time_delay: (node.type) RETURN
(Expression) returnData
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = implementation_

Begin Invitation.is_proxy (Slither line:1425)


End Invitation.is_proxy (Slither line:1428)


Begin Invitation.is_upgradeable_proxy (Slither line:1136)

Checking contract: Invitation 

End Invitation.is_upgradeable_proxy (Slither line:1407)

