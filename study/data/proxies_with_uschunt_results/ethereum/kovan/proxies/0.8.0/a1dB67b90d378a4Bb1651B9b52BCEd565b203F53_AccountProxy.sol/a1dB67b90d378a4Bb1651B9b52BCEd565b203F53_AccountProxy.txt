
Begin AccountProxy.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin AccountProxy.find_delegatecall_in_exp_node

Found Expression Node: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:2792)
Expression called: calldatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2807)
Args:
0
0
calldatasize()()

End AccountProxy.find_delegatecall_in_exp_node (Slither line:2848)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin AccountProxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(_opCodeAddress != address(0),CHFRY Account: Not found OpCode) (Slither line:2792)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2807)
Args:
_opCodeAddress != address(0)
CHFRY Account: Not found OpCode

End AccountProxy.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin AccountProxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:2792)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2807)
Args:
0
0
returndatasize()()

End AccountProxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin AccountProxy.find_delegatecall_in_exp_node

Found Expression Node: result_delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_opCodeAddress,0,calldatasize()(),0,0) (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2807)
Args:
gas()()
_opCodeAddress
0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2814)

Destination is _opCodeAddress (Slither line:2818)
dest.value: _opCodeAddress (Slither line:2821)
Expression: OperationCenterInterface(opCenterAddress).getOpCodeAddress(_sig) (Slither line:2826)

Begin AccountProxy.find_delegate_from_call_exp

OperationCenterInterface(opCenterAddress).getOpCodeAddress(_sig) (Slither line:1993)
called = OperationCenterInterface(opCenterAddress).getOpCodeAddress (Slither line:2000)
Called member of OperationCenterInterface(opCenterAddress) (Slither line:2007)

Begin AccountProxy.find_delegate_from_member_access

Expression: OperationCenterInterface(opCenterAddress).getOpCodeAddress(_sig) (Slither line:2348)
OperationCenterInterface(opCenterAddress) (Slither line:2361)
getOpCodeAddress is a member of the contract type: OperationCenterInterface (Slither line:2406)
Which is an interface (Slither line:2410)
Could not find a contract that inherits OperationCenterInterface (Slither line:2431)

End AccountProxy.find_delegate_from_call_exp (Slither line:2009)


End AccountProxy.find_delegatecall_in_exp_node (Slither line:2848)


End AccountProxy.is_proxy (Slither line:1476)


Begin AccountProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: AccountProxy 
Local Variable: _opCodeAddress (Slither line:1164)
OperationCenterInterface(opCenterAddress) (Slither line:1171)
Call destination OperationCenterInterface(opCenterAddress).getOpCodeAddress(_sig) is hidden in an interface (Slither line:1192)

detect_storage_slot: AccountProxy
_opCodeAddress is dependent on opCenterAddress
Expression for _opCodeAddress: OperationCenterInterface(opCenterAddress).getOpCodeAddress(_sig)
Called: OperationCenterInterface(opCenterAddress).getOpCodeAddress
_sig.expression is None
impl_address_from_contract_call: OperationCenterInterface(opCenterAddress).getOpCodeAddress(_sig)
called: OperationCenterInterface(opCenterAddress).getOpCodeAddress
found MemberAccess: OperationCenterInterface(opCenterAddress).getOpCodeAddress
TypeConversion: OperationCenterInterface(opCenterAddress)
find_registry_address_source: OperationCenterInterface(opCenterAddress).getOpCodeAddress(_sig)
MemberAccess: OperationCenterInterface(opCenterAddress).getOpCodeAddress
TypeConversion: OperationCenterInterface(opCenterAddress)
Identifier: opCenterAddress
Checking external function fallback
Checking external function receive
functions_writing_to_variable: _opCodeAddress
functions_writing_to_variable: checking function AccountProxy.receive (proxy_features line:893)
get_value_assigned: _opCodeAddress = OperationCenterInterface(opCenterAddress).getOpCodeAddress(_sig)
functions_writing_to_variable: receive writes TMP_4 to _opCodeAddress (proxy_features line:1008)
functions_writing_to_variable: checking function AccountProxy.fallback (proxy_features line:893)
get_value_assigned: _opCodeAddress = OperationCenterInterface(opCenterAddress).getOpCodeAddress(_sig)
functions_writing_to_variable: fallback writes TMP_4 to _opCodeAddress (proxy_features line:1008)
functions_writing_to_variable: checking function AccountProxy.constructor (proxy_features line:893)
has_compatibility_checks: dependencies: ['_opCenterAddress', 'TMP_4', 'TMP_3', '_sig', 'opCenterAddress']
functions_writing_to_variable: opCenterAddress
functions_writing_to_variable: checking function AccountProxy.delegate (proxy_features line:893)
functions_writing_to_variable: checking function AccountProxy.receive (proxy_features line:893)
functions_writing_to_variable: checking function AccountProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function AccountProxy.constructor (proxy_features line:893)
functions_writing_to_variable: exp = opCenterAddress = _opCenterAddress (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: opCenterAddress = _opCenterAddress (proxy_features line:907)
functions_writing_to_variable: Identifier: opCenterAddress (proxy_features line:919)
get_value_assigned: opCenterAddress = _opCenterAddress
functions_writing_to_variable: constructor writes _opCenterAddress to opCenterAddress (proxy_features line:924)
has_compatibility_checks: checking external function receive
has_compatibility_checks: IF node exp = switch_expr_1093_124_0_delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1093_124_0_delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(_opCodeAddress != address(0),CHFRY Account: Not found OpCode)
has_compatibility_checks: condition _opCodeAddress != address(0)
has_compatibility_checks: IF node exp = msg.sig != 0x00000000
has_compatibility_checks: checking external function fallback
has_compatibility_checks: IF node exp = switch_expr_1093_124_0_delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1093_124_0_delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(_opCodeAddress != address(0),CHFRY Account: Not found OpCode)
has_compatibility_checks: condition _opCodeAddress != address(0)
has_compatibility_checks: checking public function constructor
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result_delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_opCodeAddress,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: _opCodeAddress = OperationCenterInterface(opCenterAddress).getOpCodeAddress(_sig)
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool,string)(_opCodeAddress != address(0),CHFRY Account: Not found OpCode)
Found public function: constructor
Found fallback
Found external function: receive

Begin OperationCenterInterface.is_proxy (Slither line:1425)


End OperationCenterInterface.is_proxy (Slither line:1428)


Begin OperationCenterInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: OperationCenterInterface 

End OperationCenterInterface.is_upgradeable_proxy (Slither line:1407)

