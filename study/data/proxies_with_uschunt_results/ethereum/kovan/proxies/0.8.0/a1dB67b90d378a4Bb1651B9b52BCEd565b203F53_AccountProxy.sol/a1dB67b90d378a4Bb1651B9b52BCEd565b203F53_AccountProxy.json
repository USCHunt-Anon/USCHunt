{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "AccountProxy (../../smart-contract-sanctuary/ethereum/contracts/kovan/sorted/0.8.0/a1dB67b90d378a4Bb1651B9b52BCEd565b203F53_AccountProxy.sol/a1dB67b90d378a4Bb1651B9b52BCEd565b203F53_AccountProxy.sol#6-40)",
        "elements": [],
        "description": "AccountProxy (../../smart-contract-sanctuary/ethereum/contracts/kovan/sorted/0.8.0/a1dB67b90d378a4Bb1651B9b52BCEd565b203F53_AccountProxy.sol/a1dB67b90d378a4Bb1651B9b52BCEd565b203F53_AccountProxy.sol#6-40) may be an upgradeable proxy.\n_opCodeAddress is declared in the proxy.\nAccountProxy.delegate(bytes4)._opCodeAddress (../../smart-contract-sanctuary/ethereum/contracts/kovan/sorted/0.8.0/a1dB67b90d378a4Bb1651B9b52BCEd565b203F53_AccountProxy.sol/a1dB67b90d378a4Bb1651B9b52BCEd565b203F53_AccountProxy.sol#28-29) gets value from a cross-contract call: OperationCenterInterface(opCenterAddress).getOpCodeAddress(_sig)\nOperationCenterInterface appears to be a Registry contract for the proxy\nThe address of OperationCenterInterface is stored as a state variable: AccountProxy.opCenterAddress\nCould not find setter for opCenterAddress\nMissing compatibility check in AccountProxy.receive()\nMissing compatibility check in AccountProxy.fallback()\nMissing compatibility check in AccountProxy.constructor(address)\n",
        "id": "7b8e10acc81a796038c76a1656571db778abe4b3229d4ddb57dece4028859741",
        "features": {
          "upgradeable": "maybe",
          "impl_address_variable": "AccountProxy.delegate(bytes4)._opCodeAddress",
          "impl_address_setter": "not found",
          "impl_address_getter": "not found",
          "impl_address_location": "AccountProxy (../../smart-contract-sanctuary/ethereum/contracts/kovan/sorted/0.8.0/a1dB67b90d378a4Bb1651B9b52BCEd565b203F53_AccountProxy.sol/a1dB67b90d378a4Bb1651B9b52BCEd565b203F53_AccountProxy.sol#6-40)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "OperationCenterInterface(opCenterAddress).getOpCodeAddress(_sig)",
          "registry": "OperationCenterInterface",
          "registry_source_type": "address",
          "registry_source_variable": "AccountProxy.opCenterAddress",
          "registry_source_constant": false,
          "registry_source_setters": "none found",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "AccountProxy.receive()": "missing",
              "AccountProxy.fallback()": "missing",
              "AccountProxy.constructor(address)": "missing"
            }
          },
          "can_remove_upgradeability": false
        }
      }
    ]
  }
}