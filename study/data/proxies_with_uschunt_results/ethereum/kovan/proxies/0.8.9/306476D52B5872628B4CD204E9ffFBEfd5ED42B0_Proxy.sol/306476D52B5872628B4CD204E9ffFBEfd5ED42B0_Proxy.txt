
Begin Proxy.is_proxy (Slither line:1425)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: success__doProxyCall_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0x0,calldatasize()(),0x0,0x0) (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2807)
Args:
gas()()
implementation
0x0
calldatasize()()
0x0
0x0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2814)

Destination is implementation (Slither line:2818)
dest.value: implementation (Slither line:2821)
Expression: _getImplementation() (Slither line:2826)

Begin Proxy.find_delegate_from_call_exp

_getImplementation() (Slither line:1993)
called = _getImplementation (Slither line:2000)
Return node of function Proxy._getImplementation(): RETURN implementation (Slither line:2031)
implementation (Slither line:2038)
_getImplementation returns a variable of type address   called implementation (Slither line:2183)
_getImplementation contains assembly - looking for sload (Slither line:2189)
Looking in EXPRESSION node (Slither line:2228)
Assignment operation: implementation = sload(uint256)(IMPLEMENTATION_KEY) (Slither line:2232)
Found implementation on left side of assignment (Slither line:2237)
Found storage slot: IMPLEMENTATION_KEY (Slither line:2246)

End Proxy.find_delegate_from_call_exp (Slither line:2318)


End Proxy.find_delegatecall_in_exp_node (Slither line:2848)

Setting Proxy._delegate_variable = Proxy._proxy_impl_slot: IMPLEMENTATION_KEY (Slither line:1473)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 
Call destination IMPLEMENTATION_KEY is constant (Slither line:1146)

IMPLEMENTATION_KEY is the implementation storage slot (Slither line:1149)

Proxy is delegating to IMPLEMENTATION_KEY
Looking for setter (Slither line:1200)


Begin Proxy.find_setter_in_contract (Slither line:3109)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3112)
Checking function: constructor(address) returns() (Slither line:3117)
Checking function: fallback() returns() (Slither line:3117)
Checking function: upgradeTo(address) returns() (Slither line:3117)
Visibility: external
implementation
owner = sload(uint256)(OWNER_KEY)
is an Assignment Operation (Slither line:3206)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
success__doProxyCall_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0x0,calldatasize()(),0x0,0x0)
is an Assignment Operation (Slither line:3206)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
implementation = sload(uint256)(IMPLEMENTATION_KEY)
is an Assignment Operation (Slither line:3206)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Upgraded(_implementation)
sstore(uint256,uint256)(IMPLEMENTATION_KEY,_implementation)
sstore(uint256,uint256)

End Proxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: upgradeTo in contract: Proxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin Proxy.find_getter_in_contract (Slither line:2964)

IMPLEMENTATION_KEY is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: constructor (Slither line:2978)
Checking function: fallback (Slither line:2978)
Checking function: upgradeTo (Slither line:2978)
Checking function: upgradeToAndCall (Slither line:2978)
upgradeToAndCall returns bytes variable  (Slither line:2998)
RETURN node expression: returndata (Slither line:3018)
Checking function: changeAdmin (Slither line:2978)
Checking function: admin (Slither line:2978)
admin returns address variable  (Slither line:2998)
RETURN node expression: _getAdmin() (Slither line:3018)
Checking function: implementation (Slither line:2978)
implementation returns address variable  (Slither line:2998)
RETURN node expression: _getImplementation() (Slither line:3018)
Checking function: _setImplementation (Slither line:2978)
Checking function: _getImplementation (Slither line:2978)
_getImplementation returns address variable  (Slither line:2998)
RETURN node expression: implementation (Slither line:3018)
_getImplementation contains assembly (Slither line:3041)
_getImplementation contains assembly (Slither line:3041)
_getImplementation contains assembly (Slither line:3041)

End Proxy.find_getter_in_contract (Slither line:3073)


Implementation retrieved by function: _getImplementation in contract: Proxy (Slither line:1285)

End Proxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: Proxy
Setter found in contract Proxy
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _getAdmin() || msg.sender == address(0)
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _getAdmin() || msg.sender == address(0)
Checking external function changeAdmin
Found 'msg.sender ==' in expression: msg.sender == _getAdmin() || msg.sender == address(0)
Checking external function admin
Found 'msg.sender ==' in expression: msg.sender == _getAdmin() || msg.sender == address(0)
Checking external function implementation
Found 'msg.sender ==' in expression: msg.sender == _getAdmin() || msg.sender == address(0)
Checking external function fallback
functions_writing_to_variable: IMPLEMENTATION_KEY
functions_writing_to_variable: checking function Proxy._setImplementation (proxy_features line:893)
get_value_assigned: sstore(uint256,uint256)(IMPLEMENTATION_KEY,_implementation)
functions_writing_to_variable: _setImplementation writes _implementation to IMPLEMENTATION_KEY using sstore (proxy_features line:993)
functions_writing_to_variable: checking function Proxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function Proxy._doProxyCall (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.admin (proxy_features line:893)
functions_writing_to_variable: checking function Proxy._getImplementation (proxy_features line:893)
functions_writing_to_variable: checking function Proxy._getAdmin (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: exp = IMPLEMENTATION_KEY = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_KEY = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:907)
functions_writing_to_variable: Identifier: IMPLEMENTATION_KEY (proxy_features line:919)
get_value_assigned: IMPLEMENTATION_KEY = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: exp = OWNER_KEY = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: OWNER_KEY = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:907)
functions_writing_to_variable: checking function Proxy.upgradeToAndCall (proxy_features line:893)
get_value_assigned: sstore(uint256,uint256)(IMPLEMENTATION_KEY,_implementation)
functions_writing_to_variable: upgradeToAndCall writes _implementation to IMPLEMENTATION_KEY using sstore (proxy_features line:993)
functions_writing_to_variable: checking function Proxy.changeAdmin (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.implementation (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function Proxy._changeAdmin (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.upgradeTo (proxy_features line:893)
get_value_assigned: sstore(uint256,uint256)(IMPLEMENTATION_KEY,_implementation)
functions_writing_to_variable: upgradeTo writes _implementation to IMPLEMENTATION_KEY using sstore (proxy_features line:993)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: checking external function upgradeToAndCall
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
has_compatibility_checks: IF node exp = ! success__doProxyCall_asm_0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0x0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0x0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if ! success__doProxyCall_asm_0 then revert(uint256,uint256)(0x0,returndatasize()()) else return(uint256,uint256)(0x0,returndatasize()())
require(bool,string)(implementation != address(0),Proxy: implementation not initialized)
has_compatibility_checks: condition implementation != address(0)
has_compatibility_checks: IF node exp = msg.sender == _getAdmin() || msg.sender == address(0)
has_compatibility_checks: checking external function upgradeTo
has_compatibility_checks: IF node exp = ! success__doProxyCall_asm_0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0x0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0x0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if ! success__doProxyCall_asm_0 then revert(uint256,uint256)(0x0,returndatasize()()) else return(uint256,uint256)(0x0,returndatasize()())
require(bool,string)(implementation != address(0),Proxy: implementation not initialized)
has_compatibility_checks: condition implementation != address(0)
has_compatibility_checks: IF node exp = msg.sender == _getAdmin() || msg.sender == address(0)
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool,string)(implementation != address(0),Proxy: implementation not initialized)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: implementation = _getImplementation()
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: success__doProxyCall_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0x0,calldatasize()(),0x0,0x0)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0x0,0x0,calldatasize()())
Found public function: constructor
Found fallback
Found external function: upgradeTo
has_time_delay: (node.type) RETURN
(Expression) implementation
has_time_delay: (node.type) EXPRESSION
(Expression) owner = sload(uint256)(OWNER_KEY)
has_time_delay: (node.type) EXPRESSION
(Expression) success__doProxyCall_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0x0,calldatasize()(),0x0,0x0)
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = sload(uint256)(IMPLEMENTATION_KEY)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(_implementation)
has_time_delay: (node.type) EXPRESSION
(Expression) sstore(uint256,uint256)(IMPLEMENTATION_KEY,_implementation)
has_time_delay: (node.type) EXPRESSION
(Expression) _doProxyCall()
has_time_delay: (node.type) EXPRESSION
(Expression) returndatacopy(uint256,uint256,uint256)(0x0,0x0,returndatasize()())
has_time_delay: (node.type) IF
(Expression) ! success__doProxyCall_asm_0
has_time_delay: (node.type) EXPRESSION
(Expression) return(uint256,uint256)(0x0,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) revert(uint256,uint256)(0x0,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(_implementation)
has_time_delay: (node.type) EXPRESSION
(Expression) proxyCallIfNotAdmin()
has_time_delay: (node.type) NEW VARIABLE
(Expression) implementation = _getImplementation()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(implementation != address(0),Proxy: implementation not initialized)
has_time_delay: (node.type) IF
(Expression) msg.sender == _getAdmin() || msg.sender == address(0)
has_time_delay: (node.type) RETURN
(Expression) owner
has_time_delay: (node.type) EXPRESSION
(Expression) calldatacopy(uint256,uint256,uint256)(0x0,0x0,calldatasize()())
