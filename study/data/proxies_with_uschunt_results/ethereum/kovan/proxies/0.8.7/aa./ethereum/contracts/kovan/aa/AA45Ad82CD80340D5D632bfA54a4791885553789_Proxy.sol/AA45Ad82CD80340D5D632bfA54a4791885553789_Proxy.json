{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/kovan/sorted/0.8.7/aa./ethereum/contracts/kovan/aa/AA45Ad82CD80340D5D632bfA54a4791885553789_Proxy.sol/AA45Ad82CD80340D5D632bfA54a4791885553789_Proxy.sol#4-113)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/kovan/sorted/0.8.7/aa./ethereum/contracts/kovan/aa/AA45Ad82CD80340D5D632bfA54a4791885553789_Proxy.sol/AA45Ad82CD80340D5D632bfA54a4791885553789_Proxy.sol#4-113) is an upgradeable proxy.\nIMPLEMENTATION_SLOT is declared in the proxy.\n uses Unstructured Storage\n uses non-standard slot: keccak256(bytes)(matic.network.proxy.implementation)\nFound compatibility checks in all upgrade functions.\n",
        "id": "ea36694485b7e4a9caf312dcdb3ed97e069761fc03b288022ae7dbae19ee9263",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "Proxy.IMPLEMENTATION_SLOT",
          "impl_address_setter": "Proxy.updateImplementation(address)",
          "impl_address_getter": "Proxy.loadImplementation()",
          "impl_address_location": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/kovan/sorted/0.8.7/aa./ethereum/contracts/kovan/aa/AA45Ad82CD80340D5D632bfA54a4791885553789_Proxy.sol/AA45Ad82CD80340D5D632bfA54a4791885553789_Proxy.sol#4-113)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "keccak256(bytes)(matic.network.proxy.implementation)",
          "unstructured_storage": true,
          "eip_1967": false,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "Proxy.updateAndCall(address,bytes)": {
                "check": "require(bool,string)(_newProxyTo != address(0x0),INVALID_PROXY_ADDRESS)",
                "is_correct": true
              },
              "Proxy.updateImplementation(address)": {
                "check": "require(bool,string)(_newProxyTo != address(0x0),INVALID_PROXY_ADDRESS)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "proxyOwner()",
              "implementation()",
              "transferProxyOwnership(address)",
              "updateImplementation(address)",
              "updateAndCall(address,bytes)"
            ]
          }
        }
      }
    ]
  }
}