
Begin PropertyProxy.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin PropertyProxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:2792)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2807)
Args:
0
0
returndatasize()()

End PropertyProxy.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin PropertyProxy.find_delegatecall_in_asm (Slither line:1541)


End PropertyProxy.find_delegatecall_in_asm (Slither line:1637)


Begin PropertyProxy.find_delegatecall_in_asm (Slither line:1541)


End PropertyProxy.find_delegatecall_in_asm (Slither line:1637)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin PropertyProxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_914_118_0_fallback_asm_0 = result_fallback_asm_0 (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)

End PropertyProxy.find_delegatecall_in_exp_node (Slither line:2848)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin PropertyProxy.find_delegatecall_in_exp_node

Found Expression Node: _impl = sload(uint256)(position) (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)
Expression called: sload(uint256)
Type of call: uint256 (Slither line:2807)
Args:
position

End PropertyProxy.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin PropertyProxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(_implementation != address(0x0),MISSING_IMPLEMENTATION) (Slither line:2792)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2807)
Args:
_implementation != address(0x0)
MISSING_IMPLEMENTATION

End PropertyProxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin PropertyProxy.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(0,returndatasize()()) (Slither line:2792)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2807)
Args:
0
returndatasize()()

End PropertyProxy.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin PropertyProxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called '_implementation'
Looking for corresponding Variable
Current function: fallback

Begin PropertyProxy.find_delegate_variable_from_name
Searching for _implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_SLOT (Slither line:1689)
Checking OWNER_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking _implementation (Slither line:1703)
_implementation is a Local Variable in PropertyProxy.fallback (Slither line:1707)
Expression: loadImplementation() (Slither line:1719)

Begin PropertyProxy.find_delegate_from_call_exp

loadImplementation() (Slither line:1993)
called = loadImplementation (Slither line:2000)
Return node of function PropertyProxy.loadImplementation(): RETURN _impl (Slither line:2031)
_impl (Slither line:2038)
loadImplementation returns a variable of type address   called _impl (Slither line:2183)
loadImplementation contains assembly - looking for sload (Slither line:2189)
Looking in EXPRESSION node (Slither line:2228)
Assignment operation: _impl = sload(uint256)(position) (Slither line:2232)
Found _impl on left side of assignment (Slither line:2237)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2252)

End PropertyProxy.find_delegate_from_call_exp (Slither line:2318)

Call Expression
End PropertyProxy.find_delegate_variable_by_name (Slither line:1739)


End PropertyProxy.find_delegatecall_in_asm (Slither line:1637)

Setting PropertyProxy._delegate_variable = PropertyProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End PropertyProxy.is_proxy (Slither line:1476)


Begin PropertyProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: PropertyProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

PropertyProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)


Begin PropertyProxy.find_setter_in_contract (Slither line:3109)

Expression: keccak256(bytes)(matic.network.proxy.implementation) (Slither line:3112)
Checking function: constructor() returns() (Slither line:3117)
Checking function: fallback() returns() (Slither line:3117)
Checking function: receive() returns() (Slither line:3117)
Checking function: proxyOwner() returns(address) (Slither line:3117)
Visibility: external
_owner
_owner = sload(uint256)(position)
is an Assignment Operation (Slither line:3206)
keccak256(bytes)(matic.network.proxy.implementation)
loadProxyOwner()
Checking function: loadProxyOwner() returns(address) (Slither line:3117)
Visibility: internal
Checking function: implementation() returns(address) (Slither line:3117)
Visibility: external
_impl = sload(uint256)(position)
is an Assignment Operation (Slither line:3206)
keccak256(bytes)(matic.network.proxy.implementation)
loadImplementation()
_impl
Checking function: loadImplementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: transferProxyOwnership(address) returns() (Slither line:3117)
Visibility: public
_owner
onlyProxyOwner()
require(bool,string)(newOwner != address(0),ZERO_ADDRESS)
_owner = sload(uint256)(position)
is an Assignment Operation (Slither line:3206)
keccak256(bytes)(matic.network.proxy.implementation)
ProxyOwnerUpdate(newOwner,loadProxyOwner())
sstore(uint256,uint256)(position,newOwner)
sstore(uint256,uint256)
require(bool,string)(loadProxyOwner() == msg.sender,NOT_OWNER)
setProxyOwner(newOwner)
Checking function: setProxyOwner(address) returns() (Slither line:3117)
Visibility: private
Checking function: updateImplementation(address) returns() (Slither line:3117)
Visibility: public
size = extcodesize(uint256)(_target)
is an Assignment Operation (Slither line:3206)
keccak256(bytes)(matic.network.proxy.implementation)
_impl
require(bool,string)(isContract(_newProxyTo),DESTINATION_ADDRESS_IS_NOT_A_CONTRACT)
_impl = sload(uint256)(position)
is an Assignment Operation (Slither line:3206)
keccak256(bytes)(matic.network.proxy.implementation)
ProxyUpdated(_newProxyTo,loadImplementation())
setImplementation(_newProxyTo)
require(bool,string)(loadProxyOwner() == msg.sender,NOT_OWNER)
onlyProxyOwner()
false
_owner
_owner = sload(uint256)(position)
is an Assignment Operation (Slither line:3206)
keccak256(bytes)(matic.network.proxy.implementation)
require(bool,string)(_newProxyTo != address(0x0),INVALID_PROXY_ADDRESS)
size > 0
sstore(uint256,uint256)(position,_newProxyTo)
sstore(uint256,uint256)

End PropertyProxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: updateImplementation in contract: PropertyProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin PropertyProxy.find_getter_in_contract (Slither line:2964)

IMPLEMENTATION_SLOT is a Variable object
keccak256(bytes)(matic.network.proxy.implementation)
Checking function: constructor (Slither line:2978)
Checking function: fallback (Slither line:2978)
Checking function: receive (Slither line:2978)
Checking function: proxyOwner (Slither line:2978)
proxyOwner returns address variable  (Slither line:2998)
RETURN node expression: loadProxyOwner() (Slither line:3018)
Checking function: loadProxyOwner (Slither line:2978)
loadProxyOwner returns address variable  (Slither line:2998)
loadProxyOwner contains assembly (Slither line:3041)
RETURN node expression: _owner (Slither line:3018)
loadProxyOwner contains assembly (Slither line:3041)
loadProxyOwner contains assembly (Slither line:3041)
loadProxyOwner contains assembly (Slither line:3041)
loadProxyOwner contains assembly (Slither line:3041)
loadProxyOwner contains assembly (Slither line:3041)
Checking function: implementation (Slither line:2978)
implementation returns address variable  (Slither line:2998)
RETURN node expression: loadImplementation() (Slither line:3018)
Checking function: loadImplementation (Slither line:2978)
loadImplementation returns address variable  (Slither line:2998)
loadImplementation contains assembly (Slither line:3041)
loadImplementation contains assembly (Slither line:3041)

End PropertyProxy.find_getter_in_contract (Slither line:3073)


Implementation retrieved by function: loadImplementation in contract: PropertyProxy (Slither line:1285)

End PropertyProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: PropertyProxy
Setter found in contract PropertyProxy
Checking external function proxyOwner
Checking external function implementation
Checking public function transferProxyOwnership
Checking public function updateImplementation
Checking public function updateAndCall
Checking external function fallback
Checking external function receive
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function PropertyProxy.updateImplementation (proxy_features line:893)
get_value_assigned: sstore(uint256,uint256)(position,_newProxyTo)
functions_writing_to_variable: updateImplementation writes _newProxyTo to IMPLEMENTATION_SLOT using sstore (proxy_features line:993)
functions_writing_to_variable: checking function PropertyProxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function PropertyProxy.setProxyOwner (proxy_features line:893)
functions_writing_to_variable: checking function PropertyProxy.transferProxyOwnership (proxy_features line:893)
functions_writing_to_variable: checking function PropertyProxy.loadProxyOwner (proxy_features line:893)
functions_writing_to_variable: checking function PropertyProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function PropertyProxy.proxyOwner (proxy_features line:893)
functions_writing_to_variable: checking function PropertyProxy.updateAndCall (proxy_features line:893)
get_value_assigned: sstore(uint256,uint256)(position,_newProxyTo)
functions_writing_to_variable: updateAndCall writes _newProxyTo to IMPLEMENTATION_SLOT using sstore (proxy_features line:993)
functions_writing_to_variable: checking function PropertyProxy.isContract (proxy_features line:893)
functions_writing_to_variable: checking function PropertyProxy.loadImplementation (proxy_features line:893)
functions_writing_to_variable: checking function PropertyProxy.setImplementation (proxy_features line:893)
get_value_assigned: sstore(uint256,uint256)(position,_newProxyTo)
functions_writing_to_variable: setImplementation writes _newProxyTo to IMPLEMENTATION_SLOT using sstore (proxy_features line:993)
functions_writing_to_variable: checking function PropertyProxy.receive (proxy_features line:893)
functions_writing_to_variable: checking function PropertyProxy.implementation (proxy_features line:893)
functions_writing_to_variable: checking function PropertyProxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = keccak256(bytes)(matic.network.proxy.implementation) (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = keccak256(bytes)(matic.network.proxy.implementation) (proxy_features line:907)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:919)
get_value_assigned: IMPLEMENTATION_SLOT = keccak256(bytes)(matic.network.proxy.implementation)
functions_writing_to_variable: exp = OWNER_SLOT = keccak256(bytes)(matic.network.proxy.owner) (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: OWNER_SLOT = keccak256(bytes)(matic.network.proxy.owner) (proxy_features line:907)
has_compatibility_checks: dependencies: []
has_compatibility_checks: checking public function updateImplementation
require(bool,string)(isContract(_newProxyTo),DESTINATION_ADDRESS_IS_NOT_A_CONTRACT)
has_compatibility_checks: condition isContract(_newProxyTo)
check_condition_from_expression: modifier calls: ['onlyProxyOwner()']
has_compatibility_checks: IF node exp = _target == address(0)
require(bool,string)(loadProxyOwner() == msg.sender,NOT_OWNER)
has_compatibility_checks: condition loadProxyOwner() == msg.sender
require(bool,string)(_newProxyTo != address(0x0),INVALID_PROXY_ADDRESS)
has_compatibility_checks: condition _newProxyTo != address(0x0)
check_condition_from_expression: modifier calls: ['onlyProxyOwner()']
check_condition_from_expression: condition _newProxyTo != address(0x0)
has_compatibility_checks: checking public function updateAndCall
require(bool,string)(success,string(returnData))
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(isContract(_newProxyTo),DESTINATION_ADDRESS_IS_NOT_A_CONTRACT)
has_compatibility_checks: condition isContract(_newProxyTo)
check_condition_from_expression: modifier calls: ['onlyProxyOwner()']
has_compatibility_checks: IF node exp = _target == address(0)
require(bool,string)(loadProxyOwner() == msg.sender,NOT_OWNER)
has_compatibility_checks: condition loadProxyOwner() == msg.sender
require(bool,string)(_newProxyTo != address(0x0),INVALID_PROXY_ADDRESS)
has_compatibility_checks: condition _newProxyTo != address(0x0)
check_condition_from_expression: modifier calls: ['onlyProxyOwner()']
check_condition_from_expression: condition _newProxyTo != address(0x0)
has_compatibility_checks: skipping private function setImplementation
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool,string)(_implementation != address(0x0),MISSING_IMPLEMENTATION)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_implementation,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: _implementation = loadImplementation()
Found public function: constructor
Found fallback
Found external function: receive
Found external function: proxyOwner
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(_target)
has_time_delay: (node.type) RETURN
(Expression) _impl
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(isContract(_newProxyTo),DESTINATION_ADDRESS_IS_NOT_A_CONTRACT)
has_time_delay: (node.type) EXPRESSION
(Expression) _impl = sload(uint256)(position)
has_time_delay: (node.type) IF
(Expression) _target == address(0)
has_time_delay: (node.type) EXPRESSION
(Expression) ProxyUpdated(_newProxyTo,loadImplementation())
has_time_delay: (node.type) EXPRESSION
(Expression) setImplementation(_newProxyTo)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(loadProxyOwner() == msg.sender,NOT_OWNER)
has_time_delay: (node.type) EXPRESSION
(Expression) onlyProxyOwner()
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = OWNER_SLOT
has_time_delay: (node.type) RETURN
(Expression) false
has_time_delay: (node.type) RETURN
(Expression) _owner
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) _owner = sload(uint256)(position)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(_newProxyTo != address(0x0),INVALID_PROXY_ADDRESS)
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) sstore(uint256,uint256)(position,_newProxyTo)
