{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "LockExchangeDelegator (../../smart-contract-sanctuary/ethereum/contracts/kovan/sorted/0.6.0/12ddad161c32fcf18dc35c5d166a79ec0280562e_LockExchangeDelegator.sol/12ddad161c32fcf18dc35c5d166a79ec0280562e_LockExchangeDelegator.sol#80-167)",
        "elements": [],
        "description": "LockExchangeDelegator (../../smart-contract-sanctuary/ethereum/contracts/kovan/sorted/0.6.0/12ddad161c32fcf18dc35c5d166a79ec0280562e_LockExchangeDelegator.sol/12ddad161c32fcf18dc35c5d166a79ec0280562e_LockExchangeDelegator.sol#80-167) is an upgradeable proxy.\nimplementation was found in a different contract.\nimplementation is an address state variable.\nMissing compatibility check in LockExchangeDelegator.constructor(address,address,uint256,uint256,uint256,uint256,address)\nMissing compatibility check in LockExchangeDelegator._setImplementation(address)\n",
        "id": "4addf13ce572f56ee28a57c4ce6bc6d9258e5ef4bf2691556b41484899ac30c4",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "LockExchangeAdminStorage.implementation",
          "impl_address_setter": "LockExchangeDelegator._setImplementation(address)",
          "impl_address_getter": "not found",
          "impl_address_location": "LockExchangeAdminStorage (../../smart-contract-sanctuary/ethereum/contracts/kovan/sorted/0.6.0/12ddad161c32fcf18dc35c5d166a79ec0280562e_LockExchangeDelegator.sol/12ddad161c32fcf18dc35c5d166a79ec0280562e_LockExchangeDelegator.sol#74-77)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "LockExchangeDelegator.constructor(address,address,uint256,uint256,uint256,uint256,address)": "missing",
              "LockExchangeDelegator._setImplementation(address)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "owner()",
              "renounceOwnership()",
              "transferOwnership(address)",
              "_setImplementation(address)",
              "_setAdmin(address)"
            ]
          }
        }
      }
    ]
  }
}