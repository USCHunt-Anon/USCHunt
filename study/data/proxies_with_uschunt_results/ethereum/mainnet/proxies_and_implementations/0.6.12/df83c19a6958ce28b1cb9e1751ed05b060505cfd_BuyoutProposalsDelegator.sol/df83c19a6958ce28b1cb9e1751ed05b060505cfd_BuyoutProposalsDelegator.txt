
Begin DelegationStorage.is_proxy (Slither line:1425)


End DelegationStorage.is_proxy (Slither line:1428)


Begin DelegationStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: DelegationStorage 

End DelegationStorage.is_upgradeable_proxy (Slither line:1407)


Begin IBuyoutProposalsStorge.is_proxy (Slither line:1425)


End IBuyoutProposalsStorge.is_proxy (Slither line:1428)


Begin IBuyoutProposalsStorge.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBuyoutProposalsStorge 

End IBuyoutProposalsStorge.is_upgradeable_proxy (Slither line:1407)


Begin IBuyoutProposals.is_proxy (Slither line:1425)


End IBuyoutProposals.is_proxy (Slither line:1428)


Begin IBuyoutProposals.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBuyoutProposals 

End IBuyoutProposals.is_upgradeable_proxy (Slither line:1407)


Begin BuyoutProposalsDelegator.is_proxy (Slither line:1425)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BuyoutProposalsDelegator.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_11645_219_0_fallback_asm_0 = success (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)

End BuyoutProposalsDelegator.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin BuyoutProposalsDelegator.find_delegatecall_in_asm (Slither line:1541)


End BuyoutProposalsDelegator.find_delegatecall_in_asm (Slither line:1637)


Begin BuyoutProposalsDelegator.find_delegatecall_in_asm (Slither line:1541)


End BuyoutProposalsDelegator.find_delegatecall_in_asm (Slither line:1637)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


Found LowLevelCall (Slither line:2740)


Found delegatecall in LowLevelCall (Slither line:2742)


End Contract.find_delegatecall_in_ir (Slither line:2773)


End BuyoutProposalsDelegator.is_proxy (Slither line:1476)


Begin BuyoutProposalsDelegator.is_upgradeable_proxy (Slither line:1136)

Checking contract: BuyoutProposalsDelegator 
BuyoutProposalsDelegator is delegating to implementation
Looking for setter (Slither line:1200)

Looking for setter in DelegationStorage (Slither line:1204)


Begin DelegationStorage.find_setter_in_contract (Slither line:3119)


End DelegationStorage.find_setter_in_contract (Slither line:3345)


Could not find setter in DelegationStorage 
Looking in BuyoutProposalsDelegator (Slither line:1213)

Begin BuyoutProposalsDelegator.find_setter_in_contract (Slither line:3119)

Checking function: constructor(address,address,address) returns() (Slither line:3127)
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: public
require(bool,string)(msg.sender == governance,_setImplementation: Caller must be governance)
NewImplementation(oldImplementation,implementation)
implementation = implementation_
is an Assignment Operation (Slither line:3216)

End BuyoutProposalsDelegator.find_setter_in_contract (Slither line:3345)


Implementation set by function: _setImplementation in contract: BuyoutProposalsDelegator (Slither line:1264)
Looking for getter (Slither line:1273)


Begin DelegationStorage.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_

End DelegationStorage.find_getter_in_contract (Slither line:3083)


Begin BuyoutProposalsDelegator.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_
Checking function: constructor (Slither line:2988)
Checking function: _setImplementation (Slither line:2988)
Checking function: _setGovernance (Slither line:2988)
Checking function: createProposal (Slither line:2988)
createProposal returns uint256 variable called proposalId (Slither line:3008)
createProposal returns uint256 variable called buyoutTimes (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256,uint256)) (Slither line:3028)
Checking function: vote (Slither line:2988)
vote returns uint256 variable called proposalId (Slither line:3008)
vote returns uint256 variable called balance (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256,uint256)) (Slither line:3028)
Checking function: voteResultConfirm (Slither line:2988)
voteResultConfirm returns uint256 variable called proposalId (Slither line:3008)
voteResultConfirm returns bool variable called result (Slither line:3008)
voteResultConfirm returns address variable called submitter (Slither line:3008)
voteResultConfirm returns uint256 variable called shardAmount (Slither line:3008)
voteResultConfirm returns uint256 variable called wantTokenAmount (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256,bool,address,uint256,uint256)) (Slither line:3028)
Checking function: exchangeForWantToken (Slither line:2988)
exchangeForWantToken returns uint256 variable called wantTokenAmount (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: redeemForBuyoutFailed (Slither line:2988)
redeemForBuyoutFailed returns uint256 variable called _shardPoolId (Slither line:3008)
redeemForBuyoutFailed returns uint256 variable called shardTokenAmount (Slither line:3008)
redeemForBuyoutFailed returns uint256 variable called wantTokenAmount (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256,uint256,uint256)) (Slither line:3028)
Checking function: setBuyoutTimes (Slither line:2988)
Checking function: setVoteLenth (Slither line:2988)
Checking function: setPassNeeded (Slither line:2988)
Checking function: setBuyoutProportion (Slither line:2988)
Checking function: setMarket (Slither line:2988)
Checking function: setRegulator (Slither line:2988)
Checking function: getProposalsForExactPool (Slither line:2988)
getProposalsForExactPool returns uint256[] variable called _proposalsHistory (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256[])) (Slither line:3028)
Checking function: delegateTo (Slither line:2988)
delegateTo returns bytes variable  (Slither line:3008)
RETURN node expression: returnData (Slither line:3028)
Checking function: delegateToImplementation (Slither line:2988)
delegateToImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: delegateTo(implementation,data) (Slither line:3028)
Checking function: delegateToViewImplementation (Slither line:2988)
delegateToViewImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: abi.decode(returnData,(bytes)) (Slither line:3028)
Checking function: receive (Slither line:2988)
Checking function: fallback (Slither line:2988)
Checking function: slitherConstructorVariables (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End BuyoutProposalsDelegator.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in BuyoutProposalsDelegator (Slither line:1305)
or in DelegationStorage (Slither line:1319)

Begin IBuyoutProposalsStorge.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_
Checking function: slitherConstructorVariables (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End IBuyoutProposalsStorge.find_getter_in_contract (Slither line:3083)


End BuyoutProposalsDelegator.is_upgradeable_proxy (Slither line:1332)

impl_address_from_contract_call: implementation_
impl_address_from_contract_call: StateVariable implementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression implementation.delegatecall(msg.data)
impl_address_from_contract_call: CallExpression returndatacopy(uint256,uint256,uint256)(free_mem_ptr_fallback_asm_0,0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_fallback_asm_0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression mload(uint256)(0x40)
impl_address_from_contract_call: arg is 0x40
impl_address_from_contract_call: CallExpression revert(uint256,uint256)(free_mem_ptr_fallback_asm_0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_fallback_asm_0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression return(uint256,uint256)(free_mem_ptr_fallback_asm_0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_fallback_asm_0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
Checking external function createProposal
Checking external function vote
Checking external function voteResultConfirm
Checking external function exchangeForWantToken
Checking external function redeemForBuyoutFailed
Checking external function setBuyoutTimes
Checking external function setVoteLenth
Checking external function setPassNeeded
Checking external function setBuyoutProportion
Checking external function setMarket
Checking external function setRegulator
Checking external function getProposalsForExactPool
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == governance,_setImplementation: Caller must be governance)
Checking public function _setGovernance
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == governance,UNAUTHORIZED)
Checking external function createProposal
Checking external function vote
Checking external function voteResultConfirm
Checking external function exchangeForWantToken
Checking external function redeemForBuyoutFailed
Checking external function setBuyoutTimes
Checking external function setVoteLenth
Checking external function setPassNeeded
Checking external function setBuyoutProportion
Checking external function setMarket
Checking external function setRegulator
Checking external function getProposalsForExactPool
Checking public function delegateToImplementation
Checking public function delegateToViewImplementation
Checking external function receive
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function BuyoutProposalsDelegator.delegateToImplementation (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.createProposal (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.createProposal (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.setPassNeeded (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.redeemForBuyoutFailed (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.setRegulator (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.vote (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.setVoteLenth (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.delegateToViewImplementation (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.setBuyoutProportion (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.voteResultConfirm (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.receive (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.getProposalsForExactPool (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.setMarket (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.exchangeForWantToken (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.setPassNeeded (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.exchangeForWantToken (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.fallback (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.setBuyoutTimes (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.setRegulator (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.constructor (proxy_features line:898)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: constructor writes implementation_ to implementation (proxy_features line:1013)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.redeemForBuyoutFailed (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.voteResultConfirm (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.setBuyoutProportion (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.getProposalsForExactPool (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.vote (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator._setImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == governance,_setImplementation: Caller must be governance) (proxy_features line:909)
functions_writing_to_variable: exp = oldImplementation = implementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = implementation (proxy_features line:912)
functions_writing_to_variable: exp = implementation = implementation_ (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = implementation_ (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: exp = NewImplementation(oldImplementation,implementation) (proxy_features line:909)
functions_writing_to_variable: _setImplementation writes implementation_ to implementation (proxy_features line:929)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.setBuyoutTimes (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.slitherConstructorVariables (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.delegateTo (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator._setGovernance (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.setMarket (proxy_features line:898)
functions_writing_to_variable: checking function BuyoutProposalsDelegator.setVoteLenth (proxy_features line:898)
has_compatibility_checks: dependencies: ['implementation_', 'implementation_']
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking public function _setImplementation
require(bool,string)(msg.sender == governance,_setImplementation: Caller must be governance)
has_compatibility_checks: condition msg.sender == governance
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: (success) = implementation.delegatecall(msg.data)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found external function: createProposal
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == governance,_setImplementation: Caller must be governance)
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,implementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = implementation
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = implementation_

Begin IMarketRegulator.is_proxy (Slither line:1425)


End IMarketRegulator.is_proxy (Slither line:1428)


Begin IMarketRegulator.is_upgradeable_proxy (Slither line:1136)

Checking contract: IMarketRegulator 

End IMarketRegulator.is_upgradeable_proxy (Slither line:1407)


Begin IShardToken.is_proxy (Slither line:1425)


End IShardToken.is_proxy (Slither line:1428)


Begin IShardToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: IShardToken 

End IShardToken.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin BuyoutProposals.is_proxy (Slither line:1425)


End BuyoutProposals.is_proxy (Slither line:1428)


Begin BuyoutProposals.is_upgradeable_proxy (Slither line:1136)

Checking contract: BuyoutProposals 

End BuyoutProposals.is_upgradeable_proxy (Slither line:1407)


Begin BuyoutProposalsDelegate.is_proxy (Slither line:1425)


End BuyoutProposalsDelegate.is_proxy (Slither line:1428)


Begin BuyoutProposalsDelegate.is_upgradeable_proxy (Slither line:1136)

Checking contract: BuyoutProposalsDelegate 

End BuyoutProposalsDelegate.is_upgradeable_proxy (Slither line:1407)

