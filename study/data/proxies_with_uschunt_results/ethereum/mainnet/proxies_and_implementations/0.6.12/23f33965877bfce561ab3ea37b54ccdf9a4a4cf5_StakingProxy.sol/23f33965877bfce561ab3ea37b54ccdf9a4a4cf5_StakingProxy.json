{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.6.12/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol#35-93)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.6.12/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol#35-93) is a proxy, but doesn't seem upgradeable.\n",
        "id": "cb70bcec6d81585d7521ef499de1dc4cc025c9eb09a62b94cfe4ec81796afff6",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "UpgradeableCustomProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.6.12/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol#104-161)",
        "elements": [],
        "description": "UpgradeableCustomProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.6.12/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol#104-161) may be an upgradeable proxy.\nimpl is declared in the proxy.\nUpgradeableCustomProxy._implementation().impl (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.6.12/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol#130) gets value from a cross-contract call: ImplementationGetter(storage_address).getImplementationAddress()\nImplementationGetter appears to be a Beacon contract for the proxy\nThe address of ImplementationGetter is loaded from storage slot _IMPLEMENTATION_STORAGE_SLOT = 0x32966ed17b28d3117e87cb2c15a847a3829937667aa3286f41cf85a257e10460\nMissing compatibility check in Proxy.fallback()\nMissing compatibility check in Proxy.receive()\n",
        "id": "c0e5e4807322e440b924d0ddbf78dc813fd8e7d36759dd2f300458023d764fac",
        "features": {
          "upgradeable": "maybe",
          "impl_address_variable": "UpgradeableCustomProxy._implementation().impl",
          "impl_address_setter": "not found",
          "impl_address_getter": "not found",
          "impl_address_location": "UpgradeableCustomProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.6.12/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol#104-161)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "ImplementationGetter(storage_address).getImplementationAddress()",
          "beacon": "ImplementationGetter",
          "beacon_source_type": "bytes32 constant storage slot",
          "beacon_source_slot": "0x32966ed17b28d3117e87cb2c15a847a3829937667aa3286f41cf85a257e10460",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "Proxy.fallback()": "missing",
              "Proxy.receive()": "missing"
            }
          },
          "can_remove_upgradeability": false
        }
      },
      {
        "contract": "TransparentUpgradeableCustomProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.6.12/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol#184-303)",
        "elements": [],
        "description": "TransparentUpgradeableCustomProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.6.12/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol#184-303) may be an upgradeable proxy.\nimpl is declared in the proxy.\nUpgradeableCustomProxy._implementation().impl (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.6.12/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol#130) gets value from a cross-contract call: ImplementationGetter(storage_address).getImplementationAddress()\nImplementationGetter appears to be a Beacon contract for the proxy\nThe address of ImplementationGetter is loaded from storage slot _IMPLEMENTATION_STORAGE_SLOT = 0x32966ed17b28d3117e87cb2c15a847a3829937667aa3286f41cf85a257e10460\nMissing compatibility check in TransparentUpgradeableCustomProxy.upgradeStorageTo(address)\nMissing compatibility check in TransparentUpgradeableCustomProxy.upgradeStorageToAndCall(address,bytes)\nMissing compatibility check in TransparentUpgradeableCustomProxy.admin()\nMissing compatibility check in TransparentUpgradeableCustomProxy.initialize(address,address,bytes)\nMissing compatibility check in TransparentUpgradeableCustomProxy.implementation()\nMissing compatibility check in Proxy.fallback()\nMissing compatibility check in TransparentUpgradeableCustomProxy.changeAdmin(address)\nMissing compatibility check in Proxy.receive()\n",
        "id": "9cc5651ea0bb0a5155166408433580d600d526364c9cff8f9a2173596d9c6fa5",
        "features": {
          "upgradeable": "maybe",
          "impl_address_variable": "UpgradeableCustomProxy._implementation().impl",
          "impl_address_setter": "not found",
          "impl_address_getter": "not found",
          "impl_address_location": "TransparentUpgradeableCustomProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.6.12/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol#184-303)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "ImplementationGetter(storage_address).getImplementationAddress()",
          "beacon": "ImplementationGetter",
          "beacon_source_type": "bytes32 constant storage slot",
          "beacon_source_slot": "0x32966ed17b28d3117e87cb2c15a847a3829937667aa3286f41cf85a257e10460",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "TransparentUpgradeableCustomProxy.upgradeStorageTo(address)": "missing",
              "TransparentUpgradeableCustomProxy.upgradeStorageToAndCall(address,bytes)": "missing",
              "TransparentUpgradeableCustomProxy.admin()": "missing",
              "TransparentUpgradeableCustomProxy.initialize(address,address,bytes)": "missing",
              "TransparentUpgradeableCustomProxy.implementation()": "missing",
              "Proxy.fallback()": "missing",
              "TransparentUpgradeableCustomProxy.changeAdmin(address)": "missing",
              "Proxy.receive()": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "initialize(address,address,bytes)",
              "upgradeStorageTo(address)",
              "upgradeStorageToAndCall(address,bytes)",
              "changeAdmin(address)",
              "admin()",
              "implementation()",
              "admin()",
              "initialize(address,address,bytes)",
              "implementation()",
              "changeAdmin(address)",
              "upgradeStorageTo(address)",
              "upgradeStorageToAndCall(address,bytes)"
            ]
          }
        }
      },
      {
        "contract": "StakingProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.6.12/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol#317-320)",
        "elements": [],
        "description": "StakingProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.6.12/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol#317-320) may be an upgradeable proxy.\nimpl is declared in the proxy.\nUpgradeableCustomProxy._implementation().impl (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.6.12/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol#130) gets value from a cross-contract call: ImplementationGetter(storage_address).getImplementationAddress()\nImplementationGetter appears to be a Beacon contract for the proxy\nThe address of ImplementationGetter is loaded from storage slot _IMPLEMENTATION_STORAGE_SLOT = 0x32966ed17b28d3117e87cb2c15a847a3829937667aa3286f41cf85a257e10460\nMissing compatibility check in TransparentUpgradeableCustomProxy.implementation()\nMissing compatibility check in Proxy.fallback()\nMissing compatibility check in Proxy.receive()\nMissing compatibility check in TransparentUpgradeableCustomProxy.changeAdmin(address)\nMissing compatibility check in TransparentUpgradeableCustomProxy.admin()\nMissing compatibility check in TransparentUpgradeableCustomProxy.upgradeStorageTo(address)\nMissing compatibility check in TransparentUpgradeableCustomProxy.initialize(address,address,bytes)\nMissing compatibility check in TransparentUpgradeableCustomProxy.upgradeStorageToAndCall(address,bytes)\n",
        "id": "e5036011d137a918c08e6bb50998551eb0efe1a7b28443354eb920c15d8f808f",
        "features": {
          "upgradeable": "maybe",
          "impl_address_variable": "UpgradeableCustomProxy._implementation().impl",
          "impl_address_setter": "not found",
          "impl_address_getter": "not found",
          "impl_address_location": "StakingProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.6.12/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol/23f33965877bfce561ab3ea37b54ccdf9a4a4cf5_StakingProxy.sol#317-320)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "ImplementationGetter(storage_address).getImplementationAddress()",
          "beacon": "ImplementationGetter",
          "beacon_source_type": "bytes32 constant storage slot",
          "beacon_source_slot": "0x32966ed17b28d3117e87cb2c15a847a3829937667aa3286f41cf85a257e10460",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "TransparentUpgradeableCustomProxy.implementation()": "missing",
              "Proxy.fallback()": "missing",
              "Proxy.receive()": "missing",
              "TransparentUpgradeableCustomProxy.changeAdmin(address)": "missing",
              "TransparentUpgradeableCustomProxy.admin()": "missing",
              "TransparentUpgradeableCustomProxy.upgradeStorageTo(address)": "missing",
              "TransparentUpgradeableCustomProxy.initialize(address,address,bytes)": "missing",
              "TransparentUpgradeableCustomProxy.upgradeStorageToAndCall(address,bytes)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "admin()",
              "initialize(address,address,bytes)",
              "implementation()",
              "changeAdmin(address)",
              "upgradeStorageTo(address)",
              "upgradeStorageToAndCall(address,bytes)",
              "initialize(address,address,bytes)",
              "upgradeStorageTo(address)",
              "upgradeStorageToAndCall(address,bytes)",
              "changeAdmin(address)",
              "admin()",
              "implementation()"
            ]
          }
        }
      }
    ]
  }
}