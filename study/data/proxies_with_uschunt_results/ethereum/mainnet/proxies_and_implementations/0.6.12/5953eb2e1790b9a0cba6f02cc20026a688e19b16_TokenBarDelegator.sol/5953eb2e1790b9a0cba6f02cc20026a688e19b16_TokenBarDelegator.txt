
Begin TokenBarAdminStorage.is_proxy (Slither line:1425)


End TokenBarAdminStorage.is_proxy (Slither line:1428)


Begin TokenBarAdminStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenBarAdminStorage 

End TokenBarAdminStorage.is_upgradeable_proxy (Slither line:1407)


Begin xSHDStorage.is_proxy (Slither line:1425)


End xSHDStorage.is_proxy (Slither line:1428)


Begin xSHDStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: xSHDStorage 

End xSHDStorage.is_upgradeable_proxy (Slither line:1407)


Begin ITokenBarStorge.is_proxy (Slither line:1425)


End ITokenBarStorge.is_proxy (Slither line:1428)


Begin ITokenBarStorge.is_upgradeable_proxy (Slither line:1136)

Checking contract: ITokenBarStorge 

End ITokenBarStorge.is_upgradeable_proxy (Slither line:1407)


Begin TokenBarDelegator.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin TokenBarDelegator.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(free_mem_ptr_fallback_asm_0,returndatasize()()) (Slither line:2802)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
free_mem_ptr_fallback_asm_0
returndatasize()()

End TokenBarDelegator.find_delegatecall_in_exp_node (Slither line:2858)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin TokenBarDelegator.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_3777_219_0_fallback_asm_0 = success (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)

End TokenBarDelegator.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin TokenBarDelegator.find_delegatecall_in_asm (Slither line:1541)


End TokenBarDelegator.find_delegatecall_in_asm (Slither line:1637)


Begin TokenBarDelegator.find_delegatecall_in_asm (Slither line:1541)


End TokenBarDelegator.find_delegatecall_in_asm (Slither line:1637)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


Found LowLevelCall (Slither line:2740)


Found delegatecall in LowLevelCall (Slither line:2742)


End Contract.find_delegatecall_in_ir (Slither line:2773)


End TokenBarDelegator.is_proxy (Slither line:1476)


Begin TokenBarDelegator.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenBarDelegator 
TokenBarDelegator is delegating to implementation
Looking for setter (Slither line:1200)

Looking for setter in TokenBarAdminStorage (Slither line:1204)


Begin TokenBarAdminStorage.find_setter_in_contract (Slither line:3119)


End TokenBarAdminStorage.find_setter_in_contract (Slither line:3345)


Could not find setter in TokenBarAdminStorage 
Looking in TokenBarDelegator (Slither line:1213)

Begin TokenBarDelegator.find_setter_in_contract (Slither line:3119)

Checking function: constructor(address,address,address,address,address) returns() (Slither line:3127)
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: public
require(bool,string)(msg.sender == governance,_setImplementation: Caller must be governance)
NewImplementation(oldImplementation,implementation)
implementation = implementation_
is an Assignment Operation (Slither line:3216)

End TokenBarDelegator.find_setter_in_contract (Slither line:3345)


Implementation set by function: _setImplementation in contract: TokenBarDelegator (Slither line:1264)
Looking for getter (Slither line:1273)


Begin TokenBarAdminStorage.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_

End TokenBarAdminStorage.find_getter_in_contract (Slither line:3083)


Begin TokenBarDelegator.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_
Checking function: constructor (Slither line:2988)
Checking function: _setImplementation (Slither line:2988)
Checking function: _setAdmin (Slither line:2988)
Checking function: _setGovernance (Slither line:2988)
Checking function: delegateTo (Slither line:2988)
delegateTo returns bytes variable  (Slither line:3008)
RETURN node expression: returnData (Slither line:3028)
Checking function: receive (Slither line:2988)
Checking function: fallback (Slither line:2988)
Checking function: slitherConstructorVariables (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End TokenBarDelegator.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in TokenBarDelegator (Slither line:1305)
or in TokenBarAdminStorage (Slither line:1319)

Begin ITokenBarStorge.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_
Checking function: slitherConstructorVariables (Slither line:2988)

End ITokenBarStorge.find_getter_in_contract (Slither line:3083)


End TokenBarDelegator.is_upgradeable_proxy (Slither line:1332)

impl_address_from_contract_call: implementation_
impl_address_from_contract_call: StateVariable implementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression return(uint256,uint256)(free_mem_ptr_fallback_asm_0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_fallback_asm_0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression implementation.delegatecall(msg.data)
impl_address_from_contract_call: CallExpression returndatacopy(uint256,uint256,uint256)(free_mem_ptr_fallback_asm_0,0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_fallback_asm_0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression revert(uint256,uint256)(free_mem_ptr_fallback_asm_0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_fallback_asm_0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression mload(uint256)(0x40)
impl_address_from_contract_call: arg is 0x40
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == governance,_setImplementation: Caller must be governance)
Checking public function _setAdmin
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,UNAUTHORIZED)
Checking public function _setGovernance
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == governance,UNAUTHORIZED)
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == governance,_setImplementation: Caller must be governance)
Checking public function _setAdmin
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,UNAUTHORIZED)
Checking public function _setGovernance
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == governance,UNAUTHORIZED)
Checking external function receive
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function TokenBarDelegator._setImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == governance,_setImplementation: Caller must be governance) (proxy_features line:909)
functions_writing_to_variable: exp = oldImplementation = implementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = implementation (proxy_features line:912)
functions_writing_to_variable: exp = implementation = implementation_ (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = implementation_ (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: exp = NewImplementation(oldImplementation,implementation) (proxy_features line:909)
functions_writing_to_variable: _setImplementation writes implementation_ to implementation (proxy_features line:929)
functions_writing_to_variable: checking function TokenBarDelegator._setGovernance (proxy_features line:898)
functions_writing_to_variable: checking function TokenBarDelegator.receive (proxy_features line:898)
functions_writing_to_variable: checking function TokenBarDelegator.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function TokenBarDelegator.constructor (proxy_features line:898)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: constructor writes implementation_ to implementation (proxy_features line:1013)
functions_writing_to_variable: checking function TokenBarDelegator._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function TokenBarDelegator.slitherConstructorVariables (proxy_features line:898)
functions_writing_to_variable: checking function TokenBarDelegator.delegateTo (proxy_features line:898)
functions_writing_to_variable: checking function TokenBarDelegator.fallback (proxy_features line:898)
has_compatibility_checks: dependencies: ['implementation_', 'implementation_']
has_compatibility_checks: checking public function _setImplementation
require(bool,string)(msg.sender == governance,_setImplementation: Caller must be governance)
has_compatibility_checks: condition msg.sender == governance
has_compatibility_checks: skipping constructor
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: (success) = implementation.delegatecall(msg.data)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: constructor
Found public function: _setImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == governance,_setImplementation: Caller must be governance)
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,implementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = implementation
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = implementation_

Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin IERC20.is_proxy (Slither line:1425)


End IERC20.is_proxy (Slither line:1428)


Begin IERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20 

End IERC20.is_upgradeable_proxy (Slither line:1407)


Begin xSHDToken.is_proxy (Slither line:1425)


End xSHDToken.is_proxy (Slither line:1428)


Begin xSHDToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: xSHDToken 

End xSHDToken.is_upgradeable_proxy (Slither line:1407)


Begin IUniswapV2Router01.is_proxy (Slither line:1425)


End IUniswapV2Router01.is_proxy (Slither line:1428)


Begin IUniswapV2Router01.is_upgradeable_proxy (Slither line:1136)

Checking contract: IUniswapV2Router01 

End IUniswapV2Router01.is_upgradeable_proxy (Slither line:1407)


Begin IUniswapV2Router02.is_proxy (Slither line:1425)


End IUniswapV2Router02.is_proxy (Slither line:1428)


Begin IUniswapV2Router02.is_upgradeable_proxy (Slither line:1136)

Checking contract: IUniswapV2Router02 

End IUniswapV2Router02.is_upgradeable_proxy (Slither line:1407)


Begin IMarketRegulator.is_proxy (Slither line:1425)


End IMarketRegulator.is_proxy (Slither line:1428)


Begin IMarketRegulator.is_upgradeable_proxy (Slither line:1136)

Checking contract: IMarketRegulator 

End IMarketRegulator.is_upgradeable_proxy (Slither line:1407)


Begin TokenBarDelegate.is_proxy (Slither line:1425)


End TokenBarDelegate.is_proxy (Slither line:1428)


Begin TokenBarDelegate.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenBarDelegate 

End TokenBarDelegate.is_upgradeable_proxy (Slither line:1407)

