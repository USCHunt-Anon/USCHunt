
Begin ERC721TokenReceiver.is_proxy (Slither line:1425)


End ERC721TokenReceiver.is_proxy (Slither line:1428)


Begin ERC721TokenReceiver.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC721TokenReceiver 

End ERC721TokenReceiver.is_upgradeable_proxy (Slither line:1407)


Begin ERC721.is_proxy (Slither line:1425)


End ERC721.is_proxy (Slither line:1428)


Begin ERC721.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC721 

End ERC721.is_upgradeable_proxy (Slither line:1407)


Begin ERC20AndERC223.is_proxy (Slither line:1425)


End ERC20AndERC223.is_proxy (Slither line:1428)


Begin ERC20AndERC223.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20AndERC223 

End ERC20AndERC223.is_upgradeable_proxy (Slither line:1407)


Begin ERC998ERC721BottomUp.is_proxy (Slither line:1425)


End ERC998ERC721BottomUp.is_proxy (Slither line:1428)


Begin ERC998ERC721BottomUp.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC998ERC721BottomUp 

End ERC998ERC721BottomUp.is_upgradeable_proxy (Slither line:1407)


Begin AbstractMokens.is_proxy (Slither line:1425)


End AbstractMokens.is_proxy (Slither line:1428)


Begin AbstractMokens.is_upgradeable_proxy (Slither line:1136)

Checking contract: AbstractMokens 

End AbstractMokens.is_upgradeable_proxy (Slither line:1407)


Begin Mokens.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin Mokens.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let result := delegatecall(gas(), sload(delegate_slot), add(data, 0x20), mload(data), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'delegate_slot'
Looking for corresponding Variable
Current function: fallback

Begin Mokens.find_delegate_variable_from_name
Searching for delegate_slot (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking owner (Slither line:1689)
Checking mokens (Slither line:1689)
Checking mokensLength (Slither line:1689)
Checking defaultURIStart (Slither line:1689)
Checking defaultURIEnd (Slither line:1689)
Checking blockNum (Slither line:1689)
Checking eras (Slither line:1689)
Checking eraLength (Slither line:1689)
Checking eraIndex (Slither line:1689)
Checking mintPriceOffset (Slither line:1689)
Checking mintStepPrice (Slither line:1689)
Checking mintPriceBuffer (Slither line:1689)
Checking ERC721_RECEIVED_NEW (Slither line:1689)
Checking ERC721_RECEIVED_OLD (Slither line:1689)
Checking ERC998_MAGIC_VALUE (Slither line:1689)
Checking UINT16_MASK (Slither line:1689)
Checking MOKEN_LINK_HASH_MASK (Slither line:1689)
Checking MOKEN_DATA_MASK (Slither line:1689)
Checking MAX_MOKENS (Slither line:1689)
Checking MAX_OWNER_MOKENS (Slither line:1689)
Checking rootOwnerAndTokenIdToApprovedAddress (Slither line:1689)
Checking tokenOwnerToOperators (Slither line:1689)
Checking ownedTokens (Slither line:1689)
Checking childTokenOwner (Slither line:1689)
Checking childTokens (Slither line:1689)
Checking childTokenIndex (Slither line:1689)
Checking childContractIndex (Slither line:1689)
Checking childContracts (Slither line:1689)
Checking erc20Contracts (Slither line:1689)
Checking erc20Balances (Slither line:1689)
Checking parentToChildTokenIds (Slither line:1689)
Checking tokenIdToChildTokenIdsIndex (Slither line:1689)
Checking mintContracts (Slither line:1689)
Checking mintContractIndex (Slither line:1689)
Checking tokenByName_ (Slither line:1689)
Checking erc20ContractIndex (Slither line:1689)
Checking delegate (Slither line:1689)
Checking supportedInterfaces (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking data (Slither line:1703)

Searching Parameter Variables (Slither line:1797)

Begin Mokens.find_delegate_variable_from_name
Searching for delegate (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking owner (Slither line:1689)
Checking mokens (Slither line:1689)
Checking mokensLength (Slither line:1689)
Checking defaultURIStart (Slither line:1689)
Checking defaultURIEnd (Slither line:1689)
Checking blockNum (Slither line:1689)
Checking eras (Slither line:1689)
Checking eraLength (Slither line:1689)
Checking eraIndex (Slither line:1689)
Checking mintPriceOffset (Slither line:1689)
Checking mintStepPrice (Slither line:1689)
Checking mintPriceBuffer (Slither line:1689)
Checking ERC721_RECEIVED_NEW (Slither line:1689)
Checking ERC721_RECEIVED_OLD (Slither line:1689)
Checking ERC998_MAGIC_VALUE (Slither line:1689)
Checking UINT16_MASK (Slither line:1689)
Checking MOKEN_LINK_HASH_MASK (Slither line:1689)
Checking MOKEN_DATA_MASK (Slither line:1689)
Checking MAX_MOKENS (Slither line:1689)
Checking MAX_OWNER_MOKENS (Slither line:1689)
Checking rootOwnerAndTokenIdToApprovedAddress (Slither line:1689)
Checking tokenOwnerToOperators (Slither line:1689)
Checking ownedTokens (Slither line:1689)
Checking childTokenOwner (Slither line:1689)
Checking childTokens (Slither line:1689)
Checking childTokenIndex (Slither line:1689)
Checking childContractIndex (Slither line:1689)
Checking childContracts (Slither line:1689)
Checking erc20Contracts (Slither line:1689)
Checking erc20Balances (Slither line:1689)
Checking parentToChildTokenIds (Slither line:1689)
Checking tokenIdToChildTokenIdsIndex (Slither line:1689)
Checking mintContracts (Slither line:1689)
Checking mintContractIndex (Slither line:1689)
Checking tokenByName_ (Slither line:1689)
Checking erc20ContractIndex (Slither line:1689)
Checking delegate (Slither line:1689)
delegate is a State Variable in contract AbstractMokens (Slither line:1693)

End Mokens.find_delegate_variable_by_name


End Mokens.find_delegate_variable_from_name (Slither line:1949)


End Mokens.find_delegatecall_in_asm (Slither line:1637)


End Mokens.is_proxy (Slither line:1476)


Begin Mokens.is_upgradeable_proxy (Slither line:1136)

Checking contract: Mokens 
Mokens is delegating to delegate
Looking for setter (Slither line:1200)

Looking for setter in AbstractMokens (Slither line:1204)


Begin AbstractMokens.find_setter_in_contract (Slither line:3119)

Checking function: isContract(address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: rootOwnerOf(uint256) returns(bytes32) (Slither line:3127)
Visibility: public
rootOwnerOf contains assembly (Slither line:3153)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwner
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(callSuccess,Call to ownerOf failed)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId --
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwner
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
Checking function: rootOwnerOfChild(address,uint256) returns(bytes32) (Slither line:3127)
Visibility: public
tokenId --
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
tokenId = _childTokenId
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwner
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(callSuccess,Call to ownerOf failed)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId --
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(tokenId != 0,Child token does not exist)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwnerOf(tokenId)
tokenId = childTokenOwner[_childContract][_childTokenId]
is an Assignment Operation (Slither line:3216)
rootOwner
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
Checking function: childApproved(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _transferFrom(uint256,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End AbstractMokens.find_setter_in_contract (Slither line:3345)


Could not find setter in AbstractMokens 
Looking in Mokens (Slither line:1213)

Begin Mokens.find_setter_in_contract (Slither line:3119)

Checking function: constructor(address) returns() (Slither line:3127)
Checking function: supportsInterface(bytes4) returns(bool) (Slither line:3127)
Visibility: external
supportedInterfaces[_interfaceID]
Checking function: balanceOf(address) returns(uint256) (Slither line:3127)
Visibility: external
require(bool,string)(_tokenOwner != address(0),Moken owner cannot be the 0 address.)
ownedTokens[_tokenOwner].length
Checking function: ownerOf(uint256) returns(address) (Slither line:3127)
Visibility: external
tokenOwner
tokenOwner = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
require(bool,string)(tokenOwner != address(0),The tokenId does not exist.)
Checking function: approve(address,uint256) returns() (Slither line:3127)
Visibility: external
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwner
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(callSuccess,Call to ownerOf failed)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId --
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender],Must be rootOwner or operator.)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId] = _approved
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
rootOwner
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
Approval(rootOwner,_approved,_tokenId)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
Checking function: getApproved(uint256) returns(address) (Slither line:3127)
Visibility: external
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwner
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(callSuccess,Call to ownerOf failed)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId --
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId]
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwner
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
Checking function: setApprovalForAll(address,bool) returns() (Slither line:3127)
Visibility: external
require(bool,string)(_operator != address(0),Operator cannot be 0 address.)
tokenOwnerToOperators[msg.sender][_operator] = _approved
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ApprovalForAll(msg.sender,_operator,_approved)
Checking function: isApprovedForAll(address,address) returns(bool) (Slither line:3127)
Visibility: external
tokenOwnerToOperators[_tokenOwner][_operator]
Checking function: transferFrom(address,address,uint256) returns() (Slither line:3127)
Visibility: external
Approval(_from,address(0),_tokenId)
ownedTokens[_from][tokenIndex] = uint32(lastTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
mokens[lastTokenId].data = mokens[lastTokenId].data & 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff | tokenIndex << 160
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
require(bool,string)(_from != address(0),_from cannot be the 0 address.)
require(bool,string)(tokenOwnerToOperators[_from][msg.sender] || approvedAddress == msg.sender,msg.sender not _from/operator/approved.)
require(bool,string)(_to != address(0),_to cannot be the 0 address.)
require(bool,string)(tokenOwner >> 224 != ERC998_MAGIC_VALUE,Token is child of top down composable)
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,A token owner address cannot possess more than 65,536 mokens.)
require(bool,string)(address(data) == _from,The tokenId is not owned by _from.)
mokens[_tokenId].data = data & 0xffffffffffffffffffff00000000000000000000000000000000000000000000 | ownedTokensIndex << 160 | uint256(_to)
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
require(bool,string)(_to != address(this),Cannot transfer to this contract.)
ownedTokens[_to].push(uint32(_tokenId))
require(bool,string)(mokens[_tokenId].parentTokenId == 0,Cannot transfer from an address when owned by a token.)
Transfer(_from,_to,_tokenId)
childApproved(_from,_tokenId)
delete rootOwnerAndTokenIdToApprovedAddress[_from][_tokenId]
_transferFrom(data,_to,_tokenId)
ownedTokens[_from].length --
Checking function: safeTransferFrom(address,address,uint256) returns() (Slither line:3127)
Visibility: external
require(bool,string)(_from != address(0),_from cannot be the 0 address.)
Approval(_from,address(0),_tokenId)
require(bool,string)(_to != address(0),_to cannot be the 0 address.)
ownedTokens[_from][tokenIndex] = uint32(lastTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(address(data) == _from,The tokenId is not owned by _from.)
mokens[lastTokenId].data = mokens[lastTokenId].data & 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff | tokenIndex << 160
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
size > 0
require(bool,string)(mokens[_tokenId].parentTokenId == 0,Cannot transfer from an address when owned by a token.)
require(bool,string)(tokenOwnerToOperators[_from][msg.sender] || approvedAddress == msg.sender,msg.sender not _from/operator/approved.)
childApproved(_from,_tokenId)
ownedTokens[_from].length --
_transferFrom(data,_to,_tokenId)
require(bool,string)(tokenOwner >> 224 != ERC998_MAGIC_VALUE,Token is child of top down composable)
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,A token owner address cannot possess more than 65,536 mokens.)
mokens[_tokenId].data = data & 0xffffffffffffffffffff00000000000000000000000000000000000000000000 | ownedTokensIndex << 160 | uint256(_to)
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
ownedTokens[_to].push(uint32(_tokenId))
Transfer(_from,_to,_tokenId)
delete rootOwnerAndTokenIdToApprovedAddress[_from][_tokenId]
require(bool,string)(retval == ERC721_RECEIVED_NEW,_to contract cannot receive ERC721 tokens.)
Checking function: safeTransferFrom(address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
safeTransferFrom contains assembly (Slither line:3153)
childTokens[_toTokenId][_childContract].push(_childTokenId)
_transferFrom(data,_to,_tokenId)
Approval(_from,address(0),_tokenId)
childTokenOwner[_childContract][_childTokenId] = _toTokenId + 1
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ReceivedChild(_from,_toTokenId,_childContract,_childTokenId)
ownedTokens[_from][tokenIndex] = uint32(lastTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
mokens[lastTokenId].data = mokens[lastTokenId].data & 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff | tokenIndex << 160
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
require(bool,string)(_data.length > 0,_data must contain the uint256 tokenId to transfer the token to.)
size > 0
require(bool,string)(retval == ERC721_RECEIVED_NEW,_to contract cannot receive ERC721 tokens.)
require(bool,string)(address(mokens[_toTokenId].data) != address(0),_tokenId does not exist.)
require(bool,string)(tokenOwnerToOperators[_from][msg.sender] || approvedAddress == msg.sender,msg.sender not _from/operator/approved.)
require(bool,string)(childTokenOwner[_childContract][_childTokenId] == 0,Child token already received.)
require(bool,string)(tokenOwner >> 224 != ERC998_MAGIC_VALUE,Token is child of top down composable)
require(bool,string)(_from != address(0),_from cannot be the 0 address.)
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,A token owner address cannot possess more than 65,536 mokens.)
receiveChild(_from,toTokenId,_to,_tokenId)
require(bool,string)(_to != address(0),_to cannot be the 0 address.)
mokens[_tokenId].data = data & 0xffffffffffffffffffff00000000000000000000000000000000000000000000 | ownedTokensIndex << 160 | uint256(_to)
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
childTokenIndex[_toTokenId][_childContract][_childTokenId] = childTokensLength
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ownedTokens[_to].push(uint32(_tokenId))
toTokenId = toTokenId >> 256 - _data.length * 8
is an Assignment Operation (Slither line:3216)
Transfer(_from,_to,_tokenId)
childContractIndex[_toTokenId][_childContract] = childContracts[_toTokenId].length
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(address(data) == _from,The tokenId is not owned by _from.)
delete rootOwnerAndTokenIdToApprovedAddress[_from][_tokenId]
childContracts[_toTokenId].push(_childContract)
require(bool,string)(mokens[_tokenId].parentTokenId == 0,Cannot transfer from an address when owned by a token.)
ownedTokens[_from].length --
childApproved(_from,_tokenId)
Checking function: exists(uint256) returns(bool) (Slither line:3127)
Visibility: external
_tokenId < mokensLength
Checking function: tokenOfOwnerByIndex(address,uint256) returns(uint256) (Slither line:3127)
Visibility: external
require(bool,string)(_index < ownedTokens[_tokenOwner].length,_tokenOwner does not own a moken at this index.)
ownedTokens[_tokenOwner][_index]
Checking function: totalSupply() returns(uint256) (Slither line:3127)
Visibility: external
mokensLength
Checking function: tokenByIndex(uint256) returns(uint256) (Slither line:3127)
Visibility: external
require(bool,string)(_index < mokensLength,A tokenId at index does not exist.)
_index
Checking function: name() returns(string) (Slither line:3127)
Visibility: external
Mokens
Checking function: symbol() returns(string) (Slither line:3127)
Visibility: external
MKN
Checking function: eraByIndex(uint256) returns(bytes32) (Slither line:3127)
Visibility: external
require(bool,string)(_index < eraLength,No era at this index.)
eras[_index]
Checking function: eraByName(bytes32) returns(uint256) (Slither line:3127)
Visibility: external
require(bool,string)(index != 0,No era exists with this name.)
index - 1
Checking function: currentEra() returns(bytes32) (Slither line:3127)
Visibility: external
eras[eraLength - 1]
Checking function: currentEraIndex() returns(uint256) (Slither line:3127)
Visibility: external
eraLength - 1
Checking function: eraExists(bytes32) returns(bool) (Slither line:3127)
Visibility: external
eraIndex[_eraName] != 0
Checking function: totalEras() returns(uint256) (Slither line:3127)
Visibility: external
eraLength
Checking function: mintData() returns(uint256,uint256,uint256) (Slither line:3127)
Visibility: external
(mokensLength,mintStepPrice,mintPriceOffset)
Checking function: mintPrice() returns(uint256) (Slither line:3127)
Visibility: external
(mokensLength * mintStepPrice) - mintPriceOffset
Checking function: mint(address,string,bytes32) returns(uint256) (Slither line:3127)
Visibility: external
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,An single owner address cannot possess more than 65,536 mokens.)
mokens[tokenId].name = _mokenName
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
mokens[tokenId].data = data
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
tokenByName_[lowerMokenName] = tokenId + 1
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ownedTokens[_tokenOwner].push(uint32(tokenId))
require(bool,string)(mintPriceBuffer_ > currentMintPrice || msg.value > currentMintPrice - mintPriceBuffer_,Paid ether is lower than mint price.)
Transfer(address(0),_tokenOwner,tokenId)
pricePaid = msg.value
is an Assignment Operation (Slither line:3216)
_s
require(bool,string)(_tokenOwner != address(0),Owner cannot be the 0 address.)
Mint(this,_tokenOwner,eras[eraIndex_],_mokenName,bytes32(data),tokenId,Ether,pricePaid)
tokenId = mokensLength ++
is an Assignment Operation (Slither line:3216)
MintPriceChange(currentMintPrice + mintStepPrice_)
require(bool,string)(tokenByName_[lowerMokenName] == 0,Moken name already exists.)
require(bool,string)(tokenId < MAX_MOKENS,Only 4,294,967,296 mokens can be created.)
tokenId
msg.sender.transfer(msg.value - currentMintPrice)
Checking function: isMintContract(address) returns(bool) (Slither line:3127)
Visibility: public
mintContractIndex[_contract] != 0
Checking function: totalMintContracts() returns(uint256) (Slither line:3127)
Visibility: external
mintContracts.length
Checking function: mintContractByIndex(uint256) returns(address) (Slither line:3127)
Visibility: external
require(bool,string)(index < mintContracts.length,Contract index does not exist.)
mintContracts[index]
Checking function: contractMint(address,string,bytes32,bytes32,uint256) returns(uint256) (Slither line:3127)
Visibility: external
require(bool,string)(_tokenOwner != address(0),Token owner cannot be the 0 address.)
mokens[tokenId].name = _mokenName
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
require(bool,string)(isMintContract(msg.sender),Not an approved mint contract.)
mokens[tokenId].data = data
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
tokenId = mokensLength ++
is an Assignment Operation (Slither line:3216)
tokenByName_[lowerMokenName] = mokensLength_
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ownedTokens[_tokenOwner].push(uint32(tokenId))
Transfer(address(0),_tokenOwner,tokenId)
require(bool,string)(tokenId < MAX_MOKENS,Only 4,294,967,296 mokens can be created.)
Mint(msg.sender,_tokenOwner,eras[eraIndex_],_mokenName,bytes32(data),tokenId,_currencyName,_pricePaid)
_s
MintPriceChange((mokensLength_ * mintStepPrice) - mintPriceOffset)
require(bool,string)(tokenByName_[lowerMokenName] == 0,Moken name already exists.)
mintContractIndex[_contract] != 0
tokenId
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,An single token owner address cannot possess more than 65,536 mokens.)
Checking function: validateAndLower(string) returns(string) (Slither line:3127)
Visibility: private
Checking function: mokenNameExists(string) returns(bool) (Slither line:3127)
Visibility: external
tokenByName_[validateAndLower(_mokenName)] != 0
_s
Checking function: mokenId(string) returns(uint256) (Slither line:3127)
Visibility: external
_s
tokenId = tokenByName_[validateAndLower(_mokenName)]
is an Assignment Operation (Slither line:3216)
require(bool,string)(tokenId != 0,No moken exists with this name.)
tokenId - 1
Checking function: mokenData(uint256) returns(bytes32) (Slither line:3127)
Visibility: external
data
require(bool,string)(data != 0,The tokenId does not exist.)
data = bytes32(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
Checking function: eraFromMokenData(bytes32) returns(bytes32) (Slither line:3127)
Visibility: public
eras[uint256(_data) >> 176 & UINT16_MASK]
Checking function: eraFromMokenData(uint256) returns(bytes32) (Slither line:3127)
Visibility: public
eras[_data >> 176 & UINT16_MASK]
Checking function: mokenEra(uint256) returns(bytes32) (Slither line:3127)
Visibility: external
require(bool,string)(data != 0,The tokenId does not exist.)
eraFromMokenData(data)
eras[_data >> 176 & UINT16_MASK]
Checking function: moken(uint256) returns(string,bytes32,bytes32,address) (Slither line:3127)
Visibility: external
(mokens[_tokenId].name,eraFromMokenData(data),data,address(data))
eras[uint256(_data) >> 176 & UINT16_MASK]
data = bytes32(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
require(bool,string)(data != 0,The tokenId does not exist.)
Checking function: mokenBytes32(uint256) returns(bytes32,bytes32,bytes32,address) (Slither line:3127)
Visibility: external
mokenBytes32 contains assembly (Slither line:3153)
require(bool,string)(mokenNameBytes.length != 0,The tokenId does not exist.)
eras[uint256(_data) >> 176 & UINT16_MASK]
data = bytes32(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
require(bool,string)(data != 0,The tokenId does not exist.)
(mokenNameBytes32,eraFromMokenData(data),data,address(data))
Checking function: mokenNoName(uint256) returns(bytes32,bytes32,address) (Slither line:3127)
Visibility: external
eras[uint256(_data) >> 176 & UINT16_MASK]
require(bool,string)(data != 0,The tokenId does not exist.)
data = bytes32(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
(eraFromMokenData(data),data,address(data))
Checking function: mokenName(uint256) returns(string) (Slither line:3127)
Visibility: external
require(bool,string)(bytes(mokenName_).length != 0,The tokenId does not exist.)
mokenName_
mokenName_ = mokens[_tokenId].name
is an Assignment Operation (Slither line:3216)
Checking function: mokenNameBytes32(uint256) returns(bytes32) (Slither line:3127)
Visibility: external
mokenNameBytes32 contains assembly (Slither line:3153)
mokenNameBytes32_
require(bool,string)(mokenNameBytes.length != 0,The tokenId does not exist.)
Checking function: fallback() returns() (Slither line:3127)
Checking function: receiveChild(address,uint256,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: getChild(address,uint256,address,uint256) returns() (Slither line:3127)
Visibility: external
receiveChild(_from,_toTokenId,_childContract,_childTokenId)
childContractIndex[_toTokenId][_childContract] = childContracts[_toTokenId].length
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
childTokens[_toTokenId][_childContract].push(_childTokenId)
require(bool,string)(address(mokens[_toTokenId].data) != address(0),_tokenId does not exist.)
require(bool,string)(_from == msg.sender || ERC721(_childContract).getApproved(_childTokenId) == msg.sender || ERC721(_childContract).isApprovedForAll(_from,msg.sender),msg.sender is not owner/operator/approved for child token.)
childContracts[_toTokenId].push(_childContract)
childTokenOwner[_childContract][_childTokenId] = _toTokenId + 1
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ReceivedChild(_from,_toTokenId,_childContract,_childTokenId)
require(bool,string)(childTokenOwner[_childContract][_childTokenId] == 0,Child token already received.)
childTokenIndex[_toTokenId][_childContract][_childTokenId] = childTokensLength
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ERC721(_childContract).transferFrom(_from,this,_childTokenId)
Checking function: onERC721Received(address,uint256,bytes) returns(bytes4) (Slither line:3127)
Visibility: external
onERC721Received contains assembly (Slither line:3153)
childTokens[_toTokenId][_childContract].push(_childTokenId)
require(bool,string)(ERC721(msg.sender).ownerOf(_childTokenId) != address(0),Child token not owned.)
childTokenOwner[_childContract][_childTokenId] = _toTokenId + 1
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ERC721_RECEIVED_OLD
ReceivedChild(_from,_toTokenId,_childContract,_childTokenId)
require(bool,string)(address(mokens[_toTokenId].data) != address(0),_tokenId does not exist.)
require(bool,string)(childTokenOwner[_childContract][_childTokenId] == 0,Child token already received.)
require(bool,string)(_data.length > 0,_data must contain the uint256 tokenId to transfer the child token to.)
childTokenIndex[_toTokenId][_childContract][_childTokenId] = childTokensLength
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
receiveChild(_from,toTokenId,msg.sender,_childTokenId)
childContractIndex[_toTokenId][_childContract] = childContracts[_toTokenId].length
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
childContracts[_toTokenId].push(_childContract)
toTokenId = toTokenId >> 256 - _data.length * 8
is an Assignment Operation (Slither line:3216)
Checking function: onERC721Received(address,address,uint256,bytes) returns(bytes4) (Slither line:3127)
Visibility: external
onERC721Received contains assembly (Slither line:3153)
require(bool,string)(ERC721(msg.sender).ownerOf(_childTokenId) != address(0),Child token not owned.)
childTokens[_toTokenId][_childContract].push(_childTokenId)
ERC721_RECEIVED_NEW
childTokenOwner[_childContract][_childTokenId] = _toTokenId + 1
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ReceivedChild(_from,_toTokenId,_childContract,_childTokenId)
require(bool,string)(address(mokens[_toTokenId].data) != address(0),_tokenId does not exist.)
require(bool,string)(_data.length > 0,_data must contain the uint256 tokenId to transfer the child token to.)
require(bool,string)(childTokenOwner[_childContract][_childTokenId] == 0,Child token already received.)
childTokenIndex[_toTokenId][_childContract][_childTokenId] = childTokensLength
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
receiveChild(_from,toTokenId,msg.sender,_childTokenId)
childContractIndex[_toTokenId][_childContract] = childContracts[_toTokenId].length
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
toTokenId = toTokenId >> 256 - _data.length * 8
is an Assignment Operation (Slither line:3216)
childContracts[_toTokenId].push(_childContract)
Checking function: ownerOfChild(address,uint256) returns(bytes32,uint256) (Slither line:3127)
Visibility: external
require(bool,string)(parentTokenId != 0,ERC721 token is not a child in this contract.)
parentTokenId --
(ERC998_MAGIC_VALUE << 224 | bytes32(address(mokens[parentTokenId].data)),parentTokenId)
parentTokenId = childTokenOwner[_childContract][_childTokenId]
is an Assignment Operation (Slither line:3216)
Checking function: childExists(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
childTokenOwner[_childContract][_childTokenId] != 0
Checking function: totalChildContracts(uint256) returns(uint256) (Slither line:3127)
Visibility: external
childContracts[_tokenId].length
Checking function: childContractByIndex(uint256,uint256) returns(address) (Slither line:3127)
Visibility: external
require(bool,string)(_index < childContracts[_tokenId].length,Contract address does not exist for this token and index.)
childContracts[_tokenId][_index]
Checking function: totalChildTokens(uint256,address) returns(uint256) (Slither line:3127)
Visibility: external
childTokens[_tokenId][_childContract].length
Checking function: childTokenByIndex(uint256,address,uint256) returns(uint256) (Slither line:3127)
Visibility: external
require(bool,string)(_index < childTokens[_tokenId][_childContract].length,Token does not own a child token at contract address and index.)
childTokens[_tokenId][_childContract][_index]
Checking function: balanceOfERC20(uint256,address) returns(uint256) (Slither line:3127)
Visibility: external
erc20Balances[_tokenId][_erc20Contract]
Checking function: erc20ContractByIndex(uint256,uint256) returns(address) (Slither line:3127)
Visibility: external
require(bool,string)(_index < erc20Contracts[_tokenId].length,Contract address does not exist for this token and index.)
erc20Contracts[_tokenId][_index]
Checking function: totalERC20Contracts(uint256) returns(uint256) (Slither line:3127)
Visibility: external
erc20Contracts[_tokenId].length
Checking function: tokenOwnerOf(uint256) returns(bytes32,uint256,bool) (Slither line:3127)
Visibility: external
parentTokenId --
require(bool,string)(tokenOwnerAddress != address(0),tokenId not found.)
(ERC998_MAGIC_VALUE << 224 | bytes32(tokenOwnerAddress),parentTokenId,isParent)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: totalChildTokens(address,uint256) returns(uint256) (Slither line:3127)
Visibility: public
parentToChildTokenIds[_parentContract][_parentTokenId].length
Checking function: childTokenByIndex(address,uint256,uint256) returns(uint256) (Slither line:3127)
Visibility: public
require(bool,string)(parentToChildTokenIds[_parentContract][_parentTokenId].length > _index,Child not found at index.)
parentToChildTokenIds[_parentContract][_parentTokenId][_index]
Checking function: slitherConstructorVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: isContract(address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: rootOwnerOf(uint256) returns(bytes32) (Slither line:3127)
Visibility: public
rootOwnerOf contains assembly (Slither line:3153)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwner
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(callSuccess,Call to ownerOf failed)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId --
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwner
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
Checking function: rootOwnerOfChild(address,uint256) returns(bytes32) (Slither line:3127)
Visibility: public
tokenId = _childTokenId
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwner
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(callSuccess,Call to ownerOf failed)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId --
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwnerOf(tokenId)
tokenId = childTokenOwner[_childContract][_childTokenId]
is an Assignment Operation (Slither line:3216)
rootOwner
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(tokenId != 0,Child token does not exist)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
tokenId --
Checking function: childApproved(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _transferFrom(uint256,address,uint256) returns() (Slither line:3127)
Visibility: internal

End Mokens.find_setter_in_contract (Slither line:3345)


Could not find setter in Mokens (Slither line:1220)
Looking for setter in MokensDelegate (Slither line:1228)


Begin MokensDelegate.find_setter_in_contract (Slither line:3119)

Checking function: withdraw(address,uint256) returns() (Slither line:3127)
Visibility: external
_sendTo.transfer(_amount)
onlyOwner()
require(bool,string)(_amount <= mokensContract.balance,Amount is greater than balance.)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
Checking function: transferOwnership(address) returns() (Slither line:3127)
Visibility: external
owner = _newOwner
is an Assignment Operation (Slither line:3216)
onlyOwner()
require(bool,string)(msg.sender == owner,Must be the contract owner.)
require(bool,string)(_newOwner != address(0),_newOwner cannot be 0 address.)
Checking function: updateLinkHash(uint256,bytes32) returns() (Slither line:3127)
Visibility: external
rootOwner
require(bool,string)(callSuccess,Call to ownerOf failed)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
mokens[_tokenId].data = data
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
LinkHashChange(_tokenId,bytes32(data))
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: setDefaultURIStart(string) returns() (Slither line:3127)
Visibility: external
onlyOwner()
require(bool,string)(msg.sender == owner,Must be the contract owner.)
defaultURIStart = _defaultURIStart
is an Assignment Operation (Slither line:3216)
Checking function: setDefaultURIEnd(string) returns() (Slither line:3127)
Visibility: external
onlyOwner()
require(bool,string)(msg.sender == owner,Must be the contract owner.)
defaultURIEnd = _defaultURIEnd
is an Assignment Operation (Slither line:3216)
Checking function: tokenURI(uint256) returns(string) (Slither line:3127)
Visibility: external
i = 0
is an Assignment Operation (Slither line:3216)
string(newStringBytes)
i ++
newStringBytes[i + startStringLength] = reversed[numDigits - 1 - i]
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
i = 0
is an Assignment Operation (Slither line:3216)
require(bool,string)(_tokenId < mokensLength,_tokenId does not exist.)
v = v / 10
is an Assignment Operation (Slither line:3216)
makeIntString(defaultURIStart,_tokenId,defaultURIEnd)
reversed[numDigits ++] = bytes1(48 + remainder)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
i = 0
is an Assignment Operation (Slither line:3216)
i ++
newStringBytes[i] = startStringBytes[i]
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
numDigits = 1
is an Assignment Operation (Slither line:3216)
reversed[0] = bytes1(48)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
i ++
newStringBytes[i + startStringLength + numDigits] = endStringBytes[i]
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
Checking function: makeIntString(string,uint256,string) returns(string) (Slither line:3127)
Visibility: private
Checking function: startNextEra_(bytes32) returns(uint256,uint256) (Slither line:3127)
Visibility: private
Checking function: startNextEra(bytes32,uint256,uint256,uint256) returns(uint256,uint256,uint256) (Slither line:3127)
Visibility: external
require(bool,string)(totalStepPrice >= _mintPriceOffset,(mokensLength * mintStepPrice) must be greater than or equal to mintPriceOffset.)
startTokenId = mokensLength
is an Assignment Operation (Slither line:3216)
mintPrice = totalStepPrice - _mintPriceOffset
is an Assignment Operation (Slither line:3216)
index = eraLength ++
is an Assignment Operation (Slither line:3216)
MintPriceConfigurationChange(mintPrice,_mintStepPrice,_mintPriceOffset,_mintPriceBuffer)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
eras[index] = _eraName
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
MintPriceChange(mintPrice)
eraIndex[_eraName] = index + 1
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
(index,startTokenId) = startNextEra_(_eraName)
is an Assignment Operation (Slither line:3216)
NewEra(index,_eraName,startTokenId)
(index,startTokenId,mintPrice)
(index,startTokenId)
onlyOwner()
require(bool,string)(_mintStepPrice < 10000000000000000000000,mintStepPrice must be less than 10,000 ether.)
mintStepPrice = _mintStepPrice
is an Assignment Operation (Slither line:3216)
require(bool,string)(eraIndex[_eraName] == 0,Era name already exists.)
mintPriceOffset = _mintPriceOffset
is an Assignment Operation (Slither line:3216)
require(bool,string)(_eraName != 0,eraName is empty string.)
mintPriceBuffer = _mintPriceBuffer
is an Assignment Operation (Slither line:3216)
Checking function: startNextEra(bytes32) returns(uint256,uint256) (Slither line:3127)
Visibility: external
onlyOwner()
(index,startTokenId)
require(bool,string)(_eraName != 0,eraName is empty string.)
eraIndex[_eraName] = index + 1
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
startTokenId = mokensLength
is an Assignment Operation (Slither line:3216)
NewEra(index,_eraName,startTokenId)
startNextEra_(_eraName)
index = eraLength ++
is an Assignment Operation (Slither line:3216)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
require(bool,string)(eraIndex[_eraName] == 0,Era name already exists.)
eras[index] = _eraName
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
Checking function: setMintPrice(uint256,uint256,uint256) returns(uint256) (Slither line:3127)
Visibility: external
MintPriceChange(mintPrice)
mintPriceOffset = _mintPriceOffset
is an Assignment Operation (Slither line:3216)
require(bool,string)(totalStepPrice >= _mintPriceOffset,(mokensLength * mintStepPrice) must be greater than or equal to mintPriceOffset.)
mintPrice
mintPriceBuffer = _mintPriceBuffer
is an Assignment Operation (Slither line:3216)
mintPrice = totalStepPrice - _mintPriceOffset
is an Assignment Operation (Slither line:3216)
require(bool,string)(_mintStepPrice < 10000000000000000000000,mintStepPrice must be less than 10,000 ether.)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
onlyOwner()
MintPriceConfigurationChange(mintPrice,_mintStepPrice,_mintPriceOffset,_mintPriceBuffer)
mintStepPrice = _mintStepPrice
is an Assignment Operation (Slither line:3216)
Checking function: addMintContract(address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(mintContractIndex[_contract] == 0,Contract already added.)
onlyOwner()
mintContracts.push(_contract)
mintContractIndex[_contract] = mintContracts.length
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
require(bool,string)(isContract(_contract),Address is not a contract.)
size > 0
Checking function: removeMintContract(address) returns() (Slither line:3127)
Visibility: external
mintContractIndex[lastMintContract] = index
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
delete mintContractIndex[_contract]
require(bool,string)(index != 0,Mint contract was not added.)
mintContracts.length --
mintContracts[index - 1] = lastMintContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
onlyOwner()
Checking function: removeChild(uint256,address,uint256) returns() (Slither line:3127)
Visibility: private
Checking function: safeTransferChild(uint256,address,address,uint256) returns() (Slither line:3127)
Visibility: external
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_fromTokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
childTokens[_fromTokenId][_childContract][tokenIndex] = lastToken
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
rootOwner
childContracts[_fromTokenId].length --
require(bool,string)(callSuccess,Call to ownerOf failed)
childTokenIndex[_fromTokenId][_childContract][lastToken] = tokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
removeChild(_fromTokenId,_childContract,_childTokenId)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
childContracts[_fromTokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ERC721(_childContract).safeTransferFrom(this,_to,_childTokenId)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
childContractIndex[_fromTokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
TransferChild(_fromTokenId,_to,_childContract,_childTokenId)
delete childTokenIndex[_fromTokenId][_childContract][_childTokenId]
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
delete childTokenOwner[_childContract][_childTokenId]
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
delete childContractIndex[_fromTokenId][_childContract]
rootOwner
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
require(bool,string)(tokenId != 0,Child token does not exist)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
require(bool,string)(_fromTokenId == tokenId - 1,_fromTokenId does not own the child token.)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
childTokens[_fromTokenId][_childContract].length --
require(bool,string)(_to != address(0),_to cannot be 0 address.)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: safeTransferChild(uint256,address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
removeChild(_fromTokenId,_childContract,_childTokenId)
ERC721(_childContract).safeTransferFrom(this,_to,_childTokenId,_data)
rootOwner
childTokens[_fromTokenId][_childContract][tokenIndex] = lastToken
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
childContracts[_fromTokenId].length --
require(bool,string)(callSuccess,Call to ownerOf failed)
childTokenIndex[_fromTokenId][_childContract][lastToken] = tokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
TransferChild(_fromTokenId,_to,_childContract,_childTokenId)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
childContracts[_fromTokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
childContractIndex[_fromTokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
delete childTokenIndex[_fromTokenId][_childContract][_childTokenId]
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
delete childTokenOwner[_childContract][_childTokenId]
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
delete childContractIndex[_fromTokenId][_childContract]
rootOwner
require(bool,string)(tokenId != 0,Child token does not exist)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
require(bool,string)(_fromTokenId == tokenId - 1,_fromTokenId does not own the child token.)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(_to != address(0),_to cannot be 0 address.)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
childTokens[_fromTokenId][_childContract].length --
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_fromTokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: transferChild(uint256,address,address,uint256) returns() (Slither line:3127)
Visibility: external
transferChild contains assembly (Slither line:3153)
childTokens[_fromTokenId][_childContract][tokenIndex] = lastToken
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
childContracts[_fromTokenId].length --
rootOwner
require(bool,string)(callSuccess,Call to ownerOf failed)
childTokenIndex[_fromTokenId][_childContract][lastToken] = tokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
ERC721(_childContract).transferFrom(this,_to,_childTokenId)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
childContracts[_fromTokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
TransferChild(_fromTokenId,_to,_childContract,_childTokenId)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
childContractIndex[_fromTokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
delete childTokenIndex[_fromTokenId][_childContract][_childTokenId]
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
delete childTokenOwner[_childContract][_childTokenId]
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
delete childContractIndex[_fromTokenId][_childContract]
require(bool,string)(tokenId != 0,Child token does not exist)
rootOwner
require(bool,string)(_fromTokenId == tokenId - 1,_fromTokenId does not own the child token.)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
require(bool,string)(_to != address(0),_to cannot be 0 address.)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
childTokens[_fromTokenId][_childContract].length --
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_fromTokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
removeChild(_fromTokenId,_childContract,_childTokenId)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: transferChildToParent(uint256,address,uint256,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
require(bool,string)(tokenId != 0,Child token does not exist)
childTokens[_fromTokenId][_childContract][tokenIndex] = lastToken
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
childContracts[_fromTokenId].length --
require(bool,string)(_fromTokenId == tokenId - 1,_fromTokenId does not own the child token.)
rootOwner
require(bool,string)(callSuccess,Call to ownerOf failed)
childTokenIndex[_fromTokenId][_childContract][lastToken] = tokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(_toContract != address(0),_toContract cannot be 0 address.)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
childContracts[_fromTokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
childContractIndex[_fromTokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
delete childTokenIndex[_fromTokenId][_childContract][_childTokenId]
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_fromTokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
delete childTokenOwner[_childContract][_childTokenId]
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
removeChild(_fromTokenId,_childContract,_childTokenId)
delete childContractIndex[_fromTokenId][_childContract]
ERC998ERC721BottomUp(_childContract).transferToParent(address(this),_toContract,_toTokenId,_childTokenId,_data)
rootOwner
TransferChild(_fromTokenId,_toContract,_childContract,_childTokenId)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
childTokens[_fromTokenId][_childContract].length --
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: removeERC20(uint256,address,uint256) returns() (Slither line:3127)
Visibility: private
Checking function: transferERC20(uint256,address,address,uint256) returns() (Slither line:3127)
Visibility: external
require(bool,string)(_to != address(0),_to cannot be 0 address)
removeERC20(_tokenId,_erc20Contract,_value)
rootOwner
erc20Contracts[_tokenId].length --
require(bool,string)(callSuccess,Call to ownerOf failed)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(ERC20AndERC223(_erc20Contract).transfer(_to,_value),ERC20 transfer failed.)
None
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
TransferERC20(_tokenId,_to,_erc20Contract,_value)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(erc20Balance >= _value,Not enough token available to transfer.)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
erc20Contracts[_tokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
erc20ContractIndex[_tokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
erc20Balances[_tokenId][_erc20Contract] = newERC20Balance
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
rootOwner
delete erc20ContractIndex[_tokenId][_erc20Contract]
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: transferERC223(uint256,address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
rootOwner
erc20Contracts[_tokenId].length --
require(bool,string)(callSuccess,Call to ownerOf failed)
None
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(erc20Balance >= _value,Not enough token available to transfer.)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
erc20Contracts[_tokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
erc20ContractIndex[_tokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
require(bool,string)(_to != address(0),_to cannot be 0 address)
erc20Balances[_tokenId][_erc20Contract] = newERC20Balance
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
rootOwner
removeERC20(_tokenId,_erc223Contract,_value)
delete erc20ContractIndex[_tokenId][_erc20Contract]
require(bool,string)(ERC20AndERC223(_erc223Contract).transfer(_to,_value,_data),ERC223 transfer failed.)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
TransferERC20(_tokenId,_to,_erc223Contract,_value)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: getERC20(address,uint256,address,uint256) returns() (Slither line:3127)
Visibility: public
getERC20 contains assembly (Slither line:3153)
require(bool,string)(allowed,msg.sender not _from and has no allowance.)
None
erc20Balances[_tokenId][_erc20Contract] += _value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
erc20ContractIndex[_tokenId][_erc20Contract] = erc20Contracts[_tokenId].length
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(callSuccess,call to allowance failed)
erc20Contracts[_tokenId].push(_erc20Contract)
require(bool,string)(remaining >= _value,Value greater than remaining)
allowed = true
is an Assignment Operation (Slither line:3216)
ReceivedERC20(_from,_tokenId,_erc20Contract,_value)
erc20Received(_from,_tokenId,_erc20Contract,_value)
require(bool,string)(address(mokens[_tokenId].data) != address(0),_tokenId does not exist.)
require(bool,string)(ERC20AndERC223(_erc20Contract).transferFrom(_from,this,_value),ERC20 transfer failed.)
Checking function: erc20Received(address,uint256,address,uint256) returns() (Slither line:3127)
Visibility: private
Checking function: tokenFallback(address,uint256,bytes) returns() (Slither line:3127)
Checking function: removeBottomUpChild(address,uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: transferFromParent(address,uint256,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
parentToChildTokenIds[_fromContract][_fromTokenId].length --
parentToChildTokenIds[_fromContract][_fromTokenId][currentChildTokenIndex] = uint32(lastChildTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
tokenIdToChildTokenIdsIndex[lastChildTokenId] = currentChildTokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ownedTokens[_from].length --
ownedTokens[_from][tokenIndex] = uint32(lastTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
size > 0
mokens[lastTokenId].data = mokens[lastTokenId].data & 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff | tokenIndex << 160
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
require(bool,string)(_fromContract != address(0),_fromContract cannot be the 0 address.)
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,A token owner address cannot possess more than 65,536 mokens.)
require(bool,string)(_to != address(0),_to cannot be the 0 address.)
mokens[_tokenId].data = data & 0xffffffffffffffffffff00000000000000000000000000000000000000000000 | ownedTokensIndex << 160 | uint256(_to)
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
ownedTokens[_to].push(uint32(_tokenId))
require(bool,string)(address(data) == _fromContract,The tokenId is not owned by _fromContract.)
Transfer(_from,_to,_tokenId)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
require(bool,string)(parentTokenId != 0,Token does not have a parent token.)
require(bool,string)(parentTokenId - 1 == _fromTokenId,tokenId not owned by _fromTokenId)
rootOwner
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || approvedAddress == msg.sender,msg.sender not rootOwner/operator/approved.)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
mokens[_tokenId].parentTokenId = 0
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
delete rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId]
Approval(rootOwner,address(0),_tokenId)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwner
removeBottomUpChild(_fromContract,_fromTokenId,_tokenId)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
delete tokenIdToChildTokenIdsIndex[_tokenId]
_transferFrom(data,_to,_tokenId)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
TransferFromParent(_fromContract,_fromTokenId,_tokenId)
require(bool,string)(callSuccess,Call to ownerOf failed)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
require(bool,string)(retval == ERC721_RECEIVED_NEW,Contract cannot receive ERC721 token.)
rootOwner
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
Checking function: transferToParent(address,address,uint256,uint256,bytes) returns() (Slither line:3127)
Visibility: external
require(bool,string)(_toContract != address(0),toContract cannot be 0)
require(bool,string)(ERC721(_toContract).ownerOf(_toTokenId) != address(0),_toTokenId does not exist)
TransferToParent(_toContract,_toTokenId,_tokenId)
ownedTokens[_from][tokenIndex] = uint32(lastTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(address(data) == _from,The tokenId is not owned by _from.)
mokens[lastTokenId].data = mokens[lastTokenId].data & 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff | tokenIndex << 160
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
require(bool,string)(mokens[_tokenId].parentTokenId == 0,Cannot transfer from address when owned by a token.)
require(bool,string)(tokenOwnerToOperators[_from][msg.sender] || approvedAddress == msg.sender,msg.sender not _from/operator/approved.)
childApproved(_from,_tokenId)
require(bool,string)(tokenOwner >> 224 != ERC998_MAGIC_VALUE,Token is child of top down composable)
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,A token owner address cannot possess more than 65,536 mokens.)
assert(bool)(parentTokenId > _toTokenId)
mokens[_tokenId].data = data & 0xffffffffffffffffffff00000000000000000000000000000000000000000000 | ownedTokensIndex << 160 | uint256(_to)
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
mokens[_tokenId].parentTokenId = parentTokenId
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
ownedTokens[_to].push(uint32(_tokenId))
Transfer(_from,_to,_tokenId)
delete rootOwnerAndTokenIdToApprovedAddress[_from][_tokenId]
parentToChildTokenIds[_toContract][_toTokenId].push(uint32(_tokenId))
Approval(_from,address(0),_tokenId)
tokenIdToChildTokenIdsIndex[_tokenId] = index
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ownedTokens[_from].length --
_transferFrom(data,_toContract,_tokenId)
require(bool,string)(_from != address(0),_from cannot be the 0 address.)
Checking function: transferAsChild(address,uint256,address,uint256,uint256,bytes) returns() (Slither line:3127)
Visibility: external
parentToChildTokenIds[_fromContract][_fromTokenId].length --
parentToChildTokenIds[_fromContract][_fromTokenId][currentChildTokenIndex] = uint32(lastChildTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
tokenIdToChildTokenIdsIndex[lastChildTokenId] = currentChildTokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ownedTokens[_from].length --
ownedTokens[_from][tokenIndex] = uint32(lastTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
mokens[lastTokenId].data = mokens[lastTokenId].data & 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff | tokenIndex << 160
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
require(bool,string)(_fromContract != address(0),_fromContract cannot be the 0 address.)
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,A token owner address cannot possess more than 65,536 mokens.)
require(bool,string)(_toContract != address(0),_toContract cannot be the 0 address.)
mokens[_tokenId].data = data & 0xffffffffffffffffffff00000000000000000000000000000000000000000000 | ownedTokensIndex << 160 | uint256(_to)
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
ownedTokens[_to].push(uint32(_tokenId))
Transfer(_from,_to,_tokenId)
require(bool,string)(address(data) == _fromContract,The tokenId is not owned by _fromContract.)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
require(bool,string)(parentTokenId != 0,Token does not have a parent token.)
require(bool,string)(parentTokenId - 1 == _fromTokenId,tokenId not owned by _fromTokenId)
rootOwner
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || approvedAddress == msg.sender,msg.sender not rootOwner/operator/approved.)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
removeBottomUpChild(_fromContract,_fromTokenId,_tokenId)
delete rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId]
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
Approval(rootOwner,address(0),_tokenId)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwner
parentTokenId = _toTokenId + 1
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
assert(bool)(parentTokenId > _toTokenId)
mokens[_tokenId].parentTokenId = parentTokenId
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentToChildTokenIds[_toContract][_toTokenId].push(uint32(_tokenId))
require(bool,string)(callSuccess,Call to ownerOf failed)
tokenIdToChildTokenIdsIndex[_tokenId] = index
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
_transferFrom(data,_toContract,_tokenId)
require(bool,string)(ERC721(_toContract).ownerOf(_toTokenId) != address(0),_toTokenId does not exist)
Transfer(_fromContract,_toContract,_tokenId)
TransferFromParent(_fromContract,_fromTokenId,_tokenId)
rootOwner
TransferToParent(_toContract,_toTokenId,_tokenId)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
Checking function: getStateHash(uint256) returns(bytes32) (Slither line:3127)
Visibility: public
i = 0
is an Assignment Operation (Slither line:3216)
i = 0
is an Assignment Operation (Slither line:3216)
i ++
stateHash = keccak256()(stateHash,erc20Balances[_tokenId][erc20Contracts_[i]])
is an Assignment Operation (Slither line:3216)
i ++
stateHash = keccak256()(stateHash,childTokens[_tokenId][childContracts_[i]])
is an Assignment Operation (Slither line:3216)
keccak256()(stateHash,linkHash)
stateHash = keccak256()(childContracts_)
is an Assignment Operation (Slither line:3216)
stateHash = keccak256()(erc20Contracts_)
is an Assignment Operation (Slither line:3216)
length = erc20Contracts_.length
is an Assignment Operation (Slither line:3216)
Checking function: slitherConstructorVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: isContract(address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: rootOwnerOf(uint256) returns(bytes32) (Slither line:3127)
Visibility: public
rootOwnerOf contains assembly (Slither line:3153)
rootOwner
require(bool,string)(callSuccess,Call to ownerOf failed)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: rootOwnerOfChild(address,uint256) returns(bytes32) (Slither line:3127)
Visibility: public
rootOwner
require(bool,string)(callSuccess,Call to ownerOf failed)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
tokenId = _childTokenId
is an Assignment Operation (Slither line:3216)
rootOwner
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
rootOwnerOf(tokenId)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
tokenId = childTokenOwner[_childContract][_childTokenId]
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
require(bool,string)(tokenId != 0,Child token does not exist)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
tokenId --
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: childApproved(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _transferFrom(uint256,address,uint256) returns() (Slither line:3127)
Visibility: internal

End MokensDelegate.find_setter_in_contract (Slither line:3345)


Begin Mokens.find_setter_in_contract (Slither line:3119)

Checking function: constructor(address) returns() (Slither line:3127)
Checking function: supportsInterface(bytes4) returns(bool) (Slither line:3127)
Visibility: external
supportedInterfaces[_interfaceID]
Checking function: balanceOf(address) returns(uint256) (Slither line:3127)
Visibility: external
require(bool,string)(_tokenOwner != address(0),Moken owner cannot be the 0 address.)
ownedTokens[_tokenOwner].length
Checking function: ownerOf(uint256) returns(address) (Slither line:3127)
Visibility: external
tokenOwner
tokenOwner = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
require(bool,string)(tokenOwner != address(0),The tokenId does not exist.)
Checking function: approve(address,uint256) returns() (Slither line:3127)
Visibility: external
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwner
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(callSuccess,Call to ownerOf failed)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId --
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender],Must be rootOwner or operator.)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId] = _approved
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
rootOwner
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
Approval(rootOwner,_approved,_tokenId)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
Checking function: getApproved(uint256) returns(address) (Slither line:3127)
Visibility: external
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwner
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(callSuccess,Call to ownerOf failed)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId --
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId]
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwner
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
Checking function: setApprovalForAll(address,bool) returns() (Slither line:3127)
Visibility: external
require(bool,string)(_operator != address(0),Operator cannot be 0 address.)
tokenOwnerToOperators[msg.sender][_operator] = _approved
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ApprovalForAll(msg.sender,_operator,_approved)
Checking function: isApprovedForAll(address,address) returns(bool) (Slither line:3127)
Visibility: external
tokenOwnerToOperators[_tokenOwner][_operator]
Checking function: transferFrom(address,address,uint256) returns() (Slither line:3127)
Visibility: external
Approval(_from,address(0),_tokenId)
ownedTokens[_from][tokenIndex] = uint32(lastTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
mokens[lastTokenId].data = mokens[lastTokenId].data & 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff | tokenIndex << 160
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
require(bool,string)(_from != address(0),_from cannot be the 0 address.)
require(bool,string)(tokenOwnerToOperators[_from][msg.sender] || approvedAddress == msg.sender,msg.sender not _from/operator/approved.)
require(bool,string)(_to != address(0),_to cannot be the 0 address.)
require(bool,string)(tokenOwner >> 224 != ERC998_MAGIC_VALUE,Token is child of top down composable)
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,A token owner address cannot possess more than 65,536 mokens.)
require(bool,string)(address(data) == _from,The tokenId is not owned by _from.)
mokens[_tokenId].data = data & 0xffffffffffffffffffff00000000000000000000000000000000000000000000 | ownedTokensIndex << 160 | uint256(_to)
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
require(bool,string)(_to != address(this),Cannot transfer to this contract.)
ownedTokens[_to].push(uint32(_tokenId))
require(bool,string)(mokens[_tokenId].parentTokenId == 0,Cannot transfer from an address when owned by a token.)
Transfer(_from,_to,_tokenId)
childApproved(_from,_tokenId)
delete rootOwnerAndTokenIdToApprovedAddress[_from][_tokenId]
_transferFrom(data,_to,_tokenId)
ownedTokens[_from].length --
Checking function: safeTransferFrom(address,address,uint256) returns() (Slither line:3127)
Visibility: external
require(bool,string)(_from != address(0),_from cannot be the 0 address.)
Approval(_from,address(0),_tokenId)
require(bool,string)(_to != address(0),_to cannot be the 0 address.)
ownedTokens[_from][tokenIndex] = uint32(lastTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(address(data) == _from,The tokenId is not owned by _from.)
mokens[lastTokenId].data = mokens[lastTokenId].data & 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff | tokenIndex << 160
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
size > 0
require(bool,string)(mokens[_tokenId].parentTokenId == 0,Cannot transfer from an address when owned by a token.)
require(bool,string)(tokenOwnerToOperators[_from][msg.sender] || approvedAddress == msg.sender,msg.sender not _from/operator/approved.)
childApproved(_from,_tokenId)
ownedTokens[_from].length --
_transferFrom(data,_to,_tokenId)
require(bool,string)(tokenOwner >> 224 != ERC998_MAGIC_VALUE,Token is child of top down composable)
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,A token owner address cannot possess more than 65,536 mokens.)
mokens[_tokenId].data = data & 0xffffffffffffffffffff00000000000000000000000000000000000000000000 | ownedTokensIndex << 160 | uint256(_to)
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
ownedTokens[_to].push(uint32(_tokenId))
Transfer(_from,_to,_tokenId)
delete rootOwnerAndTokenIdToApprovedAddress[_from][_tokenId]
require(bool,string)(retval == ERC721_RECEIVED_NEW,_to contract cannot receive ERC721 tokens.)
Checking function: safeTransferFrom(address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
safeTransferFrom contains assembly (Slither line:3153)
childTokens[_toTokenId][_childContract].push(_childTokenId)
_transferFrom(data,_to,_tokenId)
Approval(_from,address(0),_tokenId)
childTokenOwner[_childContract][_childTokenId] = _toTokenId + 1
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ReceivedChild(_from,_toTokenId,_childContract,_childTokenId)
ownedTokens[_from][tokenIndex] = uint32(lastTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
mokens[lastTokenId].data = mokens[lastTokenId].data & 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff | tokenIndex << 160
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
require(bool,string)(_data.length > 0,_data must contain the uint256 tokenId to transfer the token to.)
size > 0
require(bool,string)(retval == ERC721_RECEIVED_NEW,_to contract cannot receive ERC721 tokens.)
require(bool,string)(address(mokens[_toTokenId].data) != address(0),_tokenId does not exist.)
require(bool,string)(tokenOwnerToOperators[_from][msg.sender] || approvedAddress == msg.sender,msg.sender not _from/operator/approved.)
require(bool,string)(childTokenOwner[_childContract][_childTokenId] == 0,Child token already received.)
require(bool,string)(tokenOwner >> 224 != ERC998_MAGIC_VALUE,Token is child of top down composable)
require(bool,string)(_from != address(0),_from cannot be the 0 address.)
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,A token owner address cannot possess more than 65,536 mokens.)
receiveChild(_from,toTokenId,_to,_tokenId)
require(bool,string)(_to != address(0),_to cannot be the 0 address.)
mokens[_tokenId].data = data & 0xffffffffffffffffffff00000000000000000000000000000000000000000000 | ownedTokensIndex << 160 | uint256(_to)
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
childTokenIndex[_toTokenId][_childContract][_childTokenId] = childTokensLength
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ownedTokens[_to].push(uint32(_tokenId))
toTokenId = toTokenId >> 256 - _data.length * 8
is an Assignment Operation (Slither line:3216)
Transfer(_from,_to,_tokenId)
childContractIndex[_toTokenId][_childContract] = childContracts[_toTokenId].length
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(address(data) == _from,The tokenId is not owned by _from.)
delete rootOwnerAndTokenIdToApprovedAddress[_from][_tokenId]
childContracts[_toTokenId].push(_childContract)
require(bool,string)(mokens[_tokenId].parentTokenId == 0,Cannot transfer from an address when owned by a token.)
ownedTokens[_from].length --
childApproved(_from,_tokenId)
Checking function: exists(uint256) returns(bool) (Slither line:3127)
Visibility: external
_tokenId < mokensLength
Checking function: tokenOfOwnerByIndex(address,uint256) returns(uint256) (Slither line:3127)
Visibility: external
require(bool,string)(_index < ownedTokens[_tokenOwner].length,_tokenOwner does not own a moken at this index.)
ownedTokens[_tokenOwner][_index]
Checking function: totalSupply() returns(uint256) (Slither line:3127)
Visibility: external
mokensLength
Checking function: tokenByIndex(uint256) returns(uint256) (Slither line:3127)
Visibility: external
require(bool,string)(_index < mokensLength,A tokenId at index does not exist.)
_index
Checking function: name() returns(string) (Slither line:3127)
Visibility: external
Mokens
Checking function: symbol() returns(string) (Slither line:3127)
Visibility: external
MKN
Checking function: eraByIndex(uint256) returns(bytes32) (Slither line:3127)
Visibility: external
require(bool,string)(_index < eraLength,No era at this index.)
eras[_index]
Checking function: eraByName(bytes32) returns(uint256) (Slither line:3127)
Visibility: external
require(bool,string)(index != 0,No era exists with this name.)
index - 1
Checking function: currentEra() returns(bytes32) (Slither line:3127)
Visibility: external
eras[eraLength - 1]
Checking function: currentEraIndex() returns(uint256) (Slither line:3127)
Visibility: external
eraLength - 1
Checking function: eraExists(bytes32) returns(bool) (Slither line:3127)
Visibility: external
eraIndex[_eraName] != 0
Checking function: totalEras() returns(uint256) (Slither line:3127)
Visibility: external
eraLength
Checking function: mintData() returns(uint256,uint256,uint256) (Slither line:3127)
Visibility: external
(mokensLength,mintStepPrice,mintPriceOffset)
Checking function: mintPrice() returns(uint256) (Slither line:3127)
Visibility: external
(mokensLength * mintStepPrice) - mintPriceOffset
Checking function: mint(address,string,bytes32) returns(uint256) (Slither line:3127)
Visibility: external
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,An single owner address cannot possess more than 65,536 mokens.)
mokens[tokenId].name = _mokenName
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
mokens[tokenId].data = data
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
tokenByName_[lowerMokenName] = tokenId + 1
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ownedTokens[_tokenOwner].push(uint32(tokenId))
require(bool,string)(mintPriceBuffer_ > currentMintPrice || msg.value > currentMintPrice - mintPriceBuffer_,Paid ether is lower than mint price.)
Transfer(address(0),_tokenOwner,tokenId)
pricePaid = msg.value
is an Assignment Operation (Slither line:3216)
_s
require(bool,string)(_tokenOwner != address(0),Owner cannot be the 0 address.)
Mint(this,_tokenOwner,eras[eraIndex_],_mokenName,bytes32(data),tokenId,Ether,pricePaid)
tokenId = mokensLength ++
is an Assignment Operation (Slither line:3216)
MintPriceChange(currentMintPrice + mintStepPrice_)
require(bool,string)(tokenByName_[lowerMokenName] == 0,Moken name already exists.)
require(bool,string)(tokenId < MAX_MOKENS,Only 4,294,967,296 mokens can be created.)
tokenId
msg.sender.transfer(msg.value - currentMintPrice)
Checking function: isMintContract(address) returns(bool) (Slither line:3127)
Visibility: public
mintContractIndex[_contract] != 0
Checking function: totalMintContracts() returns(uint256) (Slither line:3127)
Visibility: external
mintContracts.length
Checking function: mintContractByIndex(uint256) returns(address) (Slither line:3127)
Visibility: external
require(bool,string)(index < mintContracts.length,Contract index does not exist.)
mintContracts[index]
Checking function: contractMint(address,string,bytes32,bytes32,uint256) returns(uint256) (Slither line:3127)
Visibility: external
require(bool,string)(_tokenOwner != address(0),Token owner cannot be the 0 address.)
mokens[tokenId].name = _mokenName
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
require(bool,string)(isMintContract(msg.sender),Not an approved mint contract.)
mokens[tokenId].data = data
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
tokenId = mokensLength ++
is an Assignment Operation (Slither line:3216)
tokenByName_[lowerMokenName] = mokensLength_
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ownedTokens[_tokenOwner].push(uint32(tokenId))
Transfer(address(0),_tokenOwner,tokenId)
require(bool,string)(tokenId < MAX_MOKENS,Only 4,294,967,296 mokens can be created.)
Mint(msg.sender,_tokenOwner,eras[eraIndex_],_mokenName,bytes32(data),tokenId,_currencyName,_pricePaid)
_s
MintPriceChange((mokensLength_ * mintStepPrice) - mintPriceOffset)
require(bool,string)(tokenByName_[lowerMokenName] == 0,Moken name already exists.)
mintContractIndex[_contract] != 0
tokenId
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,An single token owner address cannot possess more than 65,536 mokens.)
Checking function: validateAndLower(string) returns(string) (Slither line:3127)
Visibility: private
Checking function: mokenNameExists(string) returns(bool) (Slither line:3127)
Visibility: external
tokenByName_[validateAndLower(_mokenName)] != 0
_s
Checking function: mokenId(string) returns(uint256) (Slither line:3127)
Visibility: external
_s
tokenId = tokenByName_[validateAndLower(_mokenName)]
is an Assignment Operation (Slither line:3216)
require(bool,string)(tokenId != 0,No moken exists with this name.)
tokenId - 1
Checking function: mokenData(uint256) returns(bytes32) (Slither line:3127)
Visibility: external
data
require(bool,string)(data != 0,The tokenId does not exist.)
data = bytes32(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
Checking function: eraFromMokenData(bytes32) returns(bytes32) (Slither line:3127)
Visibility: public
eras[uint256(_data) >> 176 & UINT16_MASK]
Checking function: eraFromMokenData(uint256) returns(bytes32) (Slither line:3127)
Visibility: public
eras[_data >> 176 & UINT16_MASK]
Checking function: mokenEra(uint256) returns(bytes32) (Slither line:3127)
Visibility: external
require(bool,string)(data != 0,The tokenId does not exist.)
eraFromMokenData(data)
eras[_data >> 176 & UINT16_MASK]
Checking function: moken(uint256) returns(string,bytes32,bytes32,address) (Slither line:3127)
Visibility: external
(mokens[_tokenId].name,eraFromMokenData(data),data,address(data))
eras[uint256(_data) >> 176 & UINT16_MASK]
data = bytes32(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
require(bool,string)(data != 0,The tokenId does not exist.)
Checking function: mokenBytes32(uint256) returns(bytes32,bytes32,bytes32,address) (Slither line:3127)
Visibility: external
mokenBytes32 contains assembly (Slither line:3153)
require(bool,string)(mokenNameBytes.length != 0,The tokenId does not exist.)
eras[uint256(_data) >> 176 & UINT16_MASK]
data = bytes32(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
require(bool,string)(data != 0,The tokenId does not exist.)
(mokenNameBytes32,eraFromMokenData(data),data,address(data))
Checking function: mokenNoName(uint256) returns(bytes32,bytes32,address) (Slither line:3127)
Visibility: external
eras[uint256(_data) >> 176 & UINT16_MASK]
require(bool,string)(data != 0,The tokenId does not exist.)
data = bytes32(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
(eraFromMokenData(data),data,address(data))
Checking function: mokenName(uint256) returns(string) (Slither line:3127)
Visibility: external
require(bool,string)(bytes(mokenName_).length != 0,The tokenId does not exist.)
mokenName_
mokenName_ = mokens[_tokenId].name
is an Assignment Operation (Slither line:3216)
Checking function: mokenNameBytes32(uint256) returns(bytes32) (Slither line:3127)
Visibility: external
mokenNameBytes32 contains assembly (Slither line:3153)
mokenNameBytes32_
require(bool,string)(mokenNameBytes.length != 0,The tokenId does not exist.)
Checking function: fallback() returns() (Slither line:3127)
Checking function: receiveChild(address,uint256,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: getChild(address,uint256,address,uint256) returns() (Slither line:3127)
Visibility: external
receiveChild(_from,_toTokenId,_childContract,_childTokenId)
childContractIndex[_toTokenId][_childContract] = childContracts[_toTokenId].length
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
childTokens[_toTokenId][_childContract].push(_childTokenId)
require(bool,string)(address(mokens[_toTokenId].data) != address(0),_tokenId does not exist.)
require(bool,string)(_from == msg.sender || ERC721(_childContract).getApproved(_childTokenId) == msg.sender || ERC721(_childContract).isApprovedForAll(_from,msg.sender),msg.sender is not owner/operator/approved for child token.)
childContracts[_toTokenId].push(_childContract)
childTokenOwner[_childContract][_childTokenId] = _toTokenId + 1
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ReceivedChild(_from,_toTokenId,_childContract,_childTokenId)
require(bool,string)(childTokenOwner[_childContract][_childTokenId] == 0,Child token already received.)
childTokenIndex[_toTokenId][_childContract][_childTokenId] = childTokensLength
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ERC721(_childContract).transferFrom(_from,this,_childTokenId)
Checking function: onERC721Received(address,uint256,bytes) returns(bytes4) (Slither line:3127)
Visibility: external
onERC721Received contains assembly (Slither line:3153)
childTokens[_toTokenId][_childContract].push(_childTokenId)
require(bool,string)(ERC721(msg.sender).ownerOf(_childTokenId) != address(0),Child token not owned.)
childTokenOwner[_childContract][_childTokenId] = _toTokenId + 1
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ERC721_RECEIVED_OLD
ReceivedChild(_from,_toTokenId,_childContract,_childTokenId)
require(bool,string)(address(mokens[_toTokenId].data) != address(0),_tokenId does not exist.)
require(bool,string)(childTokenOwner[_childContract][_childTokenId] == 0,Child token already received.)
require(bool,string)(_data.length > 0,_data must contain the uint256 tokenId to transfer the child token to.)
childTokenIndex[_toTokenId][_childContract][_childTokenId] = childTokensLength
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
receiveChild(_from,toTokenId,msg.sender,_childTokenId)
childContractIndex[_toTokenId][_childContract] = childContracts[_toTokenId].length
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
childContracts[_toTokenId].push(_childContract)
toTokenId = toTokenId >> 256 - _data.length * 8
is an Assignment Operation (Slither line:3216)
Checking function: onERC721Received(address,address,uint256,bytes) returns(bytes4) (Slither line:3127)
Visibility: external
onERC721Received contains assembly (Slither line:3153)
require(bool,string)(ERC721(msg.sender).ownerOf(_childTokenId) != address(0),Child token not owned.)
childTokens[_toTokenId][_childContract].push(_childTokenId)
ERC721_RECEIVED_NEW
childTokenOwner[_childContract][_childTokenId] = _toTokenId + 1
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ReceivedChild(_from,_toTokenId,_childContract,_childTokenId)
require(bool,string)(address(mokens[_toTokenId].data) != address(0),_tokenId does not exist.)
require(bool,string)(_data.length > 0,_data must contain the uint256 tokenId to transfer the child token to.)
require(bool,string)(childTokenOwner[_childContract][_childTokenId] == 0,Child token already received.)
childTokenIndex[_toTokenId][_childContract][_childTokenId] = childTokensLength
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
receiveChild(_from,toTokenId,msg.sender,_childTokenId)
childContractIndex[_toTokenId][_childContract] = childContracts[_toTokenId].length
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
toTokenId = toTokenId >> 256 - _data.length * 8
is an Assignment Operation (Slither line:3216)
childContracts[_toTokenId].push(_childContract)
Checking function: ownerOfChild(address,uint256) returns(bytes32,uint256) (Slither line:3127)
Visibility: external
require(bool,string)(parentTokenId != 0,ERC721 token is not a child in this contract.)
parentTokenId --
(ERC998_MAGIC_VALUE << 224 | bytes32(address(mokens[parentTokenId].data)),parentTokenId)
parentTokenId = childTokenOwner[_childContract][_childTokenId]
is an Assignment Operation (Slither line:3216)
Checking function: childExists(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
childTokenOwner[_childContract][_childTokenId] != 0
Checking function: totalChildContracts(uint256) returns(uint256) (Slither line:3127)
Visibility: external
childContracts[_tokenId].length
Checking function: childContractByIndex(uint256,uint256) returns(address) (Slither line:3127)
Visibility: external
require(bool,string)(_index < childContracts[_tokenId].length,Contract address does not exist for this token and index.)
childContracts[_tokenId][_index]
Checking function: totalChildTokens(uint256,address) returns(uint256) (Slither line:3127)
Visibility: external
childTokens[_tokenId][_childContract].length
Checking function: childTokenByIndex(uint256,address,uint256) returns(uint256) (Slither line:3127)
Visibility: external
require(bool,string)(_index < childTokens[_tokenId][_childContract].length,Token does not own a child token at contract address and index.)
childTokens[_tokenId][_childContract][_index]
Checking function: balanceOfERC20(uint256,address) returns(uint256) (Slither line:3127)
Visibility: external
erc20Balances[_tokenId][_erc20Contract]
Checking function: erc20ContractByIndex(uint256,uint256) returns(address) (Slither line:3127)
Visibility: external
require(bool,string)(_index < erc20Contracts[_tokenId].length,Contract address does not exist for this token and index.)
erc20Contracts[_tokenId][_index]
Checking function: totalERC20Contracts(uint256) returns(uint256) (Slither line:3127)
Visibility: external
erc20Contracts[_tokenId].length
Checking function: tokenOwnerOf(uint256) returns(bytes32,uint256,bool) (Slither line:3127)
Visibility: external
parentTokenId --
require(bool,string)(tokenOwnerAddress != address(0),tokenId not found.)
(ERC998_MAGIC_VALUE << 224 | bytes32(tokenOwnerAddress),parentTokenId,isParent)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: totalChildTokens(address,uint256) returns(uint256) (Slither line:3127)
Visibility: public
parentToChildTokenIds[_parentContract][_parentTokenId].length
Checking function: childTokenByIndex(address,uint256,uint256) returns(uint256) (Slither line:3127)
Visibility: public
require(bool,string)(parentToChildTokenIds[_parentContract][_parentTokenId].length > _index,Child not found at index.)
parentToChildTokenIds[_parentContract][_parentTokenId][_index]
Checking function: slitherConstructorVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: isContract(address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: rootOwnerOf(uint256) returns(bytes32) (Slither line:3127)
Visibility: public
rootOwnerOf contains assembly (Slither line:3153)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwner
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(callSuccess,Call to ownerOf failed)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId --
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwner
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
Checking function: rootOwnerOfChild(address,uint256) returns(bytes32) (Slither line:3127)
Visibility: public
tokenId = _childTokenId
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwner
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(callSuccess,Call to ownerOf failed)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId --
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwnerOf(tokenId)
tokenId = childTokenOwner[_childContract][_childTokenId]
is an Assignment Operation (Slither line:3216)
rootOwner
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(tokenId != 0,Child token does not exist)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
tokenId --
Checking function: childApproved(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _transferFrom(uint256,address,uint256) returns() (Slither line:3127)
Visibility: internal

End Mokens.find_setter_in_contract (Slither line:3345)


Could not find implementation setter in Mokens (Slither line:1269)
Looking for getter (Slither line:1273)


Begin AbstractMokens.find_getter_in_contract (Slither line:2974)

delegate is a Variable object
Checking function: isContract (Slither line:2988)
isContract returns bool variable  (Slither line:3008)
RETURN node expression: size > 0 (Slither line:3028)
Checking function: rootOwnerOf (Slither line:2988)
rootOwnerOf returns bytes32 variable called rootOwner (Slither line:3008)
RETURN node expression: rootOwner (Slither line:3028)
RETURN node expression: ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress) (Slither line:3028)
RETURN node expression: rootOwner (Slither line:3028)
RETURN node expression: rootOwner (Slither line:3028)
RETURN node expression: ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress) (Slither line:3028)
Checking function: rootOwnerOfChild (Slither line:2988)
rootOwnerOfChild returns bytes32 variable called rootOwner (Slither line:3008)
RETURN node expression: rootOwnerOf(tokenId) (Slither line:3028)
Checking function: childApproved (Slither line:2988)
Checking function: _transferFrom (Slither line:2988)
Checking function: slitherConstructorVariables (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End AbstractMokens.find_getter_in_contract (Slither line:3083)


Begin Mokens.find_getter_in_contract (Slither line:2974)

delegate is a Variable object
Checking function: isContract (Slither line:2988)
isContract returns bool variable  (Slither line:3008)
RETURN node expression: size > 0 (Slither line:3028)
Checking function: rootOwnerOf (Slither line:2988)
rootOwnerOf returns bytes32 variable called rootOwner (Slither line:3008)
RETURN node expression: rootOwner (Slither line:3028)
RETURN node expression: ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress) (Slither line:3028)
RETURN node expression: rootOwner (Slither line:3028)
RETURN node expression: rootOwner (Slither line:3028)
RETURN node expression: ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress) (Slither line:3028)
Checking function: rootOwnerOfChild (Slither line:2988)
rootOwnerOfChild returns bytes32 variable called rootOwner (Slither line:3008)
RETURN node expression: rootOwnerOf(tokenId) (Slither line:3028)
Checking function: childApproved (Slither line:2988)
Checking function: _transferFrom (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: supportsInterface (Slither line:2988)
supportsInterface returns bool variable  (Slither line:3008)
RETURN node expression: supportedInterfaces[_interfaceID] (Slither line:3028)
Checking function: balanceOf (Slither line:2988)
balanceOf returns uint256 variable called totalMokensOwned (Slither line:3008)
RETURN node expression: ownedTokens[_tokenOwner].length (Slither line:3028)
Checking function: ownerOf (Slither line:2988)
ownerOf returns address variable called tokenOwner (Slither line:3008)
RETURN node expression: tokenOwner (Slither line:3028)
Checking function: approve (Slither line:2988)
Checking function: getApproved (Slither line:2988)
getApproved returns address variable called approvedAddress (Slither line:3008)
RETURN node expression: rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId] (Slither line:3028)
Checking function: setApprovalForAll (Slither line:2988)
Checking function: isApprovedForAll (Slither line:2988)
isApprovedForAll returns bool variable called approved (Slither line:3008)
RETURN node expression: tokenOwnerToOperators[_tokenOwner][_operator] (Slither line:3028)
Checking function: transferFrom (Slither line:2988)
Checking function: safeTransferFrom (Slither line:2988)
Checking function: safeTransferFrom (Slither line:2988)
Checking function: exists (Slither line:2988)
exists returns bool variable  (Slither line:3008)
RETURN node expression: _tokenId < mokensLength (Slither line:3028)
Checking function: tokenOfOwnerByIndex (Slither line:2988)
tokenOfOwnerByIndex returns uint256 variable called tokenId (Slither line:3008)
RETURN node expression: ownedTokens[_tokenOwner][_index] (Slither line:3028)
Checking function: totalSupply (Slither line:2988)
totalSupply returns uint256 variable called totalMokens (Slither line:3008)
RETURN node expression: mokensLength (Slither line:3028)
Checking function: tokenByIndex (Slither line:2988)
tokenByIndex returns uint256 variable called tokenId (Slither line:3008)
RETURN node expression: _index (Slither line:3028)
Checking function: name (Slither line:2988)
name returns string variable  (Slither line:3008)
RETURN node expression: Mokens (Slither line:3028)
Checking function: symbol (Slither line:2988)
symbol returns string variable  (Slither line:3008)
RETURN node expression: MKN (Slither line:3028)
Checking function: eraByIndex (Slither line:2988)
eraByIndex returns bytes32 variable called era (Slither line:3008)
RETURN node expression: eras[_index] (Slither line:3028)
Checking function: eraByName (Slither line:2988)
eraByName returns uint256 variable called indexOfEra (Slither line:3008)
RETURN node expression: index - 1 (Slither line:3028)
Checking function: currentEra (Slither line:2988)
currentEra returns bytes32 variable called era (Slither line:3008)
RETURN node expression: eras[eraLength - 1] (Slither line:3028)
Checking function: currentEraIndex (Slither line:2988)
currentEraIndex returns uint256 variable called indexOfEra (Slither line:3008)
RETURN node expression: eraLength - 1 (Slither line:3028)
Checking function: eraExists (Slither line:2988)
eraExists returns bool variable  (Slither line:3008)
RETURN node expression: eraIndex[_eraName] != 0 (Slither line:3028)
Checking function: totalEras (Slither line:2988)
totalEras returns uint256 variable called totalEras_ (Slither line:3008)
RETURN node expression: eraLength (Slither line:3028)
Checking function: mintData (Slither line:2988)
mintData returns uint256 variable called mokensLength_ (Slither line:3008)
mintData returns uint256 variable called mintStepPrice_ (Slither line:3008)
mintData returns uint256 variable called mintPriceOffset_ (Slither line:3008)
RETURN node expression: (mokensLength,mintStepPrice,mintPriceOffset) (Slither line:3028)
Checking function: mintPrice (Slither line:2988)
mintPrice returns uint256 variable  (Slither line:3008)
RETURN node expression: (mokensLength * mintStepPrice) - mintPriceOffset (Slither line:3028)
Checking function: mint (Slither line:2988)
mint returns uint256 variable called tokenId (Slither line:3008)
RETURN node expression: tokenId (Slither line:3028)
Checking function: isMintContract (Slither line:2988)
isMintContract returns bool variable  (Slither line:3008)
RETURN node expression: mintContractIndex[_contract] != 0 (Slither line:3028)
Checking function: totalMintContracts (Slither line:2988)
totalMintContracts returns uint256 variable called totalMintContracts_ (Slither line:3008)
RETURN node expression: mintContracts.length (Slither line:3028)
Checking function: mintContractByIndex (Slither line:2988)
mintContractByIndex returns address variable called contract_ (Slither line:3008)
RETURN node expression: mintContracts[index] (Slither line:3028)
Checking function: contractMint (Slither line:2988)
contractMint returns uint256 variable called tokenId (Slither line:3008)
RETURN node expression: tokenId (Slither line:3028)
Checking function: validateAndLower (Slither line:2988)
validateAndLower returns string variable called mokenName (Slither line:3008)
RETURN node expression: _s (Slither line:3028)
Checking function: mokenNameExists (Slither line:2988)
mokenNameExists returns bool variable  (Slither line:3008)
RETURN node expression: tokenByName_[validateAndLower(_mokenName)] != 0 (Slither line:3028)
Checking function: mokenId (Slither line:2988)
mokenId returns uint256 variable called tokenId (Slither line:3008)
RETURN node expression: tokenId - 1 (Slither line:3028)
Checking function: mokenData (Slither line:2988)
mokenData returns bytes32 variable called data (Slither line:3008)
RETURN node expression: data (Slither line:3028)
Checking function: eraFromMokenData (Slither line:2988)
eraFromMokenData returns bytes32 variable called era (Slither line:3008)
RETURN node expression: eras[uint256(_data) >> 176 & UINT16_MASK] (Slither line:3028)
Checking function: eraFromMokenData (Slither line:2988)
eraFromMokenData returns bytes32 variable called era (Slither line:3008)
RETURN node expression: eras[_data >> 176 & UINT16_MASK] (Slither line:3028)
Checking function: mokenEra (Slither line:2988)
mokenEra returns bytes32 variable called era (Slither line:3008)
RETURN node expression: eraFromMokenData(data) (Slither line:3028)
Checking function: moken (Slither line:2988)
moken returns string variable called mokenName (Slither line:3008)
moken returns bytes32 variable called era (Slither line:3008)
moken returns bytes32 variable called data (Slither line:3008)
moken returns address variable called tokenOwner (Slither line:3008)
RETURN node expression: (mokens[_tokenId].name,eraFromMokenData(data),data,address(data)) (Slither line:3028)
Checking function: mokenBytes32 (Slither line:2988)
mokenBytes32 returns bytes32 variable called mokenNameBytes32 (Slither line:3008)
mokenBytes32 returns bytes32 variable called era (Slither line:3008)
mokenBytes32 returns bytes32 variable called data (Slither line:3008)
mokenBytes32 returns address variable called tokenOwner (Slither line:3008)
RETURN node expression: (mokenNameBytes32,eraFromMokenData(data),data,address(data)) (Slither line:3028)
Checking function: mokenNoName (Slither line:2988)
mokenNoName returns bytes32 variable called era (Slither line:3008)
mokenNoName returns bytes32 variable called data (Slither line:3008)
mokenNoName returns address variable called tokenOwner (Slither line:3008)
RETURN node expression: (eraFromMokenData(data),data,address(data)) (Slither line:3028)
Checking function: mokenName (Slither line:2988)
mokenName returns string variable called mokenName_ (Slither line:3008)
RETURN node expression: mokenName_ (Slither line:3028)
Checking function: mokenNameBytes32 (Slither line:2988)
mokenNameBytes32 returns bytes32 variable called mokenNameBytes32_ (Slither line:3008)
RETURN node expression: mokenNameBytes32_ (Slither line:3028)
Checking function: fallback (Slither line:2988)
Checking function: receiveChild (Slither line:2988)
Checking function: getChild (Slither line:2988)
Checking function: onERC721Received (Slither line:2988)
onERC721Received returns bytes4 variable  (Slither line:3008)
RETURN node expression: ERC721_RECEIVED_OLD (Slither line:3028)
Checking function: onERC721Received (Slither line:2988)
onERC721Received returns bytes4 variable  (Slither line:3008)
RETURN node expression: ERC721_RECEIVED_NEW (Slither line:3028)
Checking function: ownerOfChild (Slither line:2988)
ownerOfChild returns bytes32 variable called parentTokenOwner (Slither line:3008)
ownerOfChild returns uint256 variable called parentTokenId (Slither line:3008)
RETURN node expression: (ERC998_MAGIC_VALUE << 224 | bytes32(address(mokens[parentTokenId].data)),parentTokenId) (Slither line:3028)
Checking function: childExists (Slither line:2988)
childExists returns bool variable  (Slither line:3008)
RETURN node expression: childTokenOwner[_childContract][_childTokenId] != 0 (Slither line:3028)
Checking function: totalChildContracts (Slither line:2988)
totalChildContracts returns uint256 variable  (Slither line:3008)
RETURN node expression: childContracts[_tokenId].length (Slither line:3028)
Checking function: childContractByIndex (Slither line:2988)
childContractByIndex returns address variable called childContract (Slither line:3008)
RETURN node expression: childContracts[_tokenId][_index] (Slither line:3028)
Checking function: totalChildTokens (Slither line:2988)
totalChildTokens returns uint256 variable  (Slither line:3008)
RETURN node expression: childTokens[_tokenId][_childContract].length (Slither line:3028)
Checking function: childTokenByIndex (Slither line:2988)
childTokenByIndex returns uint256 variable called childTokenId (Slither line:3008)
RETURN node expression: childTokens[_tokenId][_childContract][_index] (Slither line:3028)
Checking function: balanceOfERC20 (Slither line:2988)
balanceOfERC20 returns uint256 variable  (Slither line:3008)
RETURN node expression: erc20Balances[_tokenId][_erc20Contract] (Slither line:3028)
Checking function: erc20ContractByIndex (Slither line:2988)
erc20ContractByIndex returns address variable  (Slither line:3008)
RETURN node expression: erc20Contracts[_tokenId][_index] (Slither line:3028)
Checking function: totalERC20Contracts (Slither line:2988)
totalERC20Contracts returns uint256 variable  (Slither line:3008)
RETURN node expression: erc20Contracts[_tokenId].length (Slither line:3028)
Checking function: tokenOwnerOf (Slither line:2988)
tokenOwnerOf returns bytes32 variable called tokenOwner (Slither line:3008)
tokenOwnerOf returns uint256 variable called parentTokenId (Slither line:3008)
tokenOwnerOf returns bool variable called isParent (Slither line:3008)
RETURN node expression: (ERC998_MAGIC_VALUE << 224 | bytes32(tokenOwnerAddress),parentTokenId,isParent) (Slither line:3028)
Checking function: totalChildTokens (Slither line:2988)
totalChildTokens returns uint256 variable  (Slither line:3008)
RETURN node expression: parentToChildTokenIds[_parentContract][_parentTokenId].length (Slither line:3028)
Checking function: childTokenByIndex (Slither line:2988)
childTokenByIndex returns uint256 variable  (Slither line:3008)
RETURN node expression: parentToChildTokenIds[_parentContract][_parentTokenId][_index] (Slither line:3028)
Checking function: slitherConstructorVariables (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End Mokens.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in Mokens (Slither line:1305)
or in AbstractMokens (Slither line:1319)

Begin MokensDelegate.find_getter_in_contract (Slither line:2974)

delegate is a Variable object
Checking function: isContract (Slither line:2988)
isContract returns bool variable  (Slither line:3008)
RETURN node expression: size > 0 (Slither line:3028)
Checking function: rootOwnerOf (Slither line:2988)
rootOwnerOf returns bytes32 variable called rootOwner (Slither line:3008)
RETURN node expression: rootOwner (Slither line:3028)
RETURN node expression: ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress) (Slither line:3028)
RETURN node expression: rootOwner (Slither line:3028)
RETURN node expression: ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress) (Slither line:3028)
RETURN node expression: rootOwner (Slither line:3028)
Checking function: rootOwnerOfChild (Slither line:2988)
rootOwnerOfChild returns bytes32 variable called rootOwner (Slither line:3008)
RETURN node expression: rootOwnerOf(tokenId) (Slither line:3028)
Checking function: childApproved (Slither line:2988)
Checking function: _transferFrom (Slither line:2988)
Checking function: withdraw (Slither line:2988)
Checking function: transferOwnership (Slither line:2988)
Checking function: updateLinkHash (Slither line:2988)
Checking function: setDefaultURIStart (Slither line:2988)
Checking function: setDefaultURIEnd (Slither line:2988)
Checking function: tokenURI (Slither line:2988)
tokenURI returns string variable called tokenURIString (Slither line:3008)
RETURN node expression: makeIntString(defaultURIStart,_tokenId,defaultURIEnd) (Slither line:3028)
Checking function: makeIntString (Slither line:2988)
makeIntString returns string variable  (Slither line:3008)
RETURN node expression: string(newStringBytes) (Slither line:3028)
Checking function: startNextEra_ (Slither line:2988)
startNextEra_ returns uint256 variable called index (Slither line:3008)
startNextEra_ returns uint256 variable called startTokenId (Slither line:3008)
RETURN node expression: (index,startTokenId) (Slither line:3028)
Checking function: startNextEra (Slither line:2988)
startNextEra returns uint256 variable called index (Slither line:3008)
startNextEra returns uint256 variable called startTokenId (Slither line:3008)
startNextEra returns uint256 variable called mintPrice (Slither line:3008)
RETURN node expression: (index,startTokenId,mintPrice) (Slither line:3028)
Checking function: startNextEra (Slither line:2988)
startNextEra returns uint256 variable called index (Slither line:3008)
startNextEra returns uint256 variable called startTokenId (Slither line:3008)
RETURN node expression: startNextEra_(_eraName) (Slither line:3028)
Checking function: setMintPrice (Slither line:2988)
setMintPrice returns uint256 variable called mintPrice (Slither line:3008)
RETURN node expression: mintPrice (Slither line:3028)
Checking function: addMintContract (Slither line:2988)
Checking function: removeMintContract (Slither line:2988)
Checking function: removeChild (Slither line:2988)
Checking function: safeTransferChild (Slither line:2988)
Checking function: safeTransferChild (Slither line:2988)
Checking function: transferChild (Slither line:2988)
Checking function: transferChildToParent (Slither line:2988)
Checking function: removeERC20 (Slither line:2988)
Checking function: transferERC20 (Slither line:2988)
Checking function: transferERC223 (Slither line:2988)
Checking function: getERC20 (Slither line:2988)
Checking function: erc20Received (Slither line:2988)
Checking function: tokenFallback (Slither line:2988)
Checking function: removeBottomUpChild (Slither line:2988)
Checking function: transferFromParent (Slither line:2988)
Checking function: transferToParent (Slither line:2988)
Checking function: transferAsChild (Slither line:2988)
Checking function: getStateHash (Slither line:2988)
getStateHash returns bytes32 variable called stateHash (Slither line:3008)
RETURN node expression: keccak256()(stateHash,linkHash) (Slither line:3028)
Checking function: slitherConstructorVariables (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End MokensDelegate.find_getter_in_contract (Slither line:3083)


Begin MokensDelegate.find_setter_in_contract (Slither line:3119)

Checking function: withdraw(address,uint256) returns() (Slither line:3127)
Visibility: external
_sendTo.transfer(_amount)
onlyOwner()
require(bool,string)(_amount <= mokensContract.balance,Amount is greater than balance.)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
Checking function: transferOwnership(address) returns() (Slither line:3127)
Visibility: external
owner = _newOwner
is an Assignment Operation (Slither line:3216)
onlyOwner()
require(bool,string)(msg.sender == owner,Must be the contract owner.)
require(bool,string)(_newOwner != address(0),_newOwner cannot be 0 address.)
Checking function: updateLinkHash(uint256,bytes32) returns() (Slither line:3127)
Visibility: external
rootOwner
require(bool,string)(callSuccess,Call to ownerOf failed)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
mokens[_tokenId].data = data
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
LinkHashChange(_tokenId,bytes32(data))
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: setDefaultURIStart(string) returns() (Slither line:3127)
Visibility: external
onlyOwner()
require(bool,string)(msg.sender == owner,Must be the contract owner.)
defaultURIStart = _defaultURIStart
is an Assignment Operation (Slither line:3216)
Checking function: setDefaultURIEnd(string) returns() (Slither line:3127)
Visibility: external
onlyOwner()
require(bool,string)(msg.sender == owner,Must be the contract owner.)
defaultURIEnd = _defaultURIEnd
is an Assignment Operation (Slither line:3216)
Checking function: tokenURI(uint256) returns(string) (Slither line:3127)
Visibility: external
i = 0
is an Assignment Operation (Slither line:3216)
string(newStringBytes)
i ++
newStringBytes[i + startStringLength] = reversed[numDigits - 1 - i]
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
i = 0
is an Assignment Operation (Slither line:3216)
require(bool,string)(_tokenId < mokensLength,_tokenId does not exist.)
v = v / 10
is an Assignment Operation (Slither line:3216)
makeIntString(defaultURIStart,_tokenId,defaultURIEnd)
reversed[numDigits ++] = bytes1(48 + remainder)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
i = 0
is an Assignment Operation (Slither line:3216)
i ++
newStringBytes[i] = startStringBytes[i]
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
numDigits = 1
is an Assignment Operation (Slither line:3216)
reversed[0] = bytes1(48)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
i ++
newStringBytes[i + startStringLength + numDigits] = endStringBytes[i]
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
Checking function: makeIntString(string,uint256,string) returns(string) (Slither line:3127)
Visibility: private
Checking function: startNextEra_(bytes32) returns(uint256,uint256) (Slither line:3127)
Visibility: private
Checking function: startNextEra(bytes32,uint256,uint256,uint256) returns(uint256,uint256,uint256) (Slither line:3127)
Visibility: external
require(bool,string)(totalStepPrice >= _mintPriceOffset,(mokensLength * mintStepPrice) must be greater than or equal to mintPriceOffset.)
startTokenId = mokensLength
is an Assignment Operation (Slither line:3216)
mintPrice = totalStepPrice - _mintPriceOffset
is an Assignment Operation (Slither line:3216)
index = eraLength ++
is an Assignment Operation (Slither line:3216)
MintPriceConfigurationChange(mintPrice,_mintStepPrice,_mintPriceOffset,_mintPriceBuffer)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
eras[index] = _eraName
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
MintPriceChange(mintPrice)
eraIndex[_eraName] = index + 1
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
(index,startTokenId) = startNextEra_(_eraName)
is an Assignment Operation (Slither line:3216)
NewEra(index,_eraName,startTokenId)
(index,startTokenId,mintPrice)
(index,startTokenId)
onlyOwner()
require(bool,string)(_mintStepPrice < 10000000000000000000000,mintStepPrice must be less than 10,000 ether.)
mintStepPrice = _mintStepPrice
is an Assignment Operation (Slither line:3216)
require(bool,string)(eraIndex[_eraName] == 0,Era name already exists.)
mintPriceOffset = _mintPriceOffset
is an Assignment Operation (Slither line:3216)
require(bool,string)(_eraName != 0,eraName is empty string.)
mintPriceBuffer = _mintPriceBuffer
is an Assignment Operation (Slither line:3216)
Checking function: startNextEra(bytes32) returns(uint256,uint256) (Slither line:3127)
Visibility: external
onlyOwner()
(index,startTokenId)
require(bool,string)(_eraName != 0,eraName is empty string.)
eraIndex[_eraName] = index + 1
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
startTokenId = mokensLength
is an Assignment Operation (Slither line:3216)
NewEra(index,_eraName,startTokenId)
startNextEra_(_eraName)
index = eraLength ++
is an Assignment Operation (Slither line:3216)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
require(bool,string)(eraIndex[_eraName] == 0,Era name already exists.)
eras[index] = _eraName
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
Checking function: setMintPrice(uint256,uint256,uint256) returns(uint256) (Slither line:3127)
Visibility: external
MintPriceChange(mintPrice)
mintPriceOffset = _mintPriceOffset
is an Assignment Operation (Slither line:3216)
require(bool,string)(totalStepPrice >= _mintPriceOffset,(mokensLength * mintStepPrice) must be greater than or equal to mintPriceOffset.)
mintPrice
mintPriceBuffer = _mintPriceBuffer
is an Assignment Operation (Slither line:3216)
mintPrice = totalStepPrice - _mintPriceOffset
is an Assignment Operation (Slither line:3216)
require(bool,string)(_mintStepPrice < 10000000000000000000000,mintStepPrice must be less than 10,000 ether.)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
onlyOwner()
MintPriceConfigurationChange(mintPrice,_mintStepPrice,_mintPriceOffset,_mintPriceBuffer)
mintStepPrice = _mintStepPrice
is an Assignment Operation (Slither line:3216)
Checking function: addMintContract(address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(mintContractIndex[_contract] == 0,Contract already added.)
onlyOwner()
mintContracts.push(_contract)
mintContractIndex[_contract] = mintContracts.length
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
require(bool,string)(isContract(_contract),Address is not a contract.)
size > 0
Checking function: removeMintContract(address) returns() (Slither line:3127)
Visibility: external
mintContractIndex[lastMintContract] = index
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
delete mintContractIndex[_contract]
require(bool,string)(index != 0,Mint contract was not added.)
mintContracts.length --
mintContracts[index - 1] = lastMintContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
onlyOwner()
Checking function: removeChild(uint256,address,uint256) returns() (Slither line:3127)
Visibility: private
Checking function: safeTransferChild(uint256,address,address,uint256) returns() (Slither line:3127)
Visibility: external
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_fromTokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
childTokens[_fromTokenId][_childContract][tokenIndex] = lastToken
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
rootOwner
childContracts[_fromTokenId].length --
require(bool,string)(callSuccess,Call to ownerOf failed)
childTokenIndex[_fromTokenId][_childContract][lastToken] = tokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
removeChild(_fromTokenId,_childContract,_childTokenId)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
childContracts[_fromTokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ERC721(_childContract).safeTransferFrom(this,_to,_childTokenId)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
childContractIndex[_fromTokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
TransferChild(_fromTokenId,_to,_childContract,_childTokenId)
delete childTokenIndex[_fromTokenId][_childContract][_childTokenId]
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
delete childTokenOwner[_childContract][_childTokenId]
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
delete childContractIndex[_fromTokenId][_childContract]
rootOwner
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
require(bool,string)(tokenId != 0,Child token does not exist)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
require(bool,string)(_fromTokenId == tokenId - 1,_fromTokenId does not own the child token.)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
childTokens[_fromTokenId][_childContract].length --
require(bool,string)(_to != address(0),_to cannot be 0 address.)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: safeTransferChild(uint256,address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
removeChild(_fromTokenId,_childContract,_childTokenId)
ERC721(_childContract).safeTransferFrom(this,_to,_childTokenId,_data)
rootOwner
childTokens[_fromTokenId][_childContract][tokenIndex] = lastToken
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
childContracts[_fromTokenId].length --
require(bool,string)(callSuccess,Call to ownerOf failed)
childTokenIndex[_fromTokenId][_childContract][lastToken] = tokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
TransferChild(_fromTokenId,_to,_childContract,_childTokenId)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
childContracts[_fromTokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
childContractIndex[_fromTokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
delete childTokenIndex[_fromTokenId][_childContract][_childTokenId]
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
delete childTokenOwner[_childContract][_childTokenId]
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
delete childContractIndex[_fromTokenId][_childContract]
rootOwner
require(bool,string)(tokenId != 0,Child token does not exist)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
require(bool,string)(_fromTokenId == tokenId - 1,_fromTokenId does not own the child token.)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(_to != address(0),_to cannot be 0 address.)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
childTokens[_fromTokenId][_childContract].length --
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_fromTokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: transferChild(uint256,address,address,uint256) returns() (Slither line:3127)
Visibility: external
transferChild contains assembly (Slither line:3153)
childTokens[_fromTokenId][_childContract][tokenIndex] = lastToken
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
childContracts[_fromTokenId].length --
rootOwner
require(bool,string)(callSuccess,Call to ownerOf failed)
childTokenIndex[_fromTokenId][_childContract][lastToken] = tokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
ERC721(_childContract).transferFrom(this,_to,_childTokenId)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
childContracts[_fromTokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
TransferChild(_fromTokenId,_to,_childContract,_childTokenId)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
childContractIndex[_fromTokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
delete childTokenIndex[_fromTokenId][_childContract][_childTokenId]
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
delete childTokenOwner[_childContract][_childTokenId]
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
delete childContractIndex[_fromTokenId][_childContract]
require(bool,string)(tokenId != 0,Child token does not exist)
rootOwner
require(bool,string)(_fromTokenId == tokenId - 1,_fromTokenId does not own the child token.)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
require(bool,string)(_to != address(0),_to cannot be 0 address.)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
childTokens[_fromTokenId][_childContract].length --
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_fromTokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
removeChild(_fromTokenId,_childContract,_childTokenId)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: transferChildToParent(uint256,address,uint256,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
require(bool,string)(tokenId != 0,Child token does not exist)
childTokens[_fromTokenId][_childContract][tokenIndex] = lastToken
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
childContracts[_fromTokenId].length --
require(bool,string)(_fromTokenId == tokenId - 1,_fromTokenId does not own the child token.)
rootOwner
require(bool,string)(callSuccess,Call to ownerOf failed)
childTokenIndex[_fromTokenId][_childContract][lastToken] = tokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(_toContract != address(0),_toContract cannot be 0 address.)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
childContracts[_fromTokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
childContractIndex[_fromTokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
delete childTokenIndex[_fromTokenId][_childContract][_childTokenId]
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_fromTokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
delete childTokenOwner[_childContract][_childTokenId]
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
removeChild(_fromTokenId,_childContract,_childTokenId)
delete childContractIndex[_fromTokenId][_childContract]
ERC998ERC721BottomUp(_childContract).transferToParent(address(this),_toContract,_toTokenId,_childTokenId,_data)
rootOwner
TransferChild(_fromTokenId,_toContract,_childContract,_childTokenId)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
childTokens[_fromTokenId][_childContract].length --
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: removeERC20(uint256,address,uint256) returns() (Slither line:3127)
Visibility: private
Checking function: transferERC20(uint256,address,address,uint256) returns() (Slither line:3127)
Visibility: external
require(bool,string)(_to != address(0),_to cannot be 0 address)
removeERC20(_tokenId,_erc20Contract,_value)
rootOwner
erc20Contracts[_tokenId].length --
require(bool,string)(callSuccess,Call to ownerOf failed)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(ERC20AndERC223(_erc20Contract).transfer(_to,_value),ERC20 transfer failed.)
None
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
TransferERC20(_tokenId,_to,_erc20Contract,_value)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(erc20Balance >= _value,Not enough token available to transfer.)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
erc20Contracts[_tokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
erc20ContractIndex[_tokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
erc20Balances[_tokenId][_erc20Contract] = newERC20Balance
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
rootOwner
delete erc20ContractIndex[_tokenId][_erc20Contract]
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: transferERC223(uint256,address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
rootOwner
erc20Contracts[_tokenId].length --
require(bool,string)(callSuccess,Call to ownerOf failed)
None
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(erc20Balance >= _value,Not enough token available to transfer.)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
erc20Contracts[_tokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
erc20ContractIndex[_tokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
require(bool,string)(_to != address(0),_to cannot be 0 address)
erc20Balances[_tokenId][_erc20Contract] = newERC20Balance
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
rootOwner
removeERC20(_tokenId,_erc223Contract,_value)
delete erc20ContractIndex[_tokenId][_erc20Contract]
require(bool,string)(ERC20AndERC223(_erc223Contract).transfer(_to,_value,_data),ERC223 transfer failed.)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
TransferERC20(_tokenId,_to,_erc223Contract,_value)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: getERC20(address,uint256,address,uint256) returns() (Slither line:3127)
Visibility: public
getERC20 contains assembly (Slither line:3153)
require(bool,string)(allowed,msg.sender not _from and has no allowance.)
None
erc20Balances[_tokenId][_erc20Contract] += _value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
erc20ContractIndex[_tokenId][_erc20Contract] = erc20Contracts[_tokenId].length
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(callSuccess,call to allowance failed)
erc20Contracts[_tokenId].push(_erc20Contract)
require(bool,string)(remaining >= _value,Value greater than remaining)
allowed = true
is an Assignment Operation (Slither line:3216)
ReceivedERC20(_from,_tokenId,_erc20Contract,_value)
erc20Received(_from,_tokenId,_erc20Contract,_value)
require(bool,string)(address(mokens[_tokenId].data) != address(0),_tokenId does not exist.)
require(bool,string)(ERC20AndERC223(_erc20Contract).transferFrom(_from,this,_value),ERC20 transfer failed.)
Checking function: erc20Received(address,uint256,address,uint256) returns() (Slither line:3127)
Visibility: private
Checking function: tokenFallback(address,uint256,bytes) returns() (Slither line:3127)
Checking function: removeBottomUpChild(address,uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: transferFromParent(address,uint256,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
parentToChildTokenIds[_fromContract][_fromTokenId].length --
parentToChildTokenIds[_fromContract][_fromTokenId][currentChildTokenIndex] = uint32(lastChildTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
tokenIdToChildTokenIdsIndex[lastChildTokenId] = currentChildTokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ownedTokens[_from].length --
ownedTokens[_from][tokenIndex] = uint32(lastTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
size > 0
mokens[lastTokenId].data = mokens[lastTokenId].data & 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff | tokenIndex << 160
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
require(bool,string)(_fromContract != address(0),_fromContract cannot be the 0 address.)
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,A token owner address cannot possess more than 65,536 mokens.)
require(bool,string)(_to != address(0),_to cannot be the 0 address.)
mokens[_tokenId].data = data & 0xffffffffffffffffffff00000000000000000000000000000000000000000000 | ownedTokensIndex << 160 | uint256(_to)
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
ownedTokens[_to].push(uint32(_tokenId))
require(bool,string)(address(data) == _fromContract,The tokenId is not owned by _fromContract.)
Transfer(_from,_to,_tokenId)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
require(bool,string)(parentTokenId != 0,Token does not have a parent token.)
require(bool,string)(parentTokenId - 1 == _fromTokenId,tokenId not owned by _fromTokenId)
rootOwner
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || approvedAddress == msg.sender,msg.sender not rootOwner/operator/approved.)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
mokens[_tokenId].parentTokenId = 0
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
delete rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId]
Approval(rootOwner,address(0),_tokenId)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwner
removeBottomUpChild(_fromContract,_fromTokenId,_tokenId)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
delete tokenIdToChildTokenIdsIndex[_tokenId]
_transferFrom(data,_to,_tokenId)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
TransferFromParent(_fromContract,_fromTokenId,_tokenId)
require(bool,string)(callSuccess,Call to ownerOf failed)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
require(bool,string)(retval == ERC721_RECEIVED_NEW,Contract cannot receive ERC721 token.)
rootOwner
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
Checking function: transferToParent(address,address,uint256,uint256,bytes) returns() (Slither line:3127)
Visibility: external
require(bool,string)(_toContract != address(0),toContract cannot be 0)
require(bool,string)(ERC721(_toContract).ownerOf(_toTokenId) != address(0),_toTokenId does not exist)
TransferToParent(_toContract,_toTokenId,_tokenId)
ownedTokens[_from][tokenIndex] = uint32(lastTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(address(data) == _from,The tokenId is not owned by _from.)
mokens[lastTokenId].data = mokens[lastTokenId].data & 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff | tokenIndex << 160
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
require(bool,string)(mokens[_tokenId].parentTokenId == 0,Cannot transfer from address when owned by a token.)
require(bool,string)(tokenOwnerToOperators[_from][msg.sender] || approvedAddress == msg.sender,msg.sender not _from/operator/approved.)
childApproved(_from,_tokenId)
require(bool,string)(tokenOwner >> 224 != ERC998_MAGIC_VALUE,Token is child of top down composable)
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,A token owner address cannot possess more than 65,536 mokens.)
assert(bool)(parentTokenId > _toTokenId)
mokens[_tokenId].data = data & 0xffffffffffffffffffff00000000000000000000000000000000000000000000 | ownedTokensIndex << 160 | uint256(_to)
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
mokens[_tokenId].parentTokenId = parentTokenId
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
ownedTokens[_to].push(uint32(_tokenId))
Transfer(_from,_to,_tokenId)
delete rootOwnerAndTokenIdToApprovedAddress[_from][_tokenId]
parentToChildTokenIds[_toContract][_toTokenId].push(uint32(_tokenId))
Approval(_from,address(0),_tokenId)
tokenIdToChildTokenIdsIndex[_tokenId] = index
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ownedTokens[_from].length --
_transferFrom(data,_toContract,_tokenId)
require(bool,string)(_from != address(0),_from cannot be the 0 address.)
Checking function: transferAsChild(address,uint256,address,uint256,uint256,bytes) returns() (Slither line:3127)
Visibility: external
parentToChildTokenIds[_fromContract][_fromTokenId].length --
parentToChildTokenIds[_fromContract][_fromTokenId][currentChildTokenIndex] = uint32(lastChildTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
tokenIdToChildTokenIdsIndex[lastChildTokenId] = currentChildTokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ownedTokens[_from].length --
ownedTokens[_from][tokenIndex] = uint32(lastTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
mokens[lastTokenId].data = mokens[lastTokenId].data & 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff | tokenIndex << 160
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
require(bool,string)(_fromContract != address(0),_fromContract cannot be the 0 address.)
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,A token owner address cannot possess more than 65,536 mokens.)
require(bool,string)(_toContract != address(0),_toContract cannot be the 0 address.)
mokens[_tokenId].data = data & 0xffffffffffffffffffff00000000000000000000000000000000000000000000 | ownedTokensIndex << 160 | uint256(_to)
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
ownedTokens[_to].push(uint32(_tokenId))
Transfer(_from,_to,_tokenId)
require(bool,string)(address(data) == _fromContract,The tokenId is not owned by _fromContract.)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
require(bool,string)(parentTokenId != 0,Token does not have a parent token.)
require(bool,string)(parentTokenId - 1 == _fromTokenId,tokenId not owned by _fromTokenId)
rootOwner
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || approvedAddress == msg.sender,msg.sender not rootOwner/operator/approved.)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
removeBottomUpChild(_fromContract,_fromTokenId,_tokenId)
delete rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId]
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
Approval(rootOwner,address(0),_tokenId)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwner
parentTokenId = _toTokenId + 1
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
assert(bool)(parentTokenId > _toTokenId)
mokens[_tokenId].parentTokenId = parentTokenId
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentToChildTokenIds[_toContract][_toTokenId].push(uint32(_tokenId))
require(bool,string)(callSuccess,Call to ownerOf failed)
tokenIdToChildTokenIdsIndex[_tokenId] = index
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
_transferFrom(data,_toContract,_tokenId)
require(bool,string)(ERC721(_toContract).ownerOf(_toTokenId) != address(0),_toTokenId does not exist)
Transfer(_fromContract,_toContract,_tokenId)
TransferFromParent(_fromContract,_fromTokenId,_tokenId)
rootOwner
TransferToParent(_toContract,_toTokenId,_tokenId)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
Checking function: getStateHash(uint256) returns(bytes32) (Slither line:3127)
Visibility: public
i = 0
is an Assignment Operation (Slither line:3216)
i = 0
is an Assignment Operation (Slither line:3216)
i ++
stateHash = keccak256()(stateHash,erc20Balances[_tokenId][erc20Contracts_[i]])
is an Assignment Operation (Slither line:3216)
i ++
stateHash = keccak256()(stateHash,childTokens[_tokenId][childContracts_[i]])
is an Assignment Operation (Slither line:3216)
keccak256()(stateHash,linkHash)
stateHash = keccak256()(childContracts_)
is an Assignment Operation (Slither line:3216)
stateHash = keccak256()(erc20Contracts_)
is an Assignment Operation (Slither line:3216)
length = erc20Contracts_.length
is an Assignment Operation (Slither line:3216)
Checking function: slitherConstructorVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: isContract(address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: rootOwnerOf(uint256) returns(bytes32) (Slither line:3127)
Visibility: public
rootOwnerOf contains assembly (Slither line:3153)
rootOwner
require(bool,string)(callSuccess,Call to ownerOf failed)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: rootOwnerOfChild(address,uint256) returns(bytes32) (Slither line:3127)
Visibility: public
rootOwner
require(bool,string)(callSuccess,Call to ownerOf failed)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
tokenId = _childTokenId
is an Assignment Operation (Slither line:3216)
rootOwner
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
rootOwnerOf(tokenId)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
tokenId = childTokenOwner[_childContract][_childTokenId]
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
require(bool,string)(tokenId != 0,Child token does not exist)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
tokenId --
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: childApproved(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _transferFrom(uint256,address,uint256) returns() (Slither line:3127)
Visibility: internal

End MokensDelegate.find_setter_in_contract (Slither line:3345)

Checking for delegate at slot 36 in contract AbstractMokens (Slither line:1355)
Found delegate at slot 36 in contract AbstractMokens (Slither line:1362)

Begin AbstractMokens.find_getter_in_contract (Slither line:2974)

delegate is a Variable object
Checking function: isContract (Slither line:2988)
isContract returns bool variable  (Slither line:3008)
RETURN node expression: size > 0 (Slither line:3028)
Checking function: rootOwnerOf (Slither line:2988)
rootOwnerOf returns bytes32 variable called rootOwner (Slither line:3008)
RETURN node expression: rootOwner (Slither line:3028)
RETURN node expression: ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress) (Slither line:3028)
RETURN node expression: rootOwner (Slither line:3028)
RETURN node expression: rootOwner (Slither line:3028)
RETURN node expression: ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress) (Slither line:3028)
Checking function: rootOwnerOfChild (Slither line:2988)
rootOwnerOfChild returns bytes32 variable called rootOwner (Slither line:3008)
RETURN node expression: rootOwnerOf(tokenId) (Slither line:3028)
Checking function: childApproved (Slither line:2988)
Checking function: _transferFrom (Slither line:2988)
Checking function: slitherConstructorVariables (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End AbstractMokens.find_getter_in_contract (Slither line:3083)


Begin AbstractMokens.find_setter_in_contract (Slither line:3119)

Checking function: isContract(address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: rootOwnerOf(uint256) returns(bytes32) (Slither line:3127)
Visibility: public
rootOwnerOf contains assembly (Slither line:3153)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwner
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(callSuccess,Call to ownerOf failed)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId --
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwner
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
Checking function: rootOwnerOfChild(address,uint256) returns(bytes32) (Slither line:3127)
Visibility: public
tokenId --
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
tokenId = _childTokenId
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwner
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(callSuccess,Call to ownerOf failed)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId --
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(tokenId != 0,Child token does not exist)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwnerOf(tokenId)
tokenId = childTokenOwner[_childContract][_childTokenId]
is an Assignment Operation (Slither line:3216)
rootOwner
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
Checking function: childApproved(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _transferFrom(uint256,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End AbstractMokens.find_setter_in_contract (Slither line:3345)

Checking for delegate at slot 36 in contract MokensDelegate (Slither line:1355)
Found delegate at slot 36 in contract MokensDelegate (Slither line:1362)

Begin MokensDelegate.find_getter_in_contract (Slither line:2974)

delegate is a Variable object
Checking function: isContract (Slither line:2988)
isContract returns bool variable  (Slither line:3008)
RETURN node expression: size > 0 (Slither line:3028)
Checking function: rootOwnerOf (Slither line:2988)
rootOwnerOf returns bytes32 variable called rootOwner (Slither line:3008)
RETURN node expression: rootOwner (Slither line:3028)
RETURN node expression: ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress) (Slither line:3028)
RETURN node expression: rootOwner (Slither line:3028)
RETURN node expression: ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress) (Slither line:3028)
RETURN node expression: rootOwner (Slither line:3028)
Checking function: rootOwnerOfChild (Slither line:2988)
rootOwnerOfChild returns bytes32 variable called rootOwner (Slither line:3008)
RETURN node expression: rootOwnerOf(tokenId) (Slither line:3028)
Checking function: childApproved (Slither line:2988)
Checking function: _transferFrom (Slither line:2988)
Checking function: withdraw (Slither line:2988)
Checking function: transferOwnership (Slither line:2988)
Checking function: updateLinkHash (Slither line:2988)
Checking function: setDefaultURIStart (Slither line:2988)
Checking function: setDefaultURIEnd (Slither line:2988)
Checking function: tokenURI (Slither line:2988)
tokenURI returns string variable called tokenURIString (Slither line:3008)
RETURN node expression: makeIntString(defaultURIStart,_tokenId,defaultURIEnd) (Slither line:3028)
Checking function: makeIntString (Slither line:2988)
makeIntString returns string variable  (Slither line:3008)
RETURN node expression: string(newStringBytes) (Slither line:3028)
Checking function: startNextEra_ (Slither line:2988)
startNextEra_ returns uint256 variable called index (Slither line:3008)
startNextEra_ returns uint256 variable called startTokenId (Slither line:3008)
RETURN node expression: (index,startTokenId) (Slither line:3028)
Checking function: startNextEra (Slither line:2988)
startNextEra returns uint256 variable called index (Slither line:3008)
startNextEra returns uint256 variable called startTokenId (Slither line:3008)
startNextEra returns uint256 variable called mintPrice (Slither line:3008)
RETURN node expression: (index,startTokenId,mintPrice) (Slither line:3028)
Checking function: startNextEra (Slither line:2988)
startNextEra returns uint256 variable called index (Slither line:3008)
startNextEra returns uint256 variable called startTokenId (Slither line:3008)
RETURN node expression: startNextEra_(_eraName) (Slither line:3028)
Checking function: setMintPrice (Slither line:2988)
setMintPrice returns uint256 variable called mintPrice (Slither line:3008)
RETURN node expression: mintPrice (Slither line:3028)
Checking function: addMintContract (Slither line:2988)
Checking function: removeMintContract (Slither line:2988)
Checking function: removeChild (Slither line:2988)
Checking function: safeTransferChild (Slither line:2988)
Checking function: safeTransferChild (Slither line:2988)
Checking function: transferChild (Slither line:2988)
Checking function: transferChildToParent (Slither line:2988)
Checking function: removeERC20 (Slither line:2988)
Checking function: transferERC20 (Slither line:2988)
Checking function: transferERC223 (Slither line:2988)
Checking function: getERC20 (Slither line:2988)
Checking function: erc20Received (Slither line:2988)
Checking function: tokenFallback (Slither line:2988)
Checking function: removeBottomUpChild (Slither line:2988)
Checking function: transferFromParent (Slither line:2988)
Checking function: transferToParent (Slither line:2988)
Checking function: transferAsChild (Slither line:2988)
Checking function: getStateHash (Slither line:2988)
getStateHash returns bytes32 variable called stateHash (Slither line:3008)
RETURN node expression: keccak256()(stateHash,linkHash) (Slither line:3028)
Checking function: slitherConstructorVariables (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End MokensDelegate.find_getter_in_contract (Slither line:3083)


Begin MokensDelegate.find_setter_in_contract (Slither line:3119)

Checking function: withdraw(address,uint256) returns() (Slither line:3127)
Visibility: external
_sendTo.transfer(_amount)
onlyOwner()
require(bool,string)(_amount <= mokensContract.balance,Amount is greater than balance.)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
Checking function: transferOwnership(address) returns() (Slither line:3127)
Visibility: external
owner = _newOwner
is an Assignment Operation (Slither line:3216)
onlyOwner()
require(bool,string)(msg.sender == owner,Must be the contract owner.)
require(bool,string)(_newOwner != address(0),_newOwner cannot be 0 address.)
Checking function: updateLinkHash(uint256,bytes32) returns() (Slither line:3127)
Visibility: external
rootOwner
require(bool,string)(callSuccess,Call to ownerOf failed)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
mokens[_tokenId].data = data
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
LinkHashChange(_tokenId,bytes32(data))
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: setDefaultURIStart(string) returns() (Slither line:3127)
Visibility: external
onlyOwner()
require(bool,string)(msg.sender == owner,Must be the contract owner.)
defaultURIStart = _defaultURIStart
is an Assignment Operation (Slither line:3216)
Checking function: setDefaultURIEnd(string) returns() (Slither line:3127)
Visibility: external
onlyOwner()
require(bool,string)(msg.sender == owner,Must be the contract owner.)
defaultURIEnd = _defaultURIEnd
is an Assignment Operation (Slither line:3216)
Checking function: tokenURI(uint256) returns(string) (Slither line:3127)
Visibility: external
i = 0
is an Assignment Operation (Slither line:3216)
string(newStringBytes)
i ++
newStringBytes[i + startStringLength] = reversed[numDigits - 1 - i]
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
i = 0
is an Assignment Operation (Slither line:3216)
require(bool,string)(_tokenId < mokensLength,_tokenId does not exist.)
v = v / 10
is an Assignment Operation (Slither line:3216)
makeIntString(defaultURIStart,_tokenId,defaultURIEnd)
reversed[numDigits ++] = bytes1(48 + remainder)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
i = 0
is an Assignment Operation (Slither line:3216)
i ++
newStringBytes[i] = startStringBytes[i]
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
numDigits = 1
is an Assignment Operation (Slither line:3216)
reversed[0] = bytes1(48)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
i ++
newStringBytes[i + startStringLength + numDigits] = endStringBytes[i]
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
Checking function: makeIntString(string,uint256,string) returns(string) (Slither line:3127)
Visibility: private
Checking function: startNextEra_(bytes32) returns(uint256,uint256) (Slither line:3127)
Visibility: private
Checking function: startNextEra(bytes32,uint256,uint256,uint256) returns(uint256,uint256,uint256) (Slither line:3127)
Visibility: external
require(bool,string)(totalStepPrice >= _mintPriceOffset,(mokensLength * mintStepPrice) must be greater than or equal to mintPriceOffset.)
startTokenId = mokensLength
is an Assignment Operation (Slither line:3216)
mintPrice = totalStepPrice - _mintPriceOffset
is an Assignment Operation (Slither line:3216)
index = eraLength ++
is an Assignment Operation (Slither line:3216)
MintPriceConfigurationChange(mintPrice,_mintStepPrice,_mintPriceOffset,_mintPriceBuffer)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
eras[index] = _eraName
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
MintPriceChange(mintPrice)
eraIndex[_eraName] = index + 1
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
(index,startTokenId) = startNextEra_(_eraName)
is an Assignment Operation (Slither line:3216)
NewEra(index,_eraName,startTokenId)
(index,startTokenId,mintPrice)
(index,startTokenId)
onlyOwner()
require(bool,string)(_mintStepPrice < 10000000000000000000000,mintStepPrice must be less than 10,000 ether.)
mintStepPrice = _mintStepPrice
is an Assignment Operation (Slither line:3216)
require(bool,string)(eraIndex[_eraName] == 0,Era name already exists.)
mintPriceOffset = _mintPriceOffset
is an Assignment Operation (Slither line:3216)
require(bool,string)(_eraName != 0,eraName is empty string.)
mintPriceBuffer = _mintPriceBuffer
is an Assignment Operation (Slither line:3216)
Checking function: startNextEra(bytes32) returns(uint256,uint256) (Slither line:3127)
Visibility: external
onlyOwner()
(index,startTokenId)
require(bool,string)(_eraName != 0,eraName is empty string.)
eraIndex[_eraName] = index + 1
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
startTokenId = mokensLength
is an Assignment Operation (Slither line:3216)
NewEra(index,_eraName,startTokenId)
startNextEra_(_eraName)
index = eraLength ++
is an Assignment Operation (Slither line:3216)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
require(bool,string)(eraIndex[_eraName] == 0,Era name already exists.)
eras[index] = _eraName
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
Checking function: setMintPrice(uint256,uint256,uint256) returns(uint256) (Slither line:3127)
Visibility: external
MintPriceChange(mintPrice)
mintPriceOffset = _mintPriceOffset
is an Assignment Operation (Slither line:3216)
require(bool,string)(totalStepPrice >= _mintPriceOffset,(mokensLength * mintStepPrice) must be greater than or equal to mintPriceOffset.)
mintPrice
mintPriceBuffer = _mintPriceBuffer
is an Assignment Operation (Slither line:3216)
mintPrice = totalStepPrice - _mintPriceOffset
is an Assignment Operation (Slither line:3216)
require(bool,string)(_mintStepPrice < 10000000000000000000000,mintStepPrice must be less than 10,000 ether.)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
onlyOwner()
MintPriceConfigurationChange(mintPrice,_mintStepPrice,_mintPriceOffset,_mintPriceBuffer)
mintStepPrice = _mintStepPrice
is an Assignment Operation (Slither line:3216)
Checking function: addMintContract(address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(mintContractIndex[_contract] == 0,Contract already added.)
onlyOwner()
mintContracts.push(_contract)
mintContractIndex[_contract] = mintContracts.length
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
require(bool,string)(isContract(_contract),Address is not a contract.)
size > 0
Checking function: removeMintContract(address) returns() (Slither line:3127)
Visibility: external
mintContractIndex[lastMintContract] = index
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
delete mintContractIndex[_contract]
require(bool,string)(index != 0,Mint contract was not added.)
mintContracts.length --
mintContracts[index - 1] = lastMintContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(msg.sender == owner,Must be the contract owner.)
onlyOwner()
Checking function: removeChild(uint256,address,uint256) returns() (Slither line:3127)
Visibility: private
Checking function: safeTransferChild(uint256,address,address,uint256) returns() (Slither line:3127)
Visibility: external
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_fromTokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
childTokens[_fromTokenId][_childContract][tokenIndex] = lastToken
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
rootOwner
childContracts[_fromTokenId].length --
require(bool,string)(callSuccess,Call to ownerOf failed)
childTokenIndex[_fromTokenId][_childContract][lastToken] = tokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
removeChild(_fromTokenId,_childContract,_childTokenId)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
childContracts[_fromTokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ERC721(_childContract).safeTransferFrom(this,_to,_childTokenId)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
childContractIndex[_fromTokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
TransferChild(_fromTokenId,_to,_childContract,_childTokenId)
delete childTokenIndex[_fromTokenId][_childContract][_childTokenId]
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
delete childTokenOwner[_childContract][_childTokenId]
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
delete childContractIndex[_fromTokenId][_childContract]
rootOwner
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
require(bool,string)(tokenId != 0,Child token does not exist)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
require(bool,string)(_fromTokenId == tokenId - 1,_fromTokenId does not own the child token.)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
childTokens[_fromTokenId][_childContract].length --
require(bool,string)(_to != address(0),_to cannot be 0 address.)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: safeTransferChild(uint256,address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
removeChild(_fromTokenId,_childContract,_childTokenId)
ERC721(_childContract).safeTransferFrom(this,_to,_childTokenId,_data)
rootOwner
childTokens[_fromTokenId][_childContract][tokenIndex] = lastToken
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
childContracts[_fromTokenId].length --
require(bool,string)(callSuccess,Call to ownerOf failed)
childTokenIndex[_fromTokenId][_childContract][lastToken] = tokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
TransferChild(_fromTokenId,_to,_childContract,_childTokenId)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
childContracts[_fromTokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
childContractIndex[_fromTokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
delete childTokenIndex[_fromTokenId][_childContract][_childTokenId]
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
delete childTokenOwner[_childContract][_childTokenId]
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
delete childContractIndex[_fromTokenId][_childContract]
rootOwner
require(bool,string)(tokenId != 0,Child token does not exist)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
require(bool,string)(_fromTokenId == tokenId - 1,_fromTokenId does not own the child token.)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(_to != address(0),_to cannot be 0 address.)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
childTokens[_fromTokenId][_childContract].length --
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_fromTokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: transferChild(uint256,address,address,uint256) returns() (Slither line:3127)
Visibility: external
transferChild contains assembly (Slither line:3153)
childTokens[_fromTokenId][_childContract][tokenIndex] = lastToken
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
childContracts[_fromTokenId].length --
rootOwner
require(bool,string)(callSuccess,Call to ownerOf failed)
childTokenIndex[_fromTokenId][_childContract][lastToken] = tokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
ERC721(_childContract).transferFrom(this,_to,_childTokenId)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
childContracts[_fromTokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
TransferChild(_fromTokenId,_to,_childContract,_childTokenId)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
childContractIndex[_fromTokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
delete childTokenIndex[_fromTokenId][_childContract][_childTokenId]
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
delete childTokenOwner[_childContract][_childTokenId]
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
delete childContractIndex[_fromTokenId][_childContract]
require(bool,string)(tokenId != 0,Child token does not exist)
rootOwner
require(bool,string)(_fromTokenId == tokenId - 1,_fromTokenId does not own the child token.)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
require(bool,string)(_to != address(0),_to cannot be 0 address.)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
childTokens[_fromTokenId][_childContract].length --
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_fromTokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
removeChild(_fromTokenId,_childContract,_childTokenId)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: transferChildToParent(uint256,address,uint256,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
require(bool,string)(tokenId != 0,Child token does not exist)
childTokens[_fromTokenId][_childContract][tokenIndex] = lastToken
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
childContracts[_fromTokenId].length --
require(bool,string)(_fromTokenId == tokenId - 1,_fromTokenId does not own the child token.)
rootOwner
require(bool,string)(callSuccess,Call to ownerOf failed)
childTokenIndex[_fromTokenId][_childContract][lastToken] = tokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(_toContract != address(0),_toContract cannot be 0 address.)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
childContracts[_fromTokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
childContractIndex[_fromTokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
delete childTokenIndex[_fromTokenId][_childContract][_childTokenId]
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_fromTokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
delete childTokenOwner[_childContract][_childTokenId]
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
removeChild(_fromTokenId,_childContract,_childTokenId)
delete childContractIndex[_fromTokenId][_childContract]
ERC998ERC721BottomUp(_childContract).transferToParent(address(this),_toContract,_toTokenId,_childTokenId,_data)
rootOwner
TransferChild(_fromTokenId,_toContract,_childContract,_childTokenId)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
childTokens[_fromTokenId][_childContract].length --
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: removeERC20(uint256,address,uint256) returns() (Slither line:3127)
Visibility: private
Checking function: transferERC20(uint256,address,address,uint256) returns() (Slither line:3127)
Visibility: external
require(bool,string)(_to != address(0),_to cannot be 0 address)
removeERC20(_tokenId,_erc20Contract,_value)
rootOwner
erc20Contracts[_tokenId].length --
require(bool,string)(callSuccess,Call to ownerOf failed)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
require(bool,string)(ERC20AndERC223(_erc20Contract).transfer(_to,_value),ERC20 transfer failed.)
None
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
TransferERC20(_tokenId,_to,_erc20Contract,_value)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(erc20Balance >= _value,Not enough token available to transfer.)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
erc20Contracts[_tokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
erc20ContractIndex[_tokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
erc20Balances[_tokenId][_erc20Contract] = newERC20Balance
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
rootOwner
delete erc20ContractIndex[_tokenId][_erc20Contract]
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: transferERC223(uint256,address,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
rootOwner
erc20Contracts[_tokenId].length --
require(bool,string)(callSuccess,Call to ownerOf failed)
None
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(erc20Balance >= _value,Not enough token available to transfer.)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
erc20Contracts[_tokenId][contractIndex] = lastContract
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
erc20ContractIndex[_tokenId][lastContract] = contractIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId] == msg.sender,msg.sender not rootOwner/operator/approved.)
require(bool,string)(_to != address(0),_to cannot be 0 address)
erc20Balances[_tokenId][_erc20Contract] = newERC20Balance
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
rootOwner
removeERC20(_tokenId,_erc223Contract,_value)
delete erc20ContractIndex[_tokenId][_erc20Contract]
require(bool,string)(ERC20AndERC223(_erc223Contract).transfer(_to,_value,_data),ERC223 transfer failed.)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
TransferERC20(_tokenId,_to,_erc223Contract,_value)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: getERC20(address,uint256,address,uint256) returns() (Slither line:3127)
Visibility: public
getERC20 contains assembly (Slither line:3153)
require(bool,string)(allowed,msg.sender not _from and has no allowance.)
None
erc20Balances[_tokenId][_erc20Contract] += _value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
erc20ContractIndex[_tokenId][_erc20Contract] = erc20Contracts[_tokenId].length
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(callSuccess,call to allowance failed)
erc20Contracts[_tokenId].push(_erc20Contract)
require(bool,string)(remaining >= _value,Value greater than remaining)
allowed = true
is an Assignment Operation (Slither line:3216)
ReceivedERC20(_from,_tokenId,_erc20Contract,_value)
erc20Received(_from,_tokenId,_erc20Contract,_value)
require(bool,string)(address(mokens[_tokenId].data) != address(0),_tokenId does not exist.)
require(bool,string)(ERC20AndERC223(_erc20Contract).transferFrom(_from,this,_value),ERC20 transfer failed.)
Checking function: erc20Received(address,uint256,address,uint256) returns() (Slither line:3127)
Visibility: private
Checking function: tokenFallback(address,uint256,bytes) returns() (Slither line:3127)
Checking function: removeBottomUpChild(address,uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: transferFromParent(address,uint256,address,uint256,bytes) returns() (Slither line:3127)
Visibility: external
parentToChildTokenIds[_fromContract][_fromTokenId].length --
parentToChildTokenIds[_fromContract][_fromTokenId][currentChildTokenIndex] = uint32(lastChildTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
tokenIdToChildTokenIdsIndex[lastChildTokenId] = currentChildTokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ownedTokens[_from].length --
ownedTokens[_from][tokenIndex] = uint32(lastTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
size > 0
mokens[lastTokenId].data = mokens[lastTokenId].data & 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff | tokenIndex << 160
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
require(bool,string)(_fromContract != address(0),_fromContract cannot be the 0 address.)
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,A token owner address cannot possess more than 65,536 mokens.)
require(bool,string)(_to != address(0),_to cannot be the 0 address.)
mokens[_tokenId].data = data & 0xffffffffffffffffffff00000000000000000000000000000000000000000000 | ownedTokensIndex << 160 | uint256(_to)
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
ownedTokens[_to].push(uint32(_tokenId))
require(bool,string)(address(data) == _fromContract,The tokenId is not owned by _fromContract.)
Transfer(_from,_to,_tokenId)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
require(bool,string)(parentTokenId != 0,Token does not have a parent token.)
require(bool,string)(parentTokenId - 1 == _fromTokenId,tokenId not owned by _fromTokenId)
rootOwner
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || approvedAddress == msg.sender,msg.sender not rootOwner/operator/approved.)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
mokens[_tokenId].parentTokenId = 0
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
delete rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId]
Approval(rootOwner,address(0),_tokenId)
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwner
removeBottomUpChild(_fromContract,_fromTokenId,_tokenId)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
delete tokenIdToChildTokenIdsIndex[_tokenId]
_transferFrom(data,_to,_tokenId)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
TransferFromParent(_fromContract,_fromTokenId,_tokenId)
require(bool,string)(callSuccess,Call to ownerOf failed)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
require(bool,string)(retval == ERC721_RECEIVED_NEW,Contract cannot receive ERC721 token.)
rootOwner
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
Checking function: transferToParent(address,address,uint256,uint256,bytes) returns() (Slither line:3127)
Visibility: external
require(bool,string)(_toContract != address(0),toContract cannot be 0)
require(bool,string)(ERC721(_toContract).ownerOf(_toTokenId) != address(0),_toTokenId does not exist)
TransferToParent(_toContract,_toTokenId,_tokenId)
ownedTokens[_from][tokenIndex] = uint32(lastTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
require(bool,string)(address(data) == _from,The tokenId is not owned by _from.)
mokens[lastTokenId].data = mokens[lastTokenId].data & 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff | tokenIndex << 160
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
require(bool,string)(mokens[_tokenId].parentTokenId == 0,Cannot transfer from address when owned by a token.)
require(bool,string)(tokenOwnerToOperators[_from][msg.sender] || approvedAddress == msg.sender,msg.sender not _from/operator/approved.)
childApproved(_from,_tokenId)
require(bool,string)(tokenOwner >> 224 != ERC998_MAGIC_VALUE,Token is child of top down composable)
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,A token owner address cannot possess more than 65,536 mokens.)
assert(bool)(parentTokenId > _toTokenId)
mokens[_tokenId].data = data & 0xffffffffffffffffffff00000000000000000000000000000000000000000000 | ownedTokensIndex << 160 | uint256(_to)
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
mokens[_tokenId].parentTokenId = parentTokenId
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
ownedTokens[_to].push(uint32(_tokenId))
Transfer(_from,_to,_tokenId)
delete rootOwnerAndTokenIdToApprovedAddress[_from][_tokenId]
parentToChildTokenIds[_toContract][_toTokenId].push(uint32(_tokenId))
Approval(_from,address(0),_tokenId)
tokenIdToChildTokenIdsIndex[_tokenId] = index
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ownedTokens[_from].length --
_transferFrom(data,_toContract,_tokenId)
require(bool,string)(_from != address(0),_from cannot be the 0 address.)
Checking function: transferAsChild(address,uint256,address,uint256,uint256,bytes) returns() (Slither line:3127)
Visibility: external
parentToChildTokenIds[_fromContract][_fromTokenId].length --
parentToChildTokenIds[_fromContract][_fromTokenId][currentChildTokenIndex] = uint32(lastChildTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
tokenIdToChildTokenIdsIndex[lastChildTokenId] = currentChildTokenIndex
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
ownedTokens[_from].length --
ownedTokens[_from][tokenIndex] = uint32(lastTokenId)
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
mokens[lastTokenId].data = mokens[lastTokenId].data & 0xffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff | tokenIndex << 160
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
require(bool,string)(_fromContract != address(0),_fromContract cannot be the 0 address.)
require(bool,string)(ownedTokensIndex < MAX_OWNER_MOKENS,A token owner address cannot possess more than 65,536 mokens.)
require(bool,string)(_toContract != address(0),_toContract cannot be the 0 address.)
mokens[_tokenId].data = data & 0xffffffffffffffffffff00000000000000000000000000000000000000000000 | ownedTokensIndex << 160 | uint256(_to)
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
ownedTokens[_to].push(uint32(_tokenId))
Transfer(_from,_to,_tokenId)
require(bool,string)(address(data) == _fromContract,The tokenId is not owned by _fromContract.)
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
require(bool,string)(parentTokenId != 0,Token does not have a parent token.)
require(bool,string)(parentTokenId - 1 == _fromTokenId,tokenId not owned by _fromTokenId)
rootOwner
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
require(bool,string)(rootOwner == msg.sender || tokenOwnerToOperators[rootOwner][msg.sender] || approvedAddress == msg.sender,msg.sender not rootOwner/operator/approved.)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
removeBottomUpChild(_fromContract,_fromTokenId,_tokenId)
delete rootOwnerAndTokenIdToApprovedAddress[rootOwner][_tokenId]
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
Approval(rootOwner,address(0),_tokenId)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
rootOwner
parentTokenId = _toTokenId + 1
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
assert(bool)(parentTokenId > _toTokenId)
mokens[_tokenId].parentTokenId = parentTokenId
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentToChildTokenIds[_toContract][_toTokenId].push(uint32(_tokenId))
require(bool,string)(callSuccess,Call to ownerOf failed)
tokenIdToChildTokenIdsIndex[_tokenId] = index
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
_transferFrom(data,_toContract,_tokenId)
require(bool,string)(ERC721(_toContract).ownerOf(_toTokenId) != address(0),_toTokenId does not exist)
Transfer(_fromContract,_toContract,_tokenId)
TransferFromParent(_fromContract,_fromTokenId,_tokenId)
rootOwner
TransferToParent(_toContract,_toTokenId,_tokenId)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
Checking function: getStateHash(uint256) returns(bytes32) (Slither line:3127)
Visibility: public
i = 0
is an Assignment Operation (Slither line:3216)
i = 0
is an Assignment Operation (Slither line:3216)
i ++
stateHash = keccak256()(stateHash,erc20Balances[_tokenId][erc20Contracts_[i]])
is an Assignment Operation (Slither line:3216)
i ++
stateHash = keccak256()(stateHash,childTokens[_tokenId][childContracts_[i]])
is an Assignment Operation (Slither line:3216)
keccak256()(stateHash,linkHash)
stateHash = keccak256()(childContracts_)
is an Assignment Operation (Slither line:3216)
stateHash = keccak256()(erc20Contracts_)
is an Assignment Operation (Slither line:3216)
length = erc20Contracts_.length
is an Assignment Operation (Slither line:3216)
Checking function: slitherConstructorVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: isContract(address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: rootOwnerOf(uint256) returns(bytes32) (Slither line:3127)
Visibility: public
rootOwnerOf contains assembly (Slither line:3153)
rootOwner
require(bool,string)(callSuccess,Call to ownerOf failed)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
rootOwner
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: rootOwnerOfChild(address,uint256) returns(bytes32) (Slither line:3127)
Visibility: public
rootOwner
require(bool,string)(callSuccess,Call to ownerOf failed)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0xed81cdda,childContract,parentTokenId)
is an Assignment Operation (Slither line:3216)
parentTokenId --
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
parentTokenId = mokens[_tokenId].parentTokenId
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x43a61a8e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
tokenId = _childTokenId
is an Assignment Operation (Slither line:3216)
rootOwner
rootOwnerAddress = address(mokens[_tokenId].data)
is an Assignment Operation (Slither line:3216)
rootOwnerOf(tokenId)
_tokenId = parentTokenId - 1
is an Assignment Operation (Slither line:3216)
tokenId = childTokenOwner[_childContract][_childTokenId]
is an Assignment Operation (Slither line:3216)
ERC998_MAGIC_VALUE << 224 | bytes32(rootOwnerAddress)
rootOwner
require(bool,string)(rootOwnerAddress != address(0),tokenId not found.)
require(bool,string)(tokenId != 0,Child token does not exist)
calldata = abi.encodeWithSelector(0xed81cdda,address(this),_tokenId)
is an Assignment Operation (Slither line:3216)
tokenId --
_tokenId = childTokenOwner[rootOwnerAddress][_tokenId] - 1
is an Assignment Operation (Slither line:3216)
calldata = abi.encodeWithSelector(0x6352211e,parentTokenId)
is an Assignment Operation (Slither line:3216)
isParent = parentTokenId > 0
is an Assignment Operation (Slither line:3216)
Checking function: childApproved(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _transferFrom(uint256,address,uint256) returns() (Slither line:3127)
Visibility: internal

End MokensDelegate.find_setter_in_contract (Slither line:3345)

Checking node of type NEW VARIABLE (Slither line:1395)
data
data = msg.data
Checking node of type INLINE ASM (Slither line:1395)
Checking node of type ENTRY_POINT (Slither line:1395)

End Mokens.is_upgradeable_proxy (Slither line:1407)

impl_address_from_contract_call: None
impl_address_from_contract_call: StateVariable delegate
impl_address_from_contract_call: getter is None
Checking public function rootOwnerOf
Checking public function rootOwnerOfChild
Checking external function supportsInterface
Checking external function balanceOf
Checking external function ownerOf
Checking external function approve
Checking external function getApproved
Checking external function setApprovalForAll
Checking external function isApprovedForAll
Checking external function transferFrom
Checking external function safeTransferFrom
Checking external function safeTransferFrom
Checking external function exists
Checking external function tokenOfOwnerByIndex
Checking external function totalSupply
Checking external function tokenByIndex
Checking external function name
Checking external function symbol
Checking external function eraByIndex
Checking external function eraByName
Checking external function currentEra
Checking external function currentEraIndex
Checking external function eraExists
Checking external function totalEras
Checking external function mintData
Checking external function mintPrice
Checking external function mint
Checking public function isMintContract
Checking external function totalMintContracts
Checking external function mintContractByIndex
Checking external function contractMint
Checking external function mokenNameExists
Checking external function mokenId
Checking external function mokenData
Checking public function eraFromMokenData
Checking public function eraFromMokenData
Checking external function mokenEra
Checking external function moken
Checking external function mokenBytes32
Checking external function mokenNoName
Checking external function mokenName
Checking external function mokenNameBytes32
Checking external function getChild
Checking external function onERC721Received
Checking external function onERC721Received
Checking external function ownerOfChild
Checking external function childExists
Checking external function totalChildContracts
Checking external function childContractByIndex
Checking external function totalChildTokens
Checking external function childTokenByIndex
Checking external function balanceOfERC20
Checking external function erc20ContractByIndex
Checking external function totalERC20Contracts
Checking external function tokenOwnerOf
Checking public function totalChildTokens
Checking public function childTokenByIndex
Checking external function fallback
functions_writing_to_variable: delegate
functions_writing_to_variable: checking function Mokens.safeTransferFrom (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.childContractByIndex (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.symbol (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.mintData (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.totalChildTokens (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.validateAndLower (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.ownerOf (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.moken (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.getChild (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.safeTransferFrom (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.totalChildTokens (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.rootOwnerOf (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.eraByIndex (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.mintPrice (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.mokenNameExists (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.childTokenByIndex (proxy_features line:898)
functions_writing_to_variable: checking function Mokens._transferFrom (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.mokenBytes32 (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.approve (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.onERC721Received (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.exists (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.childTokenByIndex (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.eraByName (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.mint (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.mokenId (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.mokenNoName (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.getApproved (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.tokenOfOwnerByIndex (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.onERC721Received (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.balanceOfERC20 (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.isMintContract (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.currentEra (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.rootOwnerOfChild (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.mokenData (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.receiveChild (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.mokenName (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.setApprovalForAll (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.totalSupply (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.ownerOfChild (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.erc20ContractByIndex (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.totalMintContracts (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.currentEraIndex (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.constructor (proxy_features line:898)
functions_writing_to_variable: exp = delegate = _delegate (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: delegate = _delegate (proxy_features line:912)
functions_writing_to_variable: Identifier: delegate (proxy_features line:924)
get_value_assigned: delegate = _delegate
functions_writing_to_variable: exp = blockNum = block.number (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: blockNum = block.number (proxy_features line:912)
functions_writing_to_variable: exp = owner = msg.sender (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: owner = msg.sender (proxy_features line:912)
functions_writing_to_variable: exp = startingEra = Genesis (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: startingEra = Genesis (proxy_features line:912)
functions_writing_to_variable: exp = calldata = abi.encodeWithSignature(startNextEra(bytes32),startingEra) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: calldata = abi.encodeWithSignature(startNextEra(bytes32),startingEra) (proxy_features line:912)
functions_writing_to_variable: exp = require(bool)(callSuccess) (proxy_features line:909)
functions_writing_to_variable: exp = supportedInterfaces[0x01ffc9a7] = true (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: supportedInterfaces[0x01ffc9a7] = true (proxy_features line:912)
functions_writing_to_variable: IndexAccess: supportedInterfaces[0x01ffc9a7] (proxy_features line:920)
functions_writing_to_variable: exp = supportedInterfaces[0x80ac58cd] = true (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: supportedInterfaces[0x80ac58cd] = true (proxy_features line:912)
functions_writing_to_variable: IndexAccess: supportedInterfaces[0x80ac58cd] (proxy_features line:920)
functions_writing_to_variable: exp = supportedInterfaces[0x5b5e139f] = true (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: supportedInterfaces[0x5b5e139f] = true (proxy_features line:912)
functions_writing_to_variable: IndexAccess: supportedInterfaces[0x5b5e139f] (proxy_features line:920)
functions_writing_to_variable: exp = supportedInterfaces[0x780e9d63] = true (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: supportedInterfaces[0x780e9d63] = true (proxy_features line:912)
functions_writing_to_variable: IndexAccess: supportedInterfaces[0x780e9d63] (proxy_features line:920)
functions_writing_to_variable: exp = supportedInterfaces[0x150b7a02] = true (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: supportedInterfaces[0x150b7a02] = true (proxy_features line:912)
functions_writing_to_variable: IndexAccess: supportedInterfaces[0x150b7a02] (proxy_features line:920)
functions_writing_to_variable: exp = supportedInterfaces[0xf0b9e5ba] = true (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: supportedInterfaces[0xf0b9e5ba] = true (proxy_features line:912)
functions_writing_to_variable: IndexAccess: supportedInterfaces[0xf0b9e5ba] (proxy_features line:920)
functions_writing_to_variable: exp = supportedInterfaces[0x1efdf36a] = true (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: supportedInterfaces[0x1efdf36a] = true (proxy_features line:912)
functions_writing_to_variable: IndexAccess: supportedInterfaces[0x1efdf36a] (proxy_features line:920)
functions_writing_to_variable: exp = supportedInterfaces[0xa344afe4] = true (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: supportedInterfaces[0xa344afe4] = true (proxy_features line:912)
functions_writing_to_variable: IndexAccess: supportedInterfaces[0xa344afe4] (proxy_features line:920)
functions_writing_to_variable: exp = supportedInterfaces[0x7294ffed] = true (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: supportedInterfaces[0x7294ffed] = true (proxy_features line:912)
functions_writing_to_variable: IndexAccess: supportedInterfaces[0x7294ffed] (proxy_features line:920)
functions_writing_to_variable: exp = supportedInterfaces[0xc5fd96cd] = true (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: supportedInterfaces[0xc5fd96cd] = true (proxy_features line:912)
functions_writing_to_variable: IndexAccess: supportedInterfaces[0xc5fd96cd] (proxy_features line:920)
functions_writing_to_variable: exp = supportedInterfaces[0xa1b23002] = true (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: supportedInterfaces[0xa1b23002] = true (proxy_features line:912)
functions_writing_to_variable: IndexAccess: supportedInterfaces[0xa1b23002] (proxy_features line:920)
functions_writing_to_variable: exp = supportedInterfaces[0x8318b539] = true (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: supportedInterfaces[0x8318b539] = true (proxy_features line:912)
functions_writing_to_variable: IndexAccess: supportedInterfaces[0x8318b539] (proxy_features line:920)
functions_writing_to_variable: constructor writes _delegate to delegate (proxy_features line:929)
functions_writing_to_variable: checking function Mokens.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.eraFromMokenData (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.mokenNameBytes32 (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.tokenByIndex (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.totalERC20Contracts (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.isApprovedForAll (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.mintContractByIndex (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.childExists (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.eraExists (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.supportsInterface (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.eraFromMokenData (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.childApproved (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.fallback (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.slitherConstructorVariables (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.name (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.tokenOwnerOf (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.transferFrom (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.contractMint (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.totalChildContracts (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.totalEras (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.balanceOf (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.mokenEra (proxy_features line:898)
functions_writing_to_variable: checking function Mokens.isContract (proxy_features line:898)
has_compatibility_checks: dependencies: ['_delegate']
has_compatibility_checks: skipping constructor
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    let result := delegatecall(gas(), sload(delegate_slot), add(data, 0x20), mload(data), 0, 0)
    let size := returndatasize()
    let ptr := mload(0x40)
    returndatacopy(ptr, 0, size)
    switch result
    case 0 {
        revert(ptr, size)
    }
    default {
        return(ptr, size)
    }
}
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: data = msg.data
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: rootOwnerOf

Begin MokensDelegate.is_proxy (Slither line:1425)


End MokensDelegate.is_proxy (Slither line:1428)


Begin MokensDelegate.is_upgradeable_proxy (Slither line:1136)

Checking contract: MokensDelegate 

End MokensDelegate.is_upgradeable_proxy (Slither line:1407)

