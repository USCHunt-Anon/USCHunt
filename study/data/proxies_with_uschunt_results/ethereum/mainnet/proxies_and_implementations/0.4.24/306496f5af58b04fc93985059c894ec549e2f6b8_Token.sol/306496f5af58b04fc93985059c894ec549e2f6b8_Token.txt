
Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin Token.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Token.find_delegatecall_in_exp_node

Found Expression Node: require(bool)(_impl != address(0)) (Slither line:2802)
Expression called: require(bool)
Type of call: tuple() (Slither line:2817)
Args:
_impl != address(0)

End Token.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin Token.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let result := delegatecall(gas(), _impl, add(data, 0x20), mload(data), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called '_impl'
Looking for corresponding Variable
Current function: fallback

Begin Token.find_delegate_variable_from_name
Searching for _impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking owner (Slither line:1689)
Checking _implementation (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking data (Slither line:1703)
Checking _impl (Slither line:1703)
_impl is a Local Variable in Token.fallback (Slither line:1707)
Expression: implementation() (Slither line:1719)

Begin Token.find_delegate_from_call_exp

implementation() (Slither line:2003)
called = implementation (Slither line:2010)
Return node of function Token.implementation(): RETURN _implementation (Slither line:2041)
_implementation (Slither line:2048)
implementation returns a variable of type address   called _implementation (Slither line:2193)

End Token.find_delegate_from_call_exp (Slither line:2328)

Call Expression
End Token.find_delegate_variable_by_name (Slither line:1739)


End Token.find_delegatecall_in_asm (Slither line:1637)


End Token.is_proxy (Slither line:1476)


Begin Token.is_upgradeable_proxy (Slither line:1136)

Checking contract: Token 
Token is delegating to _implementation
Looking for setter (Slither line:1200)


Begin Token.find_setter_in_contract (Slither line:3119)

Checking function: implementation() returns(address) (Slither line:3127)
Visibility: public
_implementation
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: public
UpgradedTo(impl)
require(bool)(msg.sender == owner)
onlyOwner()
require(bool)(_implementation != impl)
_implementation = impl
is an Assignment Operation (Slither line:3216)

End Token.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: Token (Slither line:1264)
Looking for getter (Slither line:1273)


Begin Token.find_getter_in_contract (Slither line:2974)

_implementation is a Variable object
impl
Checking function: constructor (Slither line:2988)
Checking function: renounceOwnership (Slither line:2988)
Checking function: transferOwnership (Slither line:2988)
Checking function: _transferOwnership (Slither line:2988)
Checking function: implementation (Slither line:2988)
implementation returns address variable  (Slither line:3008)
RETURN node expression: _implementation (Slither line:3028)

End Token.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: implementation in contract: Token (Slither line:1285)

End Token.is_upgradeable_proxy (Slither line:1293)

Checking public function renounceOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function transferOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function renounceOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function transferOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function implementation
Checking public function upgradeTo
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function fallback
functions_writing_to_variable: _implementation
functions_writing_to_variable: checking function Token.fallback (proxy_features line:898)
functions_writing_to_variable: checking function Token.renounceOwnership (proxy_features line:898)
functions_writing_to_variable: checking function Token._transferOwnership (proxy_features line:898)
functions_writing_to_variable: checking function Token.upgradeTo (proxy_features line:898)
functions_writing_to_variable: exp = require(bool)(_implementation != impl) (proxy_features line:909)
functions_writing_to_variable: exp = _implementation = impl (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: _implementation = impl (proxy_features line:912)
functions_writing_to_variable: Identifier: _implementation (proxy_features line:924)
get_value_assigned: _implementation = impl
functions_writing_to_variable: exp = UpgradedTo(impl) (proxy_features line:909)
functions_writing_to_variable: exp = onlyOwner() (proxy_features line:909)
functions_writing_to_variable: exp = require(bool)(msg.sender == owner) (proxy_features line:909)
functions_writing_to_variable: upgradeTo writes impl to _implementation (proxy_features line:929)
functions_writing_to_variable: checking function Token.implementation (proxy_features line:898)
functions_writing_to_variable: checking function Token.constructor (proxy_features line:898)
functions_writing_to_variable: checking function Token.transferOwnership (proxy_features line:898)
has_compatibility_checks: dependencies: ['impl']
has_compatibility_checks: checking public function upgradeTo
require(bool)(msg.sender == owner)
has_compatibility_checks: condition msg.sender == owner
require(bool)(_implementation != impl)
has_compatibility_checks: condition _implementation != impl
check_condition_from_expression: modifier calls: ['onlyOwner()']
check_condition_from_expression: condition impl != impl
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    let result := delegatecall(gas(), _impl, add(data, 0x20), mload(data), 0, 0)
    let size := returndatasize()
    let ptr := mload(0x40)
    returndatacopy(ptr, 0, size)
    switch result
    case 0 {
        revert(ptr, size)
    }
    default {
        return(ptr, size)
    }
}
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool)(_impl != address(0))
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: data = msg.data
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: _impl = implementation()
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
Found public function: constructor
Found public function: renounceOwnership
has_time_delay: (node.type) EXPRESSION
(Expression) UpgradedTo(impl)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(msg.sender == owner)
has_time_delay: (node.type) EXPRESSION
(Expression) onlyOwner()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(_implementation != impl)
has_time_delay: (node.type) EXPRESSION
(Expression) _implementation = impl

Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin Administratable.is_proxy (Slither line:1425)


End Administratable.is_proxy (Slither line:1428)


Begin Administratable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Administratable 

End Administratable.is_upgradeable_proxy (Slither line:1407)


Begin Pausable.is_proxy (Slither line:1425)


End Pausable.is_proxy (Slither line:1428)


Begin Pausable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Pausable 

End Pausable.is_upgradeable_proxy (Slither line:1407)


Begin EternalStorage.is_proxy (Slither line:1425)


End EternalStorage.is_proxy (Slither line:1428)


Begin EternalStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: EternalStorage 

End EternalStorage.is_upgradeable_proxy (Slither line:1407)


Begin TokenLib.is_proxy (Slither line:1425)


End TokenLib.is_proxy (Slither line:1428)


Begin TokenLib.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenLib 

End TokenLib.is_upgradeable_proxy (Slither line:1407)


Begin ERC20Basic.is_proxy (Slither line:1425)


End ERC20Basic.is_proxy (Slither line:1428)


Begin ERC20Basic.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20Basic 

End ERC20Basic.is_upgradeable_proxy (Slither line:1407)


Begin ERC20.is_proxy (Slither line:1425)


End ERC20.is_proxy (Slither line:1428)


Begin ERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20 

End ERC20.is_upgradeable_proxy (Slither line:1407)


Begin UpgradableToken.is_proxy (Slither line:1425)


End UpgradableToken.is_proxy (Slither line:1428)


Begin UpgradableToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: UpgradableToken 

End UpgradableToken.is_upgradeable_proxy (Slither line:1407)


Begin DetailedERC20.is_proxy (Slither line:1425)


End DetailedERC20.is_proxy (Slither line:1428)


Begin DetailedERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: DetailedERC20 

End DetailedERC20.is_upgradeable_proxy (Slither line:1407)


Begin TokenDelegate.is_proxy (Slither line:1425)


End TokenDelegate.is_proxy (Slither line:1428)


Begin TokenDelegate.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenDelegate 

End TokenDelegate.is_upgradeable_proxy (Slither line:1407)

