
Begin TieredCrowdfundStorage.is_proxy (Slither line:1425)


End TieredCrowdfundStorage.is_proxy (Slither line:1428)


Begin TieredCrowdfundStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: TieredCrowdfundStorage 

End TieredCrowdfundStorage.is_upgradeable_proxy (Slither line:1407)


Begin ITieredCrowdfundFactory.is_proxy (Slither line:1425)


End ITieredCrowdfundFactory.is_proxy (Slither line:1428)


Begin ITieredCrowdfundFactory.is_upgradeable_proxy (Slither line:1136)

Checking contract: ITieredCrowdfundFactory 

End ITieredCrowdfundFactory.is_upgradeable_proxy (Slither line:1407)


Begin TieredCrowdfundProxy.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin TieredCrowdfundProxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_3320_176_0_fallback_asm_0 = result_fallback_asm_0 (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)

End TieredCrowdfundProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin TieredCrowdfundProxy.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(ptr_fallback_asm_0,size_fallback_asm_0) (Slither line:2802)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
ptr_fallback_asm_0
size_fallback_asm_0

End TieredCrowdfundProxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin TieredCrowdfundProxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called '_impl'
Looking for corresponding Variable
Current function: fallback

Begin TieredCrowdfundProxy.find_delegate_variable_from_name
Searching for _impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking TOKEN_SCALE (Slither line:1689)
Checking REENTRANCY_NOT_ENTERED (Slither line:1689)
Checking REENTRANCY_ENTERED (Slither line:1689)
Checking decimals (Slither line:1689)
Checking operator (Slither line:1689)
Checking fundingRecipient (Slither line:1689)
Checking fundingCap (Slither line:1689)
Checking operatorPercent (Slither line:1689)
Checking symbol (Slither line:1689)
Checking name (Slither line:1689)
Checking status (Slither line:1689)
Checking reentrancy_status (Slither line:1689)
Checking totalSupply (Slither line:1689)
Checking balanceOf (Slither line:1689)
Checking allowance (Slither line:1689)
Checking nonces (Slither line:1689)
Checking logic (Slither line:1689)
Checking editions (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking _impl (Slither line:1703)
_impl is a Local Variable in TieredCrowdfundProxy.fallback (Slither line:1707)
Expression: logic (Slither line:1719)
Identifier value: logic (Slither line:1725)
logic is a State Variable in contract TieredCrowdfundStorage (Slither line:1730)

End TieredCrowdfundProxy.find_delegate_variable_by_name


End TieredCrowdfundProxy.find_delegatecall_in_asm (Slither line:1637)


End TieredCrowdfundProxy.is_proxy (Slither line:1476)


Begin TieredCrowdfundProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: TieredCrowdfundProxy 
TieredCrowdfundProxy is delegating to logic
Looking for setter (Slither line:1200)

Looking for setter in TieredCrowdfundStorage (Slither line:1204)


Begin TieredCrowdfundStorage.find_setter_in_contract (Slither line:3119)

Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End TieredCrowdfundStorage.find_setter_in_contract (Slither line:3345)


Could not find setter in TieredCrowdfundStorage 
Looking in TieredCrowdfundProxy (Slither line:1213)

Begin TieredCrowdfundProxy.find_setter_in_contract (Slither line:3119)

Checking function: constructor() returns() (Slither line:3127)
Checking function: fallback() returns() (Slither line:3127)
Checking function: receive() returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End TieredCrowdfundProxy.find_setter_in_contract (Slither line:3345)


Could not find setter in TieredCrowdfundProxy (Slither line:1220)
Looking for setter in TieredCrowdfundLogic (Slither line:1228)


Begin TieredCrowdfundLogic.find_setter_in_contract (Slither line:3119)

Checking function: contribute(address,uint256,uint256) returns() (Slither line:3127)
Visibility: external
require(bool,string)(status == Status.FUNDING,Crowdfund: Funding must be open)
require(bool,string)(address(this).balance >= amount,Address: insufficient balance)
require(bool,string)(success,Address: unable to send value, recipient may have reverted)
require(bool,string)(startAmount < fundingCap,Crowdfund: Funding cap already reached)
(success) = recipient.call{value: amount}()
is an Assignment Operation (Slither line:3216)
require(bool,string)(reentrancy_status != REENTRANCY_ENTERED,Reentrant call)
require(bool,string)(amount == msg.value,Crowdfund: Amount is not value sent)
reentrancy_status = REENTRANCY_ENTERED
is an Assignment Operation (Slither line:3216)
_mint(backer,valueToTokens(eligibleAmount))
tokens = value * TOKEN_SCALE
is an Assignment Operation (Slither line:3216)
reentrancy_status = REENTRANCY_NOT_ENTERED
is an Assignment Operation (Slither line:3216)
_mint(backer,valueToTokens(amount))
sendValue(backer,amount - eligibleAmount)
ContributionForEdition(backer,eligibleAmount,editionId,buyEdition(eligibleAmount,editionId,backer))
totalSupply = totalSupply + value
is an Assignment Operation (Slither line:3216)
nonReentrant()
ContributionForEdition(backer,amount,editionId,buyEdition(amount,editionId,backer))
balanceOf[to] = balanceOf[to] + value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
Contribution(backer,eligibleAmount)
Transfer(address(0),to,value)
require(bool,string)(amount >= ICrowdfundEditions(editions).editionPrice(editionId),Unable purchase edition with available amount)
Contribution(backer,amount)
ICrowdfundEditions(editions).buyEdition(editionId,recipient)
Checking function: redeem(uint256) returns() (Slither line:3127)
Visibility: external
Redeemed(msg.sender,redeemable)
totalSupply = totalSupply - value
is an Assignment Operation (Slither line:3216)
require(bool,string)(address(this).balance >= amount,Address: insufficient balance)
nonReentrant()
Transfer(from,address(0),value)
require(bool,string)(success,Address: unable to send value, recipient may have reverted)
(success) = recipient.call{value: amount}()
is an Assignment Operation (Slither line:3216)
require(bool,string)(reentrancy_status != REENTRANCY_ENTERED,Reentrant call)
reentrancy_status = REENTRANCY_ENTERED
is an Assignment Operation (Slither line:3216)
reentrancy_status = REENTRANCY_NOT_ENTERED
is an Assignment Operation (Slither line:3216)
require(bool,string)(address(this).balance > 0,Crowdfund: No ETH available to redeem)
require(bool,string)(balanceOf[msg.sender] >= tokenAmount,Crowdfund: Insufficient balance)
require(bool,string)(status == Status.TRADING,Crowdfund: Funding must be trading)
balanceOf[from] = balanceOf[from] - value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
(tokenAmount * address(this).balance) / totalSupply
_burn(msg.sender,tokenAmount)
sendValue(address(msg.sender),redeemable)
Checking function: redeemableFromTokens(uint256) returns(uint256) (Slither line:3127)
Visibility: public
(tokenAmount * address(this).balance) / totalSupply
Checking function: valueToTokens(uint256) returns(uint256) (Slither line:3127)
Visibility: public
tokens = value * TOKEN_SCALE
is an Assignment Operation (Slither line:3216)
Checking function: tokensToValue(uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: closeFunding() returns() (Slither line:3127)
Visibility: external
require(bool,string)(address(this).balance >= amount,Address: insufficient balance)
require(bool,string)(success,Address: unable to send value, recipient may have reverted)
(success) = recipient.call{value: amount}()
is an Assignment Operation (Slither line:3216)
require(bool,string)(reentrancy_status != REENTRANCY_ENTERED,Reentrant call)
require(bool,string)(status == Status.FUNDING,Crowdfund: Funding must be open)
status = Status.TRADING
is an Assignment Operation (Slither line:3216)
reentrancy_status = REENTRANCY_ENTERED
is an Assignment Operation (Slither line:3216)
reentrancy_status = REENTRANCY_NOT_ENTERED
is an Assignment Operation (Slither line:3216)
_mint(operator,operatorTokens)
FundingClosed(address(this).balance,operatorTokens)
sendValue(fundingRecipient,address(this).balance)
require(bool)(msg.sender == operator)
totalSupply = totalSupply + value
is an Assignment Operation (Slither line:3216)
onlyOperator()
balanceOf[to] = balanceOf[to] + value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
nonReentrant()
Transfer(address(0),to,value)
Checking function: sendValue(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _mint(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _burn(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _approve(address,address,uint256) returns() (Slither line:3127)
Visibility: private
Checking function: _transfer(address,address,uint256) returns() (Slither line:3127)
Visibility: private
Checking function: approve(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
Approval(owner,spender,value)
allowance[owner][spender] = value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
_approve(msg.sender,spender,value)
true
Checking function: transfer(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
_transfer(msg.sender,to,value)
balanceOf[from] = balanceOf[from] - value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
true
balanceOf[to] = balanceOf[to] + value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
Transfer(from,to,value)
Checking function: transferFrom(address,address,uint256) returns(bool) (Slither line:3127)
Visibility: external
true
balanceOf[from] = balanceOf[from] - value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
allowance[from][msg.sender] = allowance[from][msg.sender] - value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
balanceOf[to] = balanceOf[to] + value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
_transfer(from,to,value)
Transfer(from,to,value)
Checking function: buyEdition(uint256,uint256,address) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End TieredCrowdfundLogic.find_setter_in_contract (Slither line:3345)


Begin TieredCrowdfundProxy.find_setter_in_contract (Slither line:3119)

Checking function: constructor() returns() (Slither line:3127)
Checking function: fallback() returns() (Slither line:3127)
Checking function: receive() returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End TieredCrowdfundProxy.find_setter_in_contract (Slither line:3345)


Could not find implementation setter in TieredCrowdfundProxy (Slither line:1269)
Looking for getter (Slither line:1273)


Begin TieredCrowdfundStorage.find_getter_in_contract (Slither line:2974)

logic is a Variable object
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End TieredCrowdfundStorage.find_getter_in_contract (Slither line:3083)


Begin TieredCrowdfundProxy.find_getter_in_contract (Slither line:2974)

logic is a Variable object
Checking function: constructor (Slither line:2988)
Checking function: fallback (Slither line:2988)
Checking function: receive (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End TieredCrowdfundProxy.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in TieredCrowdfundProxy (Slither line:1305)
or in TieredCrowdfundStorage (Slither line:1319)

Begin TieredCrowdfundLogic.find_getter_in_contract (Slither line:2974)

logic is a Variable object
Checking function: contribute (Slither line:2988)
Checking function: redeem (Slither line:2988)
Checking function: redeemableFromTokens (Slither line:2988)
redeemableFromTokens returns uint256 variable  (Slither line:3008)
RETURN node expression: (tokenAmount * address(this).balance) / totalSupply (Slither line:3028)
Checking function: valueToTokens (Slither line:2988)
valueToTokens returns uint256 variable called tokens (Slither line:3008)
Checking function: tokensToValue (Slither line:2988)
tokensToValue returns uint256 variable called value (Slither line:3008)
Checking function: closeFunding (Slither line:2988)
Checking function: sendValue (Slither line:2988)
Checking function: _mint (Slither line:2988)
Checking function: _burn (Slither line:2988)
Checking function: _approve (Slither line:2988)
Checking function: _transfer (Slither line:2988)
Checking function: approve (Slither line:2988)
approve returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: transfer (Slither line:2988)
transfer returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: transferFrom (Slither line:2988)
transferFrom returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: buyEdition (Slither line:2988)
buyEdition returns uint256 variable  (Slither line:3008)
RETURN node expression: ICrowdfundEditions(editions).buyEdition(editionId,recipient) (Slither line:3028)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End TieredCrowdfundLogic.find_getter_in_contract (Slither line:3083)


Begin TieredCrowdfundLogic.find_setter_in_contract (Slither line:3119)

Checking function: contribute(address,uint256,uint256) returns() (Slither line:3127)
Visibility: external
require(bool,string)(status == Status.FUNDING,Crowdfund: Funding must be open)
require(bool,string)(address(this).balance >= amount,Address: insufficient balance)
require(bool,string)(success,Address: unable to send value, recipient may have reverted)
require(bool,string)(startAmount < fundingCap,Crowdfund: Funding cap already reached)
(success) = recipient.call{value: amount}()
is an Assignment Operation (Slither line:3216)
require(bool,string)(reentrancy_status != REENTRANCY_ENTERED,Reentrant call)
require(bool,string)(amount == msg.value,Crowdfund: Amount is not value sent)
reentrancy_status = REENTRANCY_ENTERED
is an Assignment Operation (Slither line:3216)
_mint(backer,valueToTokens(eligibleAmount))
tokens = value * TOKEN_SCALE
is an Assignment Operation (Slither line:3216)
reentrancy_status = REENTRANCY_NOT_ENTERED
is an Assignment Operation (Slither line:3216)
_mint(backer,valueToTokens(amount))
sendValue(backer,amount - eligibleAmount)
ContributionForEdition(backer,eligibleAmount,editionId,buyEdition(eligibleAmount,editionId,backer))
totalSupply = totalSupply + value
is an Assignment Operation (Slither line:3216)
nonReentrant()
ContributionForEdition(backer,amount,editionId,buyEdition(amount,editionId,backer))
balanceOf[to] = balanceOf[to] + value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
Contribution(backer,eligibleAmount)
Transfer(address(0),to,value)
require(bool,string)(amount >= ICrowdfundEditions(editions).editionPrice(editionId),Unable purchase edition with available amount)
Contribution(backer,amount)
ICrowdfundEditions(editions).buyEdition(editionId,recipient)
Checking function: redeem(uint256) returns() (Slither line:3127)
Visibility: external
Redeemed(msg.sender,redeemable)
totalSupply = totalSupply - value
is an Assignment Operation (Slither line:3216)
require(bool,string)(address(this).balance >= amount,Address: insufficient balance)
nonReentrant()
Transfer(from,address(0),value)
require(bool,string)(success,Address: unable to send value, recipient may have reverted)
(success) = recipient.call{value: amount}()
is an Assignment Operation (Slither line:3216)
require(bool,string)(reentrancy_status != REENTRANCY_ENTERED,Reentrant call)
reentrancy_status = REENTRANCY_ENTERED
is an Assignment Operation (Slither line:3216)
reentrancy_status = REENTRANCY_NOT_ENTERED
is an Assignment Operation (Slither line:3216)
require(bool,string)(address(this).balance > 0,Crowdfund: No ETH available to redeem)
require(bool,string)(balanceOf[msg.sender] >= tokenAmount,Crowdfund: Insufficient balance)
require(bool,string)(status == Status.TRADING,Crowdfund: Funding must be trading)
balanceOf[from] = balanceOf[from] - value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
(tokenAmount * address(this).balance) / totalSupply
_burn(msg.sender,tokenAmount)
sendValue(address(msg.sender),redeemable)
Checking function: redeemableFromTokens(uint256) returns(uint256) (Slither line:3127)
Visibility: public
(tokenAmount * address(this).balance) / totalSupply
Checking function: valueToTokens(uint256) returns(uint256) (Slither line:3127)
Visibility: public
tokens = value * TOKEN_SCALE
is an Assignment Operation (Slither line:3216)
Checking function: tokensToValue(uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: closeFunding() returns() (Slither line:3127)
Visibility: external
require(bool,string)(address(this).balance >= amount,Address: insufficient balance)
require(bool,string)(success,Address: unable to send value, recipient may have reverted)
(success) = recipient.call{value: amount}()
is an Assignment Operation (Slither line:3216)
require(bool,string)(reentrancy_status != REENTRANCY_ENTERED,Reentrant call)
require(bool,string)(status == Status.FUNDING,Crowdfund: Funding must be open)
status = Status.TRADING
is an Assignment Operation (Slither line:3216)
reentrancy_status = REENTRANCY_ENTERED
is an Assignment Operation (Slither line:3216)
reentrancy_status = REENTRANCY_NOT_ENTERED
is an Assignment Operation (Slither line:3216)
_mint(operator,operatorTokens)
FundingClosed(address(this).balance,operatorTokens)
sendValue(fundingRecipient,address(this).balance)
require(bool)(msg.sender == operator)
totalSupply = totalSupply + value
is an Assignment Operation (Slither line:3216)
onlyOperator()
balanceOf[to] = balanceOf[to] + value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
nonReentrant()
Transfer(address(0),to,value)
Checking function: sendValue(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _mint(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _burn(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _approve(address,address,uint256) returns() (Slither line:3127)
Visibility: private
Checking function: _transfer(address,address,uint256) returns() (Slither line:3127)
Visibility: private
Checking function: approve(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
Approval(owner,spender,value)
allowance[owner][spender] = value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
_approve(msg.sender,spender,value)
true
Checking function: transfer(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
_transfer(msg.sender,to,value)
balanceOf[from] = balanceOf[from] - value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
true
balanceOf[to] = balanceOf[to] + value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
Transfer(from,to,value)
Checking function: transferFrom(address,address,uint256) returns(bool) (Slither line:3127)
Visibility: external
true
balanceOf[from] = balanceOf[from] - value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
allowance[from][msg.sender] = allowance[from][msg.sender] - value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
balanceOf[to] = balanceOf[to] + value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
_transfer(from,to,value)
Transfer(from,to,value)
Checking function: buyEdition(uint256,uint256,address) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End TieredCrowdfundLogic.find_setter_in_contract (Slither line:3345)

Checking for logic at slot 16 in contract TieredCrowdfundStorage (Slither line:1355)
Found logic at slot 16 in contract TieredCrowdfundStorage (Slither line:1362)

Begin TieredCrowdfundStorage.find_getter_in_contract (Slither line:2974)

logic is a Variable object
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End TieredCrowdfundStorage.find_getter_in_contract (Slither line:3083)


Begin TieredCrowdfundStorage.find_setter_in_contract (Slither line:3119)

Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End TieredCrowdfundStorage.find_setter_in_contract (Slither line:3345)

Checking for logic at slot 16 in contract TieredCrowdfundLogic (Slither line:1355)
Found logic at slot 16 in contract TieredCrowdfundLogic (Slither line:1362)

Begin TieredCrowdfundLogic.find_getter_in_contract (Slither line:2974)

logic is a Variable object
Checking function: contribute (Slither line:2988)
Checking function: redeem (Slither line:2988)
Checking function: redeemableFromTokens (Slither line:2988)
redeemableFromTokens returns uint256 variable  (Slither line:3008)
RETURN node expression: (tokenAmount * address(this).balance) / totalSupply (Slither line:3028)
Checking function: valueToTokens (Slither line:2988)
valueToTokens returns uint256 variable called tokens (Slither line:3008)
Checking function: tokensToValue (Slither line:2988)
tokensToValue returns uint256 variable called value (Slither line:3008)
Checking function: closeFunding (Slither line:2988)
Checking function: sendValue (Slither line:2988)
Checking function: _mint (Slither line:2988)
Checking function: _burn (Slither line:2988)
Checking function: _approve (Slither line:2988)
Checking function: _transfer (Slither line:2988)
Checking function: approve (Slither line:2988)
approve returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: transfer (Slither line:2988)
transfer returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: transferFrom (Slither line:2988)
transferFrom returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: buyEdition (Slither line:2988)
buyEdition returns uint256 variable  (Slither line:3008)
RETURN node expression: ICrowdfundEditions(editions).buyEdition(editionId,recipient) (Slither line:3028)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End TieredCrowdfundLogic.find_getter_in_contract (Slither line:3083)


Begin TieredCrowdfundLogic.find_setter_in_contract (Slither line:3119)

Checking function: contribute(address,uint256,uint256) returns() (Slither line:3127)
Visibility: external
require(bool,string)(status == Status.FUNDING,Crowdfund: Funding must be open)
require(bool,string)(address(this).balance >= amount,Address: insufficient balance)
require(bool,string)(success,Address: unable to send value, recipient may have reverted)
require(bool,string)(startAmount < fundingCap,Crowdfund: Funding cap already reached)
(success) = recipient.call{value: amount}()
is an Assignment Operation (Slither line:3216)
require(bool,string)(reentrancy_status != REENTRANCY_ENTERED,Reentrant call)
require(bool,string)(amount == msg.value,Crowdfund: Amount is not value sent)
reentrancy_status = REENTRANCY_ENTERED
is an Assignment Operation (Slither line:3216)
_mint(backer,valueToTokens(eligibleAmount))
tokens = value * TOKEN_SCALE
is an Assignment Operation (Slither line:3216)
reentrancy_status = REENTRANCY_NOT_ENTERED
is an Assignment Operation (Slither line:3216)
_mint(backer,valueToTokens(amount))
sendValue(backer,amount - eligibleAmount)
ContributionForEdition(backer,eligibleAmount,editionId,buyEdition(eligibleAmount,editionId,backer))
totalSupply = totalSupply + value
is an Assignment Operation (Slither line:3216)
nonReentrant()
ContributionForEdition(backer,amount,editionId,buyEdition(amount,editionId,backer))
balanceOf[to] = balanceOf[to] + value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
Contribution(backer,eligibleAmount)
Transfer(address(0),to,value)
require(bool,string)(amount >= ICrowdfundEditions(editions).editionPrice(editionId),Unable purchase edition with available amount)
Contribution(backer,amount)
ICrowdfundEditions(editions).buyEdition(editionId,recipient)
Checking function: redeem(uint256) returns() (Slither line:3127)
Visibility: external
Redeemed(msg.sender,redeemable)
totalSupply = totalSupply - value
is an Assignment Operation (Slither line:3216)
require(bool,string)(address(this).balance >= amount,Address: insufficient balance)
nonReentrant()
Transfer(from,address(0),value)
require(bool,string)(success,Address: unable to send value, recipient may have reverted)
(success) = recipient.call{value: amount}()
is an Assignment Operation (Slither line:3216)
require(bool,string)(reentrancy_status != REENTRANCY_ENTERED,Reentrant call)
reentrancy_status = REENTRANCY_ENTERED
is an Assignment Operation (Slither line:3216)
reentrancy_status = REENTRANCY_NOT_ENTERED
is an Assignment Operation (Slither line:3216)
require(bool,string)(address(this).balance > 0,Crowdfund: No ETH available to redeem)
require(bool,string)(balanceOf[msg.sender] >= tokenAmount,Crowdfund: Insufficient balance)
require(bool,string)(status == Status.TRADING,Crowdfund: Funding must be trading)
balanceOf[from] = balanceOf[from] - value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
(tokenAmount * address(this).balance) / totalSupply
_burn(msg.sender,tokenAmount)
sendValue(address(msg.sender),redeemable)
Checking function: redeemableFromTokens(uint256) returns(uint256) (Slither line:3127)
Visibility: public
(tokenAmount * address(this).balance) / totalSupply
Checking function: valueToTokens(uint256) returns(uint256) (Slither line:3127)
Visibility: public
tokens = value * TOKEN_SCALE
is an Assignment Operation (Slither line:3216)
Checking function: tokensToValue(uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: closeFunding() returns() (Slither line:3127)
Visibility: external
require(bool,string)(address(this).balance >= amount,Address: insufficient balance)
require(bool,string)(success,Address: unable to send value, recipient may have reverted)
(success) = recipient.call{value: amount}()
is an Assignment Operation (Slither line:3216)
require(bool,string)(reentrancy_status != REENTRANCY_ENTERED,Reentrant call)
require(bool,string)(status == Status.FUNDING,Crowdfund: Funding must be open)
status = Status.TRADING
is an Assignment Operation (Slither line:3216)
reentrancy_status = REENTRANCY_ENTERED
is an Assignment Operation (Slither line:3216)
reentrancy_status = REENTRANCY_NOT_ENTERED
is an Assignment Operation (Slither line:3216)
_mint(operator,operatorTokens)
FundingClosed(address(this).balance,operatorTokens)
sendValue(fundingRecipient,address(this).balance)
require(bool)(msg.sender == operator)
totalSupply = totalSupply + value
is an Assignment Operation (Slither line:3216)
onlyOperator()
balanceOf[to] = balanceOf[to] + value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
nonReentrant()
Transfer(address(0),to,value)
Checking function: sendValue(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _mint(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _burn(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _approve(address,address,uint256) returns() (Slither line:3127)
Visibility: private
Checking function: _transfer(address,address,uint256) returns() (Slither line:3127)
Visibility: private
Checking function: approve(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
Approval(owner,spender,value)
allowance[owner][spender] = value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
_approve(msg.sender,spender,value)
true
Checking function: transfer(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
_transfer(msg.sender,to,value)
balanceOf[from] = balanceOf[from] - value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
true
balanceOf[to] = balanceOf[to] + value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
Transfer(from,to,value)
Checking function: transferFrom(address,address,uint256) returns(bool) (Slither line:3127)
Visibility: external
true
balanceOf[from] = balanceOf[from] - value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
allowance[from][msg.sender] = allowance[from][msg.sender] - value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
balanceOf[to] = balanceOf[to] + value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
_transfer(from,to,value)
Transfer(from,to,value)
Checking function: buyEdition(uint256,uint256,address) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End TieredCrowdfundLogic.find_setter_in_contract (Slither line:3345)

Checking node of type NEW VARIABLE (Slither line:1395)
ptr_fallback_asm_0
None
Checking node of type IF (Slither line:1395)
Checking node of type ENTRY_POINT (Slither line:1395)
Checking node of type EXPRESSION (Slither line:1395)
switch_expr_3320_176_0_fallback_asm_0 = result_fallback_asm_0
Checking node of type EXPRESSION (Slither line:1395)
return(uint256,uint256)(ptr_fallback_asm_0,size_fallback_asm_0)
Checking node of type INLINE ASM (Slither line:1395)
Checking node of type NEW VARIABLE (Slither line:1395)
size_fallback_asm_0
None
Checking node of type NEW VARIABLE (Slither line:1395)
result_fallback_asm_0
None
Checking node of type END_IF (Slither line:1395)
Checking node of type EXPRESSION (Slither line:1395)
calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,calldatasize()())
Checking node of type EXPRESSION (Slither line:1395)
size_fallback_asm_0 = returndatasize()()
Checking node of type EXPRESSION (Slither line:1395)
ptr_fallback_asm_0 = mload(uint256)(0x40)
Checking node of type NEW VARIABLE (Slither line:1395)
switch_expr_3320_176_0_fallback_asm_0
None
Checking node of type EXPRESSION (Slither line:1395)
revert(uint256,uint256)(ptr_fallback_asm_0,size_fallback_asm_0)
Checking node of type EXPRESSION (Slither line:1395)
returndatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,size_fallback_asm_0)
Checking node of type NEW VARIABLE (Slither line:1395)
_impl
_impl = logic
Checking node of type EXPRESSION (Slither line:1395)
result_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_impl,ptr_fallback_asm_0,calldatasize()(),0,0)

End TieredCrowdfundProxy.is_upgradeable_proxy (Slither line:1407)


Begin ICrowdfundEditions.is_proxy (Slither line:1425)


End ICrowdfundEditions.is_proxy (Slither line:1428)


Begin ICrowdfundEditions.is_upgradeable_proxy (Slither line:1136)

Checking contract: ICrowdfundEditions 

End ICrowdfundEditions.is_upgradeable_proxy (Slither line:1407)


Begin TieredCrowdfundLogic.is_proxy (Slither line:1425)


End TieredCrowdfundLogic.is_proxy (Slither line:1428)


Begin TieredCrowdfundLogic.is_upgradeable_proxy (Slither line:1136)

Checking contract: TieredCrowdfundLogic 

End TieredCrowdfundLogic.is_upgradeable_proxy (Slither line:1407)

