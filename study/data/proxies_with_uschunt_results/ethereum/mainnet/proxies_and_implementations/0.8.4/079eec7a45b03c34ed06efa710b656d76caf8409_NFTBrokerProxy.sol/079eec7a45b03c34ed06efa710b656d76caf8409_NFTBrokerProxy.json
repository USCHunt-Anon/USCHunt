{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "NFTBrokerProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.8.4/079eec7a45b03c34ed06efa710b656d76caf8409_NFTBrokerProxy.sol/079eec7a45b03c34ed06efa710b656d76caf8409_NFTBrokerProxy.sol#23-136)",
        "elements": [],
        "description": "NFTBrokerProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.8.4/079eec7a45b03c34ed06efa710b656d76caf8409_NFTBrokerProxy.sol/079eec7a45b03c34ed06efa710b656d76caf8409_NFTBrokerProxy.sol#23-136) is an upgradeable proxy.\n0x172d303713ab541af50b05036cc57f0c0c8733f85d5ceb2137350b11166ad9bd is declared in the proxy.\n uses Unstructured Storage\n uses non-standard slot: 0x172d303713ab541af50b05036cc57f0c0c8733f85d5ceb2137350b11166ad9bd\nMissing compatibility check in NFTBrokerProxy.setTarget(address)\n",
        "id": "c4b0e1853fdb5805361ccdf3c8bc7f2d1846676aba31771e90d1ab01218a16d5",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "NFTBrokerProxy.0x172d303713ab541af50b05036cc57f0c0c8733f85d5ceb2137350b11166ad9bd",
          "impl_address_setter": "NFTBrokerProxy.setTarget(address)",
          "impl_address_getter": "not found",
          "impl_address_location": "NFTBrokerProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.8.4/079eec7a45b03c34ed06efa710b656d76caf8409_NFTBrokerProxy.sol/079eec7a45b03c34ed06efa710b656d76caf8409_NFTBrokerProxy.sol#23-136)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x172d303713ab541af50b05036cc57f0c0c8733f85d5ceb2137350b11166ad9bd",
          "unstructured_storage": true,
          "eip_1967": false,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "NFTBrokerProxy.setTarget(address)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "getTarget()",
              "setTarget(address)",
              "getOwner()",
              "setOwner(address)",
              "transferOwnership(address)"
            ]
          }
        }
      }
    ]
  }
}