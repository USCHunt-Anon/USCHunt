{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.7.6/4a33e0123e59a5874955b469ab2c0b626bbf3670_DeCashProxy.sol/4a33e0123e59a5874955b469ab2c0b626bbf3670_DeCashProxy.sol#660-738)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.7.6/4a33e0123e59a5874955b469ab2c0b626bbf3670_DeCashProxy.sol/4a33e0123e59a5874955b469ab2c0b626bbf3670_DeCashProxy.sol#660-738) is a proxy, but doesn't seem upgradeable.\n",
        "id": "cb70bcec6d81585d7521ef499de1dc4cc025c9eb09a62b94cfe4ec81796afff6",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "DeCashProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.7.6/4a33e0123e59a5874955b469ab2c0b626bbf3670_DeCashProxy.sol/4a33e0123e59a5874955b469ab2c0b626bbf3670_DeCashProxy.sol#743-806)",
        "elements": [],
        "description": "DeCashProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.7.6/4a33e0123e59a5874955b469ab2c0b626bbf3670_DeCashProxy.sol/4a33e0123e59a5874955b469ab2c0b626bbf3670_DeCashProxy.sol#743-806) is an upgradeable proxy.\n_IMPLEMENTATION_SLOT is declared in the proxy.\n uses Unstructured Storage\n implements EIP-1967\nFound compatibility checks in all upgrade functions.\n",
        "id": "c694e3318470974fd1bc31bba24f31122e5e9c88a4b14c13e3596cd96a41ccd7",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "DeCashProxy._IMPLEMENTATION_SLOT",
          "impl_address_setter": "DeCashProxy.upgrade(address)",
          "impl_address_getter": "DeCashProxy._implementation()",
          "impl_address_location": "DeCashProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.7.6/4a33e0123e59a5874955b469ab2c0b626bbf3670_DeCashProxy.sol/4a33e0123e59a5874955b469ab2c0b626bbf3670_DeCashProxy.sol#743-806)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "unstructured_storage": true,
          "eip_1967": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "DeCashProxy.upgrade(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,address is not a contract)",
                "is_correct": true
              },
              "DeCashProxy.initialize(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,address is not a contract)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "isOwner(address)",
              "isAdmin(address)",
              "isSuperUser(address)",
              "isDelegator(address)",
              "isFeeRecipient(address)",
              "isBlacklisted(address)",
              "upgrade(address)",
              "initialize(address)"
            ]
          }
        }
      },
      {
        "contract": "GBPDProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.7.6/4a33e0123e59a5874955b469ab2c0b626bbf3670_DeCashProxy.sol/4a33e0123e59a5874955b469ab2c0b626bbf3670_DeCashProxy.sol#808-810)",
        "elements": [],
        "description": "GBPDProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.7.6/4a33e0123e59a5874955b469ab2c0b626bbf3670_DeCashProxy.sol/4a33e0123e59a5874955b469ab2c0b626bbf3670_DeCashProxy.sol#808-810) is an upgradeable proxy.\n_IMPLEMENTATION_SLOT was found in a different contract.\n uses Unstructured Storage\n implements EIP-1967\nFound compatibility checks in all upgrade functions.\n",
        "id": "8a819ecf38b5eed82dcb39aa688127b80bd339a60dc8486834df7bbeeca6993a",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "DeCashProxy._IMPLEMENTATION_SLOT",
          "impl_address_setter": "DeCashProxy.upgrade(address)",
          "impl_address_getter": "DeCashProxy._implementation()",
          "impl_address_location": "DeCashProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.7.6/4a33e0123e59a5874955b469ab2c0b626bbf3670_DeCashProxy.sol/4a33e0123e59a5874955b469ab2c0b626bbf3670_DeCashProxy.sol#743-806)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "unstructured_storage": true,
          "eip_1967": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "DeCashProxy.upgrade(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,address is not a contract)",
                "is_correct": true
              },
              "DeCashProxy.initialize(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,address is not a contract)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "upgrade(address)",
              "initialize(address)",
              "isOwner(address)",
              "isAdmin(address)",
              "isSuperUser(address)",
              "isDelegator(address)",
              "isFeeRecipient(address)",
              "isBlacklisted(address)"
            ]
          }
        }
      }
    ]
  }
}