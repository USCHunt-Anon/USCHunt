{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "executor (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.8.7/e785f460dd9ad0129064bd95f4af50d1d99d5791_executor.sol/e785f460dd9ad0129064bd95f4af50d1d99d5791_executor.sol#8-62)",
        "elements": [],
        "description": "executor (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.8.7/e785f460dd9ad0129064bd95f4af50d1d99d5791_executor.sol/e785f460dd9ad0129064bd95f4af50d1d99d5791_executor.sol#8-62) is an upgradeable proxy.\nimplementation is declared in the proxy.\nimplementation is an address state variable\nMissing compatibility check in executor.setImplementation(address)\n",
        "id": "52bb3af8512397687ded3393b66eb5bf16189b590291d7edc6f43b1c7544738f",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "executor.implementation",
          "impl_address_setter": "executor.setImplementation(address)",
          "impl_address_getter": "not found",
          "impl_address_location": "executor (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.8.7/e785f460dd9ad0129064bd95f4af50d1d99d5791_executor.sol/e785f460dd9ad0129064bd95f4af50d1d99d5791_executor.sol#8-62)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "master_copy_coupling": "missing implementation source",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "executor.setImplementation(address)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "setImplementation(address)"
            ]
          }
        }
      }
    ]
  }
}