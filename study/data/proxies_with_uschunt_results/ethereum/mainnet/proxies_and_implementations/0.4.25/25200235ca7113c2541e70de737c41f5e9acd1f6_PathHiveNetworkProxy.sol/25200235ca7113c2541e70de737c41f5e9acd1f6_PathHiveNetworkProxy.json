{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.4.25/25200235ca7113c2541e70de737c41f5e9acd1f6_PathHiveNetworkProxy.sol/25200235ca7113c2541e70de737c41f5e9acd1f6_PathHiveNetworkProxy.sol#123-154)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.4.25/25200235ca7113c2541e70de737c41f5e9acd1f6_PathHiveNetworkProxy.sol/25200235ca7113c2541e70de737c41f5e9acd1f6_PathHiveNetworkProxy.sol#123-154) is an upgradeable proxy.\n_linkedContractAddress is declared in the proxy.\n_linkedContractAddress is an address state variable\nFound compatibility checks in all upgrade functions.\n",
        "id": "05927eca3247d7d3b1c709761a72d929f2c6797b625539156aa53fa707728ee3",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "Proxy._linkedContractAddress",
          "impl_address_setter": "Proxy.upgradeTo(address)",
          "impl_address_getter": "Proxy.implementation()",
          "impl_address_location": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.4.25/25200235ca7113c2541e70de737c41f5e9acd1f6_PathHiveNetworkProxy.sol/25200235ca7113c2541e70de737c41f5e9acd1f6_PathHiveNetworkProxy.sol#123-154)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "master_copy_coupling": "missing implementation source",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "Proxy.upgradeTo(address)": {
                "check": "require(bool)(newContractAddress != address(0))",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "isAdminister(address)",
              "addAdminister(address)",
              "removeAdminister(address)",
              "getAdministerList()",
              "isPauser(address)",
              "addPauser(address)",
              "removePauser(address)",
              "getPauserList()",
              "implementation()",
              "upgradeTo(address)"
            ]
          }
        }
      },
      {
        "contract": "PathHiveNetworkProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.4.25/25200235ca7113c2541e70de737c41f5e9acd1f6_PathHiveNetworkProxy.sol/25200235ca7113c2541e70de737c41f5e9acd1f6_PathHiveNetworkProxy.sol#156-162)",
        "elements": [],
        "description": "PathHiveNetworkProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.4.25/25200235ca7113c2541e70de737c41f5e9acd1f6_PathHiveNetworkProxy.sol/25200235ca7113c2541e70de737c41f5e9acd1f6_PathHiveNetworkProxy.sol#156-162) is an upgradeable proxy.\n_linkedContractAddress was found in a different contract.\n_linkedContractAddress is an address state variable.\nFound compatibility checks in all upgrade functions.\n",
        "id": "1d89a37743b2e0120dbbdd9fff40ce2e272b5101708f2db6fbe093e6bd1bd610",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "Proxy._linkedContractAddress",
          "impl_address_setter": "Proxy.upgradeTo(address)",
          "impl_address_getter": "Proxy.implementation()",
          "impl_address_location": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_implementations/0.4.25/25200235ca7113c2541e70de737c41f5e9acd1f6_PathHiveNetworkProxy.sol/25200235ca7113c2541e70de737c41f5e9acd1f6_PathHiveNetworkProxy.sol#123-154)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "Proxy.upgradeTo(address)": {
                "check": "require(bool)(newContractAddress != address(0))",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "implementation()",
              "upgradeTo(address)",
              "isAdminister(address)",
              "addAdminister(address)",
              "removeAdminister(address)",
              "getAdministerList()",
              "isPauser(address)",
              "addPauser(address)",
              "removePauser(address)",
              "getPauserList()"
            ]
          }
        }
      }
    ]
  }
}