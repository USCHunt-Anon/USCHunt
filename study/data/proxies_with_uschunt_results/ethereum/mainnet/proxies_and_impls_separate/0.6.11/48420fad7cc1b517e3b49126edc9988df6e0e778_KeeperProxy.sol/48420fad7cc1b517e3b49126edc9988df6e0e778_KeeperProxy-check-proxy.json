{
  "success": false,
  "error": "Invalid compilation: \nInvalid solc compilation Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> /home/USCHunt/Documents/ethereum/smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_impls_separate//0.6.11/48420fad7cc1b517e3b49126edc9988df6e0e778_KeeperProxy.sol/48420fad7cc1b517e3b49126edc9988df6e0e778_KeeperProxy.sol\n\nError: Duplicate experimental feature name.\n  --> /home/USCHunt/Documents/ethereum/smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_impls_separate//0.6.11/48420fad7cc1b517e3b49126edc9988df6e0e778_KeeperProxy.sol/48420fad7cc1b517e3b49126edc9988df6e0e778_KeeperProxy.sol:67:1:\n   |\n67 | pragma experimental ABIEncoderV2;\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWarning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n  --> /home/USCHunt/Documents/ethereum/smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_impls_separate//0.6.11/48420fad7cc1b517e3b49126edc9988df6e0e778_KeeperProxy.sol/48420fad7cc1b517e3b49126edc9988df6e0e778_KeeperProxy.sol:14:1:\n   |\n14 | contract KeeperProxy {\n   | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> /home/USCHunt/Documents/ethereum/smart-contract-sanctuary/ethereum/contracts/mainnet/proxies_and_impls_separate//0.6.11/48420fad7cc1b517e3b49126edc9988df6e0e778_KeeperProxy.sol/48420fad7cc1b517e3b49126edc9988df6e0e778_KeeperProxy.sol:30:5:\n   |\n30 |     fallback() external payable\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
  "results": {
    "proxy-present": false,
    "contract_v2-present": false,
    "detectors": [
      {
        "elements": [],
        "description": "Initializable contract not found, the contract does not follow a standard initalization schema.\n",
        "markdown": "Initializable contract not found, the contract does not follow a standard initalization schema.\n",
        "first_markdown_element": "",
        "id": "cd3ea1ea9752968141b08f29be99ab04db7e40ff88ebc2b2479a7ed0c3dcf61d",
        "check": "init-missing"
      }
    ]
  }
}