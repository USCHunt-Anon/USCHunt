{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.7/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol#532-602)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.7/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol#532-602) is a proxy, but doesn't seem upgradeable.\n",
        "id": "cb70bcec6d81585d7521ef499de1dc4cc025c9eb09a62b94cfe4ec81796afff6",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "ERC1967Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.7/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol#618-636)",
        "elements": [],
        "description": "ERC1967Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.7/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol#618-636) is a proxy, but doesn't seem upgradeable.\n",
        "id": "211e994b39210eb9069681dcc1b67b974889fdbc5a5da463a2722040444f5164",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "TransparentUpgradeableProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.7/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol#666-762)",
        "elements": [],
        "description": "TransparentUpgradeableProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.7/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol#666-762) is an upgradeable proxy.\nStorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value is declared in the proxy.\n uses Unstructured Storage\n implements EIP-1967\n uses Transparent Proxy pattern\nFound compatibility checks in all upgrade functions.\n",
        "id": "90e46efd950fee9991d379bdbe75a027984be0856882c9551038e3ab1bd6e6a6",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "ERC1967Upgrade._getImplementation().StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value",
          "impl_address_setter": "TransparentUpgradeableProxy.upgradeTo(address)",
          "impl_address_getter": "ERC1967Upgrade._getImplementation()",
          "impl_address_location": "TransparentUpgradeableProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.7/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol#666-762)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "unstructured_storage": true,
          "eip_1967": true,
          "transparent": true,
          "external_functions_require_specific_sender": true,
          "fallback_receive_not_callable_by_specific_sender": true,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "TransparentUpgradeableProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,ERC1967: new implementation is not a contract)",
                "is_correct": true
              },
              "TransparentUpgradeableProxy.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,ERC1967: new implementation is not a contract)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      },
      {
        "contract": "MVFVaultProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.7/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol#768-770)",
        "elements": [],
        "description": "MVFVaultProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.7/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol#768-770) is an upgradeable proxy.\nStorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value is declared in the proxy.\n uses Unstructured Storage\n implements EIP-1967\n uses Transparent Proxy pattern\nFound compatibility checks in all upgrade functions.\n",
        "id": "5a1c6287265b0bb7045ccb32569ad78ce278de29d810364c87d72271c7b987bc",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "ERC1967Upgrade._getImplementation().StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value",
          "impl_address_setter": "TransparentUpgradeableProxy.upgradeTo(address)",
          "impl_address_getter": "ERC1967Upgrade._getImplementation()",
          "impl_address_location": "MVFVaultProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.7/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol/5b3ae8b672A753906B1592D44741f71FBD05ba8C_MVFVaultProxy.sol#768-770)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "unstructured_storage": true,
          "eip_1967": true,
          "transparent": true,
          "external_functions_require_specific_sender": true,
          "fallback_receive_not_callable_by_specific_sender": true,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "TransparentUpgradeableProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,ERC1967: new implementation is not a contract)",
                "is_correct": true
              },
              "TransparentUpgradeableProxy.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,ERC1967: new implementation is not a contract)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      }
    ]
  }
}