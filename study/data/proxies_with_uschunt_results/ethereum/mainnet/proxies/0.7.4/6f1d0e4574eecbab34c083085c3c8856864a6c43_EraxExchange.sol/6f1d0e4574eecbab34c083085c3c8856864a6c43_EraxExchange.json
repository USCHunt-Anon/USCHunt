{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.4/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol#827-861)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.4/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol#827-861) is a proxy, but doesn't seem upgradeable.\n",
        "id": "cb70bcec6d81585d7521ef499de1dc4cc025c9eb09a62b94cfe4ec81796afff6",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "OwnedUpgradeabilityStorage (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.4/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol#868-906)",
        "elements": [],
        "description": "OwnedUpgradeabilityStorage (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.4/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol#868-906) is a proxy, but doesn't seem upgradeable.\n",
        "id": "e2bda03f54e0763dac2c136376ff7cf11d53c8810d084d98c4378797658f178d",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "AuthenticatedProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.4/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol#918-1003)",
        "elements": [],
        "description": "AuthenticatedProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.4/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol#918-1003) is an upgradeable proxy.\n_implementation was found in a different contract.\n_implementation is an address state variable.\n uses Inherited Storage\nFound compatibility checks in all upgrade functions.\nTo remove upgradeability, delete upgradeTo from OwnedUpgradeabilityProxy\n",
        "id": "55f4856787add85336c73bc0e8621aa27876fb71a9304532b38e3fc133ad9e2c",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "OwnedUpgradeabilityStorage._implementation",
          "impl_address_setter": "OwnedUpgradeabilityProxy.upgradeTo(address)",
          "impl_address_getter": "OwnedUpgradeabilityStorage.implementation()",
          "impl_address_location": "OwnedUpgradeabilityStorage (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.4/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol#868-906)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "OwnedUpgradeabilityProxy.upgradeTo(address)": {
                "check": "require(bool,string)(_implementation != implementation,36)",
                "is_correct": true
              },
              "OwnedUpgradeabilityProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(_implementation != implementation,36)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove upgradeTo from OwnedUpgradeabilityProxy",
          "immutable_functions": {
            "other": [
              "upgradeabilityOwner()",
              "implementation()",
              "proxyType()",
              "implementation()",
              "proxyType()",
              "receiveApproval(address,uint256,address,bytes)",
              "initialize(address,ProxyRegistry)",
              "setRevoke(bool)",
              "proxy(address,AuthenticatedProxy.HowToCall,bytes)",
              "proxyAssert(address,AuthenticatedProxy.HowToCall,bytes)"
            ]
          }
        }
      },
      {
        "contract": "OwnedUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.4/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol#1010-1080)",
        "elements": [],
        "description": "OwnedUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.4/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol#1010-1080) is an upgradeable proxy.\n_implementation was found in a different contract.\n_implementation is an address state variable.\n uses Inherited Storage\nFound compatibility checks in all upgrade functions.\n",
        "id": "3aef388b952c3ac44b443f982e336a50bc8cff0d987e750c906736adb3da28b0",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "OwnedUpgradeabilityStorage._implementation",
          "impl_address_setter": "OwnedUpgradeabilityProxy.upgradeTo(address)",
          "impl_address_getter": "OwnedUpgradeabilityStorage.implementation()",
          "impl_address_location": "OwnedUpgradeabilityStorage (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.4/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol#868-906)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "OwnedUpgradeabilityProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(_implementation != implementation,36)",
                "is_correct": true
              },
              "OwnedUpgradeabilityProxy.upgradeTo(address)": {
                "check": "require(bool,string)(_implementation != implementation,36)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "upgradeabilityOwner()",
              "implementation()",
              "proxyType()",
              "implementation()",
              "proxyType()",
              "proxyOwner()",
              "transferProxyOwnership(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      },
      {
        "contract": "OwnableDelegateProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.4/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol#1088-1098)",
        "elements": [],
        "description": "OwnableDelegateProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.4/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol#1088-1098) is an upgradeable proxy.\n_implementation was found in a different contract.\n_implementation is an address state variable.\n uses Inherited Storage\nFound compatibility checks in all upgrade functions.\n",
        "id": "f0d36b3e97c62d8624c366dfa6b241938bbc146464023da05a4b24856edcada8",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "OwnedUpgradeabilityStorage._implementation",
          "impl_address_setter": "OwnedUpgradeabilityProxy.upgradeTo(address)",
          "impl_address_getter": "OwnedUpgradeabilityStorage.implementation()",
          "impl_address_location": "OwnedUpgradeabilityStorage (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.4/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol/6f1d0e4574eecbab34c083085c3c8856864a6c43_EraxExchange.sol#868-906)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "OwnedUpgradeabilityProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(_implementation != implementation,36)",
                "is_correct": true
              },
              "OwnedUpgradeabilityProxy.upgradeTo(address)": {
                "check": "require(bool,string)(_implementation != implementation,36)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "proxyOwner()",
              "transferProxyOwnership(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)",
              "upgradeabilityOwner()",
              "implementation()",
              "proxyType()",
              "implementation()",
              "proxyType()"
            ]
          }
        }
      }
    ]
  }
}