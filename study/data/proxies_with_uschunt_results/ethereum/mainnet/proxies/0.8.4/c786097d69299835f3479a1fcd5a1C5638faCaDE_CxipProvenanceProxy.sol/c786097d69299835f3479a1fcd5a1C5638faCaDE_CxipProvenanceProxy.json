{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "CxipProvenanceProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.4/c786097d69299835f3479a1fcd5a1C5638faCaDE_CxipProvenanceProxy.sol/c786097d69299835f3479a1fcd5a1C5638faCaDE_CxipProvenanceProxy.sol#22-41)",
        "elements": [],
        "description": "CxipProvenanceProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.4/c786097d69299835f3479a1fcd5a1C5638faCaDE_CxipProvenanceProxy.sol/c786097d69299835f3479a1fcd5a1C5638faCaDE_CxipProvenanceProxy.sol#22-41) may be an upgradeable proxy.\n_target is declared in the proxy.\nCxipProvenanceProxy.fallback()._target (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.4/c786097d69299835f3479a1fcd5a1C5638faCaDE_CxipProvenanceProxy.sol/c786097d69299835f3479a1fcd5a1C5638faCaDE_CxipProvenanceProxy.sol#25) gets value from a cross-contract call: IRegistry(0x3d0Ac6CDcd6252684Fa459E7A03Dd1ceaCc01Ade).getProvenanceSource()\nIRegistry appears to be a Beacon contract for the proxy\nNo setter functions found to search for compatibility checks.\n",
        "id": "ddece988c2b46968c9f3df1496ea899f350da5a42e22d8ac733fb664ce26ed4e",
        "features": {
          "upgradeable": "maybe",
          "impl_address_variable": "CxipProvenanceProxy.fallback()._target",
          "impl_address_setter": "not found",
          "impl_address_getter": "not found",
          "impl_address_location": "CxipProvenanceProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.4/c786097d69299835f3479a1fcd5a1C5638faCaDE_CxipProvenanceProxy.sol/c786097d69299835f3479a1fcd5a1C5638faCaDE_CxipProvenanceProxy.sol#22-41)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "IRegistry(0x3d0Ac6CDcd6252684Fa459E7A03Dd1ceaCc01Ade).getProvenanceSource()",
          "beacon": "IRegistry",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": "no setters found"
          },
          "can_remove_upgradeability": false
        }
      }
    ]
  }
}