{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "BlissVaultProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/cc49AcBe712Ef110e16c04B22c0316796B92759b_BlissVaultProxy.sol/cc49AcBe712Ef110e16c04B22c0316796B92759b_BlissVaultProxy.sol#5-71)",
        "elements": [],
        "description": "BlissVaultProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/cc49AcBe712Ef110e16c04B22c0316796B92759b_BlissVaultProxy.sol/cc49AcBe712Ef110e16c04B22c0316796B92759b_BlissVaultProxy.sol#5-71) is an upgradeable proxy.\nimplementationPosition is declared in the proxy.\n uses Unstructured Storage\n uses non-standard slot: bytes32(uint256(keccak256(bytes)(bliss.vault.impl)) - 1)\nMissing compatibility check in BlissVaultProxy.setup(address)\n",
        "id": "90f5dd8b8b8ec52f3f40731755c0dd29ddb46ca7f5f3a22fc66c3f07fd2b8a0e",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "BlissVaultProxy.implementationPosition",
          "impl_address_setter": "BlissVaultProxy.setup(address)",
          "impl_address_getter": "BlissVaultProxy.implementation()",
          "impl_address_location": "BlissVaultProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/cc49AcBe712Ef110e16c04B22c0316796B92759b_BlissVaultProxy.sol/cc49AcBe712Ef110e16c04B22c0316796B92759b_BlissVaultProxy.sol#5-71)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "bytes32(uint256(keccak256(bytes)(bliss.vault.impl)) - 1)",
          "unstructured_storage": true,
          "eip_1967": false,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "BlissVaultProxy.setup(address)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "setup(address)",
              "setupOwner(address)",
              "implementation()",
              "proxyOwner()"
            ]
          }
        }
      }
    ]
  }
}