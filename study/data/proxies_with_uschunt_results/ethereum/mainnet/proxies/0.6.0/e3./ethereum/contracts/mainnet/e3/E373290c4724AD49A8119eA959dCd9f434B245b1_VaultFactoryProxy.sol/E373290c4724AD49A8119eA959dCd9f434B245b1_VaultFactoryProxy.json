{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/e3./ethereum/contracts/mainnet/e3/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol#12-73)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/e3./ethereum/contracts/mainnet/e3/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol#12-73) is a proxy, but doesn't seem upgradeable.\n",
        "id": "cb70bcec6d81585d7521ef499de1dc4cc025c9eb09a62b94cfe4ec81796afff6",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "BaseUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/e3./ethereum/contracts/mainnet/e3/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol#121-168)",
        "elements": [],
        "description": "BaseUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/e3./ethereum/contracts/mainnet/e3/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol#121-168) is a proxy, but doesn't seem upgradeable.\n",
        "id": "c667fa13bf5e18ab61b823c0ad9b6e92fc3f1c87b349a854e6819be3f724d050",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/e3./ethereum/contracts/mainnet/e3/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol#180-197)",
        "elements": [],
        "description": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/e3./ethereum/contracts/mainnet/e3/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol#180-197) is an upgradeable proxy.\nIMPLEMENTATION_SLOT was found in a different contract.\n uses Unstructured Storage\n implements EIP-1822 using slot from ERC-1967 (i.e. OpenZeppelin UUPS)\n uses Inherited Storage\nFound compatibility checks in all upgrade functions.\nTo remove upgradeability, delete upgradeTo from BaseAdminUpgradeabilityProxy\n",
        "id": "0229f10b9c730d48139931b683b79ce6029ff6c5c28f006d0a771c01edeb92ae",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "BaseUpgradeabilityProxy.IMPLEMENTATION_SLOT",
          "impl_address_setter": "BaseAdminUpgradeabilityProxy.upgradeTo(address)",
          "impl_address_getter": "BaseUpgradeabilityProxy._implementation()",
          "impl_address_location": "BaseUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/e3./ethereum/contracts/mainnet/e3/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol#121-168)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "unstructured_storage": true,
          "eip_1967": true,
          "eip_1822": true,
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "BaseAdminUpgradeabilityProxy.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "BaseAdminUpgradeabilityProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove upgradeTo from BaseAdminUpgradeabilityProxy"
        }
      },
      {
        "contract": "BaseAdminUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/e3./ethereum/contracts/mainnet/e3/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol#212-319)",
        "elements": [],
        "description": "BaseAdminUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/e3./ethereum/contracts/mainnet/e3/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol#212-319) is an upgradeable proxy.\nIMPLEMENTATION_SLOT was found in a different contract.\n uses Unstructured Storage\n implements EIP-1967\n uses Inherited Storage\n uses Transparent Proxy pattern\nFound compatibility checks in all upgrade functions.\n",
        "id": "9f9b68fd3c04c35944fc87bcf1eb86ee431e2c324447ef194fd08bad9883ad01",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "BaseUpgradeabilityProxy.IMPLEMENTATION_SLOT",
          "impl_address_setter": "BaseAdminUpgradeabilityProxy.upgradeTo(address)",
          "impl_address_getter": "BaseUpgradeabilityProxy._implementation()",
          "impl_address_location": "BaseUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/e3./ethereum/contracts/mainnet/e3/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol#121-168)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "unstructured_storage": true,
          "eip_1967": true,
          "inherited_storage": true,
          "transparent": true,
          "external_functions_require_specific_sender": true,
          "fallback_receive_not_callable_by_specific_sender": true,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "BaseAdminUpgradeabilityProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "BaseAdminUpgradeabilityProxy.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      },
      {
        "contract": "AdminUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/e3./ethereum/contracts/mainnet/e3/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol#331-349)",
        "elements": [],
        "description": "AdminUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/e3./ethereum/contracts/mainnet/e3/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol#331-349) is an upgradeable proxy.\nIMPLEMENTATION_SLOT was found in a different contract.\n uses Unstructured Storage\n implements EIP-1967\n uses Transparent Proxy pattern\nFound compatibility checks in all upgrade functions.\n",
        "id": "684eaa85e0a2c7250e9536e12a382cd0ec457b50cc012b5b34ebd43b5fa09e37",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "BaseUpgradeabilityProxy.IMPLEMENTATION_SLOT",
          "impl_address_setter": "BaseAdminUpgradeabilityProxy.upgradeTo(address)",
          "impl_address_getter": "BaseUpgradeabilityProxy._implementation()",
          "impl_address_location": "BaseUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/e3./ethereum/contracts/mainnet/e3/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol#121-168)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "unstructured_storage": true,
          "eip_1967": true,
          "transparent": true,
          "external_functions_require_specific_sender": true,
          "fallback_receive_not_callable_by_specific_sender": true,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "BaseAdminUpgradeabilityProxy.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "BaseAdminUpgradeabilityProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      },
      {
        "contract": "VaultFactoryProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/e3./ethereum/contracts/mainnet/e3/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol#358-361)",
        "elements": [],
        "description": "VaultFactoryProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/e3./ethereum/contracts/mainnet/e3/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol#358-361) is an upgradeable proxy.\nIMPLEMENTATION_SLOT was found in a different contract.\n uses Unstructured Storage\n implements EIP-1967\n uses Transparent Proxy pattern\nFound compatibility checks in all upgrade functions.\n",
        "id": "02fd4728362ace8f6a8068ea1e0e6fe6ed88770625f8d8bd14d40932ebe3c5d8",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "BaseUpgradeabilityProxy.IMPLEMENTATION_SLOT",
          "impl_address_setter": "BaseAdminUpgradeabilityProxy.upgradeTo(address)",
          "impl_address_getter": "BaseUpgradeabilityProxy._implementation()",
          "impl_address_location": "BaseUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.0/e3./ethereum/contracts/mainnet/e3/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol/E373290c4724AD49A8119eA959dCd9f434B245b1_VaultFactoryProxy.sol#121-168)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "unstructured_storage": true,
          "eip_1967": true,
          "transparent": true,
          "external_functions_require_specific_sender": true,
          "fallback_receive_not_callable_by_specific_sender": true,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "BaseAdminUpgradeabilityProxy.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "BaseAdminUpgradeabilityProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      }
    ]
  }
}