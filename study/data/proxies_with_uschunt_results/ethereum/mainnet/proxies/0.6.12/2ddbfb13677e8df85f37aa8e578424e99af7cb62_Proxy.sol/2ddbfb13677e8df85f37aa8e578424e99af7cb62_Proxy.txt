
Begin Proxy.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(ptr_fallback_asm_0,retSz_fallback_asm_0) (Slither line:2802)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
ptr_fallback_asm_0
retSz_fallback_asm_0

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'contractLogic'
Looking for corresponding Variable
Current function: fallback

Begin Proxy.find_delegate_variable_from_name
Searching for contractLogic (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking PROXIABLE_MEM_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
fallback contains assembly, searching for sload (Slither line:1875)
{'name': 'PROXIABLE_MEM_SLOT', 'nodeType': 'YulIdentifier', 'src': '893:18:0'} (Slither line:1909)
Found storage slot in fallback: PROXIABLE_MEM_SLOT (Slither line:1943)

End Proxy.find_delegate_variable_from_name (Slither line:1949)


End Proxy.find_delegatecall_in_asm (Slither line:1637)

Setting Proxy._delegate_variable = Proxy._proxy_impl_slot: PROXIABLE_MEM_SLOT (Slither line:1473)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 
Call destination PROXIABLE_MEM_SLOT is constant (Slither line:1146)

PROXIABLE_MEM_SLOT is the implementation storage slot (Slither line:1149)

Proxy is delegating to PROXIABLE_MEM_SLOT
Looking for setter (Slither line:1200)


Begin Proxy.find_setter_in_contract (Slither line:3119)

Expression: 0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 (Slither line:3122)
Checking function: constructor(address) returns() (Slither line:3127)
Checking function: fallback() returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End Proxy.find_setter_in_contract (Slither line:3345)


Could not find implementation setter in Proxy (Slither line:1269)
Looking for getter (Slither line:1273)


Begin Proxy.find_getter_in_contract (Slither line:2974)

PROXIABLE_MEM_SLOT is a Variable object
0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7
Checking function: constructor (Slither line:2988)
Checking function: fallback (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End Proxy.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in Proxy (Slither line:1305)
Checking for PROXIABLE_MEM_SLOT at slot 0 in contract Proxiable (Slither line:1355)
Found PROXIABLE_MEM_SLOT at slot 0 in contract Proxiable (Slither line:1362)

Begin Proxiable.find_getter_in_contract (Slither line:2974)

PROXIABLE_MEM_SLOT is a Variable object
0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7
Checking function: _updateCodeAddress (Slither line:2988)
Checking function: getLogicAddress (Slither line:2988)
getLogicAddress returns address variable called logicAddress (Slither line:3008)
Checking function: proxiableUUID (Slither line:2988)
proxiableUUID returns bytes32 variable  (Slither line:3008)
RETURN node expression: bytes32(PROXIABLE_MEM_SLOT) (Slither line:3028)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End Proxiable.find_getter_in_contract (Slither line:3083)


Begin Proxiable.find_setter_in_contract (Slither line:3119)

Expression: 0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 (Slither line:3122)
Checking function: _updateCodeAddress(address) returns() (Slither line:3127)
Visibility: internal
Checking function: getLogicAddress() returns(address) (Slither line:3127)
Visibility: public
getLogicAddress contains assembly (Slither line:3153)
logicAddress = sload(uint256)(PROXIABLE_MEM_SLOT)
is an Assignment Operation (Slither line:3216)
0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7
Checking function: proxiableUUID() returns(bytes32) (Slither line:3127)
Visibility: public
bytes32(PROXIABLE_MEM_SLOT)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End Proxiable.find_setter_in_contract (Slither line:3345)

Checking for PROXIABLE_MEM_SLOT at slot 0 in contract Initializable (Slither line:1355)
Found initialized at slot 0 in contract Initializable (Slither line:1362)
Checking for initialized at slot 0 in contract ERC20Detailed (Slither line:1355)
Found initialized at slot 0 in contract ERC20Detailed (Slither line:1362)
Checking for initialized at slot 0 in contract OwnerRole (Slither line:1355)
Found _owners at slot 0 in contract OwnerRole (Slither line:1362)
Checking for _owners at slot 0 in contract WhitelisterRole (Slither line:1355)
Found _owners at slot 0 in contract WhitelisterRole (Slither line:1362)
Checking for _owners at slot 0 in contract Whitelistable (Slither line:1355)
Found _owners at slot 0 in contract Whitelistable (Slither line:1362)
Checking for _owners at slot 0 in contract Context (Slither line:1355)
Found initialized at slot 0 in contract Context (Slither line:1362)
Checking for initialized at slot 0 in contract ERC20 (Slither line:1355)
Found initialized at slot 0 in contract ERC20 (Slither line:1362)
Checking for initialized at slot 0 in contract MinterRole (Slither line:1355)
Found _owners at slot 0 in contract MinterRole (Slither line:1362)
Checking for _owners at slot 0 in contract Mintable (Slither line:1355)
Found initialized at slot 0 in contract Mintable (Slither line:1362)
Checking for initialized at slot 0 in contract BurnerRole (Slither line:1355)
Found _owners at slot 0 in contract BurnerRole (Slither line:1362)
Checking for _owners at slot 0 in contract Burnable (Slither line:1355)
Found initialized at slot 0 in contract Burnable (Slither line:1362)
Checking for initialized at slot 0 in contract RevokerRole (Slither line:1355)
Found _owners at slot 0 in contract RevokerRole (Slither line:1362)
Checking for _owners at slot 0 in contract Revocable (Slither line:1355)
Found initialized at slot 0 in contract Revocable (Slither line:1362)
Checking for initialized at slot 0 in contract PauserRole (Slither line:1355)
Found _owners at slot 0 in contract PauserRole (Slither line:1362)
Checking for _owners at slot 0 in contract Pausable (Slither line:1355)
Found _owners at slot 0 in contract Pausable (Slither line:1362)
Checking for _owners at slot 0 in contract TokenSoftToken (Slither line:1355)
Found PROXIABLE_MEM_SLOT at slot 0 in contract TokenSoftToken (Slither line:1362)

Begin TokenSoftToken.find_getter_in_contract (Slither line:2974)

PROXIABLE_MEM_SLOT is a Variable object
0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7
Checking function: paused (Slither line:2988)
paused returns bool variable  (Slither line:3008)
RETURN node expression: _paused (Slither line:3028)
Checking function: _pause (Slither line:2988)
Checking function: _unpause (Slither line:2988)
Checking function: pause (Slither line:2988)
Checking function: unpause (Slither line:2988)
Checking function: isPauser (Slither line:2988)
isPauser returns bool variable  (Slither line:3008)
RETURN node expression: _pausers.has(account) (Slither line:3028)
Checking function: _addPauser (Slither line:2988)
Checking function: _removePauser (Slither line:2988)
Checking function: addPauser (Slither line:2988)
Checking function: removePauser (Slither line:2988)
Checking function: isOwner (Slither line:2988)
isOwner returns bool variable  (Slither line:3008)
RETURN node expression: _owners.has(account) (Slither line:3028)
Checking function: addOwner (Slither line:2988)
Checking function: removeOwner (Slither line:2988)
Checking function: _addOwner (Slither line:2988)
Checking function: _removeOwner (Slither line:2988)
Checking function: _revoke (Slither line:2988)
_revoke returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: revoke (Slither line:2988)
revoke returns bool variable  (Slither line:3008)
RETURN node expression: _revoke(from,amount) (Slither line:3028)
Checking function: isRevoker (Slither line:2988)
isRevoker returns bool variable  (Slither line:3008)
RETURN node expression: _revokers.has(account) (Slither line:3028)
Checking function: _addRevoker (Slither line:2988)
Checking function: _removeRevoker (Slither line:2988)
Checking function: addRevoker (Slither line:2988)
Checking function: removeRevoker (Slither line:2988)
Checking function: totalSupply (Slither line:2988)
totalSupply returns uint256 variable  (Slither line:3008)
RETURN node expression: _totalSupply (Slither line:3028)
Checking function: balanceOf (Slither line:2988)
balanceOf returns uint256 variable  (Slither line:3008)
RETURN node expression: _balances[account] (Slither line:3028)
Checking function: transfer (Slither line:2988)
transfer returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: allowance (Slither line:2988)
allowance returns uint256 variable  (Slither line:3008)
RETURN node expression: _allowances[owner][spender] (Slither line:3028)
Checking function: approve (Slither line:2988)
approve returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: transferFrom (Slither line:2988)
transferFrom returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: increaseAllowance (Slither line:2988)
increaseAllowance returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: decreaseAllowance (Slither line:2988)
decreaseAllowance returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: _transfer (Slither line:2988)
Checking function: _mint (Slither line:2988)
Checking function: _burn (Slither line:2988)
Checking function: _approve (Slither line:2988)
Checking function: _burnFrom (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: _msgSender (Slither line:2988)
_msgSender returns address variable  (Slither line:3008)
RETURN node expression: msg.sender (Slither line:3028)
Checking function: _msgData (Slither line:2988)
_msgData returns bytes variable  (Slither line:3008)
RETURN node expression: msg.data (Slither line:3028)
Checking function: isConstructor (Slither line:2988)
isConstructor returns bool variable  (Slither line:3008)
RETURN node expression: cs == 0 (Slither line:3028)
Checking function: _burn (Slither line:2988)
_burn returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: burn (Slither line:2988)
burn returns bool variable  (Slither line:3008)
RETURN node expression: _burn(msg.sender,account,amount) (Slither line:3028)
Checking function: isBurner (Slither line:2988)
isBurner returns bool variable  (Slither line:3008)
RETURN node expression: _burners.has(account) (Slither line:3028)
Checking function: _addBurner (Slither line:2988)
Checking function: _removeBurner (Slither line:2988)
Checking function: addBurner (Slither line:2988)
Checking function: removeBurner (Slither line:2988)
Checking function: _mint (Slither line:2988)
_mint returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: mint (Slither line:2988)
mint returns bool variable  (Slither line:3008)
RETURN node expression: Mintable._mint(msg.sender,account,amount) (Slither line:3028)
Checking function: isMinter (Slither line:2988)
isMinter returns bool variable  (Slither line:3008)
RETURN node expression: _minters.has(account) (Slither line:3028)
Checking function: _addMinter (Slither line:2988)
Checking function: _removeMinter (Slither line:2988)
Checking function: addMinter (Slither line:2988)
Checking function: removeMinter (Slither line:2988)
Checking function: _setWhitelistEnabled (Slither line:2988)
Checking function: _addToWhitelist (Slither line:2988)
Checking function: _removeFromWhitelist (Slither line:2988)
Checking function: _updateOutboundWhitelistEnabled (Slither line:2988)
Checking function: checkWhitelistAllowed (Slither line:2988)
checkWhitelistAllowed returns bool variable  (Slither line:3008)
RETURN node expression: outboundWhitelistsEnabled[senderWhiteList][receiverWhiteList] (Slither line:3028)
RETURN node expression: false (Slither line:3028)
RETURN node expression: true (Slither line:3028)
Checking function: setWhitelistEnabled (Slither line:2988)
Checking function: addToWhitelist (Slither line:2988)
Checking function: removeFromWhitelist (Slither line:2988)
Checking function: updateOutboundWhitelistEnabled (Slither line:2988)
Checking function: isWhitelister (Slither line:2988)
isWhitelister returns bool variable  (Slither line:3008)
RETURN node expression: _whitelisters.has(account) (Slither line:3028)
Checking function: _addWhitelister (Slither line:2988)
Checking function: _removeWhitelister (Slither line:2988)
Checking function: addWhitelister (Slither line:2988)
Checking function: removeWhitelister (Slither line:2988)
Checking function: initialize (Slither line:2988)
Checking function: name (Slither line:2988)
name returns string variable  (Slither line:3008)
RETURN node expression: _name (Slither line:3028)
Checking function: symbol (Slither line:2988)
symbol returns string variable  (Slither line:3008)
RETURN node expression: _symbol (Slither line:3028)
Checking function: decimals (Slither line:2988)
decimals returns uint8 variable  (Slither line:3008)
RETURN node expression: _decimals (Slither line:3028)
Checking function: _updateCodeAddress (Slither line:2988)
Checking function: getLogicAddress (Slither line:2988)
getLogicAddress returns address variable called logicAddress (Slither line:3008)
Checking function: proxiableUUID (Slither line:2988)
proxiableUUID returns bytes32 variable  (Slither line:3008)
RETURN node expression: bytes32(PROXIABLE_MEM_SLOT) (Slither line:3028)
Checking function: initialize (Slither line:2988)
Checking function: updateCodeAddress (Slither line:2988)
Checking function: detectTransferRestriction (Slither line:2988)
detectTransferRestriction returns uint8 variable  (Slither line:3008)
RETURN node expression: FAILURE_PAUSED (Slither line:3028)
RETURN node expression: SUCCESS_CODE (Slither line:3028)
RETURN node expression: SUCCESS_CODE (Slither line:3028)
RETURN node expression: FAILURE_NON_WHITELIST (Slither line:3028)
Checking function: messageForTransferRestriction (Slither line:2988)
messageForTransferRestriction returns string variable  (Slither line:3008)
RETURN node expression: UNKNOWN_ERROR (Slither line:3028)
RETURN node expression: SUCCESS_MESSAGE (Slither line:3028)
RETURN node expression: FAILURE_NON_WHITELIST_MESSAGE (Slither line:3028)
RETURN node expression: FAILURE_PAUSED_MESSAGE (Slither line:3028)
Checking function: transfer (Slither line:2988)
transfer returns bool variable called success (Slither line:3008)
Checking function: transferFrom (Slither line:2988)
transferFrom returns bool variable called success (Slither line:3008)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End TokenSoftToken.find_getter_in_contract (Slither line:3083)


Begin TokenSoftToken.find_setter_in_contract (Slither line:3119)

Expression: 0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 (Slither line:3122)
Checking function: initialize(address,string,string,uint8,uint256,bool) returns() (Slither line:3127)
Checking function: updateCodeAddress(address) returns() (Slither line:3127)
Visibility: public
role.bearer[account]
_owners.has(account)
CodeAddressUpdated(newAddress)
Proxiable._updateCodeAddress(newAddress)
sstore(uint256,uint256)(PROXIABLE_MEM_SLOT,newAddress)
sstore(uint256,uint256)

End TokenSoftToken.find_setter_in_contract (Slither line:3345)

Checking external function fallback
functions_writing_to_variable: PROXIABLE_MEM_SLOT
functions_writing_to_variable: checking function TokenSoftToken.removeOwner (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.approve (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._updateCodeAddress (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(PROXIABLE_MEM_SLOT,newAddress)
functions_writing_to_variable: _updateCodeAddress writes newAddress to PROXIABLE_MEM_SLOT using sstore (proxy_features line:998)
functions_writing_to_variable: checking function Proxy.constructor (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(PROXIABLE_MEM_SLOT,contractLogic)
functions_writing_to_variable: constructor writes contractLogic to PROXIABLE_MEM_SLOT using sstore (proxy_features line:998)
functions_writing_to_variable: checking function TokenSoftToken._addBurner (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.transferFrom (proxy_features line:898)
functions_writing_to_variable: checking function Proxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._removeBurner (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.increaseAllowance (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.addBurner (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.paused (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.removeBurner (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.decreaseAllowance (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._pause (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._mint (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.mint (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._unpause (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._transfer (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.pause (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.constructor (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.unpause (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._removeRevoker (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.messageForTransferRestriction (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.balanceOf (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._removeFromWhitelist (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.updateOutboundWhitelistEnabled (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._addOwner (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.isPauser (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.getLogicAddress (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.isMinter (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._mint (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._addPauser (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.addRevoker (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.transfer (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.isWhitelister (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._removeOwner (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.proxiableUUID (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._updateOutboundWhitelistEnabled (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._msgSender (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.removeRevoker (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._addMinter (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._removePauser (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.initialize (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._msgData (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._burn (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.allowance (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.checkWhitelistAllowed (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.totalSupply (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._addWhitelister (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._revoke (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.revoke (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.addPauser (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.isConstructor (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._removeMinter (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.name (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.balanceOf (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._approve (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.removePauser (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.initialize (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.approve (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.setWhitelistEnabled (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._removeWhitelister (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.addMinter (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.transfer (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.updateCodeAddress (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(PROXIABLE_MEM_SLOT,newAddress)
functions_writing_to_variable: updateCodeAddress writes newAddress to PROXIABLE_MEM_SLOT using sstore (proxy_features line:998)
functions_writing_to_variable: checking function TokenSoftToken.isRevoker (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._burn (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.isOwner (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._burnFrom (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.addWhitelister (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.burn (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.detectTransferRestriction (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.removeMinter (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.symbol (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.messageForTransferRestriction (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.transferFrom (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.addToWhitelist (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.addOwner (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.allowance (proxy_features line:898)
functions_writing_to_variable: checking function Proxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = PROXIABLE_MEM_SLOT = 0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: PROXIABLE_MEM_SLOT = 0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 (proxy_features line:912)
functions_writing_to_variable: Identifier: PROXIABLE_MEM_SLOT (proxy_features line:924)
get_value_assigned: PROXIABLE_MEM_SLOT = 0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7
functions_writing_to_variable: checking function TokenSoftToken.removeWhitelister (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.decimals (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.transfer (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._addRevoker (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.totalSupply (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._setWhitelistEnabled (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.removeFromWhitelist (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.transferFrom (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.detectTransferRestriction (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken._addToWhitelist (proxy_features line:898)
functions_writing_to_variable: checking function TokenSoftToken.isBurner (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _updateCodeAddress
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking public function updateCodeAddress
require(bool,string)(bytes32(PROXIABLE_MEM_SLOT) == Proxiable(newAddress).proxiableUUID(),Not compatible)
has_compatibility_checks: condition bytes32(PROXIABLE_MEM_SLOT) == Proxiable(newAddress).proxiableUUID()
check_condition_from_expression: modifier calls: ['onlyOwner()']
check_condition_from_expression: condition bytes32(PROXIABLE_MEM_SLOT) == Proxiable(newAddress).proxiableUUID()
require(bool,string)(account != address(0),Roles: account is the zero address)
has_compatibility_checks: condition account != address(0)
require(bool,string)(isOwner(msg.sender),OwnerRole: caller does not have the Owner role)
has_compatibility_checks: condition isOwner(msg.sender)
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0x0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: ptr_fallback_asm_0 = mload(uint256)(0x40)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: contractLogic_fallback_asm_0 = sload(uint256)(PROXIABLE_MEM_SLOT)
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: success_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),contractLogic_fallback_asm_0,ptr_fallback_asm_0,calldatasize()(),0,0)
Found public function: constructor
Found fallback
has_time_delay: (node.type) RETURN
(Expression) role.bearer[account]
has_time_delay: (node.type) RETURN
(Expression) _owners.has(account)
has_time_delay: (node.type) EXPRESSION
(Expression) CodeAddressUpdated(newAddress)
has_time_delay: (node.type) EXPRESSION
(Expression) Proxiable._updateCodeAddress(newAddress)
has_time_delay: (node.type) EXPRESSION
(Expression) sstore(uint256,uint256)(PROXIABLE_MEM_SLOT,newAddress)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(bytes32(PROXIABLE_MEM_SLOT) == Proxiable(newAddress).proxiableUUID(),Not compatible)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(account != address(0),Roles: account is the zero address)
has_time_delay: (node.type) EXPRESSION
(Expression) onlyOwner()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(isOwner(msg.sender),OwnerRole: caller does not have the Owner role)

Begin Proxiable.is_proxy (Slither line:1425)


End Proxiable.is_proxy (Slither line:1428)


Begin Proxiable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxiable 

End Proxiable.is_upgradeable_proxy (Slither line:1407)


Begin Initializable.is_proxy (Slither line:1425)


End Initializable.is_proxy (Slither line:1428)


Begin Initializable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Initializable 

End Initializable.is_upgradeable_proxy (Slither line:1407)


Begin IERC20.is_proxy (Slither line:1425)


End IERC20.is_proxy (Slither line:1428)


Begin IERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20 

End IERC20.is_upgradeable_proxy (Slither line:1407)


Begin ERC20Detailed.is_proxy (Slither line:1425)


End ERC20Detailed.is_proxy (Slither line:1428)


Begin ERC20Detailed.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20Detailed 

End ERC20Detailed.is_upgradeable_proxy (Slither line:1407)


Begin ERC1404.is_proxy (Slither line:1425)


End ERC1404.is_proxy (Slither line:1428)


Begin ERC1404.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC1404 

End ERC1404.is_upgradeable_proxy (Slither line:1407)


Begin Roles.is_proxy (Slither line:1425)


End Roles.is_proxy (Slither line:1428)


Begin Roles.is_upgradeable_proxy (Slither line:1136)

Checking contract: Roles 

End Roles.is_upgradeable_proxy (Slither line:1407)


Begin OwnerRole.is_proxy (Slither line:1425)


End OwnerRole.is_proxy (Slither line:1428)


Begin OwnerRole.is_upgradeable_proxy (Slither line:1136)

Checking contract: OwnerRole 

End OwnerRole.is_upgradeable_proxy (Slither line:1407)


Begin WhitelisterRole.is_proxy (Slither line:1425)


End WhitelisterRole.is_proxy (Slither line:1428)


Begin WhitelisterRole.is_upgradeable_proxy (Slither line:1136)

Checking contract: WhitelisterRole 

End WhitelisterRole.is_upgradeable_proxy (Slither line:1407)


Begin Whitelistable.is_proxy (Slither line:1425)


End Whitelistable.is_proxy (Slither line:1428)


Begin Whitelistable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Whitelistable 

End Whitelistable.is_upgradeable_proxy (Slither line:1407)


Begin Context.is_proxy (Slither line:1425)


End Context.is_proxy (Slither line:1428)


Begin Context.is_upgradeable_proxy (Slither line:1136)

Checking contract: Context 

End Context.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin ERC20.is_proxy (Slither line:1425)


End ERC20.is_proxy (Slither line:1428)


Begin ERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20 

End ERC20.is_upgradeable_proxy (Slither line:1407)


Begin MinterRole.is_proxy (Slither line:1425)


End MinterRole.is_proxy (Slither line:1428)


Begin MinterRole.is_upgradeable_proxy (Slither line:1136)

Checking contract: MinterRole 

End MinterRole.is_upgradeable_proxy (Slither line:1407)


Begin Mintable.is_proxy (Slither line:1425)


End Mintable.is_proxy (Slither line:1428)


Begin Mintable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Mintable 

End Mintable.is_upgradeable_proxy (Slither line:1407)


Begin BurnerRole.is_proxy (Slither line:1425)


End BurnerRole.is_proxy (Slither line:1428)


Begin BurnerRole.is_upgradeable_proxy (Slither line:1136)

Checking contract: BurnerRole 

End BurnerRole.is_upgradeable_proxy (Slither line:1407)


Begin Burnable.is_proxy (Slither line:1425)


End Burnable.is_proxy (Slither line:1428)


Begin Burnable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Burnable 

End Burnable.is_upgradeable_proxy (Slither line:1407)


Begin RevokerRole.is_proxy (Slither line:1425)


End RevokerRole.is_proxy (Slither line:1428)


Begin RevokerRole.is_upgradeable_proxy (Slither line:1136)

Checking contract: RevokerRole 

End RevokerRole.is_upgradeable_proxy (Slither line:1407)


Begin Revocable.is_proxy (Slither line:1425)


End Revocable.is_proxy (Slither line:1428)


Begin Revocable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Revocable 

End Revocable.is_upgradeable_proxy (Slither line:1407)


Begin PauserRole.is_proxy (Slither line:1425)


End PauserRole.is_proxy (Slither line:1428)


Begin PauserRole.is_upgradeable_proxy (Slither line:1136)

Checking contract: PauserRole 

End PauserRole.is_upgradeable_proxy (Slither line:1407)


Begin Pausable.is_proxy (Slither line:1425)


End Pausable.is_proxy (Slither line:1428)


Begin Pausable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Pausable 

End Pausable.is_upgradeable_proxy (Slither line:1407)


Begin TokenSoftToken.is_proxy (Slither line:1425)


End TokenSoftToken.is_proxy (Slither line:1428)


Begin TokenSoftToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenSoftToken 

End TokenSoftToken.is_upgradeable_proxy (Slither line:1407)


Begin BlacklisterRole.is_proxy (Slither line:1425)


End BlacklisterRole.is_proxy (Slither line:1428)


Begin BlacklisterRole.is_upgradeable_proxy (Slither line:1136)

Checking contract: BlacklisterRole 

End BlacklisterRole.is_upgradeable_proxy (Slither line:1407)


Begin Blacklistable.is_proxy (Slither line:1425)


End Blacklistable.is_proxy (Slither line:1428)


Begin Blacklistable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Blacklistable 

End Blacklistable.is_upgradeable_proxy (Slither line:1407)


Begin RevocableToAddress.is_proxy (Slither line:1425)


End RevocableToAddress.is_proxy (Slither line:1428)


Begin RevocableToAddress.is_upgradeable_proxy (Slither line:1136)

Checking contract: RevocableToAddress 

End RevocableToAddress.is_upgradeable_proxy (Slither line:1407)


Begin TokenSoftTokenV2.is_proxy (Slither line:1425)


End TokenSoftTokenV2.is_proxy (Slither line:1428)


Begin TokenSoftTokenV2.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenSoftTokenV2 

End TokenSoftTokenV2.is_upgradeable_proxy (Slither line:1407)

