{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "BeaconProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.12/bf/ethereum/contracts/mainnet/bf/BF485F5B3Bb0c19d77d4946B5F6CaD401bEFCC3b_BeaconProxy.sol/BF485F5B3Bb0c19d77d4946B5F6CaD401bEFCC3b_BeaconProxy.sol#19-57)",
        "elements": [],
        "description": "BeaconProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.12/bf/ethereum/contracts/mainnet/bf/BF485F5B3Bb0c19d77d4946B5F6CaD401bEFCC3b_BeaconProxy.sol/BF485F5B3Bb0c19d77d4946B5F6CaD401bEFCC3b_BeaconProxy.sol#19-57) may be an upgradeable proxy.\ncontractLogic is declared in the proxy.\nBeaconProxy.fallback().contractLogic (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.12/bf/ethereum/contracts/mainnet/bf/BF485F5B3Bb0c19d77d4946B5F6CaD401bEFCC3b_BeaconProxy.sol/BF485F5B3Bb0c19d77d4946B5F6CaD401bEFCC3b_BeaconProxy.sol#33) gets value from a cross-contract call: IBeacon(BEACON).getCanonicalLib()\nIBeacon appears to be a Beacon contract for the proxy\nThe address of IBeacon is stored as a state variable: BeaconProxy.BEACON\nCould not find setter for BEACON\nNo setter functions found to search for compatibility checks.\n",
        "id": "41a23cfe1f35434e488f00e28edd88b01d0dccc4d05edfd9af55706e55ed7b27",
        "features": {
          "upgradeable": "maybe",
          "impl_address_variable": "BeaconProxy.fallback().contractLogic",
          "impl_address_setter": "not found",
          "impl_address_getter": "not found",
          "impl_address_location": "BeaconProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.12/bf/ethereum/contracts/mainnet/bf/BF485F5B3Bb0c19d77d4946B5F6CaD401bEFCC3b_BeaconProxy.sol/BF485F5B3Bb0c19d77d4946B5F6CaD401bEFCC3b_BeaconProxy.sol#19-57)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "IBeacon(BEACON).getCanonicalLib()",
          "beacon": "IBeacon",
          "beacon_source_type": "address",
          "beacon_source_variable": "BeaconProxy.BEACON",
          "beacon_source_constant": false,
          "beacon_source_setters": "none found",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": "no setters found"
          },
          "can_remove_upgradeability": false
        }
      }
    ]
  }
}