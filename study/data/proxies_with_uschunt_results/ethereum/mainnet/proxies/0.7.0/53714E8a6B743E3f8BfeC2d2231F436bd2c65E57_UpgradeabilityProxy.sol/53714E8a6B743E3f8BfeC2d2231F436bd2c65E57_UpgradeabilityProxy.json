{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.0/53714E8a6B743E3f8BfeC2d2231F436bd2c65E57_UpgradeabilityProxy.sol/53714E8a6B743E3f8BfeC2d2231F436bd2c65E57_UpgradeabilityProxy.sol#6-138)",
        "elements": [],
        "description": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.0/53714E8a6B743E3f8BfeC2d2231F436bd2c65E57_UpgradeabilityProxy.sol/53714E8a6B743E3f8BfeC2d2231F436bd2c65E57_UpgradeabilityProxy.sol#6-138) is an upgradeable proxy.\nimplementationPosition is declared in the proxy.\n uses Unstructured Storage\n uses non-standard slot: keccak256(bytes)(proxy.implementation)\nMissing compatibility check in UpgradeabilityProxy.transferImplementation()\n",
        "id": "05106d4225bd53777e80ea697c1897deadbf79c2739da1865f8f26ad1947a3e9",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "UpgradeabilityProxy.implementationPosition",
          "impl_address_setter": "UpgradeabilityProxy.transferImplementation()",
          "impl_address_getter": "UpgradeabilityProxy.implementation()",
          "impl_address_location": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.0/53714E8a6B743E3f8BfeC2d2231F436bd2c65E57_UpgradeabilityProxy.sol/53714E8a6B743E3f8BfeC2d2231F436bd2c65E57_UpgradeabilityProxy.sol#6-138)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "keccak256(bytes)(proxy.implementation)",
          "unstructured_storage": true,
          "eip_1967": false,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "UpgradeabilityProxy.transferImplementation()": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "proxyOwner()",
              "newProxyOwner()",
              "setNewProxyOwner(address)",
              "transferProxyOwnership()",
              "implementation()",
              "newImplementation()",
              "timelock()",
              "setNewImplementation(address)",
              "transferImplementation()"
            ]
          }
        }
      }
    ]
  }
}