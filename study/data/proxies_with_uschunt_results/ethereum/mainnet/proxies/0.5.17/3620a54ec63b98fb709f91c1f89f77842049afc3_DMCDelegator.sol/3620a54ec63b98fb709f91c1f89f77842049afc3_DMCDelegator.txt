
Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin DMCTokenStorage.is_proxy (Slither line:1425)


End DMCTokenStorage.is_proxy (Slither line:1428)


Begin DMCTokenStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: DMCTokenStorage 

End DMCTokenStorage.is_upgradeable_proxy (Slither line:1407)


Begin DMCGovernanceStorage.is_proxy (Slither line:1425)


End DMCGovernanceStorage.is_proxy (Slither line:1428)


Begin DMCGovernanceStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: DMCGovernanceStorage 

End DMCGovernanceStorage.is_upgradeable_proxy (Slither line:1407)


Begin DMCTokenInterface.is_proxy (Slither line:1425)


End DMCTokenInterface.is_proxy (Slither line:1428)


Begin DMCTokenInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: DMCTokenInterface 

End DMCTokenInterface.is_upgradeable_proxy (Slither line:1407)


Begin DMCGovernanceToken.is_proxy (Slither line:1425)


End DMCGovernanceToken.is_proxy (Slither line:1428)


Begin DMCGovernanceToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: DMCGovernanceToken 

End DMCGovernanceToken.is_upgradeable_proxy (Slither line:1407)


Begin DMCToken.is_proxy (Slither line:1425)


End DMCToken.is_proxy (Slither line:1428)


Begin DMCToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: DMCToken 

End DMCToken.is_upgradeable_proxy (Slither line:1407)


Begin DMC.is_proxy (Slither line:1425)


End DMC.is_proxy (Slither line:1428)


Begin DMC.is_upgradeable_proxy (Slither line:1136)

Checking contract: DMC 

End DMC.is_upgradeable_proxy (Slither line:1407)


Begin DMCDelegationStorage.is_proxy (Slither line:1425)


End DMCDelegationStorage.is_proxy (Slither line:1428)


Begin DMCDelegationStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: DMCDelegationStorage 

End DMCDelegationStorage.is_upgradeable_proxy (Slither line:1407)


Begin DMCDelegatorInterface.is_proxy (Slither line:1425)


End DMCDelegatorInterface.is_proxy (Slither line:1428)


Begin DMCDelegatorInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: DMCDelegatorInterface 

End DMCDelegatorInterface.is_upgradeable_proxy (Slither line:1407)


Begin DMCDelegateInterface.is_proxy (Slither line:1425)


End DMCDelegateInterface.is_proxy (Slither line:1428)


Begin DMCDelegateInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: DMCDelegateInterface 

End DMCDelegateInterface.is_upgradeable_proxy (Slither line:1407)


Begin DMCDelegate.is_proxy (Slither line:1425)


End DMCDelegate.is_proxy (Slither line:1428)


Begin DMCDelegate.is_upgradeable_proxy (Slither line:1136)

Checking contract: DMCDelegate 

End DMCDelegate.is_upgradeable_proxy (Slither line:1407)


Begin DMCDelegator.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin DMCDelegator.find_delegatecall_in_exp_node

Found Expression Node: delegateAndReturn() (Slither line:2802)
Expression called: delegateAndReturn
Type of call: bytes memory (Slither line:2817)
Args:

End DMCDelegator.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin DMCDelegator.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(msg.value == 0,DMCDelegator:fallback: cannot send value to fallback) (Slither line:2802)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2817)
Args:
msg.value == 0
DMCDelegator:fallback: cannot send value to fallback

End DMCDelegator.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


Found LowLevelCall (Slither line:2740)


Found delegatecall in LowLevelCall (Slither line:2742)


End Contract.find_delegatecall_in_ir (Slither line:2773)


End DMCDelegator.is_proxy (Slither line:1476)


Begin DMCDelegator.is_upgradeable_proxy (Slither line:1136)

Checking contract: DMCDelegator 
DMCDelegator is delegating to implementation
Looking for setter (Slither line:1200)

Looking for setter in DMCDelegationStorage (Slither line:1204)


Begin DMCDelegationStorage.find_setter_in_contract (Slither line:3119)


End DMCDelegationStorage.find_setter_in_contract (Slither line:3345)


Could not find setter in DMCDelegationStorage 
Looking in DMCDelegator (Slither line:1213)

Begin DMCDelegator.find_setter_in_contract (Slither line:3119)

Checking function: constructor(string,string,uint8,uint256,address,bytes) returns() (Slither line:3127)
Checking function: _setImplementation(address,bool,bytes) returns() (Slither line:3127)
Visibility: public
returnData
implementation = implementation_
is an Assignment Operation (Slither line:3216)

End DMCDelegator.find_setter_in_contract (Slither line:3345)


Implementation set by function: _setImplementation in contract: DMCDelegator (Slither line:1264)
Looking for getter (Slither line:1273)


Begin DMCDelegationStorage.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_

End DMCDelegationStorage.find_getter_in_contract (Slither line:3083)


Begin DMCDelegator.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_
Checking function: constructor (Slither line:2988)
Checking function: _setImplementation (Slither line:2988)
Checking function: transfer (Slither line:2988)
transfer returns bool variable  (Slither line:3008)
Checking function: transferFrom (Slither line:2988)
transferFrom returns bool variable  (Slither line:3008)
Checking function: approve (Slither line:2988)
approve returns bool variable  (Slither line:3008)
Checking function: increaseAllowance (Slither line:2988)
increaseAllowance returns bool variable  (Slither line:3008)
Checking function: decreaseAllowance (Slither line:2988)
decreaseAllowance returns bool variable  (Slither line:3008)
Checking function: allowance (Slither line:2988)
allowance returns uint256 variable  (Slither line:3008)
Checking function: delegates (Slither line:2988)
delegates returns address variable  (Slither line:3008)
Checking function: balanceOf (Slither line:2988)
balanceOf returns uint256 variable  (Slither line:3008)
Checking function: balanceOfUnderlying (Slither line:2988)
balanceOfUnderlying returns uint256 variable  (Slither line:3008)
Checking function: _setPendingGov (Slither line:2988)
Checking function: _setRebaser (Slither line:2988)
Checking function: _setIncentivizer (Slither line:2988)
Checking function: _acceptGov (Slither line:2988)
Checking function: getPriorVotes (Slither line:2988)
getPriorVotes returns uint256 variable  (Slither line:3008)
Checking function: delegateBySig (Slither line:2988)
Checking function: delegate (Slither line:2988)
Checking function: getCurrentVotes (Slither line:2988)
getCurrentVotes returns uint256 variable  (Slither line:3008)
Checking function: delegateTo (Slither line:2988)
delegateTo returns bytes variable  (Slither line:3008)
RETURN node expression: returnData (Slither line:3028)
Checking function: delegateToImplementation (Slither line:2988)
delegateToImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: delegateTo(implementation,data) (Slither line:3028)
Checking function: delegateToViewImplementation (Slither line:2988)
delegateToViewImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: abi.decode(returnData,(bytes)) (Slither line:3028)
Checking function: delegateToViewAndReturn (Slither line:2988)
delegateToViewAndReturn returns bytes variable  (Slither line:3008)
Checking function: delegateAndReturn (Slither line:2988)
delegateAndReturn returns bytes variable  (Slither line:3008)
Checking function: fallback (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End DMCDelegator.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in DMCDelegator (Slither line:1305)
or in DMCDelegationStorage (Slither line:1319)

Begin DMCDelegatorInterface.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_

End DMCDelegatorInterface.find_getter_in_contract (Slither line:3083)


End DMCDelegator.is_upgradeable_proxy (Slither line:1332)

impl_address_from_contract_call: implementation_
impl_address_from_contract_call: StateVariable implementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression delegateAndReturn()
impl_address_from_contract_call: CallExpression require(bool,string)(msg.value == 0,DMCDelegator:fallback: cannot send value to fallback)
impl_address_from_contract_call: arg is msg.value == 0
impl_address_from_contract_call: arg is DMCDelegator:fallback: cannot send value to fallback
impl_address_from_contract_call: CallExpression implementation.delegatecall(msg.data)
Checking public function _setImplementation
Checking external function transfer
Checking external function transferFrom
Checking external function balanceOf
Checking external function allowance
Checking external function approve
Checking external function increaseAllowance
Checking external function decreaseAllowance
Checking external function getPriorVotes
Checking external function delegateBySig
Checking external function delegate
Checking external function delegates
Checking external function getCurrentVotes
Checking external function _setPendingGov
Checking external function _acceptGov
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == gov,DMCDelegator::_setImplementation: Caller must be gov)
Checking external function transfer
Checking external function transferFrom
Checking external function approve
Checking external function increaseAllowance
Checking external function decreaseAllowance
Checking external function allowance
Checking external function delegates
Checking external function balanceOf
Checking external function balanceOfUnderlying
Checking external function _setPendingGov
Checking external function _setRebaser
Checking external function _setIncentivizer
Checking external function _acceptGov
Checking external function getPriorVotes
Checking external function delegateBySig
Checking external function delegate
Checking external function getCurrentVotes
Checking public function delegateToImplementation
Checking public function delegateToViewImplementation
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function DMCDelegator.transfer (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.balanceOf (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.increaseAllowance (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator._setPendingGov (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.delegateBySig (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.delegateAndReturn (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.transferFrom (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.balanceOfUnderlying (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.delegate (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.allowance (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.approve (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.fallback (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator._setPendingGov (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.transferFrom (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.delegateBySig (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator._acceptGov (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.getCurrentVotes (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.increaseAllowance (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.decreaseAllowance (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.delegates (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator._setRebaser (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.delegateTo (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.decreaseAllowance (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.approve (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator._setIncentivizer (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.getCurrentVotes (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.delegateToImplementation (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.allowance (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.constructor (proxy_features line:898)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: constructor writes implementation_ to implementation (proxy_features line:1013)
functions_writing_to_variable: checking function DMCDelegator.balanceOf (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.delegate (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator._setImplementation (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator._acceptGov (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.delegateToViewImplementation (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.delegates (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator._setImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == gov,DMCDelegator::_setImplementation: Caller must be gov) (proxy_features line:909)
functions_writing_to_variable: exp = allowResign (proxy_features line:909)
functions_writing_to_variable: exp = delegateToImplementation(abi.encodeWithSignature(_resignImplementation())) (proxy_features line:909)
functions_writing_to_variable: exp = oldImplementation = implementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = implementation (proxy_features line:912)
functions_writing_to_variable: exp = implementation = implementation_ (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = implementation_ (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: exp = delegateToImplementation(abi.encodeWithSignature(_becomeImplementation(bytes),becomeImplementationData)) (proxy_features line:909)
functions_writing_to_variable: exp = NewImplementation(oldImplementation,implementation) (proxy_features line:909)
functions_writing_to_variable: exp = delegateTo(implementation,data) (proxy_features line:909)
functions_writing_to_variable: exp = (success,returnData) = callee.delegatecall(data) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: (success,returnData) = callee.delegatecall(data) (proxy_features line:912)
functions_writing_to_variable: exp = returnData (proxy_features line:909)
functions_writing_to_variable: _setImplementation writes implementation_ to implementation (proxy_features line:929)
functions_writing_to_variable: checking function DMCDelegator.getPriorVotes (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.transfer (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.getPriorVotes (proxy_features line:898)
functions_writing_to_variable: checking function DMCDelegator.delegateToViewAndReturn (proxy_features line:898)
has_compatibility_checks: dependencies: ['implementation_', 'implementation_']
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking public function _setImplementation
require(bool,string)(msg.sender == gov,DMCDelegator::_setImplementation: Caller must be gov)
has_compatibility_checks: condition msg.sender == gov
has_compatibility_checks: IF node exp = allowResign
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: (success) = implementation.delegatecall(msg.data)
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: _setImplementation
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = implementation
has_time_delay: (node.type) RETURN
(Expression) returnData
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = implementation_
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == gov,DMCDelegator::_setImplementation: Caller must be gov)
has_time_delay: (node.type) EXPRESSION
(Expression) delegateToImplementation(abi.encodeWithSignature(_resignImplementation()))
has_time_delay: (node.type) RETURN
(Expression) delegateTo(implementation,data)
has_time_delay: (node.type) EXPRESSION
(Expression) (success,returnData) = callee.delegatecall(data)
has_time_delay: (node.type) EXPRESSION
(Expression) delegateToImplementation(abi.encodeWithSignature(_becomeImplementation(bytes),becomeImplementationData))
has_time_delay: (node.type) IF
(Expression) allowResign
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,implementation)
