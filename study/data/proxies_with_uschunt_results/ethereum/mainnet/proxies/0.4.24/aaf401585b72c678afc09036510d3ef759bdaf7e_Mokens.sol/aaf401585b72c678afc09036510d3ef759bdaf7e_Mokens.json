{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Mokens (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.24/aaf401585b72c678afc09036510d3ef759bdaf7e_Mokens.sol/aaf401585b72c678afc09036510d3ef759bdaf7e_Mokens.sol#368-985)",
        "elements": [],
        "description": "Mokens (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.24/aaf401585b72c678afc09036510d3ef759bdaf7e_Mokens.sol/aaf401585b72c678afc09036510d3ef759bdaf7e_Mokens.sol#368-985) may be an upgradeable proxy.\ndelegate was found in a different contract.\ndelegate is an address state variable.\n uses Inherited Storage\nNo setter functions found to search for compatibility checks.\n",
        "id": "a6546fc3655237b11ac3bffb9d422dcd262115df544e1741d445209106aed032",
        "features": {
          "upgradeable": "maybe",
          "impl_address_variable": "AbstractMokens.delegate",
          "impl_address_setter": "not found",
          "impl_address_getter": "not found",
          "impl_address_location": "AbstractMokens (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.24/aaf401585b72c678afc09036510d3ef759bdaf7e_Mokens.sol/aaf401585b72c678afc09036510d3ef759bdaf7e_Mokens.sol#62-363)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": "no setters found"
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "erc20": [
              "totalSupply()",
              "balanceOf(address)",
              "transferFrom(address,address,uint256)",
              "approve(address,uint256)",
              "name()",
              "symbol()"
            ],
            "erc165": [
              "supportsInterface(bytes4)"
            ],
            "erc721": [
              "balanceOf(address)",
              "ownerOf(uint256)",
              "safeTransferFrom(address,address,uint256,bytes)",
              "safeTransferFrom(address,address,uint256)",
              "transferFrom(address,address,uint256)",
              "approve(address,uint256)",
              "setApprovalForAll(address,bool)",
              "getApproved(uint256)",
              "isApprovedForAll(address,address)",
              "supportsInterface(bytes4)",
              "name()",
              "symbol()"
            ],
            "erc1155": [
              "setApprovalForAll(address,bool)",
              "isApprovedForAll(address,address)",
              "supportsInterface(bytes4)"
            ],
            "other": [
              "rootOwnerOf(uint256)",
              "rootOwnerOfChild(address,uint256)",
              "exists(uint256)",
              "tokenOfOwnerByIndex(address,uint256)",
              "tokenByIndex(uint256)",
              "eraByIndex(uint256)",
              "eraByName(bytes32)",
              "currentEra()",
              "currentEraIndex()",
              "eraExists(bytes32)",
              "totalEras()",
              "mintData()",
              "mintPrice()",
              "mint(address,string,bytes32)",
              "isMintContract(address)",
              "totalMintContracts()",
              "mintContractByIndex(uint256)",
              "contractMint(address,string,bytes32,bytes32,uint256)",
              "mokenNameExists(string)",
              "mokenId(string)",
              "mokenData(uint256)",
              "eraFromMokenData(bytes32)",
              "eraFromMokenData(uint256)",
              "mokenEra(uint256)",
              "moken(uint256)",
              "mokenBytes32(uint256)",
              "mokenNoName(uint256)",
              "mokenName(uint256)",
              "mokenNameBytes32(uint256)",
              "getChild(address,uint256,address,uint256)",
              "onERC721Received(address,uint256,bytes)",
              "onERC721Received(address,address,uint256,bytes)",
              "ownerOfChild(address,uint256)",
              "childExists(address,uint256)",
              "totalChildContracts(uint256)",
              "childContractByIndex(uint256,uint256)",
              "totalChildTokens(uint256,address)",
              "childTokenByIndex(uint256,address,uint256)",
              "balanceOfERC20(uint256,address)",
              "erc20ContractByIndex(uint256,uint256)",
              "totalERC20Contracts(uint256)",
              "tokenOwnerOf(uint256)",
              "totalChildTokens(address,uint256)",
              "childTokenByIndex(address,uint256,uint256)"
            ]
          }
        }
      }
    ]
  }
}