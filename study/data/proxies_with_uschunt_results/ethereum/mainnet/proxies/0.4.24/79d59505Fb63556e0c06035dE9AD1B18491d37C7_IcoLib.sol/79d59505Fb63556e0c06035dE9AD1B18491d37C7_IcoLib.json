{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Ico (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.24/79d59505Fb63556e0c06035dE9AD1B18491d37C7_IcoLib.sol/79d59505Fb63556e0c06035dE9AD1B18491d37C7_IcoLib.sol#93-304)",
        "elements": [],
        "description": "Ico (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.24/79d59505Fb63556e0c06035dE9AD1B18491d37C7_IcoLib.sol/79d59505Fb63556e0c06035dE9AD1B18491d37C7_IcoLib.sol#93-304) is an upgradeable proxy.\nlibAddress is declared in the proxy.\nlibAddress is an address state variable\nMissing compatibility check in Ico.changeLibAddress(address)\n",
        "id": "fa6e2da80dfc98cb9439f445fbd74ab280f574f29d032abd667d73c0ef2ce3d1",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "Ico.libAddress",
          "impl_address_setter": "Ico.changeLibAddress(address)",
          "impl_address_getter": "not found",
          "impl_address_location": "Ico (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.4.24/79d59505Fb63556e0c06035dE9AD1B18491d37C7_IcoLib.sol/79d59505Fb63556e0c06035dE9AD1B18491d37C7_IcoLib.sol#93-304)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "master_copy_coupling": "missing implementation source",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "Ico.changeLibAddress(address)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "containing_delegatecall": [
              "setVesting(address,uint256,uint256,uint256)",
              "claimVesting()",
              "setKYC(address[],address[])",
              "setTransferRight(address[],address[])",
              "setCurrentRate(uint256)",
              "setCurrentPhase(Ico.phaseType)",
              "offchainUpload(address[],uint256[])",
              "buy()",
              "allowTransfer(address)",
              "calculateReward(uint256)",
              "calcVesting(address)"
            ],
            "other": [
              "replaceOwner(address)",
              "changeLibAddress(address)",
              "changeOffchainUploaderAddress(address)",
              "changeKYCAddress(address)",
              "changeSetRateAddress(address)"
            ]
          }
        }
      }
    ]
  }
}