{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.11/1e/ethereum/contracts/mainnet/1e/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol#1721-1789)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.11/1e/ethereum/contracts/mainnet/1e/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol#1721-1789) is a proxy, but doesn't seem upgradeable.\n",
        "id": "cb70bcec6d81585d7521ef499de1dc4cc025c9eb09a62b94cfe4ec81796afff6",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "BeaconProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.11/1e/ethereum/contracts/mainnet/1e/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol#2182-2253)",
        "elements": [],
        "description": "BeaconProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.11/1e/ethereum/contracts/mainnet/1e/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol#2182-2253) is an upgradeable proxy.\n_implementation was found in a different contract.\n_implementation is an address state variable.\nUpgradeableBeacon._implementation (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.11/1e/ethereum/contracts/mainnet/1e/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol#3217) gets value from a cross-contract call: IBeacon(_beacon()).implementation()\nUpgradeableBeacon appears to be a Beacon contract for the proxy\nThe address of UpgradeableBeacon is loaded from storage slot _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\nFound compatibility checks in all upgrade functions.\nTo remove upgradeability, delete upgradeTo from UpgradeableBeacon\n",
        "id": "e2218903dc7dbe6cfa50f2469319f5c01f5385ed8fb5bfb884ead6df397bed4e",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "UpgradeableBeacon._implementation",
          "impl_address_setter": "UpgradeableBeacon.upgradeTo(address)",
          "impl_address_getter": "UpgradeableBeacon.implementation()",
          "impl_address_location": "UpgradeableBeacon (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.11/1e/ethereum/contracts/mainnet/1e/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol#3216-3265)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "IBeacon(_beacon()).implementation()",
          "beacon": "UpgradeableBeacon",
          "beacon_source_type": "bytes32 constant storage slot",
          "beacon_source_slot": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "UpgradeableBeacon.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,UpgradeableBeacon: implementation is not a contract)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove upgradeTo from UpgradeableBeacon"
        }
      },
      {
        "contract": "UpgradeableProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.11/1e/ethereum/contracts/mainnet/1e/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol#2288-2349)",
        "elements": [],
        "description": "UpgradeableProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.11/1e/ethereum/contracts/mainnet/1e/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol#2288-2349) is a proxy, but doesn't seem upgradeable.\n",
        "id": "6498cef87413584e0151e2db149e748f6a8bbf5f5e1bfa6a9d5cf68d98a5879e",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "TransparentUpgradeableProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.11/1e/ethereum/contracts/mainnet/1e/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol#2948-3071)",
        "elements": [],
        "description": "TransparentUpgradeableProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.11/1e/ethereum/contracts/mainnet/1e/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol#2948-3071) is an upgradeable proxy.\n_IMPLEMENTATION_SLOT was found in a different contract.\n uses Unstructured Storage\n implements EIP-1967\n uses Transparent Proxy pattern\nFound compatibility checks in all upgrade functions.\n",
        "id": "767e4f14b54679e98b8c6f043e7834b3c452358531342d24a8160edeb93ced53",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "UpgradeableProxy._IMPLEMENTATION_SLOT",
          "impl_address_setter": "TransparentUpgradeableProxy.upgradeTo(address)",
          "impl_address_getter": "UpgradeableProxy._implementation()",
          "impl_address_location": "UpgradeableProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.11/1e/ethereum/contracts/mainnet/1e/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol#2288-2349)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "unstructured_storage": true,
          "eip_1967": true,
          "transparent": true,
          "external_functions_require_specific_sender": true,
          "fallback_receive_not_callable_by_specific_sender": true,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "TransparentUpgradeableProxy.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,UpgradeableProxy: new implementation is not a contract)",
                "is_correct": true
              },
              "TransparentUpgradeableProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,UpgradeableProxy: new implementation is not a contract)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      },
      {
        "contract": "Rollup (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.11/1e/ethereum/contracts/mainnet/1e/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol#3814-3983)",
        "elements": [],
        "description": "Rollup (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.11/1e/ethereum/contracts/mainnet/1e/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol#3814-3983) may be an upgradeable proxy.\ntarget is declared in the proxy.\nMissing compatibility check in Rollup.fallback()\nMissing compatibility check in Rollup.receive()\n",
        "id": "1ae751a1c0062899e5b434d2add25a2d16cc0f1db326b6388137b22fea660da2",
        "features": {
          "upgradeable": "maybe",
          "impl_address_variable": "Rollup._fallback().target",
          "impl_address_setter": "not found",
          "impl_address_getter": "UpgradeableBeacon.implementation()",
          "impl_address_location": "Rollup (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.11/1e/ethereum/contracts/mainnet/1e/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol/1E13BB8cF5F44c4c7fC585797336eAaE3935113C_ChallengeFactory.sol#3814-3983)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "Rollup.fallback()": "missing",
              "Rollup.receive()": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "paused()",
              "getNode(uint256)",
              "getStakerAddress(uint256)",
              "isStaked(address)",
              "latestStakedNode(address)",
              "currentChallenge(address)",
              "amountStaked(address)",
              "zombieAddress(uint256)",
              "zombieLatestStakedNode(uint256)",
              "zombieCount()",
              "isZombie(address)",
              "withdrawableFunds(address)",
              "firstUnresolvedNode()",
              "latestConfirmed()",
              "latestNodeCreated()",
              "lastStakeBlock()",
              "stakerCount()",
              "getNodeHash(uint256)",
              "_stakerMap(address)",
              "getNode(uint256)",
              "getStakerAddress(uint256)",
              "isStaked(address)",
              "latestStakedNode(address)",
              "currentChallenge(address)",
              "amountStaked(address)",
              "zombieAddress(uint256)",
              "zombieLatestStakedNode(uint256)",
              "zombieCount()",
              "isZombie(address)",
              "withdrawableFunds(address)",
              "firstUnresolvedNode()",
              "latestConfirmed()",
              "latestNodeCreated()",
              "lastStakeBlock()",
              "stakerCount()",
              "getNodeHash(uint256)",
              "isMaster()",
              "isMaster()",
              "initialize(bytes32,uint256[4],address,address,bytes,address[6],address[2],uint256[2])",
              "getFacets()",
              "getAdminFacet()",
              "getUserFacet()"
            ]
          }
        }
      }
    ]
  }
}