
Begin IAxelarGateway.is_proxy (Slither line:1425)


End IAxelarGateway.is_proxy (Slither line:1428)


Begin IAxelarGateway.is_upgradeable_proxy (Slither line:1136)

Checking contract: IAxelarGateway 

End IAxelarGateway.is_upgradeable_proxy (Slither line:1407)


Begin EternalStorage.is_proxy (Slither line:1425)


End EternalStorage.is_proxy (Slither line:1428)


Begin EternalStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: EternalStorage 

End EternalStorage.is_upgradeable_proxy (Slither line:1407)


Begin AxelarGatewayProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin AxelarGatewayProxy.find_delegatecall_in_exp_node

Found Expression Node: result_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2817)
Args:
gas()()
implementation
0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2824)

Destination is implementation (Slither line:2828)
dest.value: implementation (Slither line:2831)
Expression: getAddress(KEY_IMPLEMENTATION) (Slither line:2836)

Begin AxelarGatewayProxy.find_delegate_from_call_exp

getAddress(KEY_IMPLEMENTATION) (Slither line:2003)
called = getAddress (Slither line:2010)
Return node of function EternalStorage.getAddress(bytes32): RETURN _addressStorage[key] (Slither line:2041)
getAddress returns a variable of type address   (Slither line:2193)
Return value is LocalVariable:  (Slither line:2266)
has no expression (Slither line:2326)

End AxelarGatewayProxy.find_delegate_from_call_exp (Slither line:2328)


End AxelarGatewayProxy.find_delegatecall_in_exp_node (Slither line:2858)


End AxelarGatewayProxy.is_proxy (Slither line:1476)


Begin AxelarGatewayProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: AxelarGatewayProxy 
AxelarGatewayProxy is delegating to _addressStorage
Looking for setter (Slither line:1200)

Looking for setter in EternalStorage (Slither line:1204)


Begin EternalStorage.find_setter_in_contract (Slither line:3119)

Checking function: getUint(bytes32) returns(uint256) (Slither line:3127)
Visibility: public
_uintStorage[key]
Checking function: getString(bytes32) returns(string) (Slither line:3127)
Visibility: public
_stringStorage[key]
Checking function: getAddress(bytes32) returns(address) (Slither line:3127)
Visibility: public
_addressStorage[key]
Checking function: getBytes(bytes32) returns(bytes) (Slither line:3127)
Visibility: public
_bytesStorage[key]
Checking function: getBool(bytes32) returns(bool) (Slither line:3127)
Visibility: public
_boolStorage[key]
Checking function: getInt(bytes32) returns(int256) (Slither line:3127)
Visibility: public
_intStorage[key]
Checking function: _setUint(bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setString(bytes32,string) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAddress(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBytes(bytes32,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBool(bytes32,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _setInt(bytes32,int256) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteUint(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteString(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteAddress(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBytes(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBool(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteInt(bytes32) returns() (Slither line:3127)
Visibility: internal

End EternalStorage.find_setter_in_contract (Slither line:3345)


Could not find setter in EternalStorage 
Looking in AxelarGatewayProxy (Slither line:1213)

Begin AxelarGatewayProxy.find_setter_in_contract (Slither line:3119)

Checking function: fallback() returns() (Slither line:3127)
Checking function: receive() returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: getUint(bytes32) returns(uint256) (Slither line:3127)
Visibility: public
_uintStorage[key]
Checking function: getString(bytes32) returns(string) (Slither line:3127)
Visibility: public
_stringStorage[key]
Checking function: getAddress(bytes32) returns(address) (Slither line:3127)
Visibility: public
_addressStorage[key]
Checking function: getBytes(bytes32) returns(bytes) (Slither line:3127)
Visibility: public
_bytesStorage[key]
Checking function: getBool(bytes32) returns(bool) (Slither line:3127)
Visibility: public
_boolStorage[key]
Checking function: getInt(bytes32) returns(int256) (Slither line:3127)
Visibility: public
_intStorage[key]
Checking function: _setUint(bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setString(bytes32,string) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAddress(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBytes(bytes32,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBool(bytes32,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _setInt(bytes32,int256) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteUint(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteString(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteAddress(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBytes(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBool(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteInt(bytes32) returns() (Slither line:3127)
Visibility: internal

End AxelarGatewayProxy.find_setter_in_contract (Slither line:3345)


Could not find setter in AxelarGatewayProxy (Slither line:1220)
Looking for setter in AdminMultisigBase (Slither line:1228)


Begin AdminMultisigBase.find_setter_in_contract (Slither line:3119)

Checking function: _getAdminKey(uint256,uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getAdminCountKey(uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getAdminThresholdKey(uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getAdminVoteCountsKey(uint256,bytes32) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getAdminVotedKey(uint256,bytes32,address) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getIsAdminKey(uint256,address) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _adminEpoch() returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _getAdmin(uint256,uint256) returns(address) (Slither line:3127)
Visibility: internal
Checking function: _getAdminCount(uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _getAdminThreshold(uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _getVoteCount(uint256,bytes32) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _hasVoted(uint256,bytes32,address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: _isAdmin(uint256,address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: _setAdminEpoch(uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAdmin(uint256,uint256,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAdminCount(uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAdmins(uint256,address[],uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAdminThreshold(uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setVoteCount(uint256,bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setHasVoted(uint256,bytes32,address,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _setIsAdmin(uint256,address,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: getUint(bytes32) returns(uint256) (Slither line:3127)
Visibility: public
_uintStorage[key]
Checking function: getString(bytes32) returns(string) (Slither line:3127)
Visibility: public
_stringStorage[key]
Checking function: getAddress(bytes32) returns(address) (Slither line:3127)
Visibility: public
_addressStorage[key]
Checking function: getBytes(bytes32) returns(bytes) (Slither line:3127)
Visibility: public
_bytesStorage[key]
Checking function: getBool(bytes32) returns(bool) (Slither line:3127)
Visibility: public
_boolStorage[key]
Checking function: getInt(bytes32) returns(int256) (Slither line:3127)
Visibility: public
_intStorage[key]
Checking function: _setUint(bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setString(bytes32,string) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAddress(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBytes(bytes32,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBool(bytes32,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _setInt(bytes32,int256) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteUint(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteString(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteAddress(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBytes(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBool(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteInt(bytes32) returns() (Slither line:3127)
Visibility: internal

End AdminMultisigBase.find_setter_in_contract (Slither line:3345)

Looking for setter in AxelarGateway (Slither line:1228)


Begin AxelarGateway.find_setter_in_contract (Slither line:3119)

Checking function: allTokensFrozen() returns(bool) (Slither line:3127)
Visibility: public
getBool(KEY_ALL_TOKENS_FROZEN)
_boolStorage[key]
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: public
_addressStorage[key]
getAddress(KEY_IMPLEMENTATION)
Checking function: tokenAddresses(string) returns(address) (Slither line:3127)
Visibility: public
getAddress(_getTokenAddressKey(symbol))
keccak256(bytes)(abi.encodePacked(PREFIX_TOKEN_ADDRESS,symbol))
_addressStorage[key]
Checking function: tokenFrozen(string) returns(bool) (Slither line:3127)
Visibility: public
_boolStorage[key]
keccak256(bytes)(abi.encodePacked(PREFIX_TOKEN_FROZEN,symbol))
getBool(_getFreezeTokenKey(symbol))
Checking function: isCommandExecuted(bytes32) returns(bool) (Slither line:3127)
Visibility: public
_boolStorage[key]
getBool(_getIsCommandExecutedKey(commandId))
keccak256(bytes)(abi.encodePacked(PREFIX_COMMAND_EXECUTED,commandId))
Checking function: freezeToken(string) returns() (Slither line:3127)
Visibility: external
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN,adminEpoch,index))
require(bool,string)(! _hasVoted(adminEpoch,topic,msg.sender),VOTED)
getAddress(_getAdminKey(adminEpoch,index))
_setHasVoted(adminEpoch,topic,msg.sender,true)
keccak256(bytes)(abi.encodePacked(PREFIX_IS_ADMIN,adminEpoch,account))
getBool(_getIsAdminKey(adminEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_THRESHOLD,adminEpoch))
getUint(_getAdminVoteCountsKey(adminEpoch,topic))
keccak256(bytes)(abi.encodePacked(PREFIX_TOKEN_FROZEN,symbol))
_boolStorage[key]
_setVoteCount(adminEpoch,topic,adminVoteCount)
i ++
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTED,adminEpoch,topic,account))
_setBool(_getFreezeTokenKey(symbol),true)
_setHasVoted(adminEpoch,topic,_getAdmin(adminEpoch,i),false)
_setUint(_getAdminVoteCountsKey(adminEpoch,topic),voteCount)
None
TokenFrozen(symbol)
getUint(_getAdminCountKey(adminEpoch))
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_COUNT,adminEpoch))
onlyAdmin()
_addressStorage[key]
_uintStorage[key]
_setVoteCount(adminEpoch,topic,uint256(0))
getBool(_getAdminVotedKey(adminEpoch,topic,account))
_uintStorage[key] = value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
getUint(KEY_ADMIN_EPOCH)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTE_COUNTS,adminEpoch,topic))
require(bool,string)(_isAdmin(adminEpoch,msg.sender),NOT_ADMIN)
getUint(_getAdminThresholdKey(adminEpoch))
_setBool(_getAdminVotedKey(adminEpoch,topic,account),voted)
Checking function: unfreezeToken(string) returns() (Slither line:3127)
Visibility: external
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN,adminEpoch,index))
require(bool,string)(! _hasVoted(adminEpoch,topic,msg.sender),VOTED)
getAddress(_getAdminKey(adminEpoch,index))
_setHasVoted(adminEpoch,topic,msg.sender,true)
keccak256(bytes)(abi.encodePacked(PREFIX_IS_ADMIN,adminEpoch,account))
getBool(_getIsAdminKey(adminEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_THRESHOLD,adminEpoch))
getUint(_getAdminVoteCountsKey(adminEpoch,topic))
keccak256(bytes)(abi.encodePacked(PREFIX_TOKEN_FROZEN,symbol))
_boolStorage[key]
_setBool(_getFreezeTokenKey(symbol),false)
_setVoteCount(adminEpoch,topic,adminVoteCount)
TokenUnfrozen(symbol)
i ++
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTED,adminEpoch,topic,account))
_setHasVoted(adminEpoch,topic,_getAdmin(adminEpoch,i),false)
_setUint(_getAdminVoteCountsKey(adminEpoch,topic),voteCount)
onlyAdmin()
None
getUint(_getAdminCountKey(adminEpoch))
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_COUNT,adminEpoch))
_addressStorage[key]
_uintStorage[key]
_setVoteCount(adminEpoch,topic,uint256(0))
getBool(_getAdminVotedKey(adminEpoch,topic,account))
_uintStorage[key] = value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
getUint(KEY_ADMIN_EPOCH)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTE_COUNTS,adminEpoch,topic))
require(bool,string)(_isAdmin(adminEpoch,msg.sender),NOT_ADMIN)
getUint(_getAdminThresholdKey(adminEpoch))
_setBool(_getAdminVotedKey(adminEpoch,topic,account),voted)
Checking function: freezeAllTokens() returns() (Slither line:3127)
Visibility: external
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN,adminEpoch,index))
require(bool,string)(! _hasVoted(adminEpoch,topic,msg.sender),VOTED)
getAddress(_getAdminKey(adminEpoch,index))
_setHasVoted(adminEpoch,topic,msg.sender,true)
keccak256(bytes)(abi.encodePacked(PREFIX_IS_ADMIN,adminEpoch,account))
_setBool(KEY_ALL_TOKENS_FROZEN,true)
getBool(_getIsAdminKey(adminEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_THRESHOLD,adminEpoch))
AllTokensFrozen()
getUint(_getAdminVoteCountsKey(adminEpoch,topic))
_boolStorage[key]
_setVoteCount(adminEpoch,topic,adminVoteCount)
onlyAdmin()
i ++
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTED,adminEpoch,topic,account))
_setHasVoted(adminEpoch,topic,_getAdmin(adminEpoch,i),false)
_setUint(_getAdminVoteCountsKey(adminEpoch,topic),voteCount)
None
getUint(_getAdminCountKey(adminEpoch))
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_COUNT,adminEpoch))
_addressStorage[key]
_uintStorage[key]
_setVoteCount(adminEpoch,topic,uint256(0))
getBool(_getAdminVotedKey(adminEpoch,topic,account))
_uintStorage[key] = value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
getUint(KEY_ADMIN_EPOCH)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTE_COUNTS,adminEpoch,topic))
require(bool,string)(_isAdmin(adminEpoch,msg.sender),NOT_ADMIN)
getUint(_getAdminThresholdKey(adminEpoch))
_setBool(_getAdminVotedKey(adminEpoch,topic,account),voted)
Checking function: unfreezeAllTokens() returns() (Slither line:3127)
Visibility: external
AllTokensUnfrozen()
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN,adminEpoch,index))
require(bool,string)(! _hasVoted(adminEpoch,topic,msg.sender),VOTED)
onlyAdmin()
getAddress(_getAdminKey(adminEpoch,index))
_setHasVoted(adminEpoch,topic,msg.sender,true)
keccak256(bytes)(abi.encodePacked(PREFIX_IS_ADMIN,adminEpoch,account))
getBool(_getIsAdminKey(adminEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_THRESHOLD,adminEpoch))
getUint(_getAdminVoteCountsKey(adminEpoch,topic))
_boolStorage[key]
_setVoteCount(adminEpoch,topic,adminVoteCount)
i ++
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTED,adminEpoch,topic,account))
_setHasVoted(adminEpoch,topic,_getAdmin(adminEpoch,i),false)
_setUint(_getAdminVoteCountsKey(adminEpoch,topic),voteCount)
None
getUint(_getAdminCountKey(adminEpoch))
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_COUNT,adminEpoch))
_addressStorage[key]
_uintStorage[key]
_setVoteCount(adminEpoch,topic,uint256(0))
getBool(_getAdminVotedKey(adminEpoch,topic,account))
_uintStorage[key] = value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
getUint(KEY_ADMIN_EPOCH)
getUint(_getAdminThresholdKey(adminEpoch))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTE_COUNTS,adminEpoch,topic))
require(bool,string)(_isAdmin(adminEpoch,msg.sender),NOT_ADMIN)
_setBool(KEY_ALL_TOKENS_FROZEN,false)
_setBool(_getAdminVotedKey(adminEpoch,topic,account),voted)
Checking function: upgrade(address,bytes) returns() (Slither line:3127)
Visibility: external
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN,adminEpoch,index))
require(bool,string)(! _hasVoted(adminEpoch,topic,msg.sender),VOTED)
onlyAdmin()
getAddress(_getAdminKey(adminEpoch,index))
_setHasVoted(adminEpoch,topic,msg.sender,true)
keccak256(bytes)(abi.encodePacked(PREFIX_IS_ADMIN,adminEpoch,account))
getBool(_getIsAdminKey(adminEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_THRESHOLD,adminEpoch))
getUint(_getAdminVoteCountsKey(adminEpoch,topic))
_boolStorage[key]
_setVoteCount(adminEpoch,topic,adminVoteCount)
i ++
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTED,adminEpoch,topic,account))
_setHasVoted(adminEpoch,topic,_getAdmin(adminEpoch,i),false)
_setUint(_getAdminVoteCountsKey(adminEpoch,topic),voteCount)
None
getUint(_getAdminCountKey(adminEpoch))
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)
_setAddress(KEY_IMPLEMENTATION,newImplementation)
_addressStorage[key]
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_COUNT,adminEpoch))
Upgraded(newImplementation)
_uintStorage[key]
require(bool,string)(success,SETUP_FAILED)
_setVoteCount(adminEpoch,topic,uint256(0))
getBool(_getAdminVotedKey(adminEpoch,topic,account))
(success) = newImplementation.delegatecall(abi.encodeWithSelector(IAxelarGateway.setup.selector,setupParams))
is an Assignment Operation (Slither line:3216)
_addressStorage[key] = value
is an Assignment Operation (Slither line:3216)
Left side is an IndexAccess (Slither line:3245)

End AxelarGateway.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgrade in contract: AxelarGateway (Slither line:1264)
Looking for getter (Slither line:1273)


Begin EternalStorage.find_getter_in_contract (Slither line:2974)

_addressStorage is a Variable object
value
Checking function: getUint (Slither line:2988)
getUint returns uint256 variable  (Slither line:3008)
RETURN node expression: _uintStorage[key] (Slither line:3028)
Checking function: getString (Slither line:2988)
getString returns string variable  (Slither line:3008)
RETURN node expression: _stringStorage[key] (Slither line:3028)
Checking function: getAddress (Slither line:2988)
getAddress returns address variable  (Slither line:3008)
RETURN node expression: _addressStorage[key] (Slither line:3028)

End EternalStorage.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: getAddress in contract: EternalStorage (Slither line:1285)

End AxelarGatewayProxy.is_upgradeable_proxy (Slither line:1293)

impl_address_from_contract_call: value
impl_address_from_contract_call: StateVariable _addressStorage
impl_address_from_contract_call: getter is getAddress
getter.full_name = getAddress(bytes32)
impl_address_from_contract_call: CallExpression delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
impl_address_from_contract_call: arg is gas()()
impl_address_from_contract_call: CallExpression gas()()
impl_address_from_contract_call: CallExpression revert(uint256,uint256)(0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression return(uint256,uint256)(0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is calldatasize()()
impl_address_from_contract_call: CallExpression calldatasize()()
impl_address_from_contract_call: CallExpression getAddress(KEY_IMPLEMENTATION)
impl_address_from_contract_call: arg is KEY_IMPLEMENTATION
impl_address_from_contract_call: CallExpression returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
Checking public function getUint
Checking public function getString
Checking public function getAddress
Checking public function getBytes
Checking public function getBool
Checking public function getInt
Checking external function fallback
Checking external function receive
functions_writing_to_variable: _addressStorage
functions_writing_to_variable: checking function AxelarGatewayProxy._setBool (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._deleteBool (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.freezeAllTokens (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.unfreezeToken (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._setAdminCount (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._getVoteCount (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._deleteInt (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._getIsAdminKey (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._setIsAdmin (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.getBool (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.unfreezeAllTokens (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy._setInt (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.freezeAllTokens (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.allTokensFrozen (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.upgrade (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._hasVoted (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._getAdminKey (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.getInt (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._deployToken (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy._deleteUint (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._setAdmins (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.unfreezeAllTokens (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.implementation (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._getAdminCountKey (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._mintToken (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._adminEpoch (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.upgrade (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.getUint (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy.getUint (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._burnToken (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.tokenAddresses (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.setup (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._setUint (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy.getString (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy._deleteString (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._isAdmin (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._setAdminThreshold (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._getFreezeTokenKey (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._getAdminThresholdKey (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.tokenFrozen (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._getTokenAddressKey (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy._deleteAddress (proxy_features line:898)
functions_writing_to_variable: exp = delete _addressStorage[key] (proxy_features line:909)
functions_writing_to_variable: checking function AxelarGateway._getAdmin (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.getString (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._setString (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.execute (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy.getAddress (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._getIsCommandExecutedKey (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy._deleteBytes (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._getAdminCount (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._getAdminVoteCountsKey (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._setVoteCount (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._getChainID (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.isCommandExecuted (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._setAdminEpoch (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.getAddress (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._setAddress (proxy_features line:898)
functions_writing_to_variable: exp = _addressStorage[key] = value (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: _addressStorage[key] = value (proxy_features line:912)
functions_writing_to_variable: IndexAccess: _addressStorage[key] (proxy_features line:920)
functions_writing_to_variable: Identifier: _addressStorage (proxy_features line:924)
get_value_assigned: _addressStorage[key] = value
functions_writing_to_variable: _setAddress writes value to _addressStorage (proxy_features line:929)
functions_writing_to_variable: checking function AxelarGatewayProxy.getBytes (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._setTokenAddress (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy._deleteBool (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._setCommandExecuted (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._getAdminVotedKey (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._setHasVoted (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.freezeToken (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._getAdminThreshold (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.getBytes (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._setBytes (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy._deleteInt (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._setImplementation (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy.getBool (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._setBool (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy.getInt (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._setInt (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy._setUint (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._deleteUint (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy._setString (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.allTokensFrozen (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.implementation (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._deleteString (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy._setAddress (proxy_features line:898)
functions_writing_to_variable: exp = _addressStorage[key] = value (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: _addressStorage[key] = value (proxy_features line:912)
functions_writing_to_variable: IndexAccess: _addressStorage[key] (proxy_features line:920)
functions_writing_to_variable: Identifier: _addressStorage (proxy_features line:924)
get_value_assigned: _addressStorage[key] = value
functions_writing_to_variable: _setAddress writes value to _addressStorage (proxy_features line:929)
functions_writing_to_variable: checking function AxelarGateway.tokenAddresses (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._deleteAddress (proxy_features line:898)
functions_writing_to_variable: exp = delete _addressStorage[key] (proxy_features line:909)
functions_writing_to_variable: checking function AxelarGateway.tokenFrozen (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy.receive (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.isCommandExecuted (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGatewayProxy._setBytes (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway._deleteBytes (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.freezeToken (proxy_features line:898)
functions_writing_to_variable: checking function AxelarGateway.unfreezeToken (proxy_features line:898)
has_compatibility_checks: dependencies: ['account', 'newImplementation', 'decimals', 'REF_119', 'TMP_357', 'REF_32', 'value', 'name', 'token', 'TMP_356', 'cap', 'newImplementation', 'value', 'account', 'symbol', 'accounts', 'REF_104', 'tokenAddr']
has_compatibility_checks: skipping internal function _setAddress
has_compatibility_checks: skipping internal function _setAddress
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: implementation = getAddress(KEY_IMPLEMENTATION)
Found public function: getUint
has_time_delay: (node.type) NEW VARIABLE
(Expression) topic = keccak256(bytes)(msg.data)
has_time_delay: (node.type) RETURN
(Expression) keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN,adminEpoch,index))
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(! _hasVoted(adminEpoch,topic,msg.sender),VOTED)
has_time_delay: (node.type) EXPRESSION
(Expression) onlyAdmin()
has_time_delay: (node.type) RETURN
(Expression) getAddress(_getAdminKey(adminEpoch,index))
has_time_delay: (node.type) EXPRESSION
(Expression) _setHasVoted(adminEpoch,topic,msg.sender,true)
has_time_delay: (node.type) RETURN
(Expression) keccak256(bytes)(abi.encodePacked(PREFIX_IS_ADMIN,adminEpoch,account))
has_time_delay: (node.type) RETURN
(Expression) getBool(_getIsAdminKey(adminEpoch,account))
has_time_delay: (node.type) RETURN
(Expression) keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_THRESHOLD,adminEpoch))
has_time_delay: (node.type) NEW VARIABLE
(Expression) adminVoteCount = _getVoteCount(adminEpoch,topic) + uint256(1)
has_time_delay: (node.type) IF_LOOP
(Expression) i < adminCount
has_time_delay: (node.type) RETURN
(Expression) getUint(_getAdminVoteCountsKey(adminEpoch,topic))
has_time_delay: (node.type) RETURN
(Expression) _boolStorage[key]
has_time_delay: (node.type) EXPRESSION
(Expression) _setVoteCount(adminEpoch,topic,adminVoteCount)
has_time_delay: (node.type) IF
(Expression) adminVoteCount < _getAdminThreshold(adminEpoch)
has_time_delay: (node.type) EXPRESSION
(Expression) i ++
has_time_delay: (node.type) RETURN
(Expression) keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTED,adminEpoch,topic,account))
has_time_delay: (node.type) EXPRESSION
(Expression) _setHasVoted(adminEpoch,topic,_getAdmin(adminEpoch,i),false)
has_time_delay: (node.type) EXPRESSION
(Expression) _setUint(_getAdminVoteCountsKey(adminEpoch,topic),voteCount)
has_time_delay: (node.type) RETURN
(Expression) getUint(_getAdminCountKey(adminEpoch))
has_time_delay: (node.type) EXPRESSION
(Expression) _boolStorage[key] = value
has_time_delay: (node.type) EXPRESSION
(Expression) _setAddress(KEY_IMPLEMENTATION,newImplementation)
has_time_delay: (node.type) RETURN
(Expression) _addressStorage[key]
has_time_delay: (node.type) RETURN
(Expression) keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_COUNT,adminEpoch))
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) RETURN
(Expression) _uintStorage[key]
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(success,SETUP_FAILED)
has_time_delay: (node.type) EXPRESSION
(Expression) _setVoteCount(adminEpoch,topic,uint256(0))
has_time_delay: (node.type) RETURN
(Expression) getBool(_getAdminVotedKey(adminEpoch,topic,account))
has_time_delay: (node.type) EXPRESSION
(Expression) (success) = newImplementation.delegatecall(abi.encodeWithSelector(IAxelarGateway.setup.selector,setupParams))
has_time_delay: (node.type) EXPRESSION
(Expression) _addressStorage[key] = value
has_time_delay: (node.type) NEW VARIABLE
(Expression) adminEpoch = _adminEpoch()
has_time_delay: (node.type) EXPRESSION
(Expression) _uintStorage[key] = value
has_time_delay: (node.type) RETURN
(Expression) getUint(KEY_ADMIN_EPOCH)
has_time_delay: (node.type) RETURN
(Expression) keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTE_COUNTS,adminEpoch,topic))
has_time_delay: (node.type) NEW VARIABLE
(Expression) adminCount = _getAdminCount(adminEpoch)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(_isAdmin(adminEpoch,msg.sender),NOT_ADMIN)
has_time_delay: (node.type) RETURN
(Expression) getUint(_getAdminThresholdKey(adminEpoch))
has_time_delay: (node.type) EXPRESSION
(Expression) _setBool(_getAdminVotedKey(adminEpoch,topic,account),voted)
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)

Begin IAxelarGatewayMultisig.is_proxy (Slither line:1425)


End IAxelarGatewayMultisig.is_proxy (Slither line:1428)


Begin IAxelarGatewayMultisig.is_upgradeable_proxy (Slither line:1136)

Checking contract: IAxelarGatewayMultisig 

End IAxelarGatewayMultisig.is_upgradeable_proxy (Slither line:1407)


Begin ECDSA.is_proxy (Slither line:1425)


End ECDSA.is_proxy (Slither line:1428)


Begin ECDSA.is_upgradeable_proxy (Slither line:1136)

Checking contract: ECDSA 

End ECDSA.is_upgradeable_proxy (Slither line:1407)


Begin IERC20.is_proxy (Slither line:1425)


End IERC20.is_proxy (Slither line:1428)


Begin IERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20 

End IERC20.is_upgradeable_proxy (Slither line:1407)


Begin Context.is_proxy (Slither line:1425)


End Context.is_proxy (Slither line:1428)


Begin Context.is_upgradeable_proxy (Slither line:1136)

Checking contract: Context 

End Context.is_upgradeable_proxy (Slither line:1407)


Begin ERC20.is_proxy (Slither line:1425)


End ERC20.is_proxy (Slither line:1428)


Begin ERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20 

End ERC20.is_upgradeable_proxy (Slither line:1407)


Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin Burner.is_proxy (Slither line:1425)


End Burner.is_proxy (Slither line:1428)


Begin Burner.is_upgradeable_proxy (Slither line:1136)

Checking contract: Burner 

End Burner.is_upgradeable_proxy (Slither line:1407)


Begin BurnableMintableCappedERC20.is_proxy (Slither line:1425)


End BurnableMintableCappedERC20.is_proxy (Slither line:1428)


Begin BurnableMintableCappedERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: BurnableMintableCappedERC20 

End BurnableMintableCappedERC20.is_upgradeable_proxy (Slither line:1407)


Begin AdminMultisigBase.is_proxy (Slither line:1425)


End AdminMultisigBase.is_proxy (Slither line:1428)


Begin AdminMultisigBase.is_upgradeable_proxy (Slither line:1136)

Checking contract: AdminMultisigBase 

End AdminMultisigBase.is_upgradeable_proxy (Slither line:1407)


Begin AxelarGateway.is_proxy (Slither line:1425)


End AxelarGateway.is_proxy (Slither line:1428)


Begin AxelarGateway.is_upgradeable_proxy (Slither line:1136)

Checking contract: AxelarGateway 

End AxelarGateway.is_upgradeable_proxy (Slither line:1407)


Begin AxelarGatewayMultisig.is_proxy (Slither line:1425)


End AxelarGatewayMultisig.is_proxy (Slither line:1428)


Begin AxelarGatewayMultisig.is_upgradeable_proxy (Slither line:1136)

Checking contract: AxelarGatewayMultisig 

End AxelarGatewayMultisig.is_upgradeable_proxy (Slither line:1407)


Begin AxelarGatewayProxyMultisig.is_proxy (Slither line:1425)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin AxelarGatewayProxyMultisig.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: fallback

Begin AxelarGatewayProxyMultisig.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking _uintStorage (Slither line:1689)
Checking _stringStorage (Slither line:1689)
Checking _addressStorage (Slither line:1689)
Checking _bytesStorage (Slither line:1689)
Checking _boolStorage (Slither line:1689)
Checking _intStorage (Slither line:1689)
Checking KEY_IMPLEMENTATION (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking implementation (Slither line:1703)
implementation is a Local Variable in AxelarGatewayProxyMultisig.fallback (Slither line:1707)
Expression: getAddress(KEY_IMPLEMENTATION) (Slither line:1719)

Begin AxelarGatewayProxyMultisig.find_delegate_from_call_exp

getAddress(KEY_IMPLEMENTATION) (Slither line:2003)
called = getAddress (Slither line:2010)
Return node of function EternalStorage.getAddress(bytes32): RETURN _addressStorage[key] (Slither line:2041)
getAddress returns a variable of type address   (Slither line:2193)
Return value is LocalVariable:  (Slither line:2266)
has no expression (Slither line:2326)

End AxelarGatewayProxyMultisig.find_delegate_from_call_exp (Slither line:2328)

Call Expression
End AxelarGatewayProxyMultisig.find_delegate_variable_by_name (Slither line:1739)


End AxelarGatewayProxyMultisig.find_delegatecall_in_asm (Slither line:1637)


End AxelarGatewayProxyMultisig.is_proxy (Slither line:1476)


Begin AxelarGatewayProxyMultisig.is_upgradeable_proxy (Slither line:1136)

Checking contract: AxelarGatewayProxyMultisig 
AxelarGatewayProxyMultisig is delegating to _addressStorage
Looking for setter (Slither line:1200)

Looking for setter in EternalStorage (Slither line:1204)


Begin EternalStorage.find_setter_in_contract (Slither line:3119)

Expression: value (Slither line:3122)
Checking function: getUint(bytes32) returns(uint256) (Slither line:3127)
Visibility: public
_uintStorage[key]
Checking function: getString(bytes32) returns(string) (Slither line:3127)
Visibility: public
_stringStorage[key]
Checking function: getAddress(bytes32) returns(address) (Slither line:3127)
Visibility: public
_addressStorage[key]
Checking function: getBytes(bytes32) returns(bytes) (Slither line:3127)
Visibility: public
_bytesStorage[key]
Checking function: getBool(bytes32) returns(bool) (Slither line:3127)
Visibility: public
_boolStorage[key]
Checking function: getInt(bytes32) returns(int256) (Slither line:3127)
Visibility: public
_intStorage[key]
Checking function: _setUint(bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setString(bytes32,string) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAddress(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBytes(bytes32,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBool(bytes32,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _setInt(bytes32,int256) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteUint(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteString(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteAddress(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBytes(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBool(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteInt(bytes32) returns() (Slither line:3127)
Visibility: internal

End EternalStorage.find_setter_in_contract (Slither line:3345)


Could not find setter in EternalStorage 
Looking in AxelarGatewayProxyMultisig (Slither line:1213)

Begin AxelarGatewayProxyMultisig.find_setter_in_contract (Slither line:3119)

Expression: value (Slither line:3122)
Checking function: constructor(bytes) returns() (Slither line:3127)
Checking function: setup(bytes) returns() (Slither line:3127)
Visibility: external
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: receive() returns() (Slither line:3127)
Checking function: getUint(bytes32) returns(uint256) (Slither line:3127)
Visibility: public
_uintStorage[key]
Checking function: getString(bytes32) returns(string) (Slither line:3127)
Visibility: public
_stringStorage[key]
Checking function: getAddress(bytes32) returns(address) (Slither line:3127)
Visibility: public
_addressStorage[key]
Checking function: getBytes(bytes32) returns(bytes) (Slither line:3127)
Visibility: public
_bytesStorage[key]
Checking function: getBool(bytes32) returns(bool) (Slither line:3127)
Visibility: public
_boolStorage[key]
Checking function: getInt(bytes32) returns(int256) (Slither line:3127)
Visibility: public
_intStorage[key]
Checking function: _setUint(bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setString(bytes32,string) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAddress(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBytes(bytes32,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBool(bytes32,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _setInt(bytes32,int256) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteUint(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteString(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteAddress(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBytes(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBool(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteInt(bytes32) returns() (Slither line:3127)
Visibility: internal

End AxelarGatewayProxyMultisig.find_setter_in_contract (Slither line:3345)


Could not find setter in AxelarGatewayProxyMultisig (Slither line:1220)
Looking for setter in AxelarGatewayProxy (Slither line:1228)


Begin AxelarGatewayProxy.find_setter_in_contract (Slither line:3119)

Expression: value (Slither line:3122)
Checking function: fallback() returns() (Slither line:3127)
Checking function: receive() returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: getUint(bytes32) returns(uint256) (Slither line:3127)
Visibility: public
_uintStorage[key]
Checking function: getString(bytes32) returns(string) (Slither line:3127)
Visibility: public
_stringStorage[key]
Checking function: getAddress(bytes32) returns(address) (Slither line:3127)
Visibility: public
_addressStorage[key]
Checking function: getBytes(bytes32) returns(bytes) (Slither line:3127)
Visibility: public
_bytesStorage[key]
Checking function: getBool(bytes32) returns(bool) (Slither line:3127)
Visibility: public
_boolStorage[key]
Checking function: getInt(bytes32) returns(int256) (Slither line:3127)
Visibility: public
_intStorage[key]
Checking function: _setUint(bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setString(bytes32,string) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAddress(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBytes(bytes32,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBool(bytes32,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _setInt(bytes32,int256) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteUint(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteString(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteAddress(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBytes(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBool(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteInt(bytes32) returns() (Slither line:3127)
Visibility: internal

End AxelarGatewayProxy.find_setter_in_contract (Slither line:3345)

Looking for setter in AdminMultisigBase (Slither line:1228)


Begin AdminMultisigBase.find_setter_in_contract (Slither line:3119)

Expression: value (Slither line:3122)
Checking function: _getAdminKey(uint256,uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getAdminCountKey(uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getAdminThresholdKey(uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getAdminVoteCountsKey(uint256,bytes32) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getAdminVotedKey(uint256,bytes32,address) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getIsAdminKey(uint256,address) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _adminEpoch() returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _getAdmin(uint256,uint256) returns(address) (Slither line:3127)
Visibility: internal
Checking function: _getAdminCount(uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _getAdminThreshold(uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _getVoteCount(uint256,bytes32) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _hasVoted(uint256,bytes32,address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: _isAdmin(uint256,address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: _setAdminEpoch(uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAdmin(uint256,uint256,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAdminCount(uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAdmins(uint256,address[],uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAdminThreshold(uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setVoteCount(uint256,bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setHasVoted(uint256,bytes32,address,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _setIsAdmin(uint256,address,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: getUint(bytes32) returns(uint256) (Slither line:3127)
Visibility: public
_uintStorage[key]
Checking function: getString(bytes32) returns(string) (Slither line:3127)
Visibility: public
_stringStorage[key]
Checking function: getAddress(bytes32) returns(address) (Slither line:3127)
Visibility: public
_addressStorage[key]
Checking function: getBytes(bytes32) returns(bytes) (Slither line:3127)
Visibility: public
_bytesStorage[key]
Checking function: getBool(bytes32) returns(bool) (Slither line:3127)
Visibility: public
_boolStorage[key]
Checking function: getInt(bytes32) returns(int256) (Slither line:3127)
Visibility: public
_intStorage[key]
Checking function: _setUint(bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setString(bytes32,string) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAddress(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBytes(bytes32,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBool(bytes32,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _setInt(bytes32,int256) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteUint(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteString(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteAddress(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBytes(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBool(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteInt(bytes32) returns() (Slither line:3127)
Visibility: internal

End AdminMultisigBase.find_setter_in_contract (Slither line:3345)

Looking for setter in AxelarGateway (Slither line:1228)


Begin AxelarGateway.find_setter_in_contract (Slither line:3119)

Expression: value (Slither line:3122)
Checking function: allTokensFrozen() returns(bool) (Slither line:3127)
Visibility: public
getBool(KEY_ALL_TOKENS_FROZEN)
_boolStorage[key]
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: public
_addressStorage[key]
getAddress(KEY_IMPLEMENTATION)
Checking function: tokenAddresses(string) returns(address) (Slither line:3127)
Visibility: public
getAddress(_getTokenAddressKey(symbol))
keccak256(bytes)(abi.encodePacked(PREFIX_TOKEN_ADDRESS,symbol))
_addressStorage[key]
Checking function: tokenFrozen(string) returns(bool) (Slither line:3127)
Visibility: public
_boolStorage[key]
keccak256(bytes)(abi.encodePacked(PREFIX_TOKEN_FROZEN,symbol))
getBool(_getFreezeTokenKey(symbol))
Checking function: isCommandExecuted(bytes32) returns(bool) (Slither line:3127)
Visibility: public
_boolStorage[key]
getBool(_getIsCommandExecutedKey(commandId))
keccak256(bytes)(abi.encodePacked(PREFIX_COMMAND_EXECUTED,commandId))
Checking function: freezeToken(string) returns() (Slither line:3127)
Visibility: external
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN,adminEpoch,index))
require(bool,string)(! _hasVoted(adminEpoch,topic,msg.sender),VOTED)
getAddress(_getAdminKey(adminEpoch,index))
_setHasVoted(adminEpoch,topic,msg.sender,true)
keccak256(bytes)(abi.encodePacked(PREFIX_IS_ADMIN,adminEpoch,account))
getBool(_getIsAdminKey(adminEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_THRESHOLD,adminEpoch))
getUint(_getAdminVoteCountsKey(adminEpoch,topic))
keccak256(bytes)(abi.encodePacked(PREFIX_TOKEN_FROZEN,symbol))
_boolStorage[key]
_setVoteCount(adminEpoch,topic,adminVoteCount)
i ++
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTED,adminEpoch,topic,account))
_setBool(_getFreezeTokenKey(symbol),true)
_setHasVoted(adminEpoch,topic,_getAdmin(adminEpoch,i),false)
_setUint(_getAdminVoteCountsKey(adminEpoch,topic),voteCount)
None
TokenFrozen(symbol)
getUint(_getAdminCountKey(adminEpoch))
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_COUNT,adminEpoch))
onlyAdmin()
_addressStorage[key]
_uintStorage[key]
_setVoteCount(adminEpoch,topic,uint256(0))
getBool(_getAdminVotedKey(adminEpoch,topic,account))
_uintStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
getUint(KEY_ADMIN_EPOCH)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTE_COUNTS,adminEpoch,topic))
require(bool,string)(_isAdmin(adminEpoch,msg.sender),NOT_ADMIN)
getUint(_getAdminThresholdKey(adminEpoch))
_setBool(_getAdminVotedKey(adminEpoch,topic,account),voted)
Checking function: unfreezeToken(string) returns() (Slither line:3127)
Visibility: external
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN,adminEpoch,index))
require(bool,string)(! _hasVoted(adminEpoch,topic,msg.sender),VOTED)
getAddress(_getAdminKey(adminEpoch,index))
_setHasVoted(adminEpoch,topic,msg.sender,true)
keccak256(bytes)(abi.encodePacked(PREFIX_IS_ADMIN,adminEpoch,account))
getBool(_getIsAdminKey(adminEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_THRESHOLD,adminEpoch))
getUint(_getAdminVoteCountsKey(adminEpoch,topic))
keccak256(bytes)(abi.encodePacked(PREFIX_TOKEN_FROZEN,symbol))
_boolStorage[key]
_setBool(_getFreezeTokenKey(symbol),false)
_setVoteCount(adminEpoch,topic,adminVoteCount)
TokenUnfrozen(symbol)
i ++
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTED,adminEpoch,topic,account))
_setHasVoted(adminEpoch,topic,_getAdmin(adminEpoch,i),false)
_setUint(_getAdminVoteCountsKey(adminEpoch,topic),voteCount)
onlyAdmin()
None
getUint(_getAdminCountKey(adminEpoch))
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_COUNT,adminEpoch))
_addressStorage[key]
_uintStorage[key]
_setVoteCount(adminEpoch,topic,uint256(0))
getBool(_getAdminVotedKey(adminEpoch,topic,account))
_uintStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
getUint(KEY_ADMIN_EPOCH)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTE_COUNTS,adminEpoch,topic))
require(bool,string)(_isAdmin(adminEpoch,msg.sender),NOT_ADMIN)
getUint(_getAdminThresholdKey(adminEpoch))
_setBool(_getAdminVotedKey(adminEpoch,topic,account),voted)
Checking function: freezeAllTokens() returns() (Slither line:3127)
Visibility: external
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN,adminEpoch,index))
require(bool,string)(! _hasVoted(adminEpoch,topic,msg.sender),VOTED)
getAddress(_getAdminKey(adminEpoch,index))
_setHasVoted(adminEpoch,topic,msg.sender,true)
keccak256(bytes)(abi.encodePacked(PREFIX_IS_ADMIN,adminEpoch,account))
_setBool(KEY_ALL_TOKENS_FROZEN,true)
getBool(_getIsAdminKey(adminEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_THRESHOLD,adminEpoch))
AllTokensFrozen()
getUint(_getAdminVoteCountsKey(adminEpoch,topic))
_boolStorage[key]
_setVoteCount(adminEpoch,topic,adminVoteCount)
onlyAdmin()
i ++
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTED,adminEpoch,topic,account))
_setHasVoted(adminEpoch,topic,_getAdmin(adminEpoch,i),false)
_setUint(_getAdminVoteCountsKey(adminEpoch,topic),voteCount)
None
getUint(_getAdminCountKey(adminEpoch))
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_COUNT,adminEpoch))
_addressStorage[key]
_uintStorage[key]
_setVoteCount(adminEpoch,topic,uint256(0))
getBool(_getAdminVotedKey(adminEpoch,topic,account))
_uintStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
getUint(KEY_ADMIN_EPOCH)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTE_COUNTS,adminEpoch,topic))
require(bool,string)(_isAdmin(adminEpoch,msg.sender),NOT_ADMIN)
getUint(_getAdminThresholdKey(adminEpoch))
_setBool(_getAdminVotedKey(adminEpoch,topic,account),voted)
Checking function: unfreezeAllTokens() returns() (Slither line:3127)
Visibility: external
AllTokensUnfrozen()
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN,adminEpoch,index))
require(bool,string)(! _hasVoted(adminEpoch,topic,msg.sender),VOTED)
onlyAdmin()
getAddress(_getAdminKey(adminEpoch,index))
_setHasVoted(adminEpoch,topic,msg.sender,true)
keccak256(bytes)(abi.encodePacked(PREFIX_IS_ADMIN,adminEpoch,account))
getBool(_getIsAdminKey(adminEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_THRESHOLD,adminEpoch))
getUint(_getAdminVoteCountsKey(adminEpoch,topic))
_boolStorage[key]
_setVoteCount(adminEpoch,topic,adminVoteCount)
i ++
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTED,adminEpoch,topic,account))
_setHasVoted(adminEpoch,topic,_getAdmin(adminEpoch,i),false)
_setUint(_getAdminVoteCountsKey(adminEpoch,topic),voteCount)
None
getUint(_getAdminCountKey(adminEpoch))
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_COUNT,adminEpoch))
_addressStorage[key]
_uintStorage[key]
_setVoteCount(adminEpoch,topic,uint256(0))
getBool(_getAdminVotedKey(adminEpoch,topic,account))
_uintStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
getUint(KEY_ADMIN_EPOCH)
getUint(_getAdminThresholdKey(adminEpoch))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTE_COUNTS,adminEpoch,topic))
require(bool,string)(_isAdmin(adminEpoch,msg.sender),NOT_ADMIN)
_setBool(KEY_ALL_TOKENS_FROZEN,false)
_setBool(_getAdminVotedKey(adminEpoch,topic,account),voted)
Checking function: upgrade(address,bytes) returns() (Slither line:3127)
Visibility: external
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN,adminEpoch,index))
require(bool,string)(! _hasVoted(adminEpoch,topic,msg.sender),VOTED)
onlyAdmin()
getAddress(_getAdminKey(adminEpoch,index))
_setHasVoted(adminEpoch,topic,msg.sender,true)
keccak256(bytes)(abi.encodePacked(PREFIX_IS_ADMIN,adminEpoch,account))
getBool(_getIsAdminKey(adminEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_THRESHOLD,adminEpoch))
getUint(_getAdminVoteCountsKey(adminEpoch,topic))
_boolStorage[key]
_setVoteCount(adminEpoch,topic,adminVoteCount)
i ++
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTED,adminEpoch,topic,account))
_setHasVoted(adminEpoch,topic,_getAdmin(adminEpoch,i),false)
_setUint(_getAdminVoteCountsKey(adminEpoch,topic),voteCount)
None
getUint(_getAdminCountKey(adminEpoch))
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
_setAddress(KEY_IMPLEMENTATION,newImplementation)
_addressStorage[key]
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_COUNT,adminEpoch))
Upgraded(newImplementation)
_uintStorage[key]
require(bool,string)(success,SETUP_FAILED)
_setVoteCount(adminEpoch,topic,uint256(0))
getBool(_getAdminVotedKey(adminEpoch,topic,account))
(success) = newImplementation.delegatecall(abi.encodeWithSelector(IAxelarGateway.setup.selector,setupParams))
is an Assignment Operation (Slither line:3216)
value
_addressStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
_uintStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
getUint(KEY_ADMIN_EPOCH)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTE_COUNTS,adminEpoch,topic))
require(bool,string)(_isAdmin(adminEpoch,msg.sender),NOT_ADMIN)
getUint(_getAdminThresholdKey(adminEpoch))
_setBool(_getAdminVotedKey(adminEpoch,topic,account),voted)
_setImplementation(newImplementation)
Checking function: _deployToken(string,string,uint8,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _mintToken(string,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _burnToken(string,bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _getFreezeTokenKey(string) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getTokenAddressKey(string) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getIsCommandExecutedKey(bytes32) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getChainID() returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _setTokenAddress(string,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setCommandExecuted(bytes32,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: _getAdminKey(uint256,uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getAdminCountKey(uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getAdminThresholdKey(uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getAdminVoteCountsKey(uint256,bytes32) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getAdminVotedKey(uint256,bytes32,address) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getIsAdminKey(uint256,address) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _adminEpoch() returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _getAdmin(uint256,uint256) returns(address) (Slither line:3127)
Visibility: internal
Checking function: _getAdminCount(uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _getAdminThreshold(uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _getVoteCount(uint256,bytes32) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _hasVoted(uint256,bytes32,address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: _isAdmin(uint256,address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: _setAdminEpoch(uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAdmin(uint256,uint256,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAdminCount(uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAdmins(uint256,address[],uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAdminThreshold(uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setVoteCount(uint256,bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setHasVoted(uint256,bytes32,address,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _setIsAdmin(uint256,address,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: getUint(bytes32) returns(uint256) (Slither line:3127)
Visibility: public
_uintStorage[key]
Checking function: getString(bytes32) returns(string) (Slither line:3127)
Visibility: public
_stringStorage[key]
Checking function: getAddress(bytes32) returns(address) (Slither line:3127)
Visibility: public
_addressStorage[key]
Checking function: getBytes(bytes32) returns(bytes) (Slither line:3127)
Visibility: public
_bytesStorage[key]
Checking function: getBool(bytes32) returns(bool) (Slither line:3127)
Visibility: public
_boolStorage[key]
Checking function: getInt(bytes32) returns(int256) (Slither line:3127)
Visibility: public
_intStorage[key]
Checking function: _setUint(bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setString(bytes32,string) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAddress(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBytes(bytes32,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBool(bytes32,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _setInt(bytes32,int256) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteUint(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteString(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteAddress(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBytes(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBool(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteInt(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: allTokensFrozen() returns(bool) (Slither line:3127)
Visibility: external
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
Checking function: tokenAddresses(string) returns(address) (Slither line:3127)
Visibility: external
Checking function: tokenFrozen(string) returns(bool) (Slither line:3127)
Visibility: external
Checking function: isCommandExecuted(bytes32) returns(bool) (Slither line:3127)
Visibility: external
Checking function: freezeToken(string) returns() (Slither line:3127)
Visibility: external
Checking function: unfreezeToken(string) returns() (Slither line:3127)
Visibility: external
Checking function: freezeAllTokens() returns() (Slither line:3127)
Visibility: external
Checking function: unfreezeAllTokens() returns() (Slither line:3127)
Visibility: external
Checking function: upgrade(address,bytes) returns() (Slither line:3127)
Visibility: external
Checking function: setup(bytes) returns() (Slither line:3127)
Visibility: external
Checking function: execute(bytes) returns() (Slither line:3127)
Visibility: external

End AxelarGateway.find_setter_in_contract (Slither line:3345)

Looking for setter in AxelarGatewayMultisig (Slither line:1228)


Begin AxelarGatewayMultisig.find_setter_in_contract (Slither line:3119)

Expression: value (Slither line:3122)
Checking function: _containsDuplicates(address[]) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: _getOwnerKey(uint256,uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getOwnerCountKey(uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getOwnerThresholdKey(uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getIsOwnerKey(uint256,address) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _ownerEpoch() returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _getOwner(uint256,uint256) returns(address) (Slither line:3127)
Visibility: internal
Checking function: _getOwnerCount(uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _getOwnerThreshold(uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _isOwner(uint256,address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: _areValidRecentOwners(address[]) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: _areValidOwnersInEpoch(uint256,address[]) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: owners() returns(address[]) (Slither line:3127)
Visibility: public
results = new address[](ownerCount)
is an Assignment Operation (Slither line:3216)
value
getAddress(_getOwnerKey(ownerEpoch,index))
keccak256(bytes)(abi.encodePacked(PREFIX_OWNER_COUNT,ownerEpoch))
_addressStorage[key]
keccak256(bytes)(abi.encodePacked(PREFIX_OWNER,ownerEpoch,index))
getUint(_getOwnerCountKey(ownerEpoch))
_uintStorage[key]
i ++
results[i] = _getOwner(ownerEpoch,i)
is an Assignment Operation (Slither line:3216)
value
getUint(KEY_OWNER_EPOCH)
Checking function: _setOwnerEpoch(uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setOwner(uint256,uint256,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setOwnerCount(uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setOwners(uint256,address[],uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setOwnerThreshold(uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setIsOwner(uint256,address,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _getOperatorKey(uint256,uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getOperatorCountKey(uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getOperatorThresholdKey(uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getIsOperatorKey(uint256,address) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _operatorEpoch() returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _getOperator(uint256,uint256) returns(address) (Slither line:3127)
Visibility: internal
Checking function: _getOperatorCount(uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _getOperatorThreshold(uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _isOperator(uint256,address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: _areValidRecentOperators(address[]) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: _areValidOperatorsInEpoch(uint256,address[]) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: operators() returns(address[]) (Slither line:3127)
Visibility: public
keccak256(bytes)(abi.encodePacked(PREFIX_OPERATOR,operatorEpoch,index))
_addressStorage[key]
getUint(_getOperatorCountKey(operatorEpoch))
i ++
results[i] = _getOperator(operatorEpoch,i)
is an Assignment Operation (Slither line:3216)
value
getUint(KEY_OPERATOR_EPOCH)
_uintStorage[key]
keccak256(bytes)(abi.encodePacked(PREFIX_OPERATOR_COUNT,operatorEpoch))
results = new address[](operatorCount)
is an Assignment Operation (Slither line:3216)
value
getAddress(_getOperatorKey(operatorEpoch,index))
Checking function: _setOperatorEpoch(uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setOperator(uint256,uint256,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setOperatorCount(uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setOperators(uint256,address[],uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setOperatorThreshold(uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setIsOperator(uint256,address,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: deployToken(bytes) returns() (Slither line:3127)
Visibility: external
_setTokenAddress(symbol,token)
_deployToken(name,symbol,decimals,cap)
_addressStorage[key]
(name,symbol,decimals,cap) = abi.decode(params,(string,string,uint8,uint256))
is an Assignment Operation (Slither line:3216)
value
TokenDeployed(symbol,token)
require(bool,string)(msg.sender == address(this),NOT_SELF)
_addressStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
keccak256(bytes)(abi.encodePacked(PREFIX_TOKEN_ADDRESS,symbol))
getAddress(_getTokenAddressKey(symbol))
onlySelf()
require(bool,string)(tokenAddresses(symbol) == address(0),TOKEN_EXIST)
_setAddress(_getTokenAddressKey(symbol),tokenAddr)
Checking function: mintToken(bytes) returns() (Slither line:3127)
Visibility: external
onlySelf()
_addressStorage[key]
require(bool,string)(msg.sender == address(this),NOT_SELF)
require(bool,string)(tokenAddress != address(0),TOKEN_NOT_EXIST)
_mintToken(symbol,account,amount)
BurnableMintableCappedERC20(tokenAddress).mint(account,amount)
(symbol,account,amount) = abi.decode(params,(string,address,uint256))
is an Assignment Operation (Slither line:3216)
value
keccak256(bytes)(abi.encodePacked(PREFIX_TOKEN_ADDRESS,symbol))
getAddress(_getTokenAddressKey(symbol))
Checking function: burnToken(bytes) returns() (Slither line:3127)
Visibility: external
_addressStorage[key]
require(bool,string)(msg.sender == address(this),NOT_SELF)
_burnToken(symbol,salt)
(symbol,salt) = abi.decode(params,(string,bytes32))
is an Assignment Operation (Slither line:3216)
value
keccak256(bytes)(abi.encodePacked(PREFIX_TOKEN_ADDRESS,symbol))
getAddress(_getTokenAddressKey(symbol))
require(bool,string)(tokenAddress != address(0),TOKEN_NOT_EXIST)
onlySelf()
BurnableMintableCappedERC20(tokenAddress).burn(salt)
Checking function: transferOwnership(bytes) returns() (Slither line:3127)
Visibility: external
(newOwners,newThreshold) = abi.decode(params,(address[],uint256))
is an Assignment Operation (Slither line:3216)
value
require(bool,string)(accountLength >= threshold,INV_OWNERS)
require(bool,string)(threshold > uint256(0),INV_OWNER_THLD)
_setUint(KEY_OWNER_EPOCH,ownerEpoch)
_setOwnerThreshold(ownerEpoch,threshold)
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
_setOwnerCount(ownerEpoch,accountLength)
OwnershipTransferred(owners(),_getOwnerThreshold(ownerEpoch),newOwners,newThreshold)
_setOwnerEpoch(++ ownerEpoch)
require(bool,string)(account != address(0),ZERO_ADDR)
_setOwners(ownerEpoch,newOwners,newThreshold)
_uintStorage[key]
_setAddress(_getOwnerKey(ownerEpoch,index),account)
_uintStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
onlySelf()
i ++
require(bool,string)(! _isOwner(ownerEpoch,account),DUP_OWNER)
_setOwner(ownerEpoch,i,account)
_setIsOwner(ownerEpoch,account,true)
_addressStorage[key]
_addressStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
_setUint(_getOwnerCountKey(ownerEpoch),ownerCount)
_boolStorage[key]
results = new address[](ownerCount)
is an Assignment Operation (Slither line:3216)
value
getAddress(_getOwnerKey(ownerEpoch,index))
_setUint(_getOwnerThresholdKey(ownerEpoch),ownerThreshold)
getUint(_getOwnerCountKey(ownerEpoch))
_setBool(_getIsOwnerKey(ownerEpoch,account),isOwner)
keccak256(bytes)(abi.encodePacked(PREFIX_OWNER_THRESHOLD,ownerEpoch))
i ++
results[i] = _getOwner(ownerEpoch,i)
is an Assignment Operation (Slither line:3216)
value
getUint(_getOwnerThresholdKey(ownerEpoch))
keccak256(bytes)(abi.encodePacked(PREFIX_IS_OWNER,ownerEpoch,account))
getBool(_getIsOwnerKey(ownerEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_OWNER,ownerEpoch,index))
require(bool,string)(msg.sender == address(this),NOT_SELF)
getUint(KEY_OWNER_EPOCH)
keccak256(bytes)(abi.encodePacked(PREFIX_OWNER_COUNT,ownerEpoch))
Checking function: transferOperatorship(bytes) returns() (Slither line:3127)
Visibility: external
i ++
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
require(bool,string)(! _isOperator(operatorEpoch,account),DUP_OPERATOR)
keccak256(bytes)(abi.encodePacked(PREFIX_OPERATOR_THRESHOLD,operatorEpoch))
_setOperator(operatorEpoch,i,account)
_setIsOperator(operatorEpoch,account,true)
_uintStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
_uintStorage[key]
keccak256(bytes)(abi.encodePacked(PREFIX_IS_OPERATOR,operatorEpoch,account))
_addressStorage[key]
_addressStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
getUint(KEY_OPERATOR_EPOCH)
_setUint(KEY_OPERATOR_EPOCH,operatorEpoch)
getAddress(_getOperatorKey(operatorEpoch,index))
_boolStorage[key]
getUint(_getOperatorCountKey(operatorEpoch))
_setAddress(_getOperatorKey(operatorEpoch,index),account)
i ++
results[i] = _getOperator(operatorEpoch,i)
is an Assignment Operation (Slither line:3216)
value
getUint(_getOperatorThresholdKey(operatorEpoch))
(newOperators,newThreshold) = abi.decode(params,(address[],uint256))
is an Assignment Operation (Slither line:3216)
value
_setUint(_getOperatorCountKey(operatorEpoch),operatorCount)
getBool(_getIsOperatorKey(operatorEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_OPERATOR,operatorEpoch,index))
OperatorshipTransferred(operators(),_getOperatorThreshold(ownerEpoch),newOperators,newThreshold)
_setOperatorEpoch(++ operatorEpoch)
require(bool,string)(accountLength >= threshold,INV_OPERATORS)
_setUint(_getOperatorThresholdKey(operatorEpoch),operatorThreshold)
_setOperators(operatorEpoch,newOperators,newThreshold)
require(bool,string)(threshold > uint256(0),INV_OPERATOR_THLD)
require(bool,string)(msg.sender == address(this),NOT_SELF)
_setOperatorThreshold(operatorEpoch,threshold)
onlySelf()
_setOperatorCount(operatorEpoch,accountLength)
keccak256(bytes)(abi.encodePacked(PREFIX_OPERATOR_COUNT,operatorEpoch))
results = new address[](operatorCount)
is an Assignment Operation (Slither line:3216)
value
_setBool(_getIsOperatorKey(operatorEpoch,account),isOperator)
getUint(KEY_OWNER_EPOCH)
Checking function: setup(bytes) returns() (Slither line:3127)
Visibility: external
require(bool,string)(accountLength >= threshold,INV_OWNERS)
i ++
_setUint(_getAdminCountKey(adminEpoch),adminCount)
_setBool(_getIsAdminKey(adminEpoch,account),isAdmin)
require(bool,string)(threshold > uint256(0),INV_OWNER_THLD)
_setUint(KEY_OWNER_EPOCH,ownerEpoch)
_setOwnerThreshold(ownerEpoch,threshold)
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
require(bool,string)(! _isOperator(operatorEpoch,account),DUP_OPERATOR)
keccak256(bytes)(abi.encodePacked(PREFIX_OPERATOR_THRESHOLD,operatorEpoch))
_setOwnerCount(ownerEpoch,accountLength)
_setOperator(operatorEpoch,i,account)
_setIsOperator(operatorEpoch,account,true)
getUint(KEY_ADMIN_EPOCH)
require(bool,string)(account != address(0),ZERO_ADDR)
_uintStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
_uintStorage[key]
_setAddress(_getOwnerKey(ownerEpoch,index),account)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN,adminEpoch,index))
require(bool,string)(adminLength >= threshold,INV_ADMINS)
_setUint(_getAdminThresholdKey(adminEpoch),adminThreshold)
require(bool,string)(threshold > uint256(0),INV_ADMIN_THLD)
_setAdminThreshold(adminEpoch,threshold)
_setAdminCount(adminEpoch,adminLength)
keccak256(bytes)(abi.encodePacked(PREFIX_IS_OPERATOR,operatorEpoch,account))
i ++
require(bool,string)(! _isOwner(ownerEpoch,account),DUP_OWNER)
_setOwner(ownerEpoch,i,account)
_setIsOwner(ownerEpoch,account,true)
keccak256(bytes)(abi.encodePacked(PREFIX_OWNER_COUNT,ownerEpoch))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_COUNT,adminEpoch))
_addressStorage[key]
_addressStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
i ++
getUint(KEY_OPERATOR_EPOCH)
_setUint(_getOwnerCountKey(ownerEpoch),ownerCount)
require(bool,string)(! _isAdmin(adminEpoch,account),DUP_ADMIN)
_setAdmin(adminEpoch,i,account)
_setIsAdmin(adminEpoch,account,true)
keccak256(bytes)(abi.encodePacked(PREFIX_IS_ADMIN,adminEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_THRESHOLD,adminEpoch))
_boolStorage[key]
_setUint(_getOwnerThresholdKey(ownerEpoch),ownerThreshold)
_setAddress(_getOperatorKey(operatorEpoch,index),account)
_setBool(_getIsOwnerKey(ownerEpoch,account),isOwner)
keccak256(bytes)(abi.encodePacked(PREFIX_OWNER_THRESHOLD,ownerEpoch))
_setAdminEpoch(adminEpoch)
_setAdmins(adminEpoch,adminAddresses,adminThreshold)
_setUint(_getOperatorCountKey(operatorEpoch),operatorCount)
getBool(_getIsAdminKey(adminEpoch,account))
_setOwnerEpoch(ownerEpoch)
_setOwners(ownerEpoch,ownerAddresses,ownerThreshold)
getBool(_getIsOperatorKey(operatorEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_OPERATOR,operatorEpoch,index))
_setOperatorEpoch(operatorEpoch)
keccak256(bytes)(abi.encodePacked(PREFIX_IS_OWNER,ownerEpoch,account))
_setOperators(operatorEpoch,operatorAddresses,operatorThreshold)
_setUint(KEY_ADMIN_EPOCH,adminEpoch)
OwnershipTransferred(new address[](uint256(0)),uint256(0),ownerAddresses,ownerThreshold)
require(bool,string)(accountLength >= threshold,INV_OPERATORS)
getBool(_getIsOwnerKey(ownerEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_OWNER,ownerEpoch,index))
_setUint(_getOperatorThresholdKey(operatorEpoch),operatorThreshold)
OperatorshipTransferred(new address[](uint256(0)),uint256(0),operatorAddresses,operatorThreshold)
require(bool,string)(threshold > uint256(0),INV_OPERATOR_THLD)
_setOperatorThreshold(operatorEpoch,threshold)
getAddress(KEY_IMPLEMENTATION)
_setOperatorCount(operatorEpoch,accountLength)
_setAddress(_getAdminKey(adminEpoch,index),account)
require(bool,string)(implementation() != address(0),NOT_PROXY)
keccak256(bytes)(abi.encodePacked(PREFIX_OPERATOR_COUNT,operatorEpoch))
(adminAddresses,adminThreshold,ownerAddresses,ownerThreshold,operatorAddresses,operatorThreshold) = abi.decode(params,(address[],uint256,address[],uint256,address[],uint256))
is an Assignment Operation (Slither line:3216)
value
_setBool(_getIsOperatorKey(operatorEpoch,account),isOperator)
getUint(KEY_OWNER_EPOCH)
_setUint(KEY_OPERATOR_EPOCH,operatorEpoch)
Checking function: execute(bytes) returns() (Slither line:3127)
Visibility: external
require(bool,string)(uint256(s) <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,INV_S)
_setCommandExecuted(commandId,success)
r = mload(uint256)(signature + 0x20)
is an Assignment Operation (Slither line:3216)
value
_setCommandExecuted(commandId,true)
s = mload(uint256)(signature + 0x40)
is an Assignment Operation (Slither line:3216)
value
v = byte(uint256,uint256)(0,mload(uint256)(signature + 0x60))
is an Assignment Operation (Slither line:3216)
value
keccak256(bytes)(abi.encodePacked(PREFIX_COMMAND_EXECUTED,commandId))
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
keccak256(bytes)(abi.encodePacked(PREFIX_OPERATOR_THRESHOLD,operatorEpoch))
require(bool,string)(v == 27 || v == 28,INV_V)
commandSelector = AxelarGatewayMultisig.deployToken.selector
is an Assignment Operation (Slither line:3216)
value
require(bool,string)((signer = ecrecover(bytes32,uint8,bytes32,bytes32)(hash,v,r,s)) != address(0),INV_SIG)
keccak256(bytes)(abi.encodePacked(Ethereum Signed Message:
32,hash))
lowerBoundOperatorEpoch = operatorEpoch - recentEpochs
is an Assignment Operation (Slither line:3216)
value
getBool(_getIsCommandExecutedKey(commandId))
_uintStorage[key]
lowerBoundOperatorEpoch = uint256(0)
is an Assignment Operation (Slither line:3216)
value
false
++ i
keccak256(bytes)(abi.encodePacked(PREFIX_IS_OPERATOR,operatorEpoch,account))
commandSelector = AxelarGatewayMultisig.mintToken.selector
is an Assignment Operation (Slither line:3216)
value
id = chainid()()
is an Assignment Operation (Slither line:3216)
value
(success) = address(this).call(abi.encodeWithSelector(commandSelector,params[i_scope_0]))
is an Assignment Operation (Slither line:3216)
value
_execute(data,signatures)
(data,signatures) = abi.decode(input,(bytes,bytes[]))
is an Assignment Operation (Slither line:3216)
value
++ j
commandSelector = AxelarGatewayMultisig.burnToken.selector
is an Assignment Operation (Slither line:3216)
value
require(bool,string)(signature.length == 65,INV_LEN)
true
getUint(KEY_OPERATOR_EPOCH)
i ++
false
true
_setBool(_getIsCommandExecutedKey(commandId),executed)
false
_boolStorage[key]
true
commandSelector = AxelarGatewayMultisig.transferOwnership.selector
is an Assignment Operation (Slither line:3216)
value
false
false
true
require(bool,string)(commandsLength == commands.length && commandsLength == params.length,INV_CMDS)
true
keccak256(bytes)(abi.encodePacked(PREFIX_OWNER_THRESHOLD,ownerEpoch))
commandSelector = AxelarGatewayMultisig.transferOperatorship.selector
is an Assignment Operation (Slither line:3216)
value
getUint(_getOperatorThresholdKey(operatorEpoch))
lowerBoundOwnerEpoch = ownerEpoch - recentEpochs
is an Assignment Operation (Slither line:3216)
value
lowerBoundOwnerEpoch = uint256(0)
is an Assignment Operation (Slither line:3216)
value
getUint(_getOwnerThresholdKey(ownerEpoch))
false
getBool(_getIsOperatorKey(operatorEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_IS_OWNER,ownerEpoch,account))
Executed(commandId)
i_scope_0 ++
getBool(_getIsOwnerKey(ownerEpoch,account))
i ++
signers[i] = ECDSA.recover(ECDSA.toEthSignedMessageHash(keccak256(bytes)(data)),signatures[i])
is an Assignment Operation (Slither line:3216)
value
require(bool,string)(chainId == _getChainID(),INV_CHAIN)
(chainId,commandIds,commands,params) = abi.decode(data,(uint256,bytes32[],string[],bytes[]))
is an Assignment Operation (Slither line:3216)
value
getUint(KEY_OWNER_EPOCH)
i ++
false
Checking function: _execute(bytes,bytes[]) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: allTokensFrozen() returns(bool) (Slither line:3127)
Visibility: public
_boolStorage[key]
getBool(KEY_ALL_TOKENS_FROZEN)
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: public
getAddress(KEY_IMPLEMENTATION)
_addressStorage[key]
Checking function: tokenAddresses(string) returns(address) (Slither line:3127)
Visibility: public
_addressStorage[key]
getAddress(_getTokenAddressKey(symbol))
keccak256(bytes)(abi.encodePacked(PREFIX_TOKEN_ADDRESS,symbol))
Checking function: tokenFrozen(string) returns(bool) (Slither line:3127)
Visibility: public
keccak256(bytes)(abi.encodePacked(PREFIX_TOKEN_FROZEN,symbol))
_boolStorage[key]
getBool(_getFreezeTokenKey(symbol))
Checking function: isCommandExecuted(bytes32) returns(bool) (Slither line:3127)
Visibility: public
keccak256(bytes)(abi.encodePacked(PREFIX_COMMAND_EXECUTED,commandId))
getBool(_getIsCommandExecutedKey(commandId))
_boolStorage[key]
Checking function: freezeToken(string) returns() (Slither line:3127)
Visibility: external
_setBool(_getFreezeTokenKey(symbol),true)
TokenFrozen(symbol)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTED,adminEpoch,topic,account))
_setUint(_getAdminVoteCountsKey(adminEpoch,topic),voteCount)
_setVoteCount(adminEpoch,topic,uint256(0))
onlyAdmin()
getUint(_getAdminCountKey(adminEpoch))
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_COUNT,adminEpoch))
_addressStorage[key]
_boolStorage[key]
require(bool,string)(_isAdmin(adminEpoch,msg.sender),NOT_ADMIN)
getBool(_getAdminVotedKey(adminEpoch,topic,account))
getUint(KEY_ADMIN_EPOCH)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTE_COUNTS,adminEpoch,topic))
require(bool,string)(! _hasVoted(adminEpoch,topic,msg.sender),VOTED)
getUint(_getAdminThresholdKey(adminEpoch))
_setHasVoted(adminEpoch,topic,msg.sender,true)
_setBool(_getAdminVotedKey(adminEpoch,topic,account),voted)
_uintStorage[key]
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN,adminEpoch,index))
_uintStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
_setVoteCount(adminEpoch,topic,adminVoteCount)
getAddress(_getAdminKey(adminEpoch,index))
keccak256(bytes)(abi.encodePacked(PREFIX_IS_ADMIN,adminEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_THRESHOLD,adminEpoch))
getBool(_getIsAdminKey(adminEpoch,account))
i ++
keccak256(bytes)(abi.encodePacked(PREFIX_TOKEN_FROZEN,symbol))
_setHasVoted(adminEpoch,topic,_getAdmin(adminEpoch,i),false)
getUint(_getAdminVoteCountsKey(adminEpoch,topic))
None
Checking function: unfreezeToken(string) returns() (Slither line:3127)
Visibility: external
onlyAdmin()
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTED,adminEpoch,topic,account))
_setUint(_getAdminVoteCountsKey(adminEpoch,topic),voteCount)
_setVoteCount(adminEpoch,topic,uint256(0))
getUint(_getAdminCountKey(adminEpoch))
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_COUNT,adminEpoch))
_addressStorage[key]
_boolStorage[key]
require(bool,string)(_isAdmin(adminEpoch,msg.sender),NOT_ADMIN)
getBool(_getAdminVotedKey(adminEpoch,topic,account))
getUint(KEY_ADMIN_EPOCH)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTE_COUNTS,adminEpoch,topic))
require(bool,string)(! _hasVoted(adminEpoch,topic,msg.sender),VOTED)
getUint(_getAdminThresholdKey(adminEpoch))
_setHasVoted(adminEpoch,topic,msg.sender,true)
_setBool(_getAdminVotedKey(adminEpoch,topic,account),voted)
_uintStorage[key]
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN,adminEpoch,index))
_uintStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
_setVoteCount(adminEpoch,topic,adminVoteCount)
getAddress(_getAdminKey(adminEpoch,index))
keccak256(bytes)(abi.encodePacked(PREFIX_IS_ADMIN,adminEpoch,account))
_setBool(_getFreezeTokenKey(symbol),false)
getBool(_getIsAdminKey(adminEpoch,account))
i ++
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_THRESHOLD,adminEpoch))
keccak256(bytes)(abi.encodePacked(PREFIX_TOKEN_FROZEN,symbol))
_setHasVoted(adminEpoch,topic,_getAdmin(adminEpoch,i),false)
TokenUnfrozen(symbol)
getUint(_getAdminVoteCountsKey(adminEpoch,topic))
None
Checking function: freezeAllTokens() returns() (Slither line:3127)
Visibility: external
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTED,adminEpoch,topic,account))
_setUint(_getAdminVoteCountsKey(adminEpoch,topic),voteCount)
_setVoteCount(adminEpoch,topic,uint256(0))
getUint(_getAdminCountKey(adminEpoch))
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_COUNT,adminEpoch))
_addressStorage[key]
_boolStorage[key]
require(bool,string)(_isAdmin(adminEpoch,msg.sender),NOT_ADMIN)
getBool(_getAdminVotedKey(adminEpoch,topic,account))
getUint(KEY_ADMIN_EPOCH)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTE_COUNTS,adminEpoch,topic))
require(bool,string)(! _hasVoted(adminEpoch,topic,msg.sender),VOTED)
getUint(_getAdminThresholdKey(adminEpoch))
_setHasVoted(adminEpoch,topic,msg.sender,true)
_setBool(_getAdminVotedKey(adminEpoch,topic,account),voted)
_uintStorage[key]
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN,adminEpoch,index))
_uintStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
_setBool(KEY_ALL_TOKENS_FROZEN,true)
_setVoteCount(adminEpoch,topic,adminVoteCount)
getAddress(_getAdminKey(adminEpoch,index))
AllTokensFrozen()
keccak256(bytes)(abi.encodePacked(PREFIX_IS_ADMIN,adminEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_THRESHOLD,adminEpoch))
getBool(_getIsAdminKey(adminEpoch,account))
i ++
onlyAdmin()
_setHasVoted(adminEpoch,topic,_getAdmin(adminEpoch,i),false)
getUint(_getAdminVoteCountsKey(adminEpoch,topic))
None
Checking function: unfreezeAllTokens() returns() (Slither line:3127)
Visibility: external
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTED,adminEpoch,topic,account))
_setUint(_getAdminVoteCountsKey(adminEpoch,topic),voteCount)
_setVoteCount(adminEpoch,topic,uint256(0))
getUint(_getAdminCountKey(adminEpoch))
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_COUNT,adminEpoch))
_addressStorage[key]
_boolStorage[key]
require(bool,string)(_isAdmin(adminEpoch,msg.sender),NOT_ADMIN)
getBool(_getAdminVotedKey(adminEpoch,topic,account))
_setBool(KEY_ALL_TOKENS_FROZEN,false)
getUint(KEY_ADMIN_EPOCH)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTE_COUNTS,adminEpoch,topic))
require(bool,string)(! _hasVoted(adminEpoch,topic,msg.sender),VOTED)
AllTokensUnfrozen()
getUint(_getAdminThresholdKey(adminEpoch))
_setHasVoted(adminEpoch,topic,msg.sender,true)
onlyAdmin()
_setBool(_getAdminVotedKey(adminEpoch,topic,account),voted)
_uintStorage[key]
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN,adminEpoch,index))
_uintStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
_setVoteCount(adminEpoch,topic,adminVoteCount)
getAddress(_getAdminKey(adminEpoch,index))
keccak256(bytes)(abi.encodePacked(PREFIX_IS_ADMIN,adminEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_THRESHOLD,adminEpoch))
getBool(_getIsAdminKey(adminEpoch,account))
i ++
_setHasVoted(adminEpoch,topic,_getAdmin(adminEpoch,i),false)
getUint(_getAdminVoteCountsKey(adminEpoch,topic))
None
Checking function: upgrade(address,bytes) returns() (Slither line:3127)
Visibility: external
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTED,adminEpoch,topic,account))
_setUint(_getAdminVoteCountsKey(adminEpoch,topic),voteCount)
_setVoteCount(adminEpoch,topic,uint256(0))
Upgraded(newImplementation)
getUint(_getAdminCountKey(adminEpoch))
require(bool,string)(success,SETUP_FAILED)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_COUNT,adminEpoch))
_setAddress(KEY_IMPLEMENTATION,newImplementation)
_addressStorage[key]
(success) = newImplementation.delegatecall(abi.encodeWithSelector(IAxelarGateway.setup.selector,setupParams))
is an Assignment Operation (Slither line:3216)
value
_boolStorage[key]
require(bool,string)(_isAdmin(adminEpoch,msg.sender),NOT_ADMIN)
getBool(_getAdminVotedKey(adminEpoch,topic,account))
_addressStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
getUint(KEY_ADMIN_EPOCH)
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_VOTE_COUNTS,adminEpoch,topic))
_setImplementation(newImplementation)
require(bool,string)(! _hasVoted(adminEpoch,topic,msg.sender),VOTED)
getUint(_getAdminThresholdKey(adminEpoch))
_setHasVoted(adminEpoch,topic,msg.sender,true)
_setBool(_getAdminVotedKey(adminEpoch,topic,account),voted)
onlyAdmin()
_uintStorage[key]
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN,adminEpoch,index))
_uintStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
_boolStorage[key] = value
is an Assignment Operation (Slither line:3216)
value
_setVoteCount(adminEpoch,topic,adminVoteCount)
getAddress(_getAdminKey(adminEpoch,index))
keccak256(bytes)(abi.encodePacked(PREFIX_IS_ADMIN,adminEpoch,account))
keccak256(bytes)(abi.encodePacked(PREFIX_ADMIN_THRESHOLD,adminEpoch))
getBool(_getIsAdminKey(adminEpoch,account))
i ++
_setHasVoted(adminEpoch,topic,_getAdmin(adminEpoch,i),false)
getUint(_getAdminVoteCountsKey(adminEpoch,topic))
None
Checking function: _deployToken(string,string,uint8,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _mintToken(string,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _burnToken(string,bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _getFreezeTokenKey(string) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getTokenAddressKey(string) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getIsCommandExecutedKey(bytes32) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getChainID() returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _setTokenAddress(string,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setCommandExecuted(bytes32,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _getAdminKey(uint256,uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getAdminCountKey(uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getAdminThresholdKey(uint256) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getAdminVoteCountsKey(uint256,bytes32) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getAdminVotedKey(uint256,bytes32,address) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _getIsAdminKey(uint256,address) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: _adminEpoch() returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _getAdmin(uint256,uint256) returns(address) (Slither line:3127)
Visibility: internal
Checking function: _getAdminCount(uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _getAdminThreshold(uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _getVoteCount(uint256,bytes32) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _hasVoted(uint256,bytes32,address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: _isAdmin(uint256,address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: _setAdminEpoch(uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAdmin(uint256,uint256,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAdminCount(uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAdmins(uint256,address[],uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAdminThreshold(uint256,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setVoteCount(uint256,bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setHasVoted(uint256,bytes32,address,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _setIsAdmin(uint256,address,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: getUint(bytes32) returns(uint256) (Slither line:3127)
Visibility: public
_uintStorage[key]
Checking function: getString(bytes32) returns(string) (Slither line:3127)
Visibility: public
_stringStorage[key]
Checking function: getAddress(bytes32) returns(address) (Slither line:3127)
Visibility: public
_addressStorage[key]
Checking function: getBytes(bytes32) returns(bytes) (Slither line:3127)
Visibility: public
_bytesStorage[key]
Checking function: getBool(bytes32) returns(bool) (Slither line:3127)
Visibility: public
_boolStorage[key]
Checking function: getInt(bytes32) returns(int256) (Slither line:3127)
Visibility: public
_intStorage[key]
Checking function: _setUint(bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setString(bytes32,string) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAddress(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBytes(bytes32,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBool(bytes32,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _setInt(bytes32,int256) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteUint(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteString(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteAddress(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBytes(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBool(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteInt(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: allTokensFrozen() returns(bool) (Slither line:3127)
Visibility: external
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
Checking function: tokenAddresses(string) returns(address) (Slither line:3127)
Visibility: external
Checking function: tokenFrozen(string) returns(bool) (Slither line:3127)
Visibility: external
Checking function: isCommandExecuted(bytes32) returns(bool) (Slither line:3127)
Visibility: external
Checking function: freezeToken(string) returns() (Slither line:3127)
Visibility: external
Checking function: unfreezeToken(string) returns() (Slither line:3127)
Visibility: external
Checking function: freezeAllTokens() returns() (Slither line:3127)
Visibility: external
Checking function: unfreezeAllTokens() returns() (Slither line:3127)
Visibility: external
Checking function: upgrade(address,bytes) returns() (Slither line:3127)
Visibility: external
Checking function: setup(bytes) returns() (Slither line:3127)
Visibility: external
Checking function: execute(bytes) returns() (Slither line:3127)
Visibility: external
Checking function: owners() returns(address[]) (Slither line:3127)
Visibility: external
Checking function: operators() returns(address[]) (Slither line:3127)
Visibility: external

End AxelarGatewayMultisig.find_setter_in_contract (Slither line:3345)


Begin AxelarGatewayProxyMultisig.find_setter_in_contract (Slither line:3119)

Expression: value (Slither line:3122)
Checking function: constructor(bytes) returns() (Slither line:3127)
Checking function: setup(bytes) returns() (Slither line:3127)
Visibility: external
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: receive() returns() (Slither line:3127)
Checking function: getUint(bytes32) returns(uint256) (Slither line:3127)
Visibility: public
_uintStorage[key]
Checking function: getString(bytes32) returns(string) (Slither line:3127)
Visibility: public
_stringStorage[key]
Checking function: getAddress(bytes32) returns(address) (Slither line:3127)
Visibility: public
_addressStorage[key]
Checking function: getBytes(bytes32) returns(bytes) (Slither line:3127)
Visibility: public
_bytesStorage[key]
Checking function: getBool(bytes32) returns(bool) (Slither line:3127)
Visibility: public
_boolStorage[key]
Checking function: getInt(bytes32) returns(int256) (Slither line:3127)
Visibility: public
_intStorage[key]
Checking function: _setUint(bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _setString(bytes32,string) returns() (Slither line:3127)
Visibility: internal
Checking function: _setAddress(bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBytes(bytes32,bytes) returns() (Slither line:3127)
Visibility: internal
Checking function: _setBool(bytes32,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _setInt(bytes32,int256) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteUint(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteString(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteAddress(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBytes(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteBool(bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: _deleteInt(bytes32) returns() (Slither line:3127)
Visibility: internal

End AxelarGatewayProxyMultisig.find_setter_in_contract (Slither line:3345)


Could not find implementation setter in AxelarGatewayProxyMultisig (Slither line:1269)
Looking for getter (Slither line:1273)


Begin EternalStorage.find_getter_in_contract (Slither line:2974)

_addressStorage is a Variable object
value
Checking function: getUint (Slither line:2988)
getUint returns uint256 variable  (Slither line:3008)
RETURN node expression: _uintStorage[key] (Slither line:3028)
Checking function: getString (Slither line:2988)
getString returns string variable  (Slither line:3008)
RETURN node expression: _stringStorage[key] (Slither line:3028)
Checking function: getAddress (Slither line:2988)
getAddress returns address variable  (Slither line:3008)
RETURN node expression: _addressStorage[key] (Slither line:3028)

End EternalStorage.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: getAddress in contract: EternalStorage (Slither line:1285)

Begin AxelarGatewayProxyMultisig.getter_return_is_non_constant (Slither line:2883)

Found getter function but not setter
Checking if getter calls any other function
RETURN: _addressStorage[key] (Slither line:2888)
ENTRY_POINT: None (Slither line:2888)

End AxelarGatewayProxyMultisig.getter_return_is_non_constant (Slither line:2942)


End AxelarGatewayProxyMultisig.is_upgradeable_proxy (Slither line:1293)

