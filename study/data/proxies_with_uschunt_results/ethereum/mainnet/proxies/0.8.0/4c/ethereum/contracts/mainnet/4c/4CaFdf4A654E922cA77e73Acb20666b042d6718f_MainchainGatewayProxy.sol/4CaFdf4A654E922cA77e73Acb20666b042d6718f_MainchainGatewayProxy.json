{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.0/4c/ethereum/contracts/mainnet/4c/4CaFdf4A654E922cA77e73Acb20666b042d6718f_MainchainGatewayProxy.sol/4CaFdf4A654E922cA77e73Acb20666b042d6718f_MainchainGatewayProxy.sol#102-154)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.0/4c/ethereum/contracts/mainnet/4c/4CaFdf4A654E922cA77e73Acb20666b042d6718f_MainchainGatewayProxy.sol/4CaFdf4A654E922cA77e73Acb20666b042d6718f_MainchainGatewayProxy.sol#102-154) is an upgradeable proxy.\n_proxyTo was found in a different contract.\n_proxyTo is an address state variable.\nFound compatibility checks in all upgrade functions.\n",
        "id": "185725b7cefcfecbd056fa08611699e13e5835449533076804dc1f4a5e7a21d9",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "ProxyStorage._proxyTo",
          "impl_address_setter": "Proxy.updateProxyTo(address)",
          "impl_address_getter": "Proxy.implementation()",
          "impl_address_location": "ProxyStorage (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.0/4c/ethereum/contracts/mainnet/4c/4CaFdf4A654E922cA77e73Acb20666b042d6718f_MainchainGatewayProxy.sol/4CaFdf4A654E922cA77e73Acb20666b042d6718f_MainchainGatewayProxy.sol#94-96)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "Proxy.updateProxyTo(address)": {
                "check": "require(bool)(_newProxyTo != address(0x0))",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "owner()",
              "renounceOwnership()",
              "transferOwnership(address)",
              "implementation()",
              "proxyType()",
              "updateProxyTo(address)"
            ]
          }
        }
      },
      {
        "contract": "MainchainGatewayProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.0/4c/ethereum/contracts/mainnet/4c/4CaFdf4A654E922cA77e73Acb20666b042d6718f_MainchainGatewayProxy.sol/4CaFdf4A654E922cA77e73Acb20666b042d6718f_MainchainGatewayProxy.sol#269-273)",
        "elements": [],
        "description": "MainchainGatewayProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.0/4c/ethereum/contracts/mainnet/4c/4CaFdf4A654E922cA77e73Acb20666b042d6718f_MainchainGatewayProxy.sol/4CaFdf4A654E922cA77e73Acb20666b042d6718f_MainchainGatewayProxy.sol#269-273) is an upgradeable proxy.\n_proxyTo was found in a different contract.\n_proxyTo is an address state variable.\nFound compatibility checks in all upgrade functions.\n",
        "id": "76df0cff7037e40a644030bfa9781aaa3ee30c168df74d234281f37eaf285c35",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "ProxyStorage._proxyTo",
          "impl_address_setter": "Proxy.updateProxyTo(address)",
          "impl_address_getter": "Proxy.implementation()",
          "impl_address_location": "ProxyStorage (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.0/4c/ethereum/contracts/mainnet/4c/4CaFdf4A654E922cA77e73Acb20666b042d6718f_MainchainGatewayProxy.sol/4CaFdf4A654E922cA77e73Acb20666b042d6718f_MainchainGatewayProxy.sol#94-96)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "Proxy.updateProxyTo(address)": {
                "check": "require(bool)(_newProxyTo != address(0x0))",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "updateRegistry(address)",
              "owner()",
              "renounceOwnership()",
              "transferOwnership(address)",
              "implementation()",
              "proxyType()",
              "updateProxyTo(address)"
            ]
          }
        }
      }
    ]
  }
}