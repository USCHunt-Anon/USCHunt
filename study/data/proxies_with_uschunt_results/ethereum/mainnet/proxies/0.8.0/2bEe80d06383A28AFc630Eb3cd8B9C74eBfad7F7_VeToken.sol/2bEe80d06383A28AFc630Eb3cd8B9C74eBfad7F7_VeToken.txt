
Begin Context.is_proxy (Slither line:1425)


End Context.is_proxy (Slither line:1428)


Begin Context.is_upgradeable_proxy (Slither line:1136)

Checking contract: Context 

End Context.is_upgradeable_proxy (Slither line:1407)


Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin IERC20.is_proxy (Slither line:1425)


End IERC20.is_proxy (Slither line:1428)


Begin IERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20 

End IERC20.is_upgradeable_proxy (Slither line:1407)


Begin SafeERC20.is_proxy (Slither line:1425)


End SafeERC20.is_proxy (Slither line:1428)


Begin SafeERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeERC20 

End SafeERC20.is_upgradeable_proxy (Slither line:1407)


Begin ReentrancyGuard.is_proxy (Slither line:1425)


End ReentrancyGuard.is_proxy (Slither line:1428)


Begin ReentrancyGuard.is_upgradeable_proxy (Slither line:1136)

Checking contract: ReentrancyGuard 

End ReentrancyGuard.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin SmartWalletChecker.is_proxy (Slither line:1425)


End SmartWalletChecker.is_proxy (Slither line:1428)


Begin SmartWalletChecker.is_upgradeable_proxy (Slither line:1136)

Checking contract: SmartWalletChecker 

End SmartWalletChecker.is_upgradeable_proxy (Slither line:1407)


Begin AccessControl.is_proxy (Slither line:1425)


End AccessControl.is_proxy (Slither line:1428)


Begin AccessControl.is_upgradeable_proxy (Slither line:1136)

Checking contract: AccessControl 

End AccessControl.is_upgradeable_proxy (Slither line:1407)


Begin ProxyStorage.is_proxy (Slither line:1425)


End ProxyStorage.is_proxy (Slither line:1428)


Begin ProxyStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: ProxyStorage 

End ProxyStorage.is_upgradeable_proxy (Slither line:1407)


Begin VeTokenProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin VeTokenProxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(free_mem_ptr_fallback_asm_0,0,returndatasize()()) (Slither line:2802)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
free_mem_ptr_fallback_asm_0
0
returndatasize()()

End VeTokenProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin VeTokenProxy.find_delegatecall_in_exp_node

Found Expression Node: free_mem_ptr_fallback_asm_0 = mload(uint256)(0x40) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: mload(uint256)
Type of call: uint256 (Slither line:2817)
Args:
0x40

End VeTokenProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin VeTokenProxy.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(free_mem_ptr_fallback_asm_0,returndatasize()()) (Slither line:2802)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
free_mem_ptr_fallback_asm_0
returndatasize()()

End VeTokenProxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin VeTokenProxy.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(free_mem_ptr_fallback_asm_0,returndatasize()()) (Slither line:2802)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
free_mem_ptr_fallback_asm_0
returndatasize()()

End VeTokenProxy.find_delegatecall_in_exp_node (Slither line:2858)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin VeTokenProxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_33746_143_0_fallback_asm_0 = success (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)

End VeTokenProxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin VeTokenProxy.find_delegatecall_in_asm (Slither line:1541)


End VeTokenProxy.find_delegatecall_in_asm (Slither line:1637)


Begin VeTokenProxy.find_delegatecall_in_asm (Slither line:1541)


End VeTokenProxy.find_delegatecall_in_asm (Slither line:1637)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


Found LowLevelCall (Slither line:2740)


Found delegatecall in LowLevelCall (Slither line:2742)


End Contract.find_delegatecall_in_ir (Slither line:2773)


End VeTokenProxy.is_proxy (Slither line:1476)


Begin VeTokenProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: VeTokenProxy 
VeTokenProxy is delegating to veTokenImplementation
Looking for setter (Slither line:1200)

Looking for setter in ProxyStorage (Slither line:1204)


Begin ProxyStorage.find_setter_in_contract (Slither line:3119)


End ProxyStorage.find_setter_in_contract (Slither line:3345)


Could not find setter in ProxyStorage 
Looking in VeTokenProxy (Slither line:1213)

Begin VeTokenProxy.find_setter_in_contract (Slither line:3119)

Checking function: setPendingImplementation(address) returns() (Slither line:3127)
Visibility: public
onlyOwner()
require(bool,string)(owner() == _msgSender(),Ownable: caller is not the owner)
pendingVeTokenImplementation = newPendingImplementation_
is an Assignment Operation (Slither line:3216)
msg.sender
_owner
NewPendingImplementation(oldPendingImplementation,pendingVeTokenImplementation)
Checking function: acceptImplementation() returns() (Slither line:3127)
Visibility: public
NewPendingImplementation(oldPendingImplementation,pendingVeTokenImplementation)
veTokenImplementation = oldPendingImplementation
is an Assignment Operation (Slither line:3216)

End VeTokenProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: acceptImplementation in contract: VeTokenProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin ProxyStorage.find_getter_in_contract (Slither line:2974)

veTokenImplementation is a Variable object
oldPendingImplementation

End ProxyStorage.find_getter_in_contract (Slither line:3083)


Begin VeTokenProxy.find_getter_in_contract (Slither line:2974)

veTokenImplementation is a Variable object
oldPendingImplementation
Checking function: constructor (Slither line:2988)
Checking function: admin (Slither line:2988)
admin returns address variable  (Slither line:3008)
RETURN node expression: _admin (Slither line:3028)
Checking function: _setAdmin (Slither line:2988)
Checking function: setProxy (Slither line:2988)
Checking function: transferAdmin (Slither line:2988)
Checking function: flipStakableState (Slither line:2988)
Checking function: flipClaimableState (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: owner (Slither line:2988)
owner returns address variable  (Slither line:3008)
RETURN node expression: _owner (Slither line:3028)
Checking function: renounceOwnership (Slither line:2988)
Checking function: transferOwnership (Slither line:2988)
Checking function: _transferOwnership (Slither line:2988)
Checking function: _msgSender (Slither line:2988)
_msgSender returns address variable  (Slither line:3008)
RETURN node expression: msg.sender (Slither line:3028)
Checking function: _msgData (Slither line:2988)
_msgData returns bytes variable  (Slither line:3008)
RETURN node expression: msg.data (Slither line:3028)
Checking function: setPendingImplementation (Slither line:2988)
Checking function: acceptImplementation (Slither line:2988)
Checking function: fallback (Slither line:2988)
Checking function: receive (Slither line:2988)
Checking function: claim (Slither line:2988)
Checking function: slitherConstructorVariables (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End VeTokenProxy.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in VeTokenProxy (Slither line:1305)
or in ProxyStorage (Slither line:1319)

Begin VeTokenStorage.find_getter_in_contract (Slither line:2974)

veTokenImplementation is a Variable object
oldPendingImplementation
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End VeTokenStorage.find_getter_in_contract (Slither line:3083)


End VeTokenProxy.is_upgradeable_proxy (Slither line:1332)

impl_address_from_contract_call: oldPendingImplementation
impl_address_from_contract_call: StateVariable veTokenImplementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression returndatacopy(uint256,uint256,uint256)(free_mem_ptr_fallback_asm_0,0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_fallback_asm_0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression mload(uint256)(0x40)
impl_address_from_contract_call: arg is 0x40
impl_address_from_contract_call: CallExpression revert(uint256,uint256)(free_mem_ptr_fallback_asm_0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_fallback_asm_0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression return(uint256,uint256)(free_mem_ptr_fallback_asm_0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_fallback_asm_0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression veTokenImplementation.delegatecall(msg.data)
Checking public function admin
Checking external function setProxy
Checking external function transferAdmin
Checking external function flipStakableState
Checking external function flipClaimableState
Checking public function owner
Checking public function renounceOwnership
Checking public function transferOwnership
Checking public function setPendingImplementation
Checking public function acceptImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == pendingVeTokenImplementation && pendingVeTokenImplementation != address(0),Invalid veTokenImplementation)
Checking external function claim
Checking external function fallback
Checking external function receive
functions_writing_to_variable: veTokenImplementation
functions_writing_to_variable: checking function VeTokenProxy.constructor (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.receive (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.setProxy (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy._msgSender (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.constructor (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.claim (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.owner (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy._msgData (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.transferAdmin (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.renounceOwnership (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.setPendingImplementation (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.slitherConstructorVariables (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.flipStakableState (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.constructor (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.transferOwnership (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.acceptImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == pendingVeTokenImplementation && pendingVeTokenImplementation != address(0),Invalid veTokenImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = oldImplementation = veTokenImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = veTokenImplementation (proxy_features line:912)
functions_writing_to_variable: exp = oldPendingImplementation = pendingVeTokenImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldPendingImplementation = pendingVeTokenImplementation (proxy_features line:912)
functions_writing_to_variable: exp = veTokenImplementation = oldPendingImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: veTokenImplementation = oldPendingImplementation (proxy_features line:912)
functions_writing_to_variable: Identifier: veTokenImplementation (proxy_features line:924)
get_value_assigned: veTokenImplementation = oldPendingImplementation
functions_writing_to_variable: exp = pendingVeTokenImplementation = address(0) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: pendingVeTokenImplementation = address(0) (proxy_features line:912)
functions_writing_to_variable: exp = NewImplementation(oldImplementation,veTokenImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = NewPendingImplementation(oldPendingImplementation,pendingVeTokenImplementation) (proxy_features line:909)
functions_writing_to_variable: acceptImplementation writes pendingVeTokenImplementation to veTokenImplementation (proxy_features line:929)
functions_writing_to_variable: checking function VeTokenProxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.flipClaimableState (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy._transferOwnership (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.fallback (proxy_features line:898)
has_compatibility_checks: dependencies: ['newPendingImplementation_', 'pendingVeTokenImplementation', 'TMP_188', 'oldPendingImplementation']
functions_writing_to_variable: pendingVeTokenImplementation
functions_writing_to_variable: checking function VeTokenProxy.constructor (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.receive (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.setProxy (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy._msgSender (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.constructor (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.claim (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.owner (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy._msgData (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.transferAdmin (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.renounceOwnership (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.setPendingImplementation (proxy_features line:898)
functions_writing_to_variable: exp = oldPendingImplementation = pendingVeTokenImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldPendingImplementation = pendingVeTokenImplementation (proxy_features line:912)
functions_writing_to_variable: exp = pendingVeTokenImplementation = newPendingImplementation_ (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: pendingVeTokenImplementation = newPendingImplementation_ (proxy_features line:912)
functions_writing_to_variable: Identifier: pendingVeTokenImplementation (proxy_features line:924)
get_value_assigned: pendingVeTokenImplementation = newPendingImplementation_
functions_writing_to_variable: exp = NewPendingImplementation(oldPendingImplementation,pendingVeTokenImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = onlyOwner() (proxy_features line:909)
functions_writing_to_variable: exp = require(bool,string)(owner() == _msgSender(),Ownable: caller is not the owner) (proxy_features line:909)
functions_writing_to_variable: exp = msg.sender (proxy_features line:909)
functions_writing_to_variable: exp = _owner (proxy_features line:909)
functions_writing_to_variable: setPendingImplementation writes newPendingImplementation_ to pendingVeTokenImplementation (proxy_features line:929)
functions_writing_to_variable: checking function VeTokenProxy.slitherConstructorVariables (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.flipStakableState (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.constructor (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.transferOwnership (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.acceptImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == pendingVeTokenImplementation && pendingVeTokenImplementation != address(0),Invalid veTokenImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = oldImplementation = veTokenImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = veTokenImplementation (proxy_features line:912)
functions_writing_to_variable: exp = oldPendingImplementation = pendingVeTokenImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldPendingImplementation = pendingVeTokenImplementation (proxy_features line:912)
functions_writing_to_variable: exp = veTokenImplementation = oldPendingImplementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: veTokenImplementation = oldPendingImplementation (proxy_features line:912)
functions_writing_to_variable: exp = pendingVeTokenImplementation = address(0) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: pendingVeTokenImplementation = address(0) (proxy_features line:912)
functions_writing_to_variable: Identifier: pendingVeTokenImplementation (proxy_features line:924)
get_value_assigned: pendingVeTokenImplementation = address(0)
functions_writing_to_variable: exp = NewImplementation(oldImplementation,veTokenImplementation) (proxy_features line:909)
functions_writing_to_variable: exp = NewPendingImplementation(oldPendingImplementation,pendingVeTokenImplementation) (proxy_features line:909)
functions_writing_to_variable: checking function VeTokenProxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.flipClaimableState (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy._transferOwnership (proxy_features line:898)
functions_writing_to_variable: checking function VeTokenProxy.fallback (proxy_features line:898)
has_compatibility_checks: checking public function acceptImplementation
require(bool,string)(msg.sender == pendingVeTokenImplementation && pendingVeTokenImplementation != address(0),Invalid veTokenImplementation)
has_compatibility_checks: condition msg.sender == pendingVeTokenImplementation && pendingVeTokenImplementation != address(0)
check_condition_from_expression: condition msg.sender == pendingVeTokenImplementation && pendingVeTokenImplementation != address(0)
has_compatibility_checks: checking public function setPendingImplementation
require(bool,string)(owner() == _msgSender(),Ownable: caller is not the owner)
has_compatibility_checks: condition owner() == _msgSender()
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: (success) = veTokenImplementation.delegatecall(msg.data)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
Found public function: constructor
Found public function: admin
has_time_delay: (node.type) EXPRESSION
(Expression) NewPendingImplementation(oldPendingImplementation,pendingVeTokenImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) veTokenImplementation = oldPendingImplementation
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = veTokenImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) pendingVeTokenImplementation = address(0)
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,veTokenImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldPendingImplementation = pendingVeTokenImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == pendingVeTokenImplementation && pendingVeTokenImplementation != address(0),Invalid veTokenImplementation)

Begin VeTokenStorage.is_proxy (Slither line:1425)


End VeTokenStorage.is_proxy (Slither line:1428)


Begin VeTokenStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: VeTokenStorage 

End VeTokenStorage.is_upgradeable_proxy (Slither line:1407)


Begin VeToken.is_proxy (Slither line:1425)


End VeToken.is_proxy (Slither line:1428)


Begin VeToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: VeToken 

End VeToken.is_upgradeable_proxy (Slither line:1407)

