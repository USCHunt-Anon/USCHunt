{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "VeTokenProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.0/2bEe80d06383A28AFc630Eb3cd8B9C74eBfad7F7_VeToken.sol/2bEe80d06383A28AFc630Eb3cd8B9C74eBfad7F7_VeToken.sol#1083-1157)",
        "elements": [],
        "description": "VeTokenProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.0/2bEe80d06383A28AFc630Eb3cd8B9C74eBfad7F7_VeToken.sol/2bEe80d06383A28AFc630Eb3cd8B9C74eBfad7F7_VeToken.sol#1083-1157) is an upgradeable proxy.\nveTokenImplementation was found in a different contract.\nveTokenImplementation is an address state variable.\n uses Inherited Storage\nMissing compatibility check in VeTokenProxy.setPendingImplementation(address)\nFound compatibility check in VeTokenProxy.acceptImplementation()\n",
        "id": "aee0d266c336326b9a786cc19bb20d22c56ebabb5a8d97eef4f6201581a82875",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "ProxyStorage.veTokenImplementation",
          "impl_address_setter": "VeTokenProxy.acceptImplementation()",
          "impl_address_getter": "not found",
          "impl_address_location": "ProxyStorage (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.0/2bEe80d06383A28AFc630Eb3cd8B9C74eBfad7F7_VeToken.sol/2bEe80d06383A28AFc630Eb3cd8B9C74eBfad7F7_VeToken.sol#1048-1058)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "VeTokenProxy.setPendingImplementation(address)": "missing",
              "VeTokenProxy.acceptImplementation()": "require(bool,string)(msg.sender == pendingVeTokenImplementation && pendingVeTokenImplementation != address(0),Invalid veTokenImplementation)"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "admin()",
              "setProxy(address)",
              "transferAdmin(address)",
              "flipStakableState()",
              "flipClaimableState()",
              "owner()",
              "renounceOwnership()",
              "transferOwnership(address)",
              "setPendingImplementation(address)",
              "acceptImplementation()",
              "claim(address)"
            ]
          }
        }
      }
    ]
  }
}