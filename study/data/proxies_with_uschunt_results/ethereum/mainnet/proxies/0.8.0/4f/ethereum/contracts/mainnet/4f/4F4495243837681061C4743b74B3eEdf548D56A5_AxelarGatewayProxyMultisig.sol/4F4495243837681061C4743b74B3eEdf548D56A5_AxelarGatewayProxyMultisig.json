{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "AxelarGatewayProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.0/4f/ethereum/contracts/mainnet/4f/4F4495243837681061C4743b74B3eEdf548D56A5_AxelarGatewayProxyMultisig.sol/4F4495243837681061C4743b74B3eEdf548D56A5_AxelarGatewayProxyMultisig.sol#169-197)",
        "elements": [],
        "description": "AxelarGatewayProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.0/4f/ethereum/contracts/mainnet/4f/4F4495243837681061C4743b74B3eEdf548D56A5_AxelarGatewayProxyMultisig.sol/4F4495243837681061C4743b74B3eEdf548D56A5_AxelarGatewayProxyMultisig.sol#169-197) is an upgradeable proxy.\n_addressStorage was found in a different contract.\n_addressStorage is a mapping of type mapping(bytes32 => address)\n uses Eternal Storage\n_addressStorage is a mapping of type mapping(bytes32 => address)\n uses Inherited Storage\nNo setter functions found to search for compatibility checks.\nTo remove upgradeability, delete upgrade from AxelarGateway\n",
        "id": "db6922dee1aa9077be20743d688e9f3e43dcd59ee5d072b004bc33d1a61636cf",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "EternalStorage._addressStorage",
          "impl_address_setter": "AxelarGateway.upgrade(address,bytes)",
          "impl_address_getter": "EternalStorage.getAddress(bytes32)",
          "impl_address_location": "EternalStorage (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.0/4f/ethereum/contracts/mainnet/4f/4F4495243837681061C4743b74B3eEdf548D56A5_AxelarGatewayProxyMultisig.sol/4F4495243837681061C4743b74B3eEdf548D56A5_AxelarGatewayProxyMultisig.sol#77-159)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "mapping(bytes32 => address)",
          "eternal_storage": true,
          "impl_mapping_from_msg_sig": false,
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": "no setters found"
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove upgrade from AxelarGateway",
          "immutable_functions": {
            "other": [
              "getUint(bytes32)",
              "getString(bytes32)",
              "getAddress(bytes32)",
              "getBytes(bytes32)",
              "getBool(bytes32)",
              "getInt(bytes32)"
            ]
          }
        }
      },
      {
        "contract": "AxelarGatewayProxyMultisig (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.0/4f/ethereum/contracts/mainnet/4f/4F4495243837681061C4743b74B3eEdf548D56A5_AxelarGatewayProxyMultisig.sol/4F4495243837681061C4743b74B3eEdf548D56A5_AxelarGatewayProxyMultisig.sol#1654-1667)",
        "elements": [],
        "description": "AxelarGatewayProxyMultisig (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.0/4f/ethereum/contracts/mainnet/4f/4F4495243837681061C4743b74B3eEdf548D56A5_AxelarGatewayProxyMultisig.sol/4F4495243837681061C4743b74B3eEdf548D56A5_AxelarGatewayProxyMultisig.sol#1654-1667) is a proxy, but doesn't seem upgradeable.\n",
        "id": "f1d257318d67336a58e04bd2e58fe0264310435c7a0b7c8dc7a6d154d950115e",
        "features": {
          "upgradeable": false
        }
      }
    ]
  }
}