{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "P125TokenProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.0/a9./ethereum/contracts/mainnet/a9/A9033952ac045168243A1A50c889516445247618_P125TokenProxy.sol/A9033952ac045168243A1A50c889516445247618_P125TokenProxy.sol#342-367)",
        "elements": [],
        "description": "P125TokenProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.0/a9./ethereum/contracts/mainnet/a9/A9033952ac045168243A1A50c889516445247618_P125TokenProxy.sol/A9033952ac045168243A1A50c889516445247618_P125TokenProxy.sol#342-367) is an upgradeable proxy.\nimplementation was found in a different contract.\nimplementation is an address state variable.\nFound compatibility checks in all upgrade functions.\n",
        "id": "b9d9d24cb471498aaec4e7beb4ee4c39b730bfdc9e520831f63f58392c6a7ebf",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "Upgradeable_0_8.implementation",
          "impl_address_setter": "P125TokenProxy.replaceImplementation(address)",
          "impl_address_getter": "not found",
          "impl_address_location": "Upgradeable_0_8 (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.0/a9./ethereum/contracts/mainnet/a9/A9033952ac045168243A1A50c889516445247618_P125TokenProxy.sol/A9033952ac045168243A1A50c889516445247618_P125TokenProxy.sol#328-330)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "P125TokenProxy.replaceImplementation(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,not a contract)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "owner()",
              "renounceOwnership()",
              "transferOwnership(address)",
              "replaceImplementation(address)"
            ]
          }
        }
      }
    ]
  }
}