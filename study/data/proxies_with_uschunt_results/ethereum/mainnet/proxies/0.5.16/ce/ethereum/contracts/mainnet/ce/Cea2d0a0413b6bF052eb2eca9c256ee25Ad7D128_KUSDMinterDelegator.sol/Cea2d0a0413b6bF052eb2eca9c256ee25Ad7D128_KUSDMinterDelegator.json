{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "KUSDMinterDelegator (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.5.16/ce/ethereum/contracts/mainnet/ce/Cea2d0a0413b6bF052eb2eca9c256ee25Ad7D128_KUSDMinterDelegator.sol/Cea2d0a0413b6bF052eb2eca9c256ee25Ad7D128_KUSDMinterDelegator.sol#174-227)",
        "elements": [],
        "description": "KUSDMinterDelegator (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.5.16/ce/ethereum/contracts/mainnet/ce/Cea2d0a0413b6bF052eb2eca9c256ee25Ad7D128_KUSDMinterDelegator.sol/Cea2d0a0413b6bF052eb2eca9c256ee25Ad7D128_KUSDMinterDelegator.sol#174-227) is an upgradeable proxy.\nimplementation was found in a different contract.\nimplementation is an address state variable.\nMissing compatibility check in KUSDMinterDelegator._setImplementation(address)\n",
        "id": "91fef3b61bdb716c15ea80d1384fa731c6b254008ed8cf1cda3a99a51c0e10bf",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "KUSDMinterDelegate.implementation",
          "impl_address_setter": "KUSDMinterDelegator._setImplementation(address)",
          "impl_address_getter": "not found",
          "impl_address_location": "KUSDMinterDelegate (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.5.16/ce/ethereum/contracts/mainnet/ce/Cea2d0a0413b6bF052eb2eca9c256ee25Ad7D128_KUSDMinterDelegator.sol/Cea2d0a0413b6bF052eb2eca9c256ee25Ad7D128_KUSDMinterDelegator.sol#141-151)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "KUSDMinterDelegator._setImplementation(address)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "owner()",
              "isOwner()",
              "renounceOwnership()",
              "transferOwnership(address)",
              "_setImplementation(address)"
            ]
          }
        }
      }
    ]
  }
}