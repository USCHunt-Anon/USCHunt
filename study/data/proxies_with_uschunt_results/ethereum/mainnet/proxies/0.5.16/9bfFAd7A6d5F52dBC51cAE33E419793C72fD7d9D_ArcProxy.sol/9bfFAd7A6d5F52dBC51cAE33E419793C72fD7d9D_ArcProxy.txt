
Begin ArcProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin ArcProxy.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2802)
Expression called: _delegate
Type of call: tuple() (Slither line:2817)
Args:
_implementation()

End ArcProxy.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin ArcProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin ArcProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking ADMIN_SLOT (Slither line:1689)
Checking IMPLEMENTATION_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in ArcProxy._delegate (Slither line:1805)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin ArcProxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
_implementation returns a variable of type address   called impl (Slither line:2193)
_implementation contains assembly - looking for sload (Slither line:2199)
Looking in ASSEMBLY node (Slither line:2206)
{ impl := sload(slot) }  (Slither line:2210)
Return value set by sload in asm (Slither line:2212)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2232)

End ArcProxy.find_delegate_from_call_exp (Slither line:2328)

AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
CallExpression: _fallback() (Slither line:1819)
_delegate contains assembly, searching for sload (Slither line:1875)

End ArcProxy.find_delegate_variable_from_name (Slither line:1949)


Begin ArcProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2683)


End ArcProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2710)


End ArcProxy.find_delegatecall_in_asm (Slither line:1637)

Setting ArcProxy._delegate_variable = ArcProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End ArcProxy.is_proxy (Slither line:1476)


Begin ArcProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: ArcProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

ArcProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)


Begin ArcProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: fallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: isContract(address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
_delegate(_implementation())
ifAdmin()
_admin()
_fallback()
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
_delegate(_implementation())
_implementation()
_fallback()
ifAdmin()
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(newAdmin != address(0),Cannot change the admin of a proxy to the zero address)
AdminChanged(_admin(),newAdmin)
_fallback()
_setAdmin(newAdmin)
_delegate(_implementation())
ifAdmin()
{ sstore(slot, newAdmin) } (Slither line:3163)
changeAdmin reads and/or writes to variable slot (Slither line:3170)
changeAdmin reads and/or writes to variable ADMIN_SLOT (Slither line:3170)
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
_fallback()
_delegate(_implementation())
require(bool,string)(isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
_upgradeTo(newImplementation)
ifAdmin()
    sstore(slot, newImplementation) (Slither line:3163)
upgradeTo reads and/or writes to variable slot (Slither line:3170)
upgradeTo reads and/or writes to variable IMPLEMENTATION_SLOT (Slither line:3170)
upgradeTo reads and/or writes to variable newImplementation (Slither line:3170)

End ArcProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: ArcProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin ArcProxy.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: constructor (Slither line:2988)
Checking function: fallback (Slither line:2988)
Checking function: _fallback (Slither line:2988)
Checking function: _delegate (Slither line:2988)
Checking function: isContract (Slither line:2988)
isContract returns bool variable  (Slither line:3008)
isContract contains assembly (Slither line:3051)
isContract contains assembly (Slither line:3051)
isContract contains assembly (Slither line:3051)
RETURN node expression: size > 0 (Slither line:3028)
isContract contains assembly (Slither line:3051)
Checking function: _implementation (Slither line:2988)
_implementation returns address variable called impl (Slither line:3008)
_implementation contains assembly (Slither line:3051)
_implementation contains assembly (Slither line:3051)
_implementation contains assembly (Slither line:3051)

End ArcProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: _implementation in contract: ArcProxy (Slither line:1285)

End ArcProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: ArcProxy
Setter found in contract ArcProxy
Checking external function admin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function implementation
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function changeAdmin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function fallback
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function ArcProxy._upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function ArcProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function ArcProxy._admin (proxy_features line:898)
functions_writing_to_variable: checking function ArcProxy.upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function ArcProxy._setImplementation (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function ArcProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:912)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:924)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: checking function ArcProxy.constructor (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: constructor writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function ArcProxy.isContract (proxy_features line:898)
functions_writing_to_variable: checking function ArcProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function ArcProxy.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function ArcProxy.upgradeToAndCall (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function ArcProxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function ArcProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function ArcProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function ArcProxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function ArcProxy.implementation (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: checking external function upgradeTo
require(bool,string)(isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
has_compatibility_checks: IF node exp = msg.sender == _admin()
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking external function upgradeToAndCall
require(bool,string)(isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
has_compatibility_checks: IF node exp = msg.sender == _admin()
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: constructor
Found fallback
Found external function: admin
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = ADMIN_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) IF
(Expression) msg.sender == _admin()
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) RETURN
(Expression) size > 0
