
Begin EIP20NonStandardInterface.is_proxy (Slither line:1425)


End EIP20NonStandardInterface.is_proxy (Slither line:1428)


Begin EIP20NonStandardInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: EIP20NonStandardInterface 

End EIP20NonStandardInterface.is_upgradeable_proxy (Slither line:1407)


Begin EIP20Interface.is_proxy (Slither line:1425)


End EIP20Interface.is_proxy (Slither line:1428)


Begin EIP20Interface.is_upgradeable_proxy (Slither line:1136)

Checking contract: EIP20Interface 

End EIP20Interface.is_upgradeable_proxy (Slither line:1407)


Begin CompLike.is_proxy (Slither line:1425)


End CompLike.is_proxy (Slither line:1428)


Begin CompLike.is_upgradeable_proxy (Slither line:1136)

Checking contract: CompLike 

End CompLike.is_upgradeable_proxy (Slither line:1407)


Begin AggregatorV2V3Interface.is_proxy (Slither line:1425)


End AggregatorV2V3Interface.is_proxy (Slither line:1428)


Begin AggregatorV2V3Interface.is_upgradeable_proxy (Slither line:1136)

Checking contract: AggregatorV2V3Interface 

End AggregatorV2V3Interface.is_upgradeable_proxy (Slither line:1407)


Begin InterestRateModel.is_proxy (Slither line:1425)


End InterestRateModel.is_proxy (Slither line:1428)


Begin InterestRateModel.is_upgradeable_proxy (Slither line:1136)

Checking contract: InterestRateModel 

End InterestRateModel.is_upgradeable_proxy (Slither line:1407)


Begin ComptrollerErrorReporter.is_proxy (Slither line:1425)


End ComptrollerErrorReporter.is_proxy (Slither line:1428)


Begin ComptrollerErrorReporter.is_upgradeable_proxy (Slither line:1136)

Checking contract: ComptrollerErrorReporter 

End ComptrollerErrorReporter.is_upgradeable_proxy (Slither line:1407)


Begin TokenErrorReporter.is_proxy (Slither line:1425)


End TokenErrorReporter.is_proxy (Slither line:1428)


Begin TokenErrorReporter.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenErrorReporter 

End TokenErrorReporter.is_upgradeable_proxy (Slither line:1407)


Begin ExponentialNoError.is_proxy (Slither line:1425)


End ExponentialNoError.is_proxy (Slither line:1428)


Begin ExponentialNoError.is_upgradeable_proxy (Slither line:1136)

Checking contract: ExponentialNoError 

End ExponentialNoError.is_upgradeable_proxy (Slither line:1407)


Begin CErc20Storage.is_proxy (Slither line:1425)


End CErc20Storage.is_proxy (Slither line:1428)


Begin CErc20Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: CErc20Storage 

End CErc20Storage.is_upgradeable_proxy (Slither line:1407)


Begin CErc20Interface.is_proxy (Slither line:1425)


End CErc20Interface.is_proxy (Slither line:1428)


Begin CErc20Interface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CErc20Interface 

End CErc20Interface.is_upgradeable_proxy (Slither line:1407)


Begin CDelegationStorage.is_proxy (Slither line:1425)


End CDelegationStorage.is_proxy (Slither line:1428)


Begin CDelegationStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: CDelegationStorage 

End CDelegationStorage.is_upgradeable_proxy (Slither line:1407)


Begin CPoRStorage.is_proxy (Slither line:1425)


End CPoRStorage.is_proxy (Slither line:1428)


Begin CPoRStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: CPoRStorage 

End CPoRStorage.is_upgradeable_proxy (Slither line:1407)


Begin CDelegatorInterface.is_proxy (Slither line:1425)


End CDelegatorInterface.is_proxy (Slither line:1428)


Begin CDelegatorInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CDelegatorInterface 

End CDelegatorInterface.is_upgradeable_proxy (Slither line:1407)


Begin CTokenStorage.is_proxy (Slither line:1425)


End CTokenStorage.is_proxy (Slither line:1428)


Begin CTokenStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: CTokenStorage 

End CTokenStorage.is_upgradeable_proxy (Slither line:1407)


Begin CDelegateInterface.is_proxy (Slither line:1425)


End CDelegateInterface.is_proxy (Slither line:1428)


Begin CDelegateInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CDelegateInterface 

End CDelegateInterface.is_upgradeable_proxy (Slither line:1407)


Begin CarefulMath.is_proxy (Slither line:1425)


End CarefulMath.is_proxy (Slither line:1428)


Begin CarefulMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: CarefulMath 

End CarefulMath.is_upgradeable_proxy (Slither line:1407)


Begin CPoRInterface.is_proxy (Slither line:1425)


End CPoRInterface.is_proxy (Slither line:1428)


Begin CPoRInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CPoRInterface 

End CPoRInterface.is_upgradeable_proxy (Slither line:1407)


Begin Exponential.is_proxy (Slither line:1425)


End Exponential.is_proxy (Slither line:1428)


Begin Exponential.is_upgradeable_proxy (Slither line:1136)

Checking contract: Exponential 

End Exponential.is_upgradeable_proxy (Slither line:1407)


Begin ComptrollerInterface.is_proxy (Slither line:1425)


End ComptrollerInterface.is_proxy (Slither line:1428)


Begin ComptrollerInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: ComptrollerInterface 

End ComptrollerInterface.is_upgradeable_proxy (Slither line:1407)


Begin CTokenInterface.is_proxy (Slither line:1425)


End CTokenInterface.is_proxy (Slither line:1428)


Begin CTokenInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CTokenInterface 

End CTokenInterface.is_upgradeable_proxy (Slither line:1407)


Begin CToken.is_proxy (Slither line:1425)


End CToken.is_proxy (Slither line:1428)


Begin CToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: CToken 

End CToken.is_upgradeable_proxy (Slither line:1407)


Begin CErc20.is_proxy (Slither line:1425)


End CErc20.is_proxy (Slither line:1428)


Begin CErc20.is_upgradeable_proxy (Slither line:1136)

Checking contract: CErc20 

End CErc20.is_upgradeable_proxy (Slither line:1407)


Begin CPoR.is_proxy (Slither line:1425)


End CPoR.is_proxy (Slither line:1428)


Begin CPoR.is_upgradeable_proxy (Slither line:1136)

Checking contract: CPoR 

End CPoR.is_upgradeable_proxy (Slither line:1407)


Begin CPoRDelegator.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


Found LowLevelCall (Slither line:2740)


Found delegatecall in LowLevelCall (Slither line:2742)


End Contract.find_delegatecall_in_ir (Slither line:2773)


End CPoRDelegator.is_proxy (Slither line:1476)


Begin CPoRDelegator.is_upgradeable_proxy (Slither line:1136)

Checking contract: CPoRDelegator 
CPoRDelegator is delegating to implementation
Looking for setter (Slither line:1200)

Looking for setter in CDelegationStorage (Slither line:1204)


Begin CDelegationStorage.find_setter_in_contract (Slither line:3119)


End CDelegationStorage.find_setter_in_contract (Slither line:3345)


Could not find setter in CDelegationStorage 
Looking in CPoRDelegator (Slither line:1213)

Begin CPoRDelegator.find_setter_in_contract (Slither line:3119)

Checking function: constructor(address,ComptrollerInterface,InterestRateModel,uint256,string,string,uint8,address,address,bytes) returns() (Slither line:3127)
Checking function: _setImplementation(address,bool,bytes) returns() (Slither line:3127)
Visibility: public
delegateTo(implementation,data)
implementation = implementation_
is an Assignment Operation (Slither line:3216)

End CPoRDelegator.find_setter_in_contract (Slither line:3345)


Implementation set by function: _setImplementation in contract: CPoRDelegator (Slither line:1264)
Looking for getter (Slither line:1273)


Begin CDelegationStorage.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_

End CDelegationStorage.find_getter_in_contract (Slither line:3083)


Begin CPoRDelegator.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_
Checking function: mintFresh (Slither line:2988)
mintFresh returns uint256 variable  (Slither line:3008)
mintFresh returns uint256 variable  (Slither line:3008)
RETURN node expression: super.mintFresh(account,mintAmount) (Slither line:3028)
RETURN node expression: (fail(Error.TOKEN_MINT_ERROR,FailureInfo.MINT_FEED_INVALID_ANSWER),0) (Slither line:3028)
RETURN node expression: (fail(Error.MATH_ERROR,FailureInfo.MINT_FEED_INVALID_TIMESTAMP),0) (Slither line:3028)
RETURN node expression: (fail(Error.TOKEN_MINT_ERROR,FailureInfo.MINT_FEED_HEARTBEAT_CHECK),0) (Slither line:3028)
RETURN node expression: (fail(Error.MATH_ERROR,FailureInfo.MINT_FEED_INVALID_DECIMALS),0) (Slither line:3028)
RETURN node expression: super.mintFresh(account,mintAmount) (Slither line:3028)
RETURN node expression: (fail(Error.TOKEN_MINT_ERROR,FailureInfo.MINT_FEED_SUPPLY_CHECK),0) (Slither line:3028)
Checking function: _setFeed (Slither line:2988)
_setFeed returns uint256 variable  (Slither line:3008)
RETURN node expression: fail(Error.UNAUTHORIZED,FailureInfo.SET_FEED_ADMIN_OWNER_CHECK) (Slither line:3028)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
Checking function: _setHeartbeat (Slither line:2988)
_setHeartbeat returns uint256 variable  (Slither line:3008)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
RETURN node expression: fail(Error.UNAUTHORIZED,FailureInfo.SET_FEED_HEARTBEAT_ADMIN_OWNER_CHECK) (Slither line:3028)
RETURN node expression: fail(Error.BAD_INPUT,FailureInfo.SET_FEED_HEARTBEAT_INPUT_CHECK) (Slither line:3028)
Checking function: initialize (Slither line:2988)
Checking function: mint (Slither line:2988)
mint returns uint256 variable  (Slither line:3008)
RETURN node expression: err (Slither line:3028)
Checking function: redeem (Slither line:2988)
redeem returns uint256 variable  (Slither line:3008)
RETURN node expression: redeemInternal(redeemTokens) (Slither line:3028)
Checking function: redeemUnderlying (Slither line:2988)
redeemUnderlying returns uint256 variable  (Slither line:3008)
RETURN node expression: redeemUnderlyingInternal(redeemAmount) (Slither line:3028)
Checking function: borrow (Slither line:2988)
borrow returns uint256 variable  (Slither line:3008)
RETURN node expression: borrowInternal(borrowAmount) (Slither line:3028)
Checking function: repayBorrow (Slither line:2988)
repayBorrow returns uint256 variable  (Slither line:3008)
RETURN node expression: err (Slither line:3028)
Checking function: repayBorrowBehalf (Slither line:2988)
repayBorrowBehalf returns uint256 variable  (Slither line:3008)
RETURN node expression: err (Slither line:3028)
Checking function: liquidateBorrow (Slither line:2988)
liquidateBorrow returns uint256 variable  (Slither line:3008)
RETURN node expression: err (Slither line:3028)
Checking function: sweepToken (Slither line:2988)
Checking function: _addReserves (Slither line:2988)
_addReserves returns uint256 variable  (Slither line:3008)
RETURN node expression: _addReservesInternal(addAmount) (Slither line:3028)
Checking function: getCashPrior (Slither line:2988)
getCashPrior returns uint256 variable  (Slither line:3008)
RETURN node expression: token.balanceOf(address(this)) (Slither line:3028)
Checking function: doTransferIn (Slither line:2988)
doTransferIn returns uint256 variable  (Slither line:3008)
RETURN node expression: balanceAfter - balanceBefore (Slither line:3028)
Checking function: doTransferOut (Slither line:2988)
Checking function: _delegateCompLikeTo (Slither line:2988)
Checking function: initialize (Slither line:2988)
Checking function: transferTokens (Slither line:2988)
transferTokens returns uint256 variable  (Slither line:3008)
RETURN node expression: fail(Error.MATH_ERROR,FailureInfo.TRANSFER_NOT_ENOUGH) (Slither line:3028)
RETURN node expression: failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.TRANSFER_COMPTROLLER_REJECTION,allowed) (Slither line:3028)
RETURN node expression: fail(Error.BAD_INPUT,FailureInfo.TRANSFER_NOT_ALLOWED) (Slither line:3028)
RETURN node expression: fail(Error.MATH_ERROR,FailureInfo.TRANSFER_TOO_MUCH) (Slither line:3028)
RETURN node expression: fail(Error.MATH_ERROR,FailureInfo.TRANSFER_NOT_ALLOWED) (Slither line:3028)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
Checking function: transfer (Slither line:2988)
transfer returns bool variable  (Slither line:3008)
RETURN node expression: transferTokens(msg.sender,msg.sender,dst,amount) == uint256(Error.NO_ERROR) (Slither line:3028)
Checking function: transferFrom (Slither line:2988)
transferFrom returns bool variable  (Slither line:3008)
RETURN node expression: transferTokens(msg.sender,src,dst,amount) == uint256(Error.NO_ERROR) (Slither line:3028)
Checking function: approve (Slither line:2988)
approve returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: allowance (Slither line:2988)
allowance returns uint256 variable  (Slither line:3008)
RETURN node expression: transferAllowances[owner][spender] (Slither line:3028)
Checking function: balanceOf (Slither line:2988)
balanceOf returns uint256 variable  (Slither line:3008)
RETURN node expression: accountTokens[owner] (Slither line:3028)
Checking function: balanceOfUnderlying (Slither line:2988)
balanceOfUnderlying returns uint256 variable  (Slither line:3008)
RETURN node expression: balance (Slither line:3028)
Checking function: getAccountSnapshot (Slither line:2988)
getAccountSnapshot returns uint256 variable  (Slither line:3008)
getAccountSnapshot returns uint256 variable  (Slither line:3008)
getAccountSnapshot returns uint256 variable  (Slither line:3008)
getAccountSnapshot returns uint256 variable  (Slither line:3008)
RETURN node expression: (uint256(Error.MATH_ERROR),0,0,0) (Slither line:3028)
RETURN node expression: (uint256(Error.NO_ERROR),cTokenBalance,borrowBalance,exchangeRateMantissa) (Slither line:3028)
RETURN node expression: (uint256(Error.MATH_ERROR),0,0,0) (Slither line:3028)
Checking function: getBlockNumber (Slither line:2988)
getBlockNumber returns uint256 variable  (Slither line:3008)
RETURN node expression: block.number (Slither line:3028)
Checking function: borrowRatePerBlock (Slither line:2988)
borrowRatePerBlock returns uint256 variable  (Slither line:3008)
RETURN node expression: interestRateModel.getBorrowRate(getCashPrior(),totalBorrows,totalReserves) (Slither line:3028)
Checking function: supplyRatePerBlock (Slither line:2988)
supplyRatePerBlock returns uint256 variable  (Slither line:3008)
RETURN node expression: interestRateModel.getSupplyRate(getCashPrior(),totalBorrows,totalReserves,reserveFactorMantissa) (Slither line:3028)
Checking function: totalBorrowsCurrent (Slither line:2988)
totalBorrowsCurrent returns uint256 variable  (Slither line:3008)
RETURN node expression: totalBorrows (Slither line:3028)
Checking function: borrowBalanceCurrent (Slither line:2988)
borrowBalanceCurrent returns uint256 variable  (Slither line:3008)
RETURN node expression: borrowBalanceStored(account) (Slither line:3028)
Checking function: borrowBalanceStored (Slither line:2988)
borrowBalanceStored returns uint256 variable  (Slither line:3008)
RETURN node expression: result (Slither line:3028)
Checking function: borrowBalanceStoredInternal (Slither line:2988)
borrowBalanceStoredInternal returns CarefulMath.MathError variable  (Slither line:3008)
borrowBalanceStoredInternal returns uint256 variable  (Slither line:3008)
RETURN node expression: (MathError.NO_ERROR,0) (Slither line:3028)
RETURN node expression: (mathErr,0) (Slither line:3028)
RETURN node expression: (MathError.NO_ERROR,result) (Slither line:3028)
RETURN node expression: (mathErr,0) (Slither line:3028)
Checking function: exchangeRateCurrent (Slither line:2988)
exchangeRateCurrent returns uint256 variable  (Slither line:3008)
RETURN node expression: exchangeRateStored() (Slither line:3028)
Checking function: exchangeRateStored (Slither line:2988)
exchangeRateStored returns uint256 variable  (Slither line:3008)
RETURN node expression: result (Slither line:3028)
Checking function: exchangeRateStoredInternal (Slither line:2988)
exchangeRateStoredInternal returns CarefulMath.MathError variable  (Slither line:3008)
exchangeRateStoredInternal returns uint256 variable  (Slither line:3008)
RETURN node expression: (mathErr,0) (Slither line:3028)
RETURN node expression: (MathError.NO_ERROR,initialExchangeRateMantissa) (Slither line:3028)
RETURN node expression: (MathError.NO_ERROR,exchangeRate.mantissa) (Slither line:3028)
RETURN node expression: (mathErr,0) (Slither line:3028)
Checking function: getCash (Slither line:2988)
getCash returns uint256 variable  (Slither line:3008)
RETURN node expression: getCashPrior() (Slither line:3028)
Checking function: accrueInterest (Slither line:2988)
accrueInterest returns uint256 variable  (Slither line:3008)
RETURN node expression: failOpaque(Error.MATH_ERROR,FailureInfo.ACCRUE_INTEREST_NEW_TOTAL_BORROWS_CALCULATION_FAILED,uint256(mathErr)) (Slither line:3028)
RETURN node expression: failOpaque(Error.MATH_ERROR,FailureInfo.ACCRUE_INTEREST_NEW_TOTAL_RESERVES_CALCULATION_FAILED,uint256(mathErr)) (Slither line:3028)
RETURN node expression: failOpaque(Error.MATH_ERROR,FailureInfo.ACCRUE_INTEREST_NEW_BORROW_INDEX_CALCULATION_FAILED,uint256(mathErr)) (Slither line:3028)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
RETURN node expression: failOpaque(Error.MATH_ERROR,FailureInfo.ACCRUE_INTEREST_SIMPLE_INTEREST_FACTOR_CALCULATION_FAILED,uint256(mathErr)) (Slither line:3028)
RETURN node expression: failOpaque(Error.MATH_ERROR,FailureInfo.ACCRUE_INTEREST_ACCUMULATED_INTEREST_CALCULATION_FAILED,uint256(mathErr)) (Slither line:3028)
Checking function: mintInternal (Slither line:2988)
mintInternal returns uint256 variable  (Slither line:3008)
mintInternal returns uint256 variable  (Slither line:3008)
RETURN node expression: mintFresh(msg.sender,mintAmount) (Slither line:3028)
RETURN node expression: (fail(TokenErrorReporter.Error(error),FailureInfo.MINT_ACCRUE_INTEREST_FAILED),0) (Slither line:3028)
Checking function: mintFresh (Slither line:2988)
mintFresh returns uint256 variable  (Slither line:3008)
mintFresh returns uint256 variable  (Slither line:3008)
RETURN node expression: (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.MINT_COMPTROLLER_REJECTION,allowed),0) (Slither line:3028)
RETURN node expression: (fail(Error.MARKET_NOT_FRESH,FailureInfo.MINT_FRESHNESS_CHECK),0) (Slither line:3028)
RETURN node expression: (failOpaque(Error.MATH_ERROR,FailureInfo.MINT_EXCHANGE_RATE_READ_FAILED,uint256(vars.mathErr)),0) (Slither line:3028)
RETURN node expression: (uint256(Error.NO_ERROR),vars.actualMintAmount) (Slither line:3028)
Checking function: redeemInternal (Slither line:2988)
redeemInternal returns uint256 variable  (Slither line:3008)
RETURN node expression: redeemFresh(msg.sender,redeemTokens,0) (Slither line:3028)
RETURN node expression: fail(TokenErrorReporter.Error(error),FailureInfo.REDEEM_ACCRUE_INTEREST_FAILED) (Slither line:3028)
Checking function: redeemUnderlyingInternal (Slither line:2988)
redeemUnderlyingInternal returns uint256 variable  (Slither line:3008)
RETURN node expression: redeemFresh(msg.sender,0,redeemAmount) (Slither line:3028)
RETURN node expression: fail(TokenErrorReporter.Error(error),FailureInfo.REDEEM_ACCRUE_INTEREST_FAILED) (Slither line:3028)
Checking function: redeemFresh (Slither line:2988)
redeemFresh returns uint256 variable  (Slither line:3008)
RETURN node expression: failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.REDEEM_COMPTROLLER_REJECTION,allowed) (Slither line:3028)
RETURN node expression: fail(Error.MARKET_NOT_FRESH,FailureInfo.REDEEM_FRESHNESS_CHECK) (Slither line:3028)
RETURN node expression: failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_NEW_TOTAL_SUPPLY_CALCULATION_FAILED,uint256(vars.mathErr)) (Slither line:3028)
RETURN node expression: failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (Slither line:3028)
RETURN node expression: fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.REDEEM_TRANSFER_OUT_NOT_POSSIBLE) (Slither line:3028)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
RETURN node expression: failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_EXCHANGE_RATE_READ_FAILED,uint256(vars.mathErr)) (Slither line:3028)
RETURN node expression: failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_EXCHANGE_TOKENS_CALCULATION_FAILED,uint256(vars.mathErr)) (Slither line:3028)
RETURN node expression: failOpaque(Error.MATH_ERROR,FailureInfo.REDEEM_EXCHANGE_AMOUNT_CALCULATION_FAILED,uint256(vars.mathErr)) (Slither line:3028)
Checking function: borrowInternal (Slither line:2988)
borrowInternal returns uint256 variable  (Slither line:3008)
RETURN node expression: borrowFresh(msg.sender,borrowAmount) (Slither line:3028)
RETURN node expression: fail(TokenErrorReporter.Error(error),FailureInfo.BORROW_ACCRUE_INTEREST_FAILED) (Slither line:3028)
Checking function: borrowFresh (Slither line:2988)
borrowFresh returns uint256 variable  (Slither line:3008)
RETURN node expression: fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.BORROW_CASH_NOT_AVAILABLE) (Slither line:3028)
RETURN node expression: failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (Slither line:3028)
RETURN node expression: failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (Slither line:3028)
RETURN node expression: failOpaque(Error.MATH_ERROR,FailureInfo.BORROW_NEW_TOTAL_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)) (Slither line:3028)
RETURN node expression: failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.BORROW_COMPTROLLER_REJECTION,allowed) (Slither line:3028)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
RETURN node expression: fail(Error.MARKET_NOT_FRESH,FailureInfo.BORROW_FRESHNESS_CHECK) (Slither line:3028)
Checking function: repayBorrowInternal (Slither line:2988)
repayBorrowInternal returns uint256 variable  (Slither line:3008)
repayBorrowInternal returns uint256 variable  (Slither line:3008)
RETURN node expression: repayBorrowFresh(msg.sender,msg.sender,repayAmount) (Slither line:3028)
RETURN node expression: (fail(TokenErrorReporter.Error(error),FailureInfo.REPAY_BORROW_ACCRUE_INTEREST_FAILED),0) (Slither line:3028)
Checking function: repayBorrowBehalfInternal (Slither line:2988)
repayBorrowBehalfInternal returns uint256 variable  (Slither line:3008)
repayBorrowBehalfInternal returns uint256 variable  (Slither line:3008)
RETURN node expression: repayBorrowFresh(msg.sender,borrower,repayAmount) (Slither line:3028)
RETURN node expression: (fail(TokenErrorReporter.Error(error),FailureInfo.REPAY_BEHALF_ACCRUE_INTEREST_FAILED),0) (Slither line:3028)
Checking function: repayBorrowFresh (Slither line:2988)
repayBorrowFresh returns uint256 variable  (Slither line:3008)
repayBorrowFresh returns uint256 variable  (Slither line:3008)
RETURN node expression: (fail(Error.MARKET_NOT_FRESH,FailureInfo.REPAY_BORROW_FRESHNESS_CHECK),0) (Slither line:3028)
RETURN node expression: (failOpaque(Error.MATH_ERROR,FailureInfo.REPAY_BORROW_ACCUMULATED_BALANCE_CALCULATION_FAILED,uint256(vars.mathErr)),0) (Slither line:3028)
RETURN node expression: (uint256(Error.NO_ERROR),vars.actualRepayAmount) (Slither line:3028)
RETURN node expression: (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.REPAY_BORROW_COMPTROLLER_REJECTION,allowed),0) (Slither line:3028)
Checking function: liquidateBorrowInternal (Slither line:2988)
liquidateBorrowInternal returns uint256 variable  (Slither line:3008)
liquidateBorrowInternal returns uint256 variable  (Slither line:3008)
RETURN node expression: (fail(TokenErrorReporter.Error(error),FailureInfo.LIQUIDATE_ACCRUE_BORROW_INTEREST_FAILED),0) (Slither line:3028)
RETURN node expression: liquidateBorrowFresh(msg.sender,borrower,repayAmount,cTokenCollateral) (Slither line:3028)
RETURN node expression: (fail(TokenErrorReporter.Error(error),FailureInfo.LIQUIDATE_ACCRUE_COLLATERAL_INTEREST_FAILED),0) (Slither line:3028)
Checking function: liquidateBorrowFresh (Slither line:2988)
liquidateBorrowFresh returns uint256 variable  (Slither line:3008)
liquidateBorrowFresh returns uint256 variable  (Slither line:3008)
RETURN node expression: (fail(TokenErrorReporter.Error(repayBorrowError),FailureInfo.LIQUIDATE_REPAY_BORROW_FRESH_FAILED),0) (Slither line:3028)
RETURN node expression: (failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.LIQUIDATE_COMPTROLLER_REJECTION,allowed),0) (Slither line:3028)
RETURN node expression: (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_FRESHNESS_CHECK),0) (Slither line:3028)
RETURN node expression: (fail(Error.MARKET_NOT_FRESH,FailureInfo.LIQUIDATE_COLLATERAL_FRESHNESS_CHECK),0) (Slither line:3028)
RETURN node expression: (fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_LIQUIDATOR_IS_BORROWER),0) (Slither line:3028)
RETURN node expression: (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_ZERO),0) (Slither line:3028)
RETURN node expression: (uint256(Error.NO_ERROR),actualRepayAmount) (Slither line:3028)
RETURN node expression: (fail(Error.INVALID_CLOSE_AMOUNT_REQUESTED,FailureInfo.LIQUIDATE_CLOSE_AMOUNT_IS_UINT_MAX),0) (Slither line:3028)
Checking function: seize (Slither line:2988)
seize returns uint256 variable  (Slither line:3008)
RETURN node expression: seizeInternal(msg.sender,liquidator,borrower,seizeTokens) (Slither line:3028)
Checking function: seizeInternal (Slither line:2988)
seizeInternal returns uint256 variable  (Slither line:3008)
RETURN node expression: failOpaque(Error.MATH_ERROR,FailureInfo.LIQUIDATE_SEIZE_BALANCE_DECREMENT_FAILED,uint256(vars.mathErr)) (Slither line:3028)
RETURN node expression: failOpaque(Error.MATH_ERROR,FailureInfo.LIQUIDATE_SEIZE_BALANCE_INCREMENT_FAILED,uint256(vars.mathErr)) (Slither line:3028)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
RETURN node expression: failOpaque(Error.COMPTROLLER_REJECTION,FailureInfo.LIQUIDATE_SEIZE_COMPTROLLER_REJECTION,allowed) (Slither line:3028)
RETURN node expression: fail(Error.INVALID_ACCOUNT_PAIR,FailureInfo.LIQUIDATE_SEIZE_LIQUIDATOR_IS_BORROWER) (Slither line:3028)
Checking function: _setPendingAdmin (Slither line:2988)
_setPendingAdmin returns uint256 variable  (Slither line:3008)
RETURN node expression: fail(Error.UNAUTHORIZED,FailureInfo.SET_PENDING_ADMIN_OWNER_CHECK) (Slither line:3028)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
Checking function: _acceptAdmin (Slither line:2988)
_acceptAdmin returns uint256 variable  (Slither line:3008)
RETURN node expression: fail(Error.UNAUTHORIZED,FailureInfo.ACCEPT_ADMIN_PENDING_ADMIN_CHECK) (Slither line:3028)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
Checking function: _setComptroller (Slither line:2988)
_setComptroller returns uint256 variable  (Slither line:3008)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
RETURN node expression: fail(Error.UNAUTHORIZED,FailureInfo.SET_COMPTROLLER_OWNER_CHECK) (Slither line:3028)
Checking function: _setReserveFactor (Slither line:2988)
_setReserveFactor returns uint256 variable  (Slither line:3008)
RETURN node expression: _setReserveFactorFresh(newReserveFactorMantissa) (Slither line:3028)
RETURN node expression: fail(TokenErrorReporter.Error(error),FailureInfo.SET_RESERVE_FACTOR_ACCRUE_INTEREST_FAILED) (Slither line:3028)
Checking function: _setReserveFactorFresh (Slither line:2988)
_setReserveFactorFresh returns uint256 variable  (Slither line:3008)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
RETURN node expression: fail(Error.UNAUTHORIZED,FailureInfo.SET_RESERVE_FACTOR_ADMIN_CHECK) (Slither line:3028)
RETURN node expression: fail(Error.MARKET_NOT_FRESH,FailureInfo.SET_RESERVE_FACTOR_FRESH_CHECK) (Slither line:3028)
RETURN node expression: fail(Error.BAD_INPUT,FailureInfo.SET_RESERVE_FACTOR_BOUNDS_CHECK) (Slither line:3028)
Checking function: _addReservesInternal (Slither line:2988)
_addReservesInternal returns uint256 variable  (Slither line:3008)
RETURN node expression: fail(TokenErrorReporter.Error(error),FailureInfo.ADD_RESERVES_ACCRUE_INTEREST_FAILED) (Slither line:3028)
RETURN node expression: error (Slither line:3028)
Checking function: _addReservesFresh (Slither line:2988)
_addReservesFresh returns uint256 variable  (Slither line:3008)
_addReservesFresh returns uint256 variable  (Slither line:3008)
RETURN node expression: (fail(Error.MARKET_NOT_FRESH,FailureInfo.ADD_RESERVES_FRESH_CHECK),actualAddAmount) (Slither line:3028)
RETURN node expression: (uint256(Error.NO_ERROR),actualAddAmount) (Slither line:3028)
Checking function: _reduceReserves (Slither line:2988)
_reduceReserves returns uint256 variable  (Slither line:3008)
RETURN node expression: _reduceReservesFresh(reduceAmount) (Slither line:3028)
RETURN node expression: fail(TokenErrorReporter.Error(error),FailureInfo.REDUCE_RESERVES_ACCRUE_INTEREST_FAILED) (Slither line:3028)
Checking function: _reduceReservesFresh (Slither line:2988)
_reduceReservesFresh returns uint256 variable  (Slither line:3008)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
RETURN node expression: fail(Error.MARKET_NOT_FRESH,FailureInfo.REDUCE_RESERVES_FRESH_CHECK) (Slither line:3028)
RETURN node expression: fail(Error.TOKEN_INSUFFICIENT_CASH,FailureInfo.REDUCE_RESERVES_CASH_NOT_AVAILABLE) (Slither line:3028)
RETURN node expression: fail(Error.BAD_INPUT,FailureInfo.REDUCE_RESERVES_VALIDATION) (Slither line:3028)
RETURN node expression: fail(Error.UNAUTHORIZED,FailureInfo.REDUCE_RESERVES_ADMIN_CHECK) (Slither line:3028)
Checking function: _setInterestRateModel (Slither line:2988)
_setInterestRateModel returns uint256 variable  (Slither line:3008)
RETURN node expression: _setInterestRateModelFresh(newInterestRateModel) (Slither line:3028)
RETURN node expression: fail(TokenErrorReporter.Error(error),FailureInfo.SET_INTEREST_RATE_MODEL_ACCRUE_INTEREST_FAILED) (Slither line:3028)
Checking function: _setInterestRateModelFresh (Slither line:2988)
_setInterestRateModelFresh returns uint256 variable  (Slither line:3008)
RETURN node expression: fail(Error.UNAUTHORIZED,FailureInfo.SET_INTEREST_RATE_MODEL_OWNER_CHECK) (Slither line:3028)
RETURN node expression: uint256(Error.NO_ERROR) (Slither line:3028)
RETURN node expression: fail(Error.MARKET_NOT_FRESH,FailureInfo.SET_INTEREST_RATE_MODEL_FRESH_CHECK) (Slither line:3028)
Checking function: fail (Slither line:2988)
fail returns uint256 variable  (Slither line:3008)
RETURN node expression: uint256(err) (Slither line:3028)
Checking function: failOpaque (Slither line:2988)
failOpaque returns uint256 variable  (Slither line:3008)
RETURN node expression: uint256(err) (Slither line:3028)
Checking function: getExp (Slither line:2988)
getExp returns CarefulMath.MathError variable  (Slither line:3008)
getExp returns ExponentialNoError.Exp variable  (Slither line:3008)
RETURN node expression: (err1,Exp(0)) (Slither line:3028)
RETURN node expression: (err0,Exp(0)) (Slither line:3028)
RETURN node expression: (MathError.NO_ERROR,Exp(rational)) (Slither line:3028)
Checking function: addExp (Slither line:2988)
addExp returns CarefulMath.MathError variable  (Slither line:3008)
addExp returns ExponentialNoError.Exp variable  (Slither line:3008)
RETURN node expression: (error,Exp(result)) (Slither line:3028)
Checking function: subExp (Slither line:2988)
subExp returns CarefulMath.MathError variable  (Slither line:3008)
subExp returns ExponentialNoError.Exp variable  (Slither line:3008)
RETURN node expression: (error,Exp(result)) (Slither line:3028)
Checking function: mulScalar (Slither line:2988)
mulScalar returns CarefulMath.MathError variable  (Slither line:3008)
mulScalar returns ExponentialNoError.Exp variable  (Slither line:3008)
RETURN node expression: (MathError.NO_ERROR,Exp(scaledMantissa)) (Slither line:3028)
RETURN node expression: (err0,Exp(0)) (Slither line:3028)
Checking function: mulScalarTruncate (Slither line:2988)
mulScalarTruncate returns CarefulMath.MathError variable  (Slither line:3008)
mulScalarTruncate returns uint256 variable  (Slither line:3008)
RETURN node expression: (err,0) (Slither line:3028)
RETURN node expression: (MathError.NO_ERROR,truncate(product)) (Slither line:3028)
Checking function: mulScalarTruncateAddUInt (Slither line:2988)
mulScalarTruncateAddUInt returns CarefulMath.MathError variable  (Slither line:3008)
mulScalarTruncateAddUInt returns uint256 variable  (Slither line:3008)
RETURN node expression: addUInt(truncate(product),addend) (Slither line:3028)
RETURN node expression: (err,0) (Slither line:3028)
Checking function: divScalar (Slither line:2988)
divScalar returns CarefulMath.MathError variable  (Slither line:3008)
divScalar returns ExponentialNoError.Exp variable  (Slither line:3008)
RETURN node expression: (err0,Exp(0)) (Slither line:3028)
RETURN node expression: (MathError.NO_ERROR,Exp(descaledMantissa)) (Slither line:3028)
Checking function: divScalarByExp (Slither line:2988)
divScalarByExp returns CarefulMath.MathError variable  (Slither line:3008)
divScalarByExp returns ExponentialNoError.Exp variable  (Slither line:3008)
RETURN node expression: getExp(numerator,divisor.mantissa) (Slither line:3028)
RETURN node expression: (err0,Exp(0)) (Slither line:3028)
Checking function: divScalarByExpTruncate (Slither line:2988)
divScalarByExpTruncate returns CarefulMath.MathError variable  (Slither line:3008)
divScalarByExpTruncate returns uint256 variable  (Slither line:3008)
RETURN node expression: (MathError.NO_ERROR,truncate(fraction)) (Slither line:3028)
RETURN node expression: (err,0) (Slither line:3028)
Checking function: mulExp (Slither line:2988)
mulExp returns CarefulMath.MathError variable  (Slither line:3008)
mulExp returns ExponentialNoError.Exp variable  (Slither line:3008)
RETURN node expression: (err1,Exp(0)) (Slither line:3028)
RETURN node expression: (err0,Exp(0)) (Slither line:3028)
RETURN node expression: (MathError.NO_ERROR,Exp(product)) (Slither line:3028)
Checking function: mulExp (Slither line:2988)
mulExp returns CarefulMath.MathError variable  (Slither line:3008)
mulExp returns ExponentialNoError.Exp variable  (Slither line:3008)
RETURN node expression: mulExp(Exp(a),Exp(b)) (Slither line:3028)
Checking function: mulExp3 (Slither line:2988)
mulExp3 returns CarefulMath.MathError variable  (Slither line:3008)
mulExp3 returns ExponentialNoError.Exp variable  (Slither line:3008)
RETURN node expression: mulExp(ab,c) (Slither line:3028)
RETURN node expression: (err,ab) (Slither line:3028)
Checking function: divExp (Slither line:2988)
divExp returns CarefulMath.MathError variable  (Slither line:3008)
divExp returns ExponentialNoError.Exp variable  (Slither line:3008)
RETURN node expression: getExp(a.mantissa,b.mantissa) (Slither line:3028)
Checking function: truncate (Slither line:2988)
truncate returns uint256 variable  (Slither line:3008)
RETURN node expression: exp.mantissa / expScale (Slither line:3028)
Checking function: mul_ScalarTruncate (Slither line:2988)
mul_ScalarTruncate returns uint256 variable  (Slither line:3008)
RETURN node expression: truncate(product) (Slither line:3028)
Checking function: mul_ScalarTruncateAddUInt (Slither line:2988)
mul_ScalarTruncateAddUInt returns uint256 variable  (Slither line:3008)
RETURN node expression: add_(truncate(product),addend) (Slither line:3028)
Checking function: lessThanExp (Slither line:2988)
lessThanExp returns bool variable  (Slither line:3008)
RETURN node expression: left.mantissa < right.mantissa (Slither line:3028)
Checking function: lessThanOrEqualExp (Slither line:2988)
lessThanOrEqualExp returns bool variable  (Slither line:3008)
RETURN node expression: left.mantissa <= right.mantissa (Slither line:3028)
Checking function: greaterThanExp (Slither line:2988)
greaterThanExp returns bool variable  (Slither line:3008)
RETURN node expression: left.mantissa > right.mantissa (Slither line:3028)
Checking function: isZeroExp (Slither line:2988)
isZeroExp returns bool variable  (Slither line:3008)
RETURN node expression: value.mantissa == 0 (Slither line:3028)
Checking function: safe224 (Slither line:2988)
safe224 returns uint224 variable  (Slither line:3008)
RETURN node expression: uint224(n) (Slither line:3028)
Checking function: safe32 (Slither line:2988)
safe32 returns uint32 variable  (Slither line:3008)
RETURN node expression: uint32(n) (Slither line:3028)
Checking function: add_ (Slither line:2988)
add_ returns ExponentialNoError.Exp variable  (Slither line:3008)
RETURN node expression: Exp(add_(a.mantissa,b.mantissa)) (Slither line:3028)
Checking function: add_ (Slither line:2988)
add_ returns ExponentialNoError.Double variable  (Slither line:3008)
RETURN node expression: Double(add_(a.mantissa,b.mantissa)) (Slither line:3028)
Checking function: add_ (Slither line:2988)
add_ returns uint256 variable  (Slither line:3008)
RETURN node expression: add_(a,b,addition overflow) (Slither line:3028)
Checking function: add_ (Slither line:2988)
add_ returns uint256 variable  (Slither line:3008)
RETURN node expression: c (Slither line:3028)
Checking function: sub_ (Slither line:2988)
sub_ returns ExponentialNoError.Exp variable  (Slither line:3008)
RETURN node expression: Exp(sub_(a.mantissa,b.mantissa)) (Slither line:3028)
Checking function: sub_ (Slither line:2988)
sub_ returns ExponentialNoError.Double variable  (Slither line:3008)
RETURN node expression: Double(sub_(a.mantissa,b.mantissa)) (Slither line:3028)
Checking function: sub_ (Slither line:2988)
sub_ returns uint256 variable  (Slither line:3008)
RETURN node expression: sub_(a,b,subtraction underflow) (Slither line:3028)
Checking function: sub_ (Slither line:2988)
sub_ returns uint256 variable  (Slither line:3008)
RETURN node expression: a - b (Slither line:3028)
Checking function: mul_ (Slither line:2988)
mul_ returns ExponentialNoError.Exp variable  (Slither line:3008)
RETURN node expression: Exp(mul_(a.mantissa,b.mantissa) / expScale) (Slither line:3028)
Checking function: mul_ (Slither line:2988)
mul_ returns ExponentialNoError.Exp variable  (Slither line:3008)
RETURN node expression: Exp(mul_(a.mantissa,b)) (Slither line:3028)
Checking function: mul_ (Slither line:2988)
mul_ returns uint256 variable  (Slither line:3008)
RETURN node expression: mul_(a,b.mantissa) / expScale (Slither line:3028)
Checking function: mul_ (Slither line:2988)
mul_ returns ExponentialNoError.Double variable  (Slither line:3008)
RETURN node expression: Double(mul_(a.mantissa,b.mantissa) / doubleScale) (Slither line:3028)
Checking function: mul_ (Slither line:2988)
mul_ returns ExponentialNoError.Double variable  (Slither line:3008)
RETURN node expression: Double(mul_(a.mantissa,b)) (Slither line:3028)
Checking function: mul_ (Slither line:2988)
mul_ returns uint256 variable  (Slither line:3008)
RETURN node expression: mul_(a,b.mantissa) / doubleScale (Slither line:3028)
Checking function: mul_ (Slither line:2988)
mul_ returns uint256 variable  (Slither line:3008)
RETURN node expression: mul_(a,b,multiplication overflow) (Slither line:3028)
Checking function: mul_ (Slither line:2988)
mul_ returns uint256 variable  (Slither line:3008)
RETURN node expression: 0 (Slither line:3028)
RETURN node expression: c (Slither line:3028)
Checking function: div_ (Slither line:2988)
div_ returns ExponentialNoError.Exp variable  (Slither line:3008)
RETURN node expression: Exp(div_(mul_(a.mantissa,expScale),b.mantissa)) (Slither line:3028)
Checking function: div_ (Slither line:2988)
div_ returns ExponentialNoError.Exp variable  (Slither line:3008)
RETURN node expression: Exp(div_(a.mantissa,b)) (Slither line:3028)
Checking function: div_ (Slither line:2988)
div_ returns uint256 variable  (Slither line:3008)
RETURN node expression: div_(mul_(a,expScale),b.mantissa) (Slither line:3028)
Checking function: div_ (Slither line:2988)
div_ returns ExponentialNoError.Double variable  (Slither line:3008)
RETURN node expression: Double(div_(mul_(a.mantissa,doubleScale),b.mantissa)) (Slither line:3028)
Checking function: div_ (Slither line:2988)
div_ returns ExponentialNoError.Double variable  (Slither line:3008)
RETURN node expression: Double(div_(a.mantissa,b)) (Slither line:3028)
Checking function: div_ (Slither line:2988)
div_ returns uint256 variable  (Slither line:3008)
RETURN node expression: div_(mul_(a,doubleScale),b.mantissa) (Slither line:3028)
Checking function: div_ (Slither line:2988)
div_ returns uint256 variable  (Slither line:3008)
RETURN node expression: div_(a,b,divide by zero) (Slither line:3028)
Checking function: div_ (Slither line:2988)
div_ returns uint256 variable  (Slither line:3008)
RETURN node expression: a / b (Slither line:3028)
Checking function: fraction (Slither line:2988)
fraction returns ExponentialNoError.Double variable  (Slither line:3008)
RETURN node expression: Double(div_(mul_(a,doubleScale),b)) (Slither line:3028)
Checking function: mulUInt (Slither line:2988)
mulUInt returns CarefulMath.MathError variable  (Slither line:3008)
mulUInt returns uint256 variable  (Slither line:3008)
RETURN node expression: (MathError.NO_ERROR,0) (Slither line:3028)
RETURN node expression: (MathError.NO_ERROR,c) (Slither line:3028)
RETURN node expression: (MathError.INTEGER_OVERFLOW,0) (Slither line:3028)
Checking function: divUInt (Slither line:2988)
divUInt returns CarefulMath.MathError variable  (Slither line:3008)
divUInt returns uint256 variable  (Slither line:3008)
RETURN node expression: (MathError.DIVISION_BY_ZERO,0) (Slither line:3028)
RETURN node expression: (MathError.NO_ERROR,a / b) (Slither line:3028)
Checking function: subUInt (Slither line:2988)
subUInt returns CarefulMath.MathError variable  (Slither line:3008)
subUInt returns uint256 variable  (Slither line:3008)
RETURN node expression: (MathError.NO_ERROR,a - b) (Slither line:3028)
RETURN node expression: (MathError.INTEGER_UNDERFLOW,0) (Slither line:3028)
Checking function: addUInt (Slither line:2988)
addUInt returns CarefulMath.MathError variable  (Slither line:3008)
addUInt returns uint256 variable  (Slither line:3008)
RETURN node expression: (MathError.INTEGER_OVERFLOW,0) (Slither line:3028)
RETURN node expression: (MathError.NO_ERROR,c) (Slither line:3028)
Checking function: addThenSubUInt (Slither line:2988)
addThenSubUInt returns CarefulMath.MathError variable  (Slither line:3008)
addThenSubUInt returns uint256 variable  (Slither line:3008)
RETURN node expression: subUInt(sum,c) (Slither line:3028)
RETURN node expression: (err0,0) (Slither line:3028)
Checking function: constructor (Slither line:2988)
Checking function: _setImplementation (Slither line:2988)
Checking function: mint (Slither line:2988)
mint returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: redeem (Slither line:2988)
redeem returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: redeemUnderlying (Slither line:2988)
redeemUnderlying returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: borrow (Slither line:2988)
borrow returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: repayBorrow (Slither line:2988)
repayBorrow returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: repayBorrowBehalf (Slither line:2988)
repayBorrowBehalf returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: liquidateBorrow (Slither line:2988)
liquidateBorrow returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: transfer (Slither line:2988)
transfer returns bool variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(bool)) (Slither line:3028)
Checking function: transferFrom (Slither line:2988)
transferFrom returns bool variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(bool)) (Slither line:3028)
Checking function: approve (Slither line:2988)
approve returns bool variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(bool)) (Slither line:3028)
Checking function: allowance (Slither line:2988)
allowance returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: balanceOf (Slither line:2988)
balanceOf returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: balanceOfUnderlying (Slither line:2988)
balanceOfUnderlying returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: getAccountSnapshot (Slither line:2988)
getAccountSnapshot returns uint256 variable  (Slither line:3008)
getAccountSnapshot returns uint256 variable  (Slither line:3008)
getAccountSnapshot returns uint256 variable  (Slither line:3008)
getAccountSnapshot returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256,uint256,uint256,uint256)) (Slither line:3028)
Checking function: borrowRatePerBlock (Slither line:2988)
borrowRatePerBlock returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: supplyRatePerBlock (Slither line:2988)
supplyRatePerBlock returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: totalBorrowsCurrent (Slither line:2988)
totalBorrowsCurrent returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: borrowBalanceCurrent (Slither line:2988)
borrowBalanceCurrent returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: borrowBalanceStored (Slither line:2988)
borrowBalanceStored returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: exchangeRateCurrent (Slither line:2988)
exchangeRateCurrent returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: exchangeRateStored (Slither line:2988)
exchangeRateStored returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: getCash (Slither line:2988)
getCash returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: accrueInterest (Slither line:2988)
accrueInterest returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: seize (Slither line:2988)
seize returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: sweepToken (Slither line:2988)
Checking function: _setPendingAdmin (Slither line:2988)
_setPendingAdmin returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: _setComptroller (Slither line:2988)
_setComptroller returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: _setReserveFactor (Slither line:2988)
_setReserveFactor returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: _acceptAdmin (Slither line:2988)
_acceptAdmin returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: _addReserves (Slither line:2988)
_addReserves returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: _reduceReserves (Slither line:2988)
_reduceReserves returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: _setInterestRateModel (Slither line:2988)
_setInterestRateModel returns uint256 variable  (Slither line:3008)
RETURN node expression: abi.decode(data,(uint256)) (Slither line:3028)
Checking function: delegateTo (Slither line:2988)
delegateTo returns bytes variable  (Slither line:3008)
RETURN node expression: returnData (Slither line:3028)
Checking function: delegateToImplementation (Slither line:2988)
delegateToImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: delegateTo(implementation,data) (Slither line:3028)
Checking function: delegateToViewImplementation (Slither line:2988)
delegateToViewImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: abi.decode(returnData,(bytes)) (Slither line:3028)
Checking function: fallback (Slither line:2988)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End CPoRDelegator.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in CPoRDelegator (Slither line:1305)
or in CDelegationStorage (Slither line:1319)

Begin CDelegatorInterface.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_

End CDelegatorInterface.find_getter_in_contract (Slither line:3083)


End CPoRDelegator.is_upgradeable_proxy (Slither line:1332)

impl_address_from_contract_call: implementation_
impl_address_from_contract_call: StateVariable implementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression implementation.delegatecall(msg.data)
impl_address_from_contract_call: CallExpression require(bool,string)(msg.value == 0,CPoRDelegator:fallback: cannot send value to fallback)
impl_address_from_contract_call: arg is msg.value == 0
impl_address_from_contract_call: arg is CPoRDelegator:fallback: cannot send value to fallback
Checking public function _setImplementation
Checking external function _setFeed
Checking external function _setHeartbeat
Checking external function _setFeed
Checking external function _setHeartbeat
Checking public function initialize
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,only admin may initialize the market)
Checking external function mint
Checking external function redeem
Checking external function redeemUnderlying
Checking external function borrow
Checking external function repayBorrow
Checking external function repayBorrowBehalf
Checking external function liquidateBorrow
Checking external function sweepToken
Checking external function _addReserves
Checking external function _delegateCompLikeTo
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,only the admin may set the comp-like delegate)
Checking external function mint
Checking external function redeem
Checking external function redeemUnderlying
Checking external function borrow
Checking external function repayBorrow
Checking external function repayBorrowBehalf
Checking external function liquidateBorrow
Checking external function sweepToken
Checking external function _addReserves
Checking public function initialize
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,only admin may initialize the market)
Checking external function transfer
Checking external function transferFrom
Checking external function approve
Checking external function allowance
Checking external function balanceOf
Checking external function balanceOfUnderlying
Checking external function getAccountSnapshot
Checking external function borrowRatePerBlock
Checking external function supplyRatePerBlock
Checking external function totalBorrowsCurrent
Checking external function borrowBalanceCurrent
Checking public function borrowBalanceStored
Checking public function exchangeRateCurrent
Checking public function exchangeRateStored
Checking external function getCash
Checking public function accrueInterest
Checking external function seize
Checking external function _setPendingAdmin
Checking external function _acceptAdmin
Found 'msg.sender ==' in expression: msg.sender != pendingAdmin || msg.sender == address(0)
Checking public function _setComptroller
Checking external function _setReserveFactor
Checking external function _reduceReserves
Checking public function _setInterestRateModel
Checking external function transfer
Checking external function transferFrom
Checking external function approve
Checking external function allowance
Checking external function balanceOf
Checking external function balanceOfUnderlying
Checking external function getAccountSnapshot
Checking external function borrowRatePerBlock
Checking external function supplyRatePerBlock
Checking external function totalBorrowsCurrent
Checking external function borrowBalanceCurrent
Checking public function borrowBalanceStored
Checking public function exchangeRateCurrent
Checking public function exchangeRateStored
Checking external function getCash
Checking public function accrueInterest
Checking external function seize
Checking external function _setPendingAdmin
Checking external function _acceptAdmin
Checking public function _setComptroller
Checking external function _setReserveFactor
Checking external function _reduceReserves
Checking public function _setInterestRateModel
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,CPoRDelegator::_setImplementation: Caller must be admin)
Checking external function mint
Checking external function redeem
Checking external function redeemUnderlying
Checking external function borrow
Checking external function repayBorrow
Checking external function repayBorrowBehalf
Checking external function liquidateBorrow
Checking external function transfer
Checking external function transferFrom
Checking external function approve
Checking external function allowance
Checking external function balanceOf
Checking external function balanceOfUnderlying
Checking external function getAccountSnapshot
Checking external function borrowRatePerBlock
Checking external function supplyRatePerBlock
Checking external function totalBorrowsCurrent
Checking external function borrowBalanceCurrent
Checking public function borrowBalanceStored
Checking public function exchangeRateCurrent
Checking public function exchangeRateStored
Checking external function getCash
Checking public function accrueInterest
Checking external function seize
Checking external function sweepToken
Checking external function _setPendingAdmin
Checking public function _setComptroller
Checking external function _setReserveFactor
Checking external function _acceptAdmin
Checking external function _addReserves
Checking external function _reduceReserves
Checking public function _setInterestRateModel
Checking public function delegateToImplementation
Checking public function delegateToViewImplementation
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function CPoRDelegator.failOpaque (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mul_ScalarTruncateAddUInt (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mint (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.getAccountSnapshot (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setReserveFactorFresh (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.doTransferIn (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.totalBorrowsCurrent (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._reduceReserves (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.add_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.borrowRatePerBlock (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.exchangeRateStored (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setFeed (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.repayBorrowBehalf (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.seizeInternal (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.borrowBalanceCurrent (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setInterestRateModel (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.liquidateBorrowInternal (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.getExp (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mul_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.addThenSubUInt (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.doTransferOut (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.borrowBalanceStoredInternal (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setInterestRateModelFresh (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.borrowBalanceStored (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.delegateTo (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.getCash (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.getBlockNumber (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.getCashPrior (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.add_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.div_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.exchangeRateCurrent (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.delegateToImplementation (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mulUInt (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.liquidateBorrow (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.borrowFresh (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mul_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._addReservesInternal (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.accrueInterest (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.exchangeRateStored (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.delegateToViewImplementation (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.exchangeRateCurrent (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setHeartbeat (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setPendingAdmin (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._delegateCompLikeTo (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.supplyRatePerBlock (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.getCash (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.fallback (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.doTransferIn (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.lessThanExp (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.transfer (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.seize (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.redeem (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.exchangeRateStored (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.repayBorrowInternal (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setImplementation (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.liquidateBorrowFresh (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._addReservesFresh (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.divUInt (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.accrueInterest (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.sweepToken (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mul_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.div_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.totalBorrowsCurrent (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.borrowRatePerBlock (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.addExp (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setFeed (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.seize (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mint (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setPendingAdmin (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.sub_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.redeemUnderlying (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.div_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.sweepToken (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.borrowBalanceCurrent (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._addReserves (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.supplyRatePerBlock (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._reduceReserves (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.doTransferOut (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.subUInt (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.repayBorrowBehalfInternal (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.redeem (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.exchangeRateStoredInternal (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._acceptAdmin (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.lessThanOrEqualExp (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.subExp (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setPendingAdmin (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setHeartbeat (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.transferFrom (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.borrowBalanceStored (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.totalBorrowsCurrent (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.seize (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setComptroller (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.borrow (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.getCash (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.greaterThanExp (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mul_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._acceptAdmin (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setReserveFactor (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.redeemUnderlying (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.sub_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setComptroller (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._reduceReservesFresh (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.fail (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.accrueInterest (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.getCashPrior (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.initialize (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.borrowBalanceCurrent (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.repayBorrowFresh (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mulScalar (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.addUInt (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._acceptAdmin (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.exchangeRateCurrent (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.sub_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mul_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.div_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.repayBorrow (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setReserveFactor (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._addReserves (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setComptroller (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.borrowBalanceStored (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.borrow (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setInterestRateModel (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mulExp3 (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.isZeroExp (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.div_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.divScalarByExp (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.approve (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.redeemUnderlying (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.initialize (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mintInternal (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setReserveFactor (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.borrow (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mulScalarTruncate (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.approve (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.sub_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._reduceReserves (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.repayBorrow (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.repayBorrow (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mulScalarTruncateAddUInt (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mintFresh (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.divScalarByExpTruncate (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.safe224 (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.div_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.repayBorrowBehalf (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.transferTokens (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.allowance (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.liquidateBorrow (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.repayBorrowBehalf (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.divExp (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.safe32 (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.transfer (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.redeemInternal (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.allowance (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setInterestRateModel (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.transferFrom (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mul_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.liquidateBorrow (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.balanceOf (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.approve (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.div_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mulExp (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.truncate (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.allowance (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.transfer (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.balanceOf (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.divScalar (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.redeemUnderlyingInternal (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.div_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.balanceOf (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.add_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.sweepToken (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mul_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.balanceOfUnderlying (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.constructor (proxy_features line:898)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: constructor writes implementation_ to implementation (proxy_features line:1013)
functions_writing_to_variable: checking function CPoRDelegator.balanceOfUnderlying (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._setImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == admin,CPoRDelegator::_setImplementation: Caller must be admin) (proxy_features line:909)
functions_writing_to_variable: exp = allowResign (proxy_features line:909)
functions_writing_to_variable: exp = delegateToImplementation(abi.encodeWithSignature(_resignImplementation())) (proxy_features line:909)
functions_writing_to_variable: exp = oldImplementation = implementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = implementation (proxy_features line:912)
functions_writing_to_variable: exp = implementation = implementation_ (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = implementation_ (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: exp = delegateToImplementation(abi.encodeWithSignature(_becomeImplementation(bytes),becomeImplementationData)) (proxy_features line:909)
functions_writing_to_variable: exp = NewImplementation(oldImplementation,implementation) (proxy_features line:909)
functions_writing_to_variable: exp = delegateTo(implementation,data) (proxy_features line:909)
functions_writing_to_variable: exp = (success,returnData) = callee.delegatecall(data) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: (success,returnData) = callee.delegatecall(data) (proxy_features line:912)
functions_writing_to_variable: exp = returnData (proxy_features line:909)
functions_writing_to_variable: _setImplementation writes implementation_ to implementation (proxy_features line:929)
functions_writing_to_variable: checking function CPoRDelegator.getAccountSnapshot (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.redeemFresh (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mulExp (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mul_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.balanceOfUnderlying (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mintFresh (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator._addReserves (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mul_ScalarTruncate (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.mint (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.borrowRatePerBlock (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.getAccountSnapshot (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.add_ (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.transferFrom (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.redeem (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.supplyRatePerBlock (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.fraction (proxy_features line:898)
functions_writing_to_variable: checking function CPoRDelegator.borrowInternal (proxy_features line:898)
has_compatibility_checks: dependencies: ['implementation_', 'implementation_']
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking public function _setImplementation
require(bool,string)(msg.sender == admin,CPoRDelegator::_setImplementation: Caller must be admin)
has_compatibility_checks: condition msg.sender == admin
has_compatibility_checks: IF node exp = allowResign
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool,string)(msg.value == 0,CPoRDelegator:fallback: cannot send value to fallback)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: (success) = implementation.delegatecall(msg.data)
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
Found public function: _setImplementation
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = implementation
has_time_delay: (node.type) RETURN
(Expression) delegateTo(implementation,data)
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = implementation_
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == admin,CPoRDelegator::_setImplementation: Caller must be admin)
has_time_delay: (node.type) EXPRESSION
(Expression) delegateToImplementation(abi.encodeWithSignature(_resignImplementation()))
has_time_delay: (node.type) EXPRESSION
(Expression) delegateToImplementation(abi.encodeWithSignature(_becomeImplementation(bytes),becomeImplementationData))
has_time_delay: (node.type) RETURN
(Expression) returnData
has_time_delay: (node.type) IF
(Expression) allowResign
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,implementation)
has_time_delay: (node.type) EXPRESSION
(Expression) (success,returnData) = callee.delegatecall(data)
