
Begin EIP20Interface.is_proxy (Slither line:1425)


End EIP20Interface.is_proxy (Slither line:1428)


Begin EIP20Interface.is_upgradeable_proxy (Slither line:1136)

Checking contract: EIP20Interface 

End EIP20Interface.is_upgradeable_proxy (Slither line:1407)


Begin EIP20NonStandardInterface.is_proxy (Slither line:1425)


End EIP20NonStandardInterface.is_proxy (Slither line:1428)


Begin EIP20NonStandardInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: EIP20NonStandardInterface 

End EIP20NonStandardInterface.is_upgradeable_proxy (Slither line:1407)


Begin IFuseFeeDistributor.is_proxy (Slither line:1425)


End IFuseFeeDistributor.is_proxy (Slither line:1476)


Begin IFuseFeeDistributor.is_upgradeable_proxy (Slither line:1136)

Checking contract: IFuseFeeDistributor 

End IFuseFeeDistributor.is_upgradeable_proxy (Slither line:1407)


Begin RewardsDistributorDelegatorStorage.is_proxy (Slither line:1425)


End RewardsDistributorDelegatorStorage.is_proxy (Slither line:1428)


Begin RewardsDistributorDelegatorStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: RewardsDistributorDelegatorStorage 

End RewardsDistributorDelegatorStorage.is_upgradeable_proxy (Slither line:1407)


Begin CDelegationStorage.is_proxy (Slither line:1425)


End CDelegationStorage.is_proxy (Slither line:1428)


Begin CDelegationStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: CDelegationStorage 

End CDelegationStorage.is_upgradeable_proxy (Slither line:1407)


Begin TokenErrorReporter.is_proxy (Slither line:1425)


End TokenErrorReporter.is_proxy (Slither line:1428)


Begin TokenErrorReporter.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenErrorReporter 

End TokenErrorReporter.is_upgradeable_proxy (Slither line:1407)


Begin InterestRateModel.is_proxy (Slither line:1425)


End InterestRateModel.is_proxy (Slither line:1428)


Begin InterestRateModel.is_upgradeable_proxy (Slither line:1136)

Checking contract: InterestRateModel 

End InterestRateModel.is_upgradeable_proxy (Slither line:1407)


Begin CarefulMath.is_proxy (Slither line:1425)


End CarefulMath.is_proxy (Slither line:1428)


Begin CarefulMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: CarefulMath 

End CarefulMath.is_upgradeable_proxy (Slither line:1407)


Begin ComptrollerErrorReporter.is_proxy (Slither line:1425)


End ComptrollerErrorReporter.is_proxy (Slither line:1428)


Begin ComptrollerErrorReporter.is_upgradeable_proxy (Slither line:1136)

Checking contract: ComptrollerErrorReporter 

End ComptrollerErrorReporter.is_upgradeable_proxy (Slither line:1407)


Begin RewardsDistributorDelegateStorageV1.is_proxy (Slither line:1425)


End RewardsDistributorDelegateStorageV1.is_proxy (Slither line:1428)


Begin RewardsDistributorDelegateStorageV1.is_upgradeable_proxy (Slither line:1136)

Checking contract: RewardsDistributorDelegateStorageV1 

End RewardsDistributorDelegateStorageV1.is_upgradeable_proxy (Slither line:1407)


Begin CDelegateInterface.is_proxy (Slither line:1425)


End CDelegateInterface.is_proxy (Slither line:1428)


Begin CDelegateInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CDelegateInterface 

End CDelegateInterface.is_upgradeable_proxy (Slither line:1407)


Begin RewardsDistributorDelegator.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


Found LowLevelCall (Slither line:2740)


Found delegatecall in LowLevelCall (Slither line:2742)


End Contract.find_delegatecall_in_ir (Slither line:2773)


End RewardsDistributorDelegator.is_proxy (Slither line:1476)


Begin RewardsDistributorDelegator.is_upgradeable_proxy (Slither line:1136)

Checking contract: RewardsDistributorDelegator 
RewardsDistributorDelegator is delegating to implementation
Looking for setter (Slither line:1200)

Looking for setter in RewardsDistributorDelegatorStorage (Slither line:1204)


Begin RewardsDistributorDelegatorStorage.find_setter_in_contract (Slither line:3119)


End RewardsDistributorDelegatorStorage.find_setter_in_contract (Slither line:3345)


Could not find setter in RewardsDistributorDelegatorStorage 
Looking in RewardsDistributorDelegator (Slither line:1213)

Begin RewardsDistributorDelegator.find_setter_in_contract (Slither line:3119)

Checking function: constructor(address,address,address) returns() (Slither line:3127)
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: public
require(bool,string)(implementation_ != address(0),RewardsDistributorDelegator::_setImplementation: invalid implementation address)
NewImplementation(oldImplementation,implementation)
require(bool,string)(msg.sender == admin,RewardsDistributorDelegator::_setImplementation: admin only)
implementation = implementation_
is an Assignment Operation (Slither line:3216)

End RewardsDistributorDelegator.find_setter_in_contract (Slither line:3345)


Implementation set by function: _setImplementation in contract: RewardsDistributorDelegator (Slither line:1264)
Looking for getter (Slither line:1273)


Begin RewardsDistributorDelegatorStorage.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_

End RewardsDistributorDelegatorStorage.find_getter_in_contract (Slither line:3083)


Begin RewardsDistributorDelegator.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_
Checking function: constructor (Slither line:2988)
Checking function: _setImplementation (Slither line:2988)
Checking function: delegateTo (Slither line:2988)
Checking function: fallback (Slither line:2988)

End RewardsDistributorDelegator.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in RewardsDistributorDelegator (Slither line:1305)
or in RewardsDistributorDelegatorStorage (Slither line:1319)

Begin RewardsDistributorDelegateStorageV1.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_

End RewardsDistributorDelegateStorageV1.find_getter_in_contract (Slither line:3083)


End RewardsDistributorDelegator.is_upgradeable_proxy (Slither line:1332)

impl_address_from_contract_call: implementation_
impl_address_from_contract_call: StateVariable implementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression implementation.delegatecall(msg.data)
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,RewardsDistributorDelegator::_setImplementation: admin only)
Checking public function _setImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,RewardsDistributorDelegator::_setImplementation: admin only)
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function RewardsDistributorDelegator._setImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == admin,RewardsDistributorDelegator::_setImplementation: admin only) (proxy_features line:909)
functions_writing_to_variable: exp = require(bool,string)(implementation_ != address(0),RewardsDistributorDelegator::_setImplementation: invalid implementation address) (proxy_features line:909)
functions_writing_to_variable: exp = oldImplementation = implementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = implementation (proxy_features line:912)
functions_writing_to_variable: exp = implementation = implementation_ (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = implementation_ (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: exp = NewImplementation(oldImplementation,implementation) (proxy_features line:909)
functions_writing_to_variable: _setImplementation writes implementation_ to implementation (proxy_features line:929)
functions_writing_to_variable: checking function RewardsDistributorDelegator.delegateTo (proxy_features line:898)
functions_writing_to_variable: checking function RewardsDistributorDelegator.constructor (proxy_features line:898)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: constructor writes implementation_ to implementation (proxy_features line:1013)
functions_writing_to_variable: checking function RewardsDistributorDelegator.fallback (proxy_features line:898)
has_compatibility_checks: dependencies: ['implementation_', 'implementation_']
has_compatibility_checks: checking public function _setImplementation
require(bool,string)(implementation_ != address(0),RewardsDistributorDelegator::_setImplementation: invalid implementation address)
has_compatibility_checks: condition implementation_ != address(0)
check_condition_from_expression: condition implementation_ != address(0)
require(bool,string)(msg.sender == admin,RewardsDistributorDelegator::_setImplementation: admin only)
has_compatibility_checks: condition msg.sender == admin
has_compatibility_checks: skipping constructor
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: (success) = implementation.delegatecall(msg.data)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: constructor
Found public function: _setImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(implementation_ != address(0),RewardsDistributorDelegator::_setImplementation: invalid implementation address)
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,implementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = implementation
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == admin,RewardsDistributorDelegator::_setImplementation: admin only)
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = implementation_

Begin CErc20Storage.is_proxy (Slither line:1425)


End CErc20Storage.is_proxy (Slither line:1428)


Begin CErc20Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: CErc20Storage 

End CErc20Storage.is_upgradeable_proxy (Slither line:1407)


Begin ExponentialNoError.is_proxy (Slither line:1425)


End ExponentialNoError.is_proxy (Slither line:1428)


Begin ExponentialNoError.is_upgradeable_proxy (Slither line:1136)

Checking contract: ExponentialNoError 

End ExponentialNoError.is_upgradeable_proxy (Slither line:1407)


Begin ComptrollerInterface.is_proxy (Slither line:1425)


End ComptrollerInterface.is_proxy (Slither line:1428)


Begin ComptrollerInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: ComptrollerInterface 

End ComptrollerInterface.is_upgradeable_proxy (Slither line:1407)


Begin CEtherInterface.is_proxy (Slither line:1425)


End CEtherInterface.is_proxy (Slither line:1428)


Begin CEtherInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CEtherInterface 

End CEtherInterface.is_upgradeable_proxy (Slither line:1407)


Begin CErc20Interface.is_proxy (Slither line:1425)


End CErc20Interface.is_proxy (Slither line:1428)


Begin CErc20Interface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CErc20Interface 

End CErc20Interface.is_upgradeable_proxy (Slither line:1407)


Begin CTokenAdminStorage.is_proxy (Slither line:1425)


End CTokenAdminStorage.is_proxy (Slither line:1428)


Begin CTokenAdminStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: CTokenAdminStorage 

End CTokenAdminStorage.is_upgradeable_proxy (Slither line:1407)


Begin Exponential.is_proxy (Slither line:1425)


End Exponential.is_proxy (Slither line:1428)


Begin Exponential.is_upgradeable_proxy (Slither line:1136)

Checking contract: Exponential 

End Exponential.is_upgradeable_proxy (Slither line:1407)


Begin UnitrollerAdminStorage.is_proxy (Slither line:1425)


End UnitrollerAdminStorage.is_proxy (Slither line:1428)


Begin UnitrollerAdminStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: UnitrollerAdminStorage 

End UnitrollerAdminStorage.is_upgradeable_proxy (Slither line:1407)


Begin ComptrollerV1Storage.is_proxy (Slither line:1425)


End ComptrollerV1Storage.is_proxy (Slither line:1428)


Begin ComptrollerV1Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: ComptrollerV1Storage 

End ComptrollerV1Storage.is_upgradeable_proxy (Slither line:1407)


Begin PriceOracle.is_proxy (Slither line:1425)


End PriceOracle.is_proxy (Slither line:1428)


Begin PriceOracle.is_upgradeable_proxy (Slither line:1136)

Checking contract: PriceOracle 

End PriceOracle.is_upgradeable_proxy (Slither line:1407)


Begin ComptrollerV2Storage.is_proxy (Slither line:1425)


End ComptrollerV2Storage.is_proxy (Slither line:1428)


Begin ComptrollerV2Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: ComptrollerV2Storage 

End ComptrollerV2Storage.is_upgradeable_proxy (Slither line:1407)


Begin CTokenStorage.is_proxy (Slither line:1425)


End CTokenStorage.is_proxy (Slither line:1428)


Begin CTokenStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: CTokenStorage 

End CTokenStorage.is_upgradeable_proxy (Slither line:1407)


Begin ComptrollerV3Storage.is_proxy (Slither line:1425)


End ComptrollerV3Storage.is_proxy (Slither line:1428)


Begin ComptrollerV3Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: ComptrollerV3Storage 

End ComptrollerV3Storage.is_upgradeable_proxy (Slither line:1407)


Begin CTokenInterface.is_proxy (Slither line:1425)


End CTokenInterface.is_proxy (Slither line:1428)


Begin CTokenInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: CTokenInterface 

End CTokenInterface.is_upgradeable_proxy (Slither line:1407)


Begin CToken.is_proxy (Slither line:1425)


End CToken.is_proxy (Slither line:1428)


Begin CToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: CToken 

End CToken.is_upgradeable_proxy (Slither line:1407)

