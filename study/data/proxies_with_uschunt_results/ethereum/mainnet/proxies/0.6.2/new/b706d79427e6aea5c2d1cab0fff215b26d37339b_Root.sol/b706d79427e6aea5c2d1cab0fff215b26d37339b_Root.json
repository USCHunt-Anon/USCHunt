{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.2/new/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol#21-89)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.2/new/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol#21-89) is a proxy, but doesn't seem upgradeable.\n",
        "id": "cb70bcec6d81585d7521ef499de1dc4cc025c9eb09a62b94cfe4ec81796afff6",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "UpgradeableProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.2/new/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol#300-361)",
        "elements": [],
        "description": "UpgradeableProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.2/new/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol#300-361) is a proxy, but doesn't seem upgradeable.\n",
        "id": "6498cef87413584e0151e2db149e748f6a8bbf5f5e1bfa6a9d5cf68d98a5879e",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "UpgradeableExtension (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.2/new/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol#380-440)",
        "elements": [],
        "description": "UpgradeableExtension (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.2/new/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol#380-440) is a proxy, but doesn't seem upgradeable.\n",
        "id": "ba0c1637388dbffb1c6596f7c0f7695116539dbbf9d1ad93170ae2b3a241b0df",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "Root (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.2/new/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol#2926-2943)",
        "elements": [],
        "description": "Root (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.2/new/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol#2926-2943) is an upgradeable proxy.\n_IMPLEMENTATION_SLOT was found in a different contract.\n uses Unstructured Storage\n implements EIP-1967\nFound compatibility checks in all upgrade functions.\n",
        "id": "c7fc06c69435d5898a98469e1c3047d4698c4426a04bbf7e58907a29a7c8a77a",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "UpgradeableExtension._IMPLEMENTATION_SLOT",
          "impl_address_setter": "Root.upgradeTo(address)",
          "impl_address_getter": "UpgradeableExtension._implementation()",
          "impl_address_location": "UpgradeableExtension (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.6.2/new/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol/b706d79427e6aea5c2d1cab0fff215b26d37339b_Root.sol#380-440)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "unstructured_storage": true,
          "eip_1967": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "Root.upgradeTo(address)": {
                "check": "require(bool,string)(newImplementation == address(0x0) || Address.isContract(newImplementation),UpgradeableExtension: new implementation must be 0x0 or a contract)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "erc20": [
              "totalSupply()",
              "balanceOf(address)",
              "transfer(address,uint256)",
              "transferFrom(address,address,uint256)",
              "approve(address,uint256)",
              "allowance(address,address)",
              "name()",
              "symbol()",
              "decimals()"
            ],
            "other": [
              "pause(uint256)",
              "unpause(uint256)",
              "changeRewardCollector(address)",
              "adjustWeights(uint8,uint256,uint256)",
              "changeSwapFee(uint256)",
              "changeRedeemFee(uint256)",
              "changeAdminFeePct(uint256)",
              "changeAdminInterestPct(uint256)",
              "initialize(uint8,uint256)",
              "addToken(address,address,uint256,uint256,uint256)",
              "setYEnabled(uint256,address)",
              "getBalance(uint256)",
              "rebalanceReserve(uint256)",
              "getMintAmount(uint256,uint256)",
              "mint(uint256,uint256,uint256)",
              "getRedeemByLpTokenAmount(uint256,uint256)",
              "redeemByLpToken(uint256,uint256,uint256)",
              "redeem(uint256,uint256,uint256)",
              "getSwapAmount(uint256,uint256,uint256)",
              "swap(uint256,uint256,uint256,uint256)",
              "swapAll(uint256,uint256,uint256,uint256[])",
              "collectReward()",
              "getTokenStats(uint256)",
              "owner()",
              "renounceOwnership()",
              "transferOwnership(address)",
              "increaseAllowance(address,uint256)",
              "decreaseAllowance(address,uint256)",
              "upgradeTo(address)"
            ]
          }
        }
      }
    ]
  }
}