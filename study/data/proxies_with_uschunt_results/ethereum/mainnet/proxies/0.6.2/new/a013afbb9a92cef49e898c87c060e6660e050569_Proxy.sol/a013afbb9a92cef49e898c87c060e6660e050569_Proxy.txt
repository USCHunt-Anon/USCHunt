
Begin LibParam.is_proxy (Slither line:1425)


End LibParam.is_proxy (Slither line:1428)


Begin LibParam.is_upgradeable_proxy (Slither line:1136)

Checking contract: LibParam 

End LibParam.is_upgradeable_proxy (Slither line:1407)


Begin LibStack.is_proxy (Slither line:1425)


End LibStack.is_proxy (Slither line:1428)


Begin LibStack.is_upgradeable_proxy (Slither line:1136)

Checking contract: LibStack 

End LibStack.is_upgradeable_proxy (Slither line:1407)


Begin LibCache.is_proxy (Slither line:1425)


End LibCache.is_proxy (Slither line:1428)


Begin LibCache.is_upgradeable_proxy (Slither line:1136)

Checking contract: LibCache 

End LibCache.is_upgradeable_proxy (Slither line:1407)


Begin Storage.is_proxy (Slither line:1425)


End Storage.is_proxy (Slither line:1428)


Begin Storage.is_upgradeable_proxy (Slither line:1136)

Checking contract: Storage 

End Storage.is_upgradeable_proxy (Slither line:1407)


Begin Config.is_proxy (Slither line:1425)


End Config.is_proxy (Slither line:1428)


Begin Config.is_upgradeable_proxy (Slither line:1136)

Checking contract: Config 

End Config.is_upgradeable_proxy (Slither line:1407)


Begin IRegistry.is_proxy (Slither line:1425)


End IRegistry.is_proxy (Slither line:1428)


Begin IRegistry.is_upgradeable_proxy (Slither line:1136)

Checking contract: IRegistry 

End IRegistry.is_upgradeable_proxy (Slither line:1407)


Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin IERC20.is_proxy (Slither line:1425)


End IERC20.is_proxy (Slither line:1428)


Begin IERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20 

End IERC20.is_upgradeable_proxy (Slither line:1407)


Begin SafeERC20.is_proxy (Slither line:1425)


End SafeERC20.is_proxy (Slither line:1428)


Begin SafeERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeERC20 

End SafeERC20.is_upgradeable_proxy (Slither line:1407)


Begin Proxy.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(result + 0x20,0,size__exec_asm_0) (Slither line:2802)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
result + 0x20
0
size__exec_asm_0

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(_isValid(_to),Invalid handler) (Slither line:2802)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2817)
Args:
_isValid(_to)
Invalid handler

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)


End Proxy.find_delegatecall_in_asm (Slither line:1637)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)


End Proxy.find_delegatecall_in_asm (Slither line:1637)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: _addCubeCounter() (Slither line:2802)
Expression called: _addCubeCounter
Type of call: tuple() (Slither line:2817)
Args:

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_33066_119_0__exec_asm_0 = ! succeeded__exec_asm_0 (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: size = extcodesize(uint256)(account) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: extcodesize(uint256)
Type of call: uint256 (Slither line:2817)
Args:
account

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called '_to'
Looking for corresponding Variable
Current function: _exec

Begin Proxy.find_delegate_variable_from_name
Searching for _to (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking stack (Slither line:1689)
Checking cache (Slither line:1689)
Checking MSG_SENDER_KEY (Slither line:1689)
Checking CUBE_COUNTER_KEY (Slither line:1689)
Checking POSTPROCESS_SIG (Slither line:1689)
Checking PERCENTAGE_BASE (Slither line:1689)
Checking HANDLER_REGISTRY (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking _to (Slither line:1800)
_to is a Parameter in Proxy._exec (Slither line:1805)
CallExpression: returndatacopy(uint256,uint256,uint256)(result + 0x20,0,size__exec_asm_0) (Slither line:1819)
CallExpression: require(bool,string)(_isValid(_to),Invalid handler) (Slither line:1819)
AssignmentOperation: address(bytes20(IRegistry(_getRegistry()).infos(msg.sender))) (Slither line:1811)
CallExpression: _addCubeCounter() (Slither line:1819)
AssignmentOperation: ! succeeded__exec_asm_0 (Slither line:1811)
AssignmentOperation: _exec(target,msg.data) (Slither line:1811)
CallExpression: _exec(target,msg.data) (Slither line:1819)
Found where _exec is called: _exec(target,msg.data) (Slither line:1832)
The value passed to parameter #0 is target (Slither line:1835)
which is an Identifier with value target (Slither line:1839)
target is a Local Variable with the expression: address(bytes20(IRegistry(_getRegistry()).infos(msg.sender))) (Slither line:1850)

End Proxy.find_delegate_variable_from_name (Slither line:1949)


End Proxy.find_delegatecall_in_asm (Slither line:1637)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 
Local Variable: target (Slither line:1164)
Proxy is delegating to target
Looking for setter (Slither line:1200)


Begin Proxy.find_setter_in_contract (Slither line:3119)

Expression: address(bytes20(IRegistry(_getRegistry()).infos(msg.sender))) (Slither line:3122)
Checking function: constructor(address) returns() (Slither line:3127)
Checking function: fallback() returns() (Slither line:3127)
Checking function: batchExec(address[],bytes32[],bytes[]) returns() (Slither line:3127)
Visibility: public
isStackEmpty()
_verifyCallResult(success,returndata,errorMessage)
_setSender()
(success,returndata) = target.call{value: value}(data)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
size > 0
stack.pop()
IRegistry(_getRegistry()).isValid(handler)
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
i ++
i ++
refs[i] = uint256(conf & REFS_MASK)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
require(bool,string)(refs[i] < index,Reference to out of localStack)
ret = address(uint160(uint256(_cache[_key])))
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
isCubeCounterZero()
conf = conf >> 8
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
stack.setAddress(_to)
_callOptionalReturn(token,abi.encodeWithSelector(token.transfer.selector,to,value))
stack.setHandlerType(uint256(HandlerType.Custom))
require(bool,string)(stack.length == 0,Stack not empty)
ret = uint256(_cache[_key])
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
require(bool,string)(abi.decode(returndata,(bool)),SafeERC20: ERC20 operation did not succeed)
loc__trim_asm_0 = data + 0x20 + offset
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
cache.setAddress(MSG_SENDER_KEY,msg.sender)
functionCallWithValue(target,data,0,errorMessage)
m__trim_asm_0 = mload(uint256)(loc__trim_asm_0)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
k ++
_cache[_key] = bytes32(uint256(uint160(_value)))
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
conf = conf >> 1
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
require(bool,string)(_getCubeCounter() == 0,Cube counter not zero)
require(bool,string)(i_scope_0 < n,Location count exceeds ref count)
_stack.push(bytes32(uint256(uint160(_input))))
addr = stack.getAddress()
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
params[i_scope_0] = k * 32 + 4
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
require(bool,string)(_stack.length > 0,stack empty)
_exec(addr,abi.encodeWithSelector(POSTPROCESS_SIG))
i_scope_0 ++
ret = _stack[_stack.length - 1]
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
(refs,params) = config.getParams()
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
mstore(uint256,uint256)(loc__trim_asm_0,ref)
p__trim_asm_0 = m__trim_asm_0 * ref
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
cache.setAddress(MSG_SENDER_KEY,address(0))
_cache[_key] = bytes32(_value)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
require(bool,string)(i_scope_0 == n,Location count less than ref count)
IERC20(addr).safeTransfer(msg.sender,amount)
ref = p__trim_asm_0 / base
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
revert(uint256,uint256)(0,0)
None
require(bool,string)(address(this).balance >= value,Address: insufficient balance for call)
require(bool,string)(isContract(target),Address: call to non-contract)
require(bool,string)(_isValid(_to),Invalid handler)
num = uint256(temp)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
msg.sender.transfer(amount_scope_0)
cache.getAddress(MSG_SENDER_KEY)
_setPostProcess(tos[i])
_addCubeCounter()
returndata
_resetSender()
_resetCubeCounter()
require(bool,string)(_input < uint96(- 1),Invalid Handler Type)
succeeded__exec_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()() - 5000,_to,_data + 0x20,mload(uint256)(_data),0,0)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
_stack.push(bytes12(uint96(_input)))
require(bool,string)(newIndex == index + num,Return num and parsed return num not matched)
newIndex = index + len / 32
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
index = newIndex
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
require(bool,string)(newIndex <= 256,stack overflow)
true
cache.setUint256(CUBE_COUNTER_KEY,_getCubeCounter() + 1)
_preProcess()
_execs(tos,configs,datas)
size__exec_asm_0 = returndatasize()()
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
false
_exec(tos[i],datas[i])
returndata_size__verifyCallResult_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
_postProcess()
offset__parse_asm_0 = index << 5
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
require(bool,string)(! isStatic(conf),Static params)
result = mload(uint256)(0x40)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
revert(uint256,uint256)(32 + returndata,returndata_size__verifyCallResult_asm_0)
mstore(uint256,uint256)(0x40,result + size__exec_asm_0 + 0x20 + 0x1f & ~ 0x1f)
mstore(uint256,uint256)(result,size__exec_asm_0)
require(bool,string)(tos.length == datas.length,Tos and datas length inconsistent)
cache.setUint256(CUBE_COUNTER_KEY,0)
revert(string)(errorMessage)
returndatacopy(uint256,uint256,uint256)(result + 0x20,0,size__exec_asm_0)
require(bool,string)(tos.length == configs.length,Tos and configs length inconsistent)
i__parse_asm_0 = 0
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
n = REFS_LIMIT - n
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
switch_expr_33066_119_0__exec_asm_0 = ! succeeded__exec_asm_0
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
ret = address(uint160(uint256(peek(_stack))))
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
_stack.pop()
false
n ++
conf = conf >> 8
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
mstore(uint256,uint256)(localStack + i__parse_asm_0 + offset__parse_asm_0,mload(uint256)(ret + i__parse_asm_0 + 0x20))
true
cache.getUint256(CUBE_COUNTER_KEY)
i__parse_asm_0 = i__parse_asm_0 + 0x20
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
require(bool,string)(n > 0,No dynamic param)
revert(uint256,uint256)(result + 0x20,size__exec_asm_0)
refs = new uint256[](n)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
params = new uint256[](n)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
i ++
registry = sload(uint256)(slot)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
_trim(datas[i],configs[i],localStack,index)
Checking function: execs(address[],bytes32[],bytes[]) returns() (Slither line:3127)
Visibility: public
stack.pop()
IRegistry(_getRegistry()).isValid(handler)
i ++
i ++
ret = address(uint160(uint256(_cache[_key])))
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
require(bool,string)(refs[i] < index,Reference to out of localStack)
refs[i] = uint256(conf & REFS_MASK)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
conf = conf >> 8
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
stack.setAddress(_to)
stack.setHandlerType(uint256(HandlerType.Custom))
ret = uint256(_cache[_key])
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
loc__trim_asm_0 = data + 0x20 + offset
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
m__trim_asm_0 = mload(uint256)(loc__trim_asm_0)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
k ++
conf = conf >> 1
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
require(bool,string)(i_scope_0 < n,Location count exceeds ref count)
_stack.push(bytes32(uint256(uint160(_input))))
params[i_scope_0] = k * 32 + 4
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
require(bool,string)(_stack.length > 0,stack empty)
i_scope_0 ++
ret = _stack[_stack.length - 1]
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
(refs,params) = config.getParams()
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
mstore(uint256,uint256)(loc__trim_asm_0,ref)
p__trim_asm_0 = m__trim_asm_0 * ref
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
_cache[_key] = bytes32(_value)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
require(bool,string)(i_scope_0 == n,Location count less than ref count)
ref = p__trim_asm_0 / base
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
None
revert(uint256,uint256)(0,0)
require(bool,string)(_isValid(_to),Invalid handler)
num = uint256(temp)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
cache.getAddress(MSG_SENDER_KEY)
_setPostProcess(tos[i])
_addCubeCounter()
require(bool,string)(_input < uint96(- 1),Invalid Handler Type)
succeeded__exec_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()() - 5000,_to,_data + 0x20,mload(uint256)(_data),0,0)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
_stack.push(bytes12(uint96(_input)))
require(bool,string)(newIndex == index + num,Return num and parsed return num not matched)
newIndex = index + len / 32
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
index = newIndex
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
require(bool,string)(newIndex <= 256,stack overflow)
true
cache.setUint256(CUBE_COUNTER_KEY,_getCubeCounter() + 1)
size__exec_asm_0 = returndatasize()()
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
false
_exec(tos[i],datas[i])
offset__parse_asm_0 = index << 5
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
require(bool,string)(! isStatic(conf),Static params)
result = mload(uint256)(0x40)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
mstore(uint256,uint256)(0x40,result + size__exec_asm_0 + 0x20 + 0x1f & ~ 0x1f)
mstore(uint256,uint256)(result,size__exec_asm_0)
require(bool,string)(tos.length == datas.length,Tos and datas length inconsistent)
returndatacopy(uint256,uint256,uint256)(result + 0x20,0,size__exec_asm_0)
require(bool,string)(tos.length == configs.length,Tos and configs length inconsistent)
i__parse_asm_0 = 0
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
n = REFS_LIMIT - n
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
switch_expr_33066_119_0__exec_asm_0 = ! succeeded__exec_asm_0
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
require(bool,string)(msg.sender == address(this),Does not allow external calls)
false
require(bool,string)(_getSender() != address(0),Sender should be initialized)
n ++
_execs(tos,configs,datas)
conf = conf >> 8
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
mstore(uint256,uint256)(localStack + i__parse_asm_0 + offset__parse_asm_0,mload(uint256)(ret + i__parse_asm_0 + 0x20))
true
cache.getUint256(CUBE_COUNTER_KEY)
i__parse_asm_0 = i__parse_asm_0 + 0x20
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
require(bool,string)(n > 0,No dynamic param)
revert(uint256,uint256)(result + 0x20,size__exec_asm_0)
refs = new uint256[](n)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
params = new uint256[](n)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
i ++
registry = sload(uint256)(slot)
is an Assignment Operation (Slither line:3216)
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
_trim(datas[i],configs[i],localStack,index)
Checking function: _execs(address[],bytes32[],bytes[]) returns() (Slither line:3127)
Visibility: internal
Checking function: _trim(bytes,bytes32,bytes32[256],uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _parse(bytes32[256],bytes,uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: _exec(address,bytes) returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: _setPostProcess(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _preProcess() returns() (Slither line:3127)
Visibility: internal
Checking function: _postProcess() returns() (Slither line:3127)
Visibility: internal
Checking function: _getRegistry() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _isValid(address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: _setSender() returns() (Slither line:3127)
Visibility: internal
Checking function: _resetSender() returns() (Slither line:3127)
Visibility: internal
Checking function: _getSender() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _addCubeCounter() returns() (Slither line:3127)
Visibility: internal
Checking function: _resetCubeCounter() returns() (Slither line:3127)
Visibility: internal
Checking function: _getCubeCounter() returns(uint256) (Slither line:3127)
Visibility: internal

End Proxy.find_setter_in_contract (Slither line:3345)


Could not find implementation setter in Proxy (Slither line:1269)
Looking for getter (Slither line:1273)


Begin Proxy.find_getter_in_contract (Slither line:2974)

target is a Variable object
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
Checking function: _setSender (Slither line:2988)
Checking function: _resetSender (Slither line:2988)
Checking function: _getSender (Slither line:2988)
_getSender returns address variable  (Slither line:3008)
RETURN node expression: cache.getAddress(MSG_SENDER_KEY) (Slither line:3028)
Checking function: _addCubeCounter (Slither line:2988)
Checking function: _resetCubeCounter (Slither line:2988)
Checking function: _getCubeCounter (Slither line:2988)
_getCubeCounter returns uint256 variable  (Slither line:3008)
RETURN node expression: cache.getUint256(CUBE_COUNTER_KEY) (Slither line:3028)
Checking function: constructor (Slither line:2988)
Checking function: fallback (Slither line:2988)
Checking function: batchExec (Slither line:2988)
Checking function: execs (Slither line:2988)
Checking function: _execs (Slither line:2988)
Checking function: _trim (Slither line:2988)
Checking function: _parse (Slither line:2988)
_parse returns uint256 variable called newIndex (Slither line:3008)
Checking function: _exec (Slither line:2988)
_exec returns bytes variable called result (Slither line:3008)
Checking function: _setPostProcess (Slither line:2988)
Checking function: _preProcess (Slither line:2988)
Checking function: _postProcess (Slither line:2988)
Checking function: _getRegistry (Slither line:2988)
_getRegistry returns address variable called registry (Slither line:3008)
Checking function: _isValid (Slither line:2988)
_isValid returns bool variable called result (Slither line:3008)
RETURN node expression: IRegistry(_getRegistry()).isValid(handler) (Slither line:3028)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End Proxy.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in Proxy (Slither line:1305)

Begin LibParam.find_getter_in_contract (Slither line:2974)

target is a Variable object
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
Checking function: isStatic (Slither line:2988)
isStatic returns bool variable  (Slither line:3008)
RETURN node expression: false (Slither line:3028)
RETURN node expression: true (Slither line:3028)
Checking function: isReferenced (Slither line:2988)
isReferenced returns bool variable  (Slither line:3008)
RETURN node expression: false (Slither line:3028)
RETURN node expression: true (Slither line:3028)
Checking function: getReturnNum (Slither line:2988)
getReturnNum returns uint256 variable called num (Slither line:3008)
Checking function: getParams (Slither line:2988)
getParams returns uint256[] variable called refs (Slither line:3008)
getParams returns uint256[] variable called params (Slither line:3008)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End LibParam.find_getter_in_contract (Slither line:3083)


Begin LibParam.find_setter_in_contract (Slither line:3119)

Expression: address(bytes20(IRegistry(_getRegistry()).infos(msg.sender))) (Slither line:3122)
Checking function: isStatic(bytes32) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: isReferenced(bytes32) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: getReturnNum(bytes32) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: getParams(bytes32) returns(uint256[],uint256[]) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End LibParam.find_setter_in_contract (Slither line:3345)


Begin LibStack.find_getter_in_contract (Slither line:2974)

target is a Variable object
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
Checking function: setAddress (Slither line:2988)
Checking function: set (Slither line:2988)
Checking function: setHandlerType (Slither line:2988)
Checking function: getAddress (Slither line:2988)
getAddress returns address variable called ret (Slither line:3008)
Checking function: getSig (Slither line:2988)
getSig returns bytes4 variable called ret (Slither line:3008)
Checking function: get (Slither line:2988)
get returns bytes32 variable called ret (Slither line:3008)
Checking function: peek (Slither line:2988)
peek returns bytes32 variable called ret (Slither line:3008)

End LibStack.find_getter_in_contract (Slither line:3083)


Begin LibStack.find_setter_in_contract (Slither line:3119)

Expression: address(bytes20(IRegistry(_getRegistry()).infos(msg.sender))) (Slither line:3122)
Checking function: setAddress(bytes32[],address) returns() (Slither line:3127)
Visibility: internal
Checking function: set(bytes32[],bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: setHandlerType(bytes32[],uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: getAddress(bytes32[]) returns(address) (Slither line:3127)
Visibility: internal
Checking function: getSig(bytes32[]) returns(bytes4) (Slither line:3127)
Visibility: internal
Checking function: get(bytes32[]) returns(bytes32) (Slither line:3127)
Visibility: internal
Checking function: peek(bytes32[]) returns(bytes32) (Slither line:3127)
Visibility: internal

End LibStack.find_setter_in_contract (Slither line:3345)


Begin LibCache.find_getter_in_contract (Slither line:2974)

target is a Variable object
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
Checking function: set (Slither line:2988)
Checking function: setAddress (Slither line:2988)
Checking function: setUint256 (Slither line:2988)
Checking function: getAddress (Slither line:2988)
getAddress returns address variable called ret (Slither line:3008)
Checking function: getUint256 (Slither line:2988)
getUint256 returns uint256 variable called ret (Slither line:3008)
Checking function: get (Slither line:2988)
get returns bytes32 variable called ret (Slither line:3008)

End LibCache.find_getter_in_contract (Slither line:3083)


Begin LibCache.find_setter_in_contract (Slither line:3119)

Expression: address(bytes20(IRegistry(_getRegistry()).infos(msg.sender))) (Slither line:3122)
Checking function: set(mapping(bytes32 => bytes32),bytes32,bytes32) returns() (Slither line:3127)
Visibility: internal
Checking function: setAddress(mapping(bytes32 => bytes32),bytes32,address) returns() (Slither line:3127)
Visibility: internal
Checking function: setUint256(mapping(bytes32 => bytes32),bytes32,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: getAddress(mapping(bytes32 => bytes32),bytes32) returns(address) (Slither line:3127)
Visibility: internal
Checking function: getUint256(mapping(bytes32 => bytes32),bytes32) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: get(mapping(bytes32 => bytes32),bytes32) returns(bytes32) (Slither line:3127)
Visibility: internal

End LibCache.find_setter_in_contract (Slither line:3345)


Begin Storage.find_getter_in_contract (Slither line:2974)

target is a Variable object
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
Checking function: _setSender (Slither line:2988)
Checking function: _resetSender (Slither line:2988)
Checking function: _getSender (Slither line:2988)
_getSender returns address variable  (Slither line:3008)
RETURN node expression: cache.getAddress(MSG_SENDER_KEY) (Slither line:3028)
Checking function: _addCubeCounter (Slither line:2988)
Checking function: _resetCubeCounter (Slither line:2988)
Checking function: _getCubeCounter (Slither line:2988)
_getCubeCounter returns uint256 variable  (Slither line:3008)
RETURN node expression: cache.getUint256(CUBE_COUNTER_KEY) (Slither line:3028)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End Storage.find_getter_in_contract (Slither line:3083)


Begin Storage.find_setter_in_contract (Slither line:3119)

Expression: address(bytes20(IRegistry(_getRegistry()).infos(msg.sender))) (Slither line:3122)
Checking function: _setSender() returns() (Slither line:3127)
Visibility: internal
Checking function: _resetSender() returns() (Slither line:3127)
Visibility: internal
Checking function: _getSender() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _addCubeCounter() returns() (Slither line:3127)
Visibility: internal
Checking function: _resetCubeCounter() returns() (Slither line:3127)
Visibility: internal
Checking function: _getCubeCounter() returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End Storage.find_setter_in_contract (Slither line:3345)


Begin Config.find_getter_in_contract (Slither line:2974)

target is a Variable object
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End Config.find_getter_in_contract (Slither line:3083)


Begin Config.find_setter_in_contract (Slither line:3119)

Expression: address(bytes20(IRegistry(_getRegistry()).infos(msg.sender))) (Slither line:3122)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End Config.find_setter_in_contract (Slither line:3345)


Begin IRegistry.find_getter_in_contract (Slither line:2974)

target is a Variable object
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))

End IRegistry.find_getter_in_contract (Slither line:3083)


Begin IRegistry.find_setter_in_contract (Slither line:3119)

Expression: address(bytes20(IRegistry(_getRegistry()).infos(msg.sender))) (Slither line:3122)
Checking function: infos(address) returns(bytes32) (Slither line:3127)
Visibility: external
Checking function: isValid(address) returns(bool) (Slither line:3127)
Visibility: external

End IRegistry.find_setter_in_contract (Slither line:3345)


Begin Address.find_getter_in_contract (Slither line:2974)

target is a Variable object
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
Checking function: isContract (Slither line:2988)
isContract returns bool variable  (Slither line:3008)
RETURN node expression: size > 0 (Slither line:3028)
Checking function: sendValue (Slither line:2988)
Checking function: functionCall (Slither line:2988)
functionCall returns bytes variable  (Slither line:3008)
RETURN node expression: functionCall(target,data,Address: low-level call failed) (Slither line:3028)
Checking function: functionCall (Slither line:2988)
functionCall returns bytes variable  (Slither line:3008)
RETURN node expression: functionCallWithValue(target,data,0,errorMessage) (Slither line:3028)
Checking function: functionCallWithValue (Slither line:2988)
functionCallWithValue returns bytes variable  (Slither line:3008)
RETURN node expression: functionCallWithValue(target,data,value,Address: low-level call with value failed) (Slither line:3028)
Checking function: functionCallWithValue (Slither line:2988)
functionCallWithValue returns bytes variable  (Slither line:3008)
RETURN node expression: _verifyCallResult(success,returndata,errorMessage) (Slither line:3028)
Checking function: functionStaticCall (Slither line:2988)
functionStaticCall returns bytes variable  (Slither line:3008)
RETURN node expression: functionStaticCall(target,data,Address: low-level static call failed) (Slither line:3028)
Checking function: functionStaticCall (Slither line:2988)
functionStaticCall returns bytes variable  (Slither line:3008)
RETURN node expression: _verifyCallResult(success,returndata,errorMessage) (Slither line:3028)
Checking function: _verifyCallResult (Slither line:2988)
_verifyCallResult returns bytes variable  (Slither line:3008)
RETURN node expression: returndata (Slither line:3028)

End Address.find_getter_in_contract (Slither line:3083)


Begin Address.find_setter_in_contract (Slither line:3119)

Expression: address(bytes20(IRegistry(_getRegistry()).infos(msg.sender))) (Slither line:3122)
Checking function: isContract(address) returns(bool) (Slither line:3127)
Visibility: internal
Checking function: sendValue(address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: functionCall(address,bytes) returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: functionCall(address,bytes,string) returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: functionCallWithValue(address,bytes,uint256) returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: functionCallWithValue(address,bytes,uint256,string) returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: functionStaticCall(address,bytes) returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: functionStaticCall(address,bytes,string) returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: _verifyCallResult(bool,bytes,string) returns(bytes) (Slither line:3127)
Visibility: private

End Address.find_setter_in_contract (Slither line:3345)


Begin SafeMath.find_getter_in_contract (Slither line:2974)

target is a Variable object
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
Checking function: add (Slither line:2988)
add returns uint256 variable  (Slither line:3008)
RETURN node expression: c (Slither line:3028)
Checking function: sub (Slither line:2988)
sub returns uint256 variable  (Slither line:3008)
RETURN node expression: sub(a,b,SafeMath: subtraction overflow) (Slither line:3028)
Checking function: sub (Slither line:2988)
sub returns uint256 variable  (Slither line:3008)
RETURN node expression: c (Slither line:3028)
Checking function: mul (Slither line:2988)
mul returns uint256 variable  (Slither line:3008)
RETURN node expression: 0 (Slither line:3028)
RETURN node expression: c (Slither line:3028)
Checking function: div (Slither line:2988)
div returns uint256 variable  (Slither line:3008)
RETURN node expression: div(a,b,SafeMath: division by zero) (Slither line:3028)
Checking function: div (Slither line:2988)
div returns uint256 variable  (Slither line:3008)
RETURN node expression: c (Slither line:3028)
Checking function: mod (Slither line:2988)
mod returns uint256 variable  (Slither line:3008)
RETURN node expression: mod(a,b,SafeMath: modulo by zero) (Slither line:3028)
Checking function: mod (Slither line:2988)
mod returns uint256 variable  (Slither line:3008)
RETURN node expression: a % b (Slither line:3028)

End SafeMath.find_getter_in_contract (Slither line:3083)


Begin SafeMath.find_setter_in_contract (Slither line:3119)

Expression: address(bytes20(IRegistry(_getRegistry()).infos(msg.sender))) (Slither line:3122)
Checking function: add(uint256,uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: sub(uint256,uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: sub(uint256,uint256,string) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: mul(uint256,uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: div(uint256,uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: div(uint256,uint256,string) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: mod(uint256,uint256) returns(uint256) (Slither line:3127)
Visibility: internal
Checking function: mod(uint256,uint256,string) returns(uint256) (Slither line:3127)
Visibility: internal

End SafeMath.find_setter_in_contract (Slither line:3345)


Begin IERC20.find_getter_in_contract (Slither line:2974)

target is a Variable object
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))

End IERC20.find_getter_in_contract (Slither line:3083)


Begin IERC20.find_setter_in_contract (Slither line:3119)

Expression: address(bytes20(IRegistry(_getRegistry()).infos(msg.sender))) (Slither line:3122)
Checking function: totalSupply() returns(uint256) (Slither line:3127)
Visibility: external
Checking function: balanceOf(address) returns(uint256) (Slither line:3127)
Visibility: external
Checking function: transfer(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
Checking function: allowance(address,address) returns(uint256) (Slither line:3127)
Visibility: external
Checking function: approve(address,uint256) returns(bool) (Slither line:3127)
Visibility: external
Checking function: transferFrom(address,address,uint256) returns(bool) (Slither line:3127)
Visibility: external

End IERC20.find_setter_in_contract (Slither line:3345)


Begin SafeERC20.find_getter_in_contract (Slither line:2974)

target is a Variable object
address(bytes20(IRegistry(_getRegistry()).infos(msg.sender)))
Checking function: safeTransfer (Slither line:2988)
Checking function: safeTransferFrom (Slither line:2988)
Checking function: safeApprove (Slither line:2988)
Checking function: safeIncreaseAllowance (Slither line:2988)
Checking function: safeDecreaseAllowance (Slither line:2988)
Checking function: _callOptionalReturn (Slither line:2988)

End SafeERC20.find_getter_in_contract (Slither line:3083)


Begin SafeERC20.find_setter_in_contract (Slither line:3119)

Expression: address(bytes20(IRegistry(_getRegistry()).infos(msg.sender))) (Slither line:3122)
Checking function: safeTransfer(IERC20,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: safeTransferFrom(IERC20,address,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: safeApprove(IERC20,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: safeIncreaseAllowance(IERC20,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: safeDecreaseAllowance(IERC20,address,uint256) returns() (Slither line:3127)
Visibility: internal
Checking function: _callOptionalReturn(IERC20,bytes) returns() (Slither line:3127)
Visibility: private

End SafeERC20.find_setter_in_contract (Slither line:3345)


End Proxy.is_upgradeable_proxy (Slither line:1407)

