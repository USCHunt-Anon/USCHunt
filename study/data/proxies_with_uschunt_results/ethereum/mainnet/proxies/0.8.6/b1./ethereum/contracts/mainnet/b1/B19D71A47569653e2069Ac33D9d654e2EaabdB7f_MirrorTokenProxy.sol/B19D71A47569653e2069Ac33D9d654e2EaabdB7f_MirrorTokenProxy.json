{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "MirrorTokenProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/b1./ethereum/contracts/mainnet/b1/B19D71A47569653e2069Ac33D9d654e2EaabdB7f_MirrorTokenProxy.sol/B19D71A47569653e2069Ac33D9d654e2EaabdB7f_MirrorTokenProxy.sol#438-465)",
        "elements": [],
        "description": "MirrorTokenProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/b1./ethereum/contracts/mainnet/b1/B19D71A47569653e2069Ac33D9d654e2EaabdB7f_MirrorTokenProxy.sol/B19D71A47569653e2069Ac33D9d654e2EaabdB7f_MirrorTokenProxy.sol#438-465) may be an upgradeable proxy.\nlogic is declared in the proxy.\nMirrorTokenProxy.fallback().logic (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/b1./ethereum/contracts/mainnet/b1/B19D71A47569653e2069Ac33D9d654e2EaabdB7f_MirrorTokenProxy.sol/B19D71A47569653e2069Ac33D9d654e2EaabdB7f_MirrorTokenProxy.sol#445) gets value from a cross-contract call: IBeacon(beacon).logic()\nIBeacon appears to be a Beacon contract for the proxy\nThe address of IBeacon is stored as a state variable: BeaconStorage.beacon\nCould not find setter for beacon\nNo setter functions found to search for compatibility checks.\n",
        "id": "c886ca6cfa71cb678e6795c858f7795df09fd37eca1a506617588b4da97ff2c2",
        "features": {
          "upgradeable": "maybe",
          "impl_address_variable": "MirrorTokenProxy.fallback().logic",
          "impl_address_setter": "not found",
          "impl_address_getter": "not found",
          "impl_address_location": "MirrorTokenProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/b1./ethereum/contracts/mainnet/b1/B19D71A47569653e2069Ac33D9d654e2EaabdB7f_MirrorTokenProxy.sol/B19D71A47569653e2069Ac33D9d654e2EaabdB7f_MirrorTokenProxy.sol#438-465)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "IBeacon(beacon).logic()",
          "beacon": "IBeacon",
          "beacon_source_type": "address",
          "beacon_source_variable": "BeaconStorage.beacon",
          "beacon_source_constant": false,
          "beacon_source_setters": "none found",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": "no setters found"
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "erc20": [
              "totalSupply()",
              "balanceOf(address)",
              "allowance(address,address)",
              "name()",
              "symbol()",
              "decimals()"
            ],
            "other": [
              "changeGovernor(address)",
              "isGovernor()",
              "changeGovernor(address)",
              "isGovernor()",
              "governor()",
              "transferOwnership(address)",
              "cancelOwnershipTransfer()",
              "acceptOwnership()",
              "renounceOwnership()",
              "isOwner()",
              "isNextOwner()"
            ]
          }
        }
      }
    ]
  }
}