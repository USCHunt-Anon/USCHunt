
Begin Proxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: _beforeFallback() (Slither line:2802)
Expression called: _beforeFallback
Type of call: tuple() (Slither line:2817)
Args:

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:2802)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
0
returndatasize()()

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2817)
Args:
gas()()
implementation
0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2824)

Destination is implementation (Slither line:2828)
dest.value: implementation (Slither line:2831)
Expression: None (Slither line:2836)

Begin Proxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in Proxy._delegate (Slither line:1805)
CallExpression: _beforeFallback() (Slither line:1819)
CallExpression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:1819)
AssignmentOperation: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0) (Slither line:1811)
CallExpression: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0) (Slither line:1819)
CallExpression: revert(uint256,uint256)(0,returndatasize()()) (Slither line:1819)
CallExpression: _fallback() (Slither line:1819)
AssignmentOperation: result__delegate_asm_0 (Slither line:1811)
CallExpression: return(uint256,uint256)(0,returndatasize()()) (Slither line:1819)
CallExpression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin Proxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
Got abstract function, looking for overriding function (Slither line:2025)
Failure (Slither line:2033)
_implementation returns a variable of type address   (Slither line:2193)
Return value is LocalVariable:  (Slither line:2266)
has no expression (Slither line:2326)

End Proxy.find_delegate_from_call_exp (Slither line:2328)

_delegate contains assembly, searching for sload (Slither line:1875)

End Proxy.find_delegate_variable_from_name (Slither line:1949)


End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(0,returndatasize()()) (Slither line:2802)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
returndatasize()()

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2802)
Expression called: _fallback
Type of call: tuple() (Slither line:2817)
Args:

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin Proxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in Proxy._delegate (Slither line:1805)
CallExpression: _beforeFallback() (Slither line:1819)
CallExpression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:1819)
AssignmentOperation: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0) (Slither line:1811)
CallExpression: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0) (Slither line:1819)
CallExpression: revert(uint256,uint256)(0,returndatasize()()) (Slither line:1819)
CallExpression: _fallback() (Slither line:1819)
AssignmentOperation: result__delegate_asm_0 (Slither line:1811)
CallExpression: return(uint256,uint256)(0,returndatasize()()) (Slither line:1819)
CallExpression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin Proxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
Got abstract function, looking for overriding function (Slither line:2025)
Failure (Slither line:2033)
_implementation returns a variable of type address   (Slither line:2193)
Return value is LocalVariable:  (Slither line:2266)
has no expression (Slither line:2326)

End Proxy.find_delegate_from_call_exp (Slither line:2328)

_delegate contains assembly, searching for sload (Slither line:1875)

End Proxy.find_delegate_variable_from_name (Slither line:1949)


End Proxy.find_delegatecall_in_asm (Slither line:1637)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0 (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(0,returndatasize()()) (Slither line:2802)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
returndatasize()()

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:2802)
Expression called: calldatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
0
calldatasize()()

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2802)
Expression called: _delegate
Type of call: tuple() (Slither line:2817)
Args:
_implementation()

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 

End Proxy.is_upgradeable_proxy (Slither line:1407)


Begin IBeacon.is_proxy (Slither line:1425)


End IBeacon.is_proxy (Slither line:1428)


Begin IBeacon.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBeacon 

End IBeacon.is_upgradeable_proxy (Slither line:1407)


Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin StorageSlot.is_proxy (Slither line:1425)


End StorageSlot.is_proxy (Slither line:1428)


Begin StorageSlot.is_upgradeable_proxy (Slither line:1136)

Checking contract: StorageSlot 

End StorageSlot.is_upgradeable_proxy (Slither line:1407)


Begin ERC1967Upgrade.is_proxy (Slither line:1425)


End ERC1967Upgrade.is_proxy (Slither line:1428)


Begin ERC1967Upgrade.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC1967Upgrade 

End ERC1967Upgrade.is_upgradeable_proxy (Slither line:1407)


Begin ERC1967Proxy.is_proxy (Slither line:1425)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin ERC1967Proxy.find_delegatecall_in_asm (Slither line:1541)


End ERC1967Proxy.find_delegatecall_in_asm (Slither line:1637)


Begin ERC1967Proxy.find_delegatecall_in_asm (Slither line:1541)


End ERC1967Proxy.find_delegatecall_in_asm (Slither line:1637)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin ERC1967Proxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin ERC1967Proxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking _ROLLBACK_SLOT (Slither line:1689)
Checking _IMPLEMENTATION_SLOT (Slither line:1689)
Checking _ADMIN_SLOT (Slither line:1689)
Checking _BEACON_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in ERC1967Proxy._delegate (Slither line:1805)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin ERC1967Proxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
Return node of function ERC1967Proxy._implementation(): RETURN ERC1967Upgrade._getImplementation() (Slither line:2041)
Encountered call expression at RETURN node: ERC1967Upgrade._getImplementation() (Slither line:2053)
Encountered member access expression: ERC1967Upgrade._getImplementation (Slither line:2057)

Begin ERC1967Proxy.find_delegate_from_member_access

Expression: ERC1967Upgrade._getImplementation (Slither line:2358)
ERC1967Upgrade (Slither line:2371)
_getImplementation is a member of the contract type: ERC1967Upgrade (Slither line:2416)
Looking for _getImplementation in ERC1967Upgrade (Slither line:2523)
Found the function called _getImplementation (Slither line:2527)
Returns a variable of type address (Slither line:2532)
Found RETURN node: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:2544)
Found another MemberAccess (Slither line:2552)
Member name: value
Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT)
MemberAccess after CallExpression: StorageSlot.getAddressSlot (Slither line:2556)
Too many MemberAccesses: returning (Slither line:2560)
find_delegate_from_member_access returned None (Slither line:2565)
Found storage slot: _IMPLEMENTATION_SLOT (Slither line:2578)

End ERC1967Proxy.find_delegate_from_member_access (Slither line:2645)


End ERC1967Proxy.find_delegate_from_call_exp (Slither line:2104)


End ERC1967Proxy.find_delegate_variable_from_name (Slither line:1949)


End ERC1967Proxy.find_delegatecall_in_asm (Slither line:1637)


End ERC1967Proxy.is_proxy (Slither line:1476)


Begin ERC1967Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC1967Proxy 
Local Variable: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:1164)
ERC1967Proxy is delegating to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
Looking for setter (Slither line:1200)

Looking for setter in ERC1967Upgrade (Slither line:1238)


Begin ERC1967Upgrade.find_setter_in_contract (Slither line:3119)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3122)
Checking function: _getImplementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCallSecure(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _getAdmin() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setAdmin(address) returns() (Slither line:3127)
Visibility: private
Checking function: _changeAdmin(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _getBeacon() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setBeacon(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeBeaconToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End ERC1967Upgrade.find_setter_in_contract (Slither line:3345)


Could not find setter in ERC1967Upgrade (Slither line:1245)

Begin ERC1967Proxy.find_setter_in_contract (Slither line:3119)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3122)
Checking function: constructor(address,bytes) returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: _getImplementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCallSecure(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _getAdmin() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setAdmin(address) returns() (Slither line:3127)
Visibility: private
Checking function: _changeAdmin(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _getBeacon() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setBeacon(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeBeaconToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _fallback() returns() (Slither line:3127)
Checking function: fallback() returns() (Slither line:3127)
Checking function: receive() returns() (Slither line:3127)
Checking function: _beforeFallback() returns() (Slither line:3127)

End ERC1967Proxy.find_setter_in_contract (Slither line:3345)


Could not find implementation setter in ERC1967Proxy (Slither line:1269)
Looking for getter (Slither line:1273)


Implementation retrieved by function: _getImplementation in contract: ERC1967Upgrade (Slither line:1285)

Begin ERC1967Proxy.getter_return_is_non_constant (Slither line:2883)

Found getter function but not setter
Checking if getter calls any other function
RETURN: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:2888)
ENTRY_POINT: None (Slither line:2888)
INLINE ASM: None (Slither line:2888)
EXPRESSION: r = slot (Slither line:2888)
ENTRY_POINT: None (Slither line:2888)

End ERC1967Proxy.getter_return_is_non_constant (Slither line:2942)


End ERC1967Proxy.is_upgradeable_proxy (Slither line:1293)


Begin TransparentUpgradeableProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin TransparentUpgradeableProxy.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(0,returndatasize()()) (Slither line:2802)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
returndatasize()()

End TransparentUpgradeableProxy.find_delegatecall_in_exp_node (Slither line:2858)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin TransparentUpgradeableProxy.find_delegatecall_in_asm (Slither line:1541)


End TransparentUpgradeableProxy.find_delegatecall_in_asm (Slither line:1637)


Begin TransparentUpgradeableProxy.find_delegatecall_in_asm (Slither line:1541)


End TransparentUpgradeableProxy.find_delegatecall_in_asm (Slither line:1637)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin TransparentUpgradeableProxy.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(0,returndatasize()()) (Slither line:2802)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
returndatasize()()

End TransparentUpgradeableProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin TransparentUpgradeableProxy.find_delegatecall_in_exp_node

Found Expression Node: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:2802)
Expression called: calldatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
0
calldatasize()()

End TransparentUpgradeableProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin TransparentUpgradeableProxy.find_delegatecall_in_exp_node

Found Expression Node: _beforeFallback() (Slither line:2802)
Expression called: _beforeFallback
Type of call: tuple() (Slither line:2817)
Args:

End TransparentUpgradeableProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin TransparentUpgradeableProxy.find_delegatecall_in_exp_node

Found Expression Node: result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2817)
Args:
gas()()
implementation
0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2824)

Destination is implementation (Slither line:2828)
dest.value: implementation (Slither line:2831)
Expression: None (Slither line:2836)

Begin TransparentUpgradeableProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking _ROLLBACK_SLOT (Slither line:1689)
Checking _IMPLEMENTATION_SLOT (Slither line:1689)
Checking _ADMIN_SLOT (Slither line:1689)
Checking _BEACON_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in TransparentUpgradeableProxy._delegate (Slither line:1805)
CallExpression: revert(uint256,uint256)(0,returndatasize()()) (Slither line:1819)
CallExpression: return(uint256,uint256)(0,returndatasize()()) (Slither line:1819)
CallExpression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:1819)
CallExpression: _beforeFallback() (Slither line:1819)
AssignmentOperation: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0) (Slither line:1811)
CallExpression: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0) (Slither line:1819)
CallExpression: _fallback() (Slither line:1819)
CallExpression: require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target) (Slither line:1819)
CallExpression: super._beforeFallback() (Slither line:1819)
CallExpression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:1819)
AssignmentOperation: result__delegate_asm_0 (Slither line:1811)
AssignmentOperation: slot (Slither line:1811)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin TransparentUpgradeableProxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
Return node of function ERC1967Proxy._implementation(): RETURN ERC1967Upgrade._getImplementation() (Slither line:2041)
Encountered call expression at RETURN node: ERC1967Upgrade._getImplementation() (Slither line:2053)
Encountered member access expression: ERC1967Upgrade._getImplementation (Slither line:2057)

Begin TransparentUpgradeableProxy.find_delegate_from_member_access

Expression: ERC1967Upgrade._getImplementation (Slither line:2358)
ERC1967Upgrade (Slither line:2371)
_getImplementation is a member of the contract type: ERC1967Upgrade (Slither line:2416)
Looking for _getImplementation in ERC1967Upgrade (Slither line:2523)
Found the function called _getImplementation (Slither line:2527)
Returns a variable of type address (Slither line:2532)
Found RETURN node: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:2544)
Found another MemberAccess (Slither line:2552)
Member name: value
Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT)
MemberAccess after CallExpression: StorageSlot.getAddressSlot (Slither line:2556)
Too many MemberAccesses: returning (Slither line:2560)
find_delegate_from_member_access returned None (Slither line:2565)
Found storage slot: _IMPLEMENTATION_SLOT (Slither line:2578)

End TransparentUpgradeableProxy.find_delegate_from_member_access (Slither line:2645)


End TransparentUpgradeableProxy.find_delegate_from_call_exp (Slither line:2104)


End TransparentUpgradeableProxy.find_delegate_variable_from_name (Slither line:1949)


End TransparentUpgradeableProxy.find_delegatecall_in_exp_node (Slither line:2858)


End TransparentUpgradeableProxy.is_proxy (Slither line:1476)


Begin TransparentUpgradeableProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: TransparentUpgradeableProxy 
Local Variable: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:1164)
TransparentUpgradeableProxy is delegating to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
Looking for setter (Slither line:1200)

Looking for setter in ERC1967Upgrade (Slither line:1238)


Begin ERC1967Upgrade.find_setter_in_contract (Slither line:3119)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3122)
Checking function: _getImplementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCallSecure(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _getAdmin() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setAdmin(address) returns() (Slither line:3127)
Visibility: private
Checking function: _changeAdmin(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _getBeacon() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setBeacon(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeBeaconToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End ERC1967Upgrade.find_setter_in_contract (Slither line:3345)


Could not find setter in ERC1967Upgrade (Slither line:1245)
Looking for setter in ERC1967Proxy (Slither line:1252)


Begin ERC1967Proxy.find_setter_in_contract (Slither line:3119)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3122)
Checking function: constructor(address,bytes) returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: _getImplementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCallSecure(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _getAdmin() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setAdmin(address) returns() (Slither line:3127)
Visibility: private
Checking function: _changeAdmin(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _getBeacon() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setBeacon(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeBeaconToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _fallback() returns() (Slither line:3127)
Checking function: fallback() returns() (Slither line:3127)
Checking function: receive() returns() (Slither line:3127)
Checking function: _beforeFallback() returns() (Slither line:3127)

End ERC1967Proxy.find_setter_in_contract (Slither line:3345)


Begin TransparentUpgradeableProxy.find_setter_in_contract (Slither line:3119)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
admin_ = _getAdmin()
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
ifAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
_fallback()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
r = slot
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
_fallback()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
implementation_ = _implementation()
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
ifAdmin()
r = slot
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
_changeAdmin(newAdmin)
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
ifAdmin()
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
_fallback()
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
_setAdmin(newAdmin)
super._beforeFallback()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
r = slot
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
size > 0
returndata
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)

End TransparentUpgradeableProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: TransparentUpgradeableProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Implementation retrieved by function: _getImplementation in contract: ERC1967Upgrade (Slither line:1285)

End TransparentUpgradeableProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: TransparentUpgradeableProxy
Setter found in contract TransparentUpgradeableProxy
impl_address_from_contract_call: newImplementation
Checking external function fallback
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
Checking external function receive
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
Checking external function admin
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function implementation
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function changeAdmin
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
functions_writing_to_variable: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
functions_writing_to_variable: checking function TransparentUpgradeableProxy._setBeacon (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy.upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function TransparentUpgradeableProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy._upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function TransparentUpgradeableProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy._admin (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy._upgradeBeaconToAndCall (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function TransparentUpgradeableProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy._upgradeToAndCallSecure (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCallSecure writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function TransparentUpgradeableProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy._getImplementation (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function TransparentUpgradeableProxy._changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy.receive (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy._setImplementation (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function TransparentUpgradeableProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy._getBeacon (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy._getAdmin (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function TransparentUpgradeableProxy.upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function TransparentUpgradeableProxy._upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function TransparentUpgradeableProxy._implementation (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: checking external function upgradeToAndCall
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
has_compatibility_checks: IF node exp = success
has_compatibility_checks: skipping internal function _upgradeToAndCall
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping internal function _upgradeToAndCallSecure
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping private function _setImplementation
has_compatibility_checks: checking external function upgradeTo
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
has_compatibility_checks: IF node exp = success
has_compatibility_checks: skipping internal function _upgradeTo
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
Found public function: constructor
Found fallback
Found external function: receive
Found public function: constructor
Found external function: admin
has_time_delay: (node.type) IF
(Expression) msg.sender == _getAdmin()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_time_delay: (node.type) EXPRESSION
(Expression) revert(uint256,uint256)(0,returndatasize()())
has_time_delay: (node.type) RETURN
(Expression) StorageSlot.getAddressSlot(_ADMIN_SLOT).value
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) RETURN
(Expression) returndata
has_time_delay: (node.type) EXPRESSION
(Expression) StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) return(uint256,uint256)(0,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) EXPRESSION
(Expression) calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) _beforeFallback()
has_time_delay: (node.type) IF
(Expression) returndata.length > 0
has_time_delay: (node.type) EXPRESSION
(Expression) result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) RETURN
(Expression) ERC1967Upgrade._getImplementation()
has_time_delay: (node.type) EXPRESSION
(Expression) super._beforeFallback()
has_time_delay: (node.type) RETURN
(Expression) verifyCallResult(success,returndata,errorMessage)
has_time_delay: (node.type) IF
(Expression) data.length > 0 || forceCall
has_time_delay: (node.type) EXPRESSION
(Expression) (success,returndata) = target.delegatecall(data)
has_time_delay: (node.type) EXPRESSION
(Expression) returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata)
has_time_delay: (node.type) EXPRESSION
(Expression) switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
has_time_delay: (node.type) EXPRESSION
(Expression) Address.functionDelegateCall(newImplementation,data)
has_time_delay: (node.type) RETURN
(Expression) StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeToAndCall(newImplementation,bytes(),false)
has_time_delay: (node.type) EXPRESSION
(Expression) revert(uint256,uint256)(32 + returndata,returndata_size_verifyCallResult_asm_0)
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) IF
(Expression) switch_expr_1658_227_0__delegate_asm_0 == 0
has_time_delay: (node.type) IF
(Expression) success
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) RETURN
(Expression) functionDelegateCall(target,data,Address: low-level delegate call failed)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) r = slot
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) revert(string)(errorMessage)

Begin AssetProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin AssetProxy.find_delegatecall_in_exp_node

Found Expression Node: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:2802)
Expression called: calldatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
0
calldatasize()()

End AssetProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin AssetProxy.find_delegatecall_in_exp_node

Found Expression Node: _beforeFallback() (Slither line:2802)
Expression called: _beforeFallback
Type of call: tuple() (Slither line:2817)
Args:

End AssetProxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin AssetProxy.find_delegatecall_in_asm (Slither line:1541)


End AssetProxy.find_delegatecall_in_asm (Slither line:1637)


Begin AssetProxy.find_delegatecall_in_asm (Slither line:1541)


End AssetProxy.find_delegatecall_in_asm (Slither line:1637)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin AssetProxy.find_delegatecall_in_exp_node

Found Expression Node: result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2817)
Args:
gas()()
implementation
0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2824)

Destination is implementation (Slither line:2828)
dest.value: implementation (Slither line:2831)
Expression: None (Slither line:2836)

Begin AssetProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking _ROLLBACK_SLOT (Slither line:1689)
Checking _IMPLEMENTATION_SLOT (Slither line:1689)
Checking _ADMIN_SLOT (Slither line:1689)
Checking _BEACON_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in AssetProxy._delegate (Slither line:1805)
CallExpression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:1819)
CallExpression: _beforeFallback() (Slither line:1819)
AssignmentOperation: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0) (Slither line:1811)
CallExpression: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0) (Slither line:1819)
CallExpression: _fallback() (Slither line:1819)
CallExpression: require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target) (Slither line:1819)
CallExpression: super._beforeFallback() (Slither line:1819)
CallExpression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:1819)
AssignmentOperation: result__delegate_asm_0 (Slither line:1811)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin AssetProxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
Return node of function ERC1967Proxy._implementation(): RETURN ERC1967Upgrade._getImplementation() (Slither line:2041)
Encountered call expression at RETURN node: ERC1967Upgrade._getImplementation() (Slither line:2053)
Encountered member access expression: ERC1967Upgrade._getImplementation (Slither line:2057)

Begin AssetProxy.find_delegate_from_member_access

Expression: ERC1967Upgrade._getImplementation (Slither line:2358)
ERC1967Upgrade (Slither line:2371)
_getImplementation is a member of the contract type: ERC1967Upgrade (Slither line:2416)
Looking for _getImplementation in ERC1967Upgrade (Slither line:2523)
Found the function called _getImplementation (Slither line:2527)
Returns a variable of type address (Slither line:2532)
Found RETURN node: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:2544)
Found another MemberAccess (Slither line:2552)
Member name: value
Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT)
MemberAccess after CallExpression: StorageSlot.getAddressSlot (Slither line:2556)
Too many MemberAccesses: returning (Slither line:2560)
find_delegate_from_member_access returned None (Slither line:2565)
Found storage slot: _IMPLEMENTATION_SLOT (Slither line:2578)

End AssetProxy.find_delegate_from_member_access (Slither line:2645)


End AssetProxy.find_delegate_from_call_exp (Slither line:2104)


End AssetProxy.find_delegate_variable_from_name (Slither line:1949)


End AssetProxy.find_delegatecall_in_exp_node (Slither line:2858)


End AssetProxy.is_proxy (Slither line:1476)


Begin AssetProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: AssetProxy 
Local Variable: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:1164)
AssetProxy is delegating to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
Looking for setter (Slither line:1200)

Looking for setter in ERC1967Upgrade (Slither line:1238)


Begin ERC1967Upgrade.find_setter_in_contract (Slither line:3119)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3122)
Checking function: _getImplementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCallSecure(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _getAdmin() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setAdmin(address) returns() (Slither line:3127)
Visibility: private
Checking function: _changeAdmin(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _getBeacon() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setBeacon(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeBeaconToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End ERC1967Upgrade.find_setter_in_contract (Slither line:3345)


Could not find setter in ERC1967Upgrade (Slither line:1245)
Looking for setter in ERC1967Proxy (Slither line:1252)


Begin ERC1967Proxy.find_setter_in_contract (Slither line:3119)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3122)
Checking function: constructor(address,bytes) returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: _getImplementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCallSecure(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _getAdmin() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setAdmin(address) returns() (Slither line:3127)
Visibility: private
Checking function: _changeAdmin(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _getBeacon() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setBeacon(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeBeaconToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _fallback() returns() (Slither line:3127)
Checking function: fallback() returns() (Slither line:3127)
Checking function: receive() returns() (Slither line:3127)
Checking function: _beforeFallback() returns() (Slither line:3127)

End ERC1967Proxy.find_setter_in_contract (Slither line:3345)

Looking for setter in TransparentUpgradeableProxy (Slither line:1252)


Begin TransparentUpgradeableProxy.find_setter_in_contract (Slither line:3119)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
admin_ = _getAdmin()
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
ifAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
_fallback()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
r = slot
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
_fallback()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
implementation_ = _implementation()
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
ifAdmin()
r = slot
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
_changeAdmin(newAdmin)
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
ifAdmin()
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
_fallback()
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
_setAdmin(newAdmin)
super._beforeFallback()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
r = slot
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
size > 0
returndata
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)

End TransparentUpgradeableProxy.find_setter_in_contract (Slither line:3345)

Looking for setter in BasketManagerProxy (Slither line:1252)


Begin BasketManagerProxy.find_setter_in_contract (Slither line:3119)

Expression: newImplementation (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_fallback()
_delegate(_implementation())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
revert(uint256,uint256)(0,returndatasize()())
return(uint256,uint256)(0,returndatasize()())
admin_ = _getAdmin()
is an Assignment Operation (Slither line:3216)
newImplementation
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
implementation_ = _implementation()
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_fallback()
_delegate(_implementation())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
revert(uint256,uint256)(0,returndatasize()())
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
ifAdmin()
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
_setAdmin(newAdmin)
super._beforeFallback()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_fallback()
_delegate(_implementation())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
revert(uint256,uint256)(0,returndatasize()())
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_changeAdmin(newAdmin)
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
size > 0
_upgradeTo(newImplementation)
ERC1967Upgrade._getImplementation()
returndata
super._beforeFallback()
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3216)
newImplementation
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
Address.functionDelegateCall(newImplementation,data)
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
require(bool,string)(isContract(target),Address: delegate call to non-contract)
_beforeFallback()
_upgradeToAndCall(newImplementation,bytes(),false)
verifyCallResult(success,returndata,errorMessage)
(success,returndata) = target.delegatecall(data)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_setImplementation(newImplementation)
returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
newImplementation
Upgraded(newImplementation)
_fallback()
_delegate(_implementation())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)

End BasketManagerProxy.find_setter_in_contract (Slither line:3345)

Looking for setter in VaultProxy (Slither line:1252)


Begin VaultProxy.find_setter_in_contract (Slither line:3119)

Expression: newImplementation (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
admin_ = _getAdmin()
is an Assignment Operation (Slither line:3216)
newImplementation
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
ERC1967Upgrade._getImplementation()
super._beforeFallback()
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
implementation_ = _implementation()
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
super._beforeFallback()
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
super._beforeFallback()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_changeAdmin(newAdmin)
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
ERC1967Upgrade._getImplementation()
_setAdmin(newAdmin)
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
size > 0
returndata
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3216)
newImplementation
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
Address.functionDelegateCall(newImplementation,data)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_upgradeToAndCall(newImplementation,bytes(),false)
require(bool,string)(isContract(target),Address: delegate call to non-contract)
ifAdmin()
_setImplementation(newImplementation)
verifyCallResult(success,returndata,errorMessage)
Upgraded(newImplementation)
_delegate(_implementation())
_fallback()
(success,returndata) = target.delegatecall(data)
is an Assignment Operation (Slither line:3216)
newImplementation
revert(uint256,uint256)(0,returndatasize()())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)

End VaultProxy.find_setter_in_contract (Slither line:3345)

Looking for setter in LiquidatorProxy (Slither line:1252)


Begin LiquidatorProxy.find_setter_in_contract (Slither line:3119)

Expression: newImplementation (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
admin_ = _getAdmin()
is an Assignment Operation (Slither line:3216)
newImplementation
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
ifAdmin()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
implementation_ = _implementation()
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_beforeFallback()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_changeAdmin(newAdmin)
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
_setAdmin(newAdmin)
super._beforeFallback()
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
Address.functionDelegateCall(newImplementation,data)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
size > 0
returndata
_upgradeToAndCall(newImplementation,bytes(),false)
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_setImplementation(newImplementation)
_beforeFallback()
Upgraded(newImplementation)
_delegate(_implementation())
_fallback()
require(bool,string)(isContract(target),Address: delegate call to non-contract)
revert(uint256,uint256)(0,returndatasize()())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
verifyCallResult(success,returndata,errorMessage)
return(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)

End LiquidatorProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: LiquidatorProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Implementation retrieved by function: _getImplementation in contract: ERC1967Upgrade (Slither line:1285)

End AssetProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: AssetProxy
Setter found in contract LiquidatorProxy
Found public function: constructor
Found external function: admin
impl_address_from_contract_call: newImplementation
Checking external function admin
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function implementation
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function changeAdmin
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function fallback
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
Checking external function receive
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
functions_writing_to_variable: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
functions_writing_to_variable: checking function AssetProxy.upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function AssetProxy._upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._admin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._upgradeToAndCallSecure (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCallSecure writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function AssetProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function AssetProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._getImplementation (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy._setBeacon (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy.upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy.receive (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy._upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._setImplementation (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function AssetProxy._upgradeBeaconToAndCall (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._getBeacon (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy._admin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function AssetProxy._upgradeToAndCallSecure (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCallSecure writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._getAdmin (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function AssetProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy._getImplementation (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function AssetProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy._changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy.receive (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._setBeacon (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy._setImplementation (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function AssetProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function AssetProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy._getBeacon (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._upgradeBeaconToAndCall (proxy_features line:898)
functions_writing_to_variable: checking function AssetProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function AssetProxy._getAdmin (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: checking external function upgradeTo
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = success
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: skipping internal function _upgradeToAndCallSecure
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking external function upgradeToAndCall
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = success
has_compatibility_checks: skipping internal function _upgradeToAndCall
has_compatibility_checks: skipping private function _setImplementation
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping internal function _upgradeToAndCallSecure
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking external function upgradeTo
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = success
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping private function _setImplementation
has_compatibility_checks: checking external function upgradeToAndCall
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = success
has_compatibility_checks: skipping internal function _upgradeToAndCall
has_compatibility_checks: skipping constructor
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
has_time_delay: (node.type) EXPRESSION
(Expression) Address.functionDelegateCall(newImplementation,data)
has_time_delay: (node.type) RETURN
(Expression) StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) RETURN
(Expression) returndata
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeToAndCall(newImplementation,bytes(),false)
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) IF
(Expression) returndata.length > 0
has_time_delay: (node.type) IF
(Expression) switch_expr_1658_227_0__delegate_asm_0 == 0
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) _beforeFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_time_delay: (node.type) EXPRESSION
(Expression) revert(uint256,uint256)(0,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_time_delay: (node.type) RETURN
(Expression) StorageSlot.getAddressSlot(_ADMIN_SLOT).value
has_time_delay: (node.type) RETURN
(Expression) verifyCallResult(success,returndata,errorMessage)
has_time_delay: (node.type) EXPRESSION
(Expression) return(uint256,uint256)(0,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) (success,returndata) = target.delegatecall(data)
has_time_delay: (node.type) EXPRESSION
(Expression) returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata)
has_time_delay: (node.type) EXPRESSION
(Expression) calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
has_time_delay: (node.type) IF
(Expression) msg.sender == _getAdmin()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) RETURN
(Expression) ERC1967Upgrade._getImplementation()
has_time_delay: (node.type) EXPRESSION
(Expression) revert(uint256,uint256)(32 + returndata,returndata_size_verifyCallResult_asm_0)
has_time_delay: (node.type) EXPRESSION
(Expression) super._beforeFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
has_time_delay: (node.type) IF
(Expression) data.length > 0 || forceCall
has_time_delay: (node.type) IF
(Expression) success
has_time_delay: (node.type) EXPRESSION
(Expression) returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
has_time_delay: (node.type) RETURN
(Expression) functionDelegateCall(target,data,Address: low-level delegate call failed)
has_time_delay: (node.type) EXPRESSION
(Expression) r = slot
has_time_delay: (node.type) EXPRESSION
(Expression) revert(string)(errorMessage)

Begin BasketManagerProxy.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BasketManagerProxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target) (Slither line:2802)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2817)
Args:
msg.sender != _getAdmin()
TransparentUpgradeableProxy: admin cannot fallback to proxy target

End BasketManagerProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BasketManagerProxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2802)
Expression called: _fallback
Type of call: tuple() (Slither line:2817)
Args:

End BasketManagerProxy.find_delegatecall_in_exp_node (Slither line:2858)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin BasketManagerProxy.find_delegatecall_in_asm (Slither line:1541)


End BasketManagerProxy.find_delegatecall_in_asm (Slither line:1637)


Begin BasketManagerProxy.find_delegatecall_in_asm (Slither line:1541)


End BasketManagerProxy.find_delegatecall_in_asm (Slither line:1637)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BasketManagerProxy.find_delegatecall_in_exp_node

Found Expression Node: super._beforeFallback() (Slither line:2802)
Expression called: super._beforeFallback
Type of call: tuple() (Slither line:2817)
Args:

End BasketManagerProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BasketManagerProxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:2802)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
0
returndatasize()()

End BasketManagerProxy.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BasketManagerProxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0 (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)

End BasketManagerProxy.find_delegatecall_in_exp_node (Slither line:2858)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BasketManagerProxy.find_delegatecall_in_exp_node

Found Expression Node: _beforeFallback() (Slither line:2802)
Expression called: _beforeFallback
Type of call: tuple() (Slither line:2817)
Args:

End BasketManagerProxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin BasketManagerProxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin BasketManagerProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking _ROLLBACK_SLOT (Slither line:1689)
Checking _IMPLEMENTATION_SLOT (Slither line:1689)
Checking _ADMIN_SLOT (Slither line:1689)
Checking _BEACON_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in BasketManagerProxy._delegate (Slither line:1805)
CallExpression: require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target) (Slither line:1819)
CallExpression: _fallback() (Slither line:1819)
CallExpression: super._beforeFallback() (Slither line:1819)
CallExpression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:1819)
AssignmentOperation: result__delegate_asm_0 (Slither line:1811)
CallExpression: _beforeFallback() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin BasketManagerProxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
Return node of function ERC1967Proxy._implementation(): RETURN ERC1967Upgrade._getImplementation() (Slither line:2041)
Encountered call expression at RETURN node: ERC1967Upgrade._getImplementation() (Slither line:2053)
Encountered member access expression: ERC1967Upgrade._getImplementation (Slither line:2057)

Begin BasketManagerProxy.find_delegate_from_member_access

Expression: ERC1967Upgrade._getImplementation (Slither line:2358)
ERC1967Upgrade (Slither line:2371)
_getImplementation is a member of the contract type: ERC1967Upgrade (Slither line:2416)
Looking for _getImplementation in ERC1967Upgrade (Slither line:2523)
Found the function called _getImplementation (Slither line:2527)
Returns a variable of type address (Slither line:2532)
Found RETURN node: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:2544)
Found another MemberAccess (Slither line:2552)
Member name: value
Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT)
MemberAccess after CallExpression: StorageSlot.getAddressSlot (Slither line:2556)
Too many MemberAccesses: returning (Slither line:2560)
find_delegate_from_member_access returned None (Slither line:2565)
Found storage slot: _IMPLEMENTATION_SLOT (Slither line:2578)

End BasketManagerProxy.find_delegate_from_member_access (Slither line:2645)


End BasketManagerProxy.find_delegate_from_call_exp (Slither line:2104)


End BasketManagerProxy.find_delegate_variable_from_name (Slither line:1949)


End BasketManagerProxy.find_delegatecall_in_asm (Slither line:1637)


End BasketManagerProxy.is_proxy (Slither line:1476)


Begin BasketManagerProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: BasketManagerProxy 
Local Variable: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:1164)
BasketManagerProxy is delegating to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
Looking for setter (Slither line:1200)

Looking for setter in ERC1967Upgrade (Slither line:1238)


Begin ERC1967Upgrade.find_setter_in_contract (Slither line:3119)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3122)
Checking function: _getImplementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCallSecure(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _getAdmin() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setAdmin(address) returns() (Slither line:3127)
Visibility: private
Checking function: _changeAdmin(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _getBeacon() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setBeacon(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeBeaconToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End ERC1967Upgrade.find_setter_in_contract (Slither line:3345)


Could not find setter in ERC1967Upgrade (Slither line:1245)
Looking for setter in ERC1967Proxy (Slither line:1252)


Begin ERC1967Proxy.find_setter_in_contract (Slither line:3119)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3122)
Checking function: constructor(address,bytes) returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: _getImplementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCallSecure(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _getAdmin() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setAdmin(address) returns() (Slither line:3127)
Visibility: private
Checking function: _changeAdmin(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _getBeacon() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setBeacon(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeBeaconToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _fallback() returns() (Slither line:3127)
Checking function: fallback() returns() (Slither line:3127)
Checking function: receive() returns() (Slither line:3127)
Checking function: _beforeFallback() returns() (Slither line:3127)

End ERC1967Proxy.find_setter_in_contract (Slither line:3345)

Looking for setter in TransparentUpgradeableProxy (Slither line:1252)


Begin TransparentUpgradeableProxy.find_setter_in_contract (Slither line:3119)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
admin_ = _getAdmin()
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
ifAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
_fallback()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
r = slot
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
_fallback()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
implementation_ = _implementation()
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
ifAdmin()
r = slot
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
_changeAdmin(newAdmin)
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
ifAdmin()
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
_fallback()
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
_setAdmin(newAdmin)
super._beforeFallback()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
r = slot
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
size > 0
returndata
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)

End TransparentUpgradeableProxy.find_setter_in_contract (Slither line:3345)

Looking for setter in AssetProxy (Slither line:1252)


Begin AssetProxy.find_setter_in_contract (Slither line:3119)

Expression: newImplementation (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
admin_ = _getAdmin()
is an Assignment Operation (Slither line:3216)
newImplementation
_beforeFallback()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
implementation_ = _implementation()
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
_changeAdmin(newAdmin)
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
_setAdmin(newAdmin)
super._beforeFallback()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
size > 0
returndata
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
_upgradeTo(newImplementation)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
require(bool,string)(isContract(target),Address: delegate call to non-contract)
verifyCallResult(success,returndata,errorMessage)
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
Address.functionDelegateCall(newImplementation,data)
(success,returndata) = target.delegatecall(data)
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_upgradeToAndCall(newImplementation,bytes(),false)
returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_setImplementation(newImplementation)
Upgraded(newImplementation)
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(32 + returndata,returndata_size_verifyCallResult_asm_0)
revert(uint256,uint256)(0,returndatasize()())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
functionDelegateCall(target,data,Address: low-level delegate call failed)
return(uint256,uint256)(0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)

End AssetProxy.find_setter_in_contract (Slither line:3345)

Looking for setter in VaultProxy (Slither line:1252)


Begin VaultProxy.find_setter_in_contract (Slither line:3119)

Expression: newImplementation (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
admin_ = _getAdmin()
is an Assignment Operation (Slither line:3216)
newImplementation
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
ERC1967Upgrade._getImplementation()
super._beforeFallback()
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
implementation_ = _implementation()
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
super._beforeFallback()
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
super._beforeFallback()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_changeAdmin(newAdmin)
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
ERC1967Upgrade._getImplementation()
_setAdmin(newAdmin)
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
size > 0
returndata
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3216)
newImplementation
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
Address.functionDelegateCall(newImplementation,data)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_upgradeToAndCall(newImplementation,bytes(),false)
require(bool,string)(isContract(target),Address: delegate call to non-contract)
ifAdmin()
_setImplementation(newImplementation)
verifyCallResult(success,returndata,errorMessage)
Upgraded(newImplementation)
_delegate(_implementation())
_fallback()
(success,returndata) = target.delegatecall(data)
is an Assignment Operation (Slither line:3216)
newImplementation
revert(uint256,uint256)(0,returndatasize()())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)

End VaultProxy.find_setter_in_contract (Slither line:3345)

Looking for setter in LiquidatorProxy (Slither line:1252)


Begin LiquidatorProxy.find_setter_in_contract (Slither line:3119)

Expression: newImplementation (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
admin_ = _getAdmin()
is an Assignment Operation (Slither line:3216)
newImplementation
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
ifAdmin()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
implementation_ = _implementation()
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_beforeFallback()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_changeAdmin(newAdmin)
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
_setAdmin(newAdmin)
super._beforeFallback()
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
Address.functionDelegateCall(newImplementation,data)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
size > 0
returndata
_upgradeToAndCall(newImplementation,bytes(),false)
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_setImplementation(newImplementation)
_beforeFallback()
Upgraded(newImplementation)
_delegate(_implementation())
_fallback()
require(bool,string)(isContract(target),Address: delegate call to non-contract)
revert(uint256,uint256)(0,returndatasize()())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
verifyCallResult(success,returndata,errorMessage)
return(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)

End LiquidatorProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: LiquidatorProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Implementation retrieved by function: _getImplementation in contract: ERC1967Upgrade (Slither line:1285)

End BasketManagerProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: BasketManagerProxy
Setter found in contract LiquidatorProxy
Found public function: constructor
Found external function: admin
impl_address_from_contract_call: newImplementation
Checking external function admin
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function implementation
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function changeAdmin
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function fallback
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
Checking external function receive
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
functions_writing_to_variable: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
functions_writing_to_variable: checking function LiquidatorProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._admin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._upgradeToAndCallSecure (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCallSecure writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function BasketManagerProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy.upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy._upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._getImplementation (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy._upgradeBeaconToAndCall (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.receive (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy._admin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy._upgradeToAndCallSecure (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCallSecure writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._setImplementation (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy._getImplementation (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._getBeacon (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function BasketManagerProxy._changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._getAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy.receive (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy._setImplementation (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function BasketManagerProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._setBeacon (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy._getBeacon (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy._getAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy.upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function BasketManagerProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy._upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function BasketManagerProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function BasketManagerProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._upgradeBeaconToAndCall (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BasketManagerProxy._setBeacon (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping internal function _upgradeToAndCallSecure
has_compatibility_checks: checking external function upgradeToAndCall
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = success
has_compatibility_checks: skipping internal function _upgradeToAndCall
has_compatibility_checks: skipping internal function _upgradeToAndCallSecure
has_compatibility_checks: skipping private function _setImplementation
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking external function upgradeTo
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = success
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping private function _setImplementation
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking external function upgradeToAndCall
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = success
has_compatibility_checks: skipping internal function _upgradeToAndCall
has_compatibility_checks: checking external function upgradeTo
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = success
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: skipping constructor
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
has_time_delay: (node.type) EXPRESSION
(Expression) Address.functionDelegateCall(newImplementation,data)
has_time_delay: (node.type) RETURN
(Expression) StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) RETURN
(Expression) returndata
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeToAndCall(newImplementation,bytes(),false)
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) IF
(Expression) returndata.length > 0
has_time_delay: (node.type) IF
(Expression) switch_expr_1658_227_0__delegate_asm_0 == 0
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) _beforeFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_time_delay: (node.type) EXPRESSION
(Expression) revert(uint256,uint256)(0,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_time_delay: (node.type) RETURN
(Expression) StorageSlot.getAddressSlot(_ADMIN_SLOT).value
has_time_delay: (node.type) RETURN
(Expression) verifyCallResult(success,returndata,errorMessage)
has_time_delay: (node.type) EXPRESSION
(Expression) return(uint256,uint256)(0,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) (success,returndata) = target.delegatecall(data)
has_time_delay: (node.type) EXPRESSION
(Expression) returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata)
has_time_delay: (node.type) EXPRESSION
(Expression) calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
has_time_delay: (node.type) IF
(Expression) msg.sender == _getAdmin()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) RETURN
(Expression) ERC1967Upgrade._getImplementation()
has_time_delay: (node.type) EXPRESSION
(Expression) revert(uint256,uint256)(32 + returndata,returndata_size_verifyCallResult_asm_0)
has_time_delay: (node.type) EXPRESSION
(Expression) super._beforeFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
has_time_delay: (node.type) IF
(Expression) data.length > 0 || forceCall
has_time_delay: (node.type) IF
(Expression) success
has_time_delay: (node.type) EXPRESSION
(Expression) returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
has_time_delay: (node.type) RETURN
(Expression) functionDelegateCall(target,data,Address: low-level delegate call failed)
has_time_delay: (node.type) EXPRESSION
(Expression) r = slot
has_time_delay: (node.type) EXPRESSION
(Expression) revert(string)(errorMessage)

Begin VaultProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin VaultProxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:2802)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
0
returndatasize()()

End VaultProxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin VaultProxy.find_delegatecall_in_asm (Slither line:1541)


End VaultProxy.find_delegatecall_in_asm (Slither line:1637)


Begin VaultProxy.find_delegatecall_in_asm (Slither line:1541)


End VaultProxy.find_delegatecall_in_asm (Slither line:1637)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin VaultProxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0 (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)

End VaultProxy.find_delegatecall_in_exp_node (Slither line:2858)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin VaultProxy.find_delegatecall_in_exp_node

Found Expression Node: _beforeFallback() (Slither line:2802)
Expression called: _beforeFallback
Type of call: tuple() (Slither line:2817)
Args:

End VaultProxy.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin VaultProxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin VaultProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking _ROLLBACK_SLOT (Slither line:1689)
Checking _IMPLEMENTATION_SLOT (Slither line:1689)
Checking _ADMIN_SLOT (Slither line:1689)
Checking _BEACON_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in VaultProxy._delegate (Slither line:1805)
CallExpression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:1819)
AssignmentOperation: result__delegate_asm_0 (Slither line:1811)
CallExpression: _beforeFallback() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin VaultProxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
Return node of function ERC1967Proxy._implementation(): RETURN ERC1967Upgrade._getImplementation() (Slither line:2041)
Encountered call expression at RETURN node: ERC1967Upgrade._getImplementation() (Slither line:2053)
Encountered member access expression: ERC1967Upgrade._getImplementation (Slither line:2057)

Begin VaultProxy.find_delegate_from_member_access

Expression: ERC1967Upgrade._getImplementation (Slither line:2358)
ERC1967Upgrade (Slither line:2371)
_getImplementation is a member of the contract type: ERC1967Upgrade (Slither line:2416)
Looking for _getImplementation in ERC1967Upgrade (Slither line:2523)
Found the function called _getImplementation (Slither line:2527)
Returns a variable of type address (Slither line:2532)
Found RETURN node: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:2544)
Found another MemberAccess (Slither line:2552)
Member name: value
Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT)
MemberAccess after CallExpression: StorageSlot.getAddressSlot (Slither line:2556)
Too many MemberAccesses: returning (Slither line:2560)
find_delegate_from_member_access returned None (Slither line:2565)
Found storage slot: _IMPLEMENTATION_SLOT (Slither line:2578)

End VaultProxy.find_delegate_from_member_access (Slither line:2645)


End VaultProxy.find_delegate_from_call_exp (Slither line:2104)


End VaultProxy.find_delegate_variable_from_name (Slither line:1949)


End VaultProxy.find_delegatecall_in_asm (Slither line:1637)


End VaultProxy.is_proxy (Slither line:1476)


Begin VaultProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: VaultProxy 
Local Variable: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:1164)
VaultProxy is delegating to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
Looking for setter (Slither line:1200)

Looking for setter in ERC1967Upgrade (Slither line:1238)


Begin ERC1967Upgrade.find_setter_in_contract (Slither line:3119)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3122)
Checking function: _getImplementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCallSecure(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _getAdmin() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setAdmin(address) returns() (Slither line:3127)
Visibility: private
Checking function: _changeAdmin(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _getBeacon() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setBeacon(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeBeaconToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End ERC1967Upgrade.find_setter_in_contract (Slither line:3345)


Could not find setter in ERC1967Upgrade (Slither line:1245)
Looking for setter in ERC1967Proxy (Slither line:1252)


Begin ERC1967Proxy.find_setter_in_contract (Slither line:3119)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3122)
Checking function: constructor(address,bytes) returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: _getImplementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCallSecure(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _getAdmin() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setAdmin(address) returns() (Slither line:3127)
Visibility: private
Checking function: _changeAdmin(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _getBeacon() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setBeacon(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeBeaconToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _fallback() returns() (Slither line:3127)
Checking function: fallback() returns() (Slither line:3127)
Checking function: receive() returns() (Slither line:3127)
Checking function: _beforeFallback() returns() (Slither line:3127)

End ERC1967Proxy.find_setter_in_contract (Slither line:3345)

Looking for setter in TransparentUpgradeableProxy (Slither line:1252)


Begin TransparentUpgradeableProxy.find_setter_in_contract (Slither line:3119)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
admin_ = _getAdmin()
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
ifAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
_fallback()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
r = slot
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
_fallback()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
implementation_ = _implementation()
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
ifAdmin()
r = slot
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
_changeAdmin(newAdmin)
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
ifAdmin()
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
_fallback()
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
_setAdmin(newAdmin)
super._beforeFallback()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
r = slot
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
size > 0
returndata
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)

End TransparentUpgradeableProxy.find_setter_in_contract (Slither line:3345)

Looking for setter in AssetProxy (Slither line:1252)


Begin AssetProxy.find_setter_in_contract (Slither line:3119)

Expression: newImplementation (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
admin_ = _getAdmin()
is an Assignment Operation (Slither line:3216)
newImplementation
_beforeFallback()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
implementation_ = _implementation()
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
_changeAdmin(newAdmin)
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
_setAdmin(newAdmin)
super._beforeFallback()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
size > 0
returndata
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
_upgradeTo(newImplementation)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
require(bool,string)(isContract(target),Address: delegate call to non-contract)
verifyCallResult(success,returndata,errorMessage)
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
Address.functionDelegateCall(newImplementation,data)
(success,returndata) = target.delegatecall(data)
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_upgradeToAndCall(newImplementation,bytes(),false)
returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_setImplementation(newImplementation)
Upgraded(newImplementation)
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(32 + returndata,returndata_size_verifyCallResult_asm_0)
revert(uint256,uint256)(0,returndatasize()())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
functionDelegateCall(target,data,Address: low-level delegate call failed)
return(uint256,uint256)(0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)

End AssetProxy.find_setter_in_contract (Slither line:3345)

Looking for setter in BasketManagerProxy (Slither line:1252)


Begin BasketManagerProxy.find_setter_in_contract (Slither line:3119)

Expression: newImplementation (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_fallback()
_delegate(_implementation())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
revert(uint256,uint256)(0,returndatasize()())
return(uint256,uint256)(0,returndatasize()())
admin_ = _getAdmin()
is an Assignment Operation (Slither line:3216)
newImplementation
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
implementation_ = _implementation()
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_fallback()
_delegate(_implementation())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
revert(uint256,uint256)(0,returndatasize()())
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
ifAdmin()
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
_setAdmin(newAdmin)
super._beforeFallback()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_fallback()
_delegate(_implementation())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
revert(uint256,uint256)(0,returndatasize()())
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_changeAdmin(newAdmin)
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
size > 0
_upgradeTo(newImplementation)
ERC1967Upgrade._getImplementation()
returndata
super._beforeFallback()
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3216)
newImplementation
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
Address.functionDelegateCall(newImplementation,data)
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
require(bool,string)(isContract(target),Address: delegate call to non-contract)
_beforeFallback()
_upgradeToAndCall(newImplementation,bytes(),false)
verifyCallResult(success,returndata,errorMessage)
(success,returndata) = target.delegatecall(data)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_setImplementation(newImplementation)
returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
newImplementation
Upgraded(newImplementation)
_fallback()
_delegate(_implementation())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)

End BasketManagerProxy.find_setter_in_contract (Slither line:3345)

Looking for setter in LiquidatorProxy (Slither line:1252)


Begin LiquidatorProxy.find_setter_in_contract (Slither line:3119)

Expression: newImplementation (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
admin_ = _getAdmin()
is an Assignment Operation (Slither line:3216)
newImplementation
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
ifAdmin()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
implementation_ = _implementation()
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_beforeFallback()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_changeAdmin(newAdmin)
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
_setAdmin(newAdmin)
super._beforeFallback()
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
Address.functionDelegateCall(newImplementation,data)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
size > 0
returndata
_upgradeToAndCall(newImplementation,bytes(),false)
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_setImplementation(newImplementation)
_beforeFallback()
Upgraded(newImplementation)
_delegate(_implementation())
_fallback()
require(bool,string)(isContract(target),Address: delegate call to non-contract)
revert(uint256,uint256)(0,returndatasize()())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
verifyCallResult(success,returndata,errorMessage)
return(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)

End LiquidatorProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: LiquidatorProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Implementation retrieved by function: _getImplementation in contract: ERC1967Upgrade (Slither line:1285)

End VaultProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: VaultProxy
Setter found in contract LiquidatorProxy
Found public function: constructor
Found external function: admin
impl_address_from_contract_call: newImplementation
Checking external function admin
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function implementation
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function changeAdmin
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function fallback
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
Checking external function receive
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
functions_writing_to_variable: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
functions_writing_to_variable: checking function VaultProxy._upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function VaultProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._admin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._upgradeToAndCallSecure (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCallSecure writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function VaultProxy._upgradeBeaconToAndCall (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._getImplementation (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._admin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._upgradeToAndCallSecure (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCallSecure writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy.receive (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._getImplementation (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._setImplementation (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.receive (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._getBeacon (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function VaultProxy.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._getAdmin (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._setImplementation (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function VaultProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._getBeacon (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function VaultProxy._getAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._setBeacon (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function VaultProxy._upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function VaultProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function VaultProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._setBeacon (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._upgradeBeaconToAndCall (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _upgradeToAndCall
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping internal function _upgradeToAndCallSecure
has_compatibility_checks: skipping internal function _upgradeToAndCallSecure
has_compatibility_checks: skipping private function _setImplementation
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping private function _setImplementation
has_compatibility_checks: checking external function upgradeTo
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = success
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking external function upgradeTo
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = success
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking external function upgradeToAndCall
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = success
has_compatibility_checks: skipping internal function _upgradeToAndCall
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking external function upgradeToAndCall
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = success
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) Address.functionDelegateCall(newImplementation,data)
has_time_delay: (node.type) RETURN
(Expression) StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) RETURN
(Expression) returndata
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeToAndCall(newImplementation,bytes(),false)
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) IF
(Expression) returndata.length > 0
has_time_delay: (node.type) IF
(Expression) switch_expr_1658_227_0__delegate_asm_0 == 0
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) _beforeFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_time_delay: (node.type) EXPRESSION
(Expression) revert(uint256,uint256)(0,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_time_delay: (node.type) RETURN
(Expression) StorageSlot.getAddressSlot(_ADMIN_SLOT).value
has_time_delay: (node.type) RETURN
(Expression) verifyCallResult(success,returndata,errorMessage)
has_time_delay: (node.type) EXPRESSION
(Expression) return(uint256,uint256)(0,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) (success,returndata) = target.delegatecall(data)
has_time_delay: (node.type) EXPRESSION
(Expression) returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata)
has_time_delay: (node.type) EXPRESSION
(Expression) calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
has_time_delay: (node.type) IF
(Expression) msg.sender == _getAdmin()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) RETURN
(Expression) ERC1967Upgrade._getImplementation()
has_time_delay: (node.type) EXPRESSION
(Expression) revert(uint256,uint256)(32 + returndata,returndata_size_verifyCallResult_asm_0)
has_time_delay: (node.type) EXPRESSION
(Expression) super._beforeFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
has_time_delay: (node.type) IF
(Expression) data.length > 0 || forceCall
has_time_delay: (node.type) IF
(Expression) success
has_time_delay: (node.type) EXPRESSION
(Expression) returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
has_time_delay: (node.type) RETURN
(Expression) functionDelegateCall(target,data,Address: low-level delegate call failed)
has_time_delay: (node.type) EXPRESSION
(Expression) r = slot
has_time_delay: (node.type) EXPRESSION
(Expression) revert(string)(errorMessage)

Begin LiquidatorProxy.is_proxy (Slither line:1425)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin LiquidatorProxy.find_delegatecall_in_asm (Slither line:1541)


End LiquidatorProxy.find_delegatecall_in_asm (Slither line:1637)


Begin LiquidatorProxy.find_delegatecall_in_asm (Slither line:1541)


End LiquidatorProxy.find_delegatecall_in_asm (Slither line:1637)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin LiquidatorProxy.find_delegatecall_in_exp_node

Found Expression Node: _beforeFallback() (Slither line:2802)
Expression called: _beforeFallback
Type of call: tuple() (Slither line:2817)
Args:

End LiquidatorProxy.find_delegatecall_in_exp_node (Slither line:2858)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin LiquidatorProxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin LiquidatorProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking _ROLLBACK_SLOT (Slither line:1689)
Checking _IMPLEMENTATION_SLOT (Slither line:1689)
Checking _ADMIN_SLOT (Slither line:1689)
Checking _BEACON_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in LiquidatorProxy._delegate (Slither line:1805)
CallExpression: _beforeFallback() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin LiquidatorProxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
Return node of function ERC1967Proxy._implementation(): RETURN ERC1967Upgrade._getImplementation() (Slither line:2041)
Encountered call expression at RETURN node: ERC1967Upgrade._getImplementation() (Slither line:2053)
Encountered member access expression: ERC1967Upgrade._getImplementation (Slither line:2057)

Begin LiquidatorProxy.find_delegate_from_member_access

Expression: ERC1967Upgrade._getImplementation (Slither line:2358)
ERC1967Upgrade (Slither line:2371)
_getImplementation is a member of the contract type: ERC1967Upgrade (Slither line:2416)
Looking for _getImplementation in ERC1967Upgrade (Slither line:2523)
Found the function called _getImplementation (Slither line:2527)
Returns a variable of type address (Slither line:2532)
Found RETURN node: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:2544)
Found another MemberAccess (Slither line:2552)
Member name: value
Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT)
MemberAccess after CallExpression: StorageSlot.getAddressSlot (Slither line:2556)
Too many MemberAccesses: returning (Slither line:2560)
find_delegate_from_member_access returned None (Slither line:2565)
Found storage slot: _IMPLEMENTATION_SLOT (Slither line:2578)

End LiquidatorProxy.find_delegate_from_member_access (Slither line:2645)


End LiquidatorProxy.find_delegate_from_call_exp (Slither line:2104)


End LiquidatorProxy.find_delegate_variable_from_name (Slither line:1949)


End LiquidatorProxy.find_delegatecall_in_asm (Slither line:1637)


End LiquidatorProxy.is_proxy (Slither line:1476)


Begin LiquidatorProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: LiquidatorProxy 
Local Variable: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:1164)
LiquidatorProxy is delegating to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
Looking for setter (Slither line:1200)

Looking for setter in ERC1967Upgrade (Slither line:1238)


Begin ERC1967Upgrade.find_setter_in_contract (Slither line:3119)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3122)
Checking function: _getImplementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCallSecure(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _getAdmin() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setAdmin(address) returns() (Slither line:3127)
Visibility: private
Checking function: _changeAdmin(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _getBeacon() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setBeacon(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeBeaconToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End ERC1967Upgrade.find_setter_in_contract (Slither line:3345)


Could not find setter in ERC1967Upgrade (Slither line:1245)
Looking for setter in ERC1967Proxy (Slither line:1252)


Begin ERC1967Proxy.find_setter_in_contract (Slither line:3119)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3122)
Checking function: constructor(address,bytes) returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: _getImplementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _upgradeToAndCallSecure(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _getAdmin() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setAdmin(address) returns() (Slither line:3127)
Visibility: private
Checking function: _changeAdmin(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _getBeacon() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _setBeacon(address) returns() (Slither line:3127)
Visibility: private
Checking function: _upgradeBeaconToAndCall(address,bytes,bool) returns() (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _fallback() returns() (Slither line:3127)
Checking function: fallback() returns() (Slither line:3127)
Checking function: receive() returns() (Slither line:3127)
Checking function: _beforeFallback() returns() (Slither line:3127)

End ERC1967Proxy.find_setter_in_contract (Slither line:3345)

Looking for setter in TransparentUpgradeableProxy (Slither line:1252)


Begin TransparentUpgradeableProxy.find_setter_in_contract (Slither line:3119)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
admin_ = _getAdmin()
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
ifAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
_fallback()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
r = slot
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
_fallback()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
implementation_ = _implementation()
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
ifAdmin()
r = slot
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
_changeAdmin(newAdmin)
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
ifAdmin()
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
_fallback()
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
_setAdmin(newAdmin)
super._beforeFallback()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
r = slot
is an Assignment Operation (Slither line:3216)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
size > 0
returndata
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)

End TransparentUpgradeableProxy.find_setter_in_contract (Slither line:3345)

Looking for setter in AssetProxy (Slither line:1252)


Begin AssetProxy.find_setter_in_contract (Slither line:3119)

Expression: newImplementation (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
admin_ = _getAdmin()
is an Assignment Operation (Slither line:3216)
newImplementation
_beforeFallback()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
implementation_ = _implementation()
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
_changeAdmin(newAdmin)
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
_setAdmin(newAdmin)
super._beforeFallback()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_beforeFallback()
size > 0
returndata
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
_upgradeTo(newImplementation)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
require(bool,string)(isContract(target),Address: delegate call to non-contract)
verifyCallResult(success,returndata,errorMessage)
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
Address.functionDelegateCall(newImplementation,data)
(success,returndata) = target.delegatecall(data)
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_upgradeToAndCall(newImplementation,bytes(),false)
returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_setImplementation(newImplementation)
Upgraded(newImplementation)
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(32 + returndata,returndata_size_verifyCallResult_asm_0)
revert(uint256,uint256)(0,returndatasize()())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
functionDelegateCall(target,data,Address: low-level delegate call failed)
return(uint256,uint256)(0,returndatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)

End AssetProxy.find_setter_in_contract (Slither line:3345)

Looking for setter in BasketManagerProxy (Slither line:1252)


Begin BasketManagerProxy.find_setter_in_contract (Slither line:3119)

Expression: newImplementation (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_fallback()
_delegate(_implementation())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
revert(uint256,uint256)(0,returndatasize()())
return(uint256,uint256)(0,returndatasize()())
admin_ = _getAdmin()
is an Assignment Operation (Slither line:3216)
newImplementation
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
super._beforeFallback()
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
implementation_ = _implementation()
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_fallback()
_delegate(_implementation())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
revert(uint256,uint256)(0,returndatasize()())
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
ifAdmin()
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
_setAdmin(newAdmin)
super._beforeFallback()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_fallback()
_delegate(_implementation())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
revert(uint256,uint256)(0,returndatasize()())
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_changeAdmin(newAdmin)
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
size > 0
_upgradeTo(newImplementation)
ERC1967Upgrade._getImplementation()
returndata
super._beforeFallback()
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3216)
newImplementation
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
Address.functionDelegateCall(newImplementation,data)
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
require(bool,string)(isContract(target),Address: delegate call to non-contract)
_beforeFallback()
_upgradeToAndCall(newImplementation,bytes(),false)
verifyCallResult(success,returndata,errorMessage)
(success,returndata) = target.delegatecall(data)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_setImplementation(newImplementation)
returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
newImplementation
Upgraded(newImplementation)
_fallback()
_delegate(_implementation())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)

End BasketManagerProxy.find_setter_in_contract (Slither line:3345)

Looking for setter in VaultProxy (Slither line:1252)


Begin VaultProxy.find_setter_in_contract (Slither line:3119)

Expression: newImplementation (Slither line:3122)
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: constructor(address,address,bytes) returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
admin_ = _getAdmin()
is an Assignment Operation (Slither line:3216)
newImplementation
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
ERC1967Upgrade._getImplementation()
super._beforeFallback()
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
implementation_ = _implementation()
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
ERC1967Upgrade._getImplementation()
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
super._beforeFallback()
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
super._beforeFallback()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_delegate(_implementation())
_fallback()
revert(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
_changeAdmin(newAdmin)
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
is an Assignment Operation (Slither line:3216)
newImplementation
ifAdmin()
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
r = slot
is an Assignment Operation (Slither line:3216)
newImplementation
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
ERC1967Upgrade._getImplementation()
_setAdmin(newAdmin)
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
size > 0
returndata
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3216)
newImplementation
switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
is an Assignment Operation (Slither line:3216)
newImplementation
Address.functionDelegateCall(newImplementation,data)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
_beforeFallback()
_upgradeToAndCall(newImplementation,bytes(),false)
require(bool,string)(isContract(target),Address: delegate call to non-contract)
ifAdmin()
_setImplementation(newImplementation)
verifyCallResult(success,returndata,errorMessage)
Upgraded(newImplementation)
_delegate(_implementation())
_fallback()
(success,returndata) = target.delegatecall(data)
is an Assignment Operation (Slither line:3216)
newImplementation
revert(uint256,uint256)(0,returndatasize()())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata)
is an Assignment Operation (Slither line:3216)
newImplementation
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
return(uint256,uint256)(0,returndatasize()())
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3216)
Left side is a MemberAccess (Slither line:3219)

End VaultProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: VaultProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Implementation retrieved by function: _getImplementation in contract: ERC1967Upgrade (Slither line:1285)

End LiquidatorProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: LiquidatorProxy
Setter found in contract VaultProxy
Found public function: constructor
Found external function: admin
impl_address_from_contract_call: newImplementation
Checking external function admin
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function implementation
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function changeAdmin
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _getAdmin()
Checking external function fallback
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
Checking external function receive
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
functions_writing_to_variable: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
functions_writing_to_variable: checking function VaultProxy._upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function VaultProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._admin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._upgradeToAndCallSecure (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCallSecure writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function VaultProxy._upgradeBeaconToAndCall (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._getImplementation (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._admin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._upgradeToAndCallSecure (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCallSecure writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy.receive (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._getImplementation (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._setImplementation (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.receive (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._getBeacon (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function VaultProxy.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._getAdmin (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._setImplementation (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function VaultProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._beforeFallback (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._getBeacon (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function VaultProxy._getAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._setBeacon (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function VaultProxy._upgradeTo (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function VaultProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy.upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._setBeacon (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.constructor (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
functions_writing_to_variable: checking function LiquidatorProxy._upgradeBeaconToAndCall (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function LiquidatorProxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function VaultProxy.upgradeToAndCall (proxy_features line:898)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:992)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _upgradeToAndCall
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping internal function _upgradeToAndCallSecure
has_compatibility_checks: skipping internal function _upgradeToAndCallSecure
has_compatibility_checks: skipping private function _setImplementation
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping private function _setImplementation
has_compatibility_checks: checking external function upgradeTo
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = success
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking external function upgradeTo
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = success
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking external function upgradeToAndCall
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = success
has_compatibility_checks: skipping internal function _upgradeToAndCall
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking external function upgradeToAndCall
has_compatibility_checks: IF node exp = msg.sender == _getAdmin()
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
has_compatibility_checks: IF node exp = switch_expr_1658_227_0__delegate_asm_0 == 0
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: IF node can lead to revert ['revert(uint256,uint256)(0,returndatasize()())', 'return(uint256,uint256)(0,returndatasize()())']
has_compatibility_checks: ConditionalExpression if switch_expr_1658_227_0__delegate_asm_0 == 0 then revert(uint256,uint256)(0,returndatasize()()) else return(uint256,uint256)(0,returndatasize()())
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = success
require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_compatibility_checks: condition msg.sender != _getAdmin()
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
has_time_delay: (node.type) EXPRESSION
(Expression) returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) RETURN
(Expression) returndata
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) IF
(Expression) msg.sender == _getAdmin()
has_time_delay: (node.type) EXPRESSION
(Expression) switch_expr_1658_227_0__delegate_asm_0 = result__delegate_asm_0
has_time_delay: (node.type) EXPRESSION
(Expression) Address.functionDelegateCall(newImplementation,data)
has_time_delay: (node.type) RETURN
(Expression) StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
has_time_delay: (node.type) EXPRESSION
(Expression) _beforeFallback()
has_time_delay: (node.type) IF
(Expression) returndata.length > 0
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeToAndCall(newImplementation,bytes(),false)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) IF
(Expression) switch_expr_1658_227_0__delegate_asm_0 == 0
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) RETURN
(Expression) verifyCallResult(success,returndata,errorMessage)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) (success,returndata) = target.delegatecall(data)
has_time_delay: (node.type) EXPRESSION
(Expression) revert(uint256,uint256)(0,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_time_delay: (node.type) EXPRESSION
(Expression) returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata)
has_time_delay: (node.type) RETURN
(Expression) StorageSlot.getAddressSlot(_ADMIN_SLOT).value
has_time_delay: (node.type) EXPRESSION
(Expression) return(uint256,uint256)(0,returndatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) revert(uint256,uint256)(32 + returndata,returndata_size_verifyCallResult_asm_0)
has_time_delay: (node.type) EXPRESSION
(Expression) result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
has_time_delay: (node.type) IF
(Expression) success
has_time_delay: (node.type) RETURN
(Expression) functionDelegateCall(target,data,Address: low-level delegate call failed)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _getAdmin(),TransparentUpgradeableProxy: admin cannot fallback to proxy target)
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) r = slot
has_time_delay: (node.type) RETURN
(Expression) ERC1967Upgrade._getImplementation()
has_time_delay: (node.type) EXPRESSION
(Expression) revert(string)(errorMessage)
has_time_delay: (node.type) EXPRESSION
(Expression) super._beforeFallback()
has_time_delay: (node.type) IF
(Expression) data.length > 0 || forceCall
