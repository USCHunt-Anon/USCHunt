{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#18-88)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#18-88) is a proxy, but doesn't seem upgradeable.\n",
        "id": "cb70bcec6d81585d7521ef499de1dc4cc025c9eb09a62b94cfe4ec81796afff6",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "ERC1967Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#607-627)",
        "elements": [],
        "description": "ERC1967Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#607-627) is a proxy, but doesn't seem upgradeable.\n",
        "id": "211e994b39210eb9069681dcc1b67b974889fdbc5a5da463a2722040444f5164",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "TransparentUpgradeableProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#629-732)",
        "elements": [],
        "description": "TransparentUpgradeableProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#629-732) is an upgradeable proxy.\nStorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value is declared in the proxy.\n uses Unstructured Storage\n implements EIP-1967\n uses Transparent Proxy pattern\nFound compatibility checks in all upgrade functions.\n",
        "id": "90e46efd950fee9991d379bdbe75a027984be0856882c9551038e3ab1bd6e6a6",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "ERC1967Upgrade._getImplementation().StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value",
          "impl_address_setter": "TransparentUpgradeableProxy.upgradeTo(address)",
          "impl_address_getter": "ERC1967Upgrade._getImplementation()",
          "impl_address_location": "TransparentUpgradeableProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#629-732)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "unstructured_storage": true,
          "eip_1967": true,
          "transparent": true,
          "external_functions_require_specific_sender": true,
          "fallback_receive_not_callable_by_specific_sender": true,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "TransparentUpgradeableProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,ERC1967: new implementation is not a contract)",
                "is_correct": true
              },
              "TransparentUpgradeableProxy.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,ERC1967: new implementation is not a contract)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      },
      {
        "contract": "AssetProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#742-748)",
        "elements": [],
        "description": "AssetProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#742-748) is an upgradeable proxy.\nStorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value is declared in the proxy.\n uses Unstructured Storage\n uses Transparent Proxy pattern\nFound compatibility checks in all upgrade functions.\nTo remove upgradeability, delete upgradeTo from LiquidatorProxy\n",
        "id": "b7ed37f386a8b896d0b8a8a00debaee028f5026127d39de16430e0d6daa4349e",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "ERC1967Upgrade._getImplementation().StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value",
          "impl_address_setter": "TransparentUpgradeableProxy.upgradeTo(address)",
          "impl_address_getter": "ERC1967Upgrade._getImplementation()",
          "impl_address_location": "AssetProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#742-748)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "unstructured_storage": true,
          "transparent": true,
          "external_functions_require_specific_sender": true,
          "fallback_receive_not_callable_by_specific_sender": true,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "TransparentUpgradeableProxy.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,ERC1967: new implementation is not a contract)",
                "is_correct": true
              },
              "TransparentUpgradeableProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,ERC1967: new implementation is not a contract)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove upgradeTo from LiquidatorProxy",
          "immutable_functions": {
            "other": [
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      },
      {
        "contract": "BasketManagerProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#757-763)",
        "elements": [],
        "description": "BasketManagerProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#757-763) is an upgradeable proxy.\nStorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value is declared in the proxy.\n uses Unstructured Storage\n uses Transparent Proxy pattern\nFound compatibility checks in all upgrade functions.\nTo remove upgradeability, delete upgradeTo from LiquidatorProxy\n",
        "id": "ef365a245e48815bed319482c0c51fb79088bc72c6716f894910d99ff35e4a70",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "ERC1967Upgrade._getImplementation().StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value",
          "impl_address_setter": "TransparentUpgradeableProxy.upgradeTo(address)",
          "impl_address_getter": "ERC1967Upgrade._getImplementation()",
          "impl_address_location": "BasketManagerProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#757-763)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "unstructured_storage": true,
          "transparent": true,
          "external_functions_require_specific_sender": true,
          "fallback_receive_not_callable_by_specific_sender": true,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "TransparentUpgradeableProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,ERC1967: new implementation is not a contract)",
                "is_correct": true
              },
              "TransparentUpgradeableProxy.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,ERC1967: new implementation is not a contract)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove upgradeTo from LiquidatorProxy",
          "immutable_functions": {
            "other": [
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      },
      {
        "contract": "VaultProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#772-778)",
        "elements": [],
        "description": "VaultProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#772-778) is an upgradeable proxy.\nStorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value is declared in the proxy.\n uses Unstructured Storage\n uses Transparent Proxy pattern\nFound compatibility checks in all upgrade functions.\nTo remove upgradeability, delete upgradeTo from LiquidatorProxy\n",
        "id": "4ce37d3bd9ab272429828ea2e06def04104c2cded95606134bd2f4ae4ed32cb4",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "ERC1967Upgrade._getImplementation().StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value",
          "impl_address_setter": "TransparentUpgradeableProxy.upgradeTo(address)",
          "impl_address_getter": "ERC1967Upgrade._getImplementation()",
          "impl_address_location": "VaultProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#772-778)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "unstructured_storage": true,
          "transparent": true,
          "external_functions_require_specific_sender": true,
          "fallback_receive_not_callable_by_specific_sender": true,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "TransparentUpgradeableProxy.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,ERC1967: new implementation is not a contract)",
                "is_correct": true
              },
              "TransparentUpgradeableProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,ERC1967: new implementation is not a contract)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove upgradeTo from LiquidatorProxy",
          "immutable_functions": {
            "other": [
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      },
      {
        "contract": "LiquidatorProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#787-794)",
        "elements": [],
        "description": "LiquidatorProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#787-794) is an upgradeable proxy.\nStorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value is declared in the proxy.\n uses Unstructured Storage\n uses Transparent Proxy pattern\nFound compatibility checks in all upgrade functions.\nTo remove upgradeability, delete upgradeTo from VaultProxy\n",
        "id": "852b2485a5d27e77a7d280c0236d6e0a97ab8ca4aa3df61e721f92fb65d65475",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "ERC1967Upgrade._getImplementation().StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value",
          "impl_address_setter": "TransparentUpgradeableProxy.upgradeTo(address)",
          "impl_address_getter": "ERC1967Upgrade._getImplementation()",
          "impl_address_location": "LiquidatorProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.8.6/2f./ethereum/contracts/mainnet/2f/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol/2F1423D27f9B20058d9D1843E342726fDF985Eb4_AssetProxy.sol#787-794)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "unstructured_storage": true,
          "transparent": true,
          "external_functions_require_specific_sender": true,
          "fallback_receive_not_callable_by_specific_sender": true,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "TransparentUpgradeableProxy.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,ERC1967: new implementation is not a contract)",
                "is_correct": true
              },
              "TransparentUpgradeableProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(account) > 0,ERC1967: new implementation is not a contract)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove upgradeTo from VaultProxy",
          "immutable_functions": {
            "other": [
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      }
    ]
  }
}