
Begin IStake2VaultProxy.is_proxy (Slither line:1425)


End IStake2VaultProxy.is_proxy (Slither line:1428)


Begin IStake2VaultProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: IStake2VaultProxy 

End IStake2VaultProxy.is_upgradeable_proxy (Slither line:1407)


Begin Context.is_proxy (Slither line:1425)


End Context.is_proxy (Slither line:1428)


Begin Context.is_upgradeable_proxy (Slither line:1136)

Checking contract: Context 

End Context.is_upgradeable_proxy (Slither line:1407)


Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin EnumerableSet.is_proxy (Slither line:1425)


End EnumerableSet.is_proxy (Slither line:1428)


Begin EnumerableSet.is_upgradeable_proxy (Slither line:1136)

Checking contract: EnumerableSet 

End EnumerableSet.is_upgradeable_proxy (Slither line:1407)


Begin AccessControl.is_proxy (Slither line:1425)


End AccessControl.is_proxy (Slither line:1428)


Begin AccessControl.is_upgradeable_proxy (Slither line:1136)

Checking contract: AccessControl 

End AccessControl.is_upgradeable_proxy (Slither line:1407)


Begin LibTokenStake1.is_proxy (Slither line:1425)


End LibTokenStake1.is_proxy (Slither line:1428)


Begin LibTokenStake1.is_upgradeable_proxy (Slither line:1136)

Checking contract: LibTokenStake1 

End LibTokenStake1.is_upgradeable_proxy (Slither line:1407)


Begin ProxyBase.is_proxy (Slither line:1425)


End ProxyBase.is_proxy (Slither line:1428)


Begin ProxyBase.is_upgradeable_proxy (Slither line:1136)

Checking contract: ProxyBase 

End ProxyBase.is_upgradeable_proxy (Slither line:1407)


Begin IStakeVaultProxy.is_proxy (Slither line:1425)


End IStakeVaultProxy.is_proxy (Slither line:1428)


Begin IStakeVaultProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: IStakeVaultProxy 

End IStakeVaultProxy.is_upgradeable_proxy (Slither line:1407)


Begin IStakeVaultFactory.is_proxy (Slither line:1425)


End IStakeVaultFactory.is_proxy (Slither line:1428)


Begin IStakeVaultFactory.is_upgradeable_proxy (Slither line:1136)

Checking contract: IStakeVaultFactory 

End IStakeVaultFactory.is_upgradeable_proxy (Slither line:1407)


Begin AccessRoleCommon.is_proxy (Slither line:1425)


End AccessRoleCommon.is_proxy (Slither line:1428)


Begin AccessRoleCommon.is_upgradeable_proxy (Slither line:1136)

Checking contract: AccessRoleCommon 

End AccessRoleCommon.is_upgradeable_proxy (Slither line:1407)


Begin AccessibleCommon.is_proxy (Slither line:1425)


End AccessibleCommon.is_proxy (Slither line:1428)


Begin AccessibleCommon.is_upgradeable_proxy (Slither line:1136)

Checking contract: AccessibleCommon 

End AccessibleCommon.is_upgradeable_proxy (Slither line:1407)


Begin Stake2VaultStorage.is_proxy (Slither line:1425)


End Stake2VaultStorage.is_proxy (Slither line:1428)


Begin Stake2VaultStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: Stake2VaultStorage 

End Stake2VaultStorage.is_upgradeable_proxy (Slither line:1407)


Begin StakeVaultFactory.is_proxy (Slither line:1425)


End StakeVaultFactory.is_proxy (Slither line:1428)


Begin StakeVaultFactory.is_upgradeable_proxy (Slither line:1136)

Checking contract: StakeVaultFactory 

End StakeVaultFactory.is_upgradeable_proxy (Slither line:1407)


Begin StakeVaultStorage.is_proxy (Slither line:1425)


End StakeVaultStorage.is_proxy (Slither line:1428)


Begin StakeVaultStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: StakeVaultStorage 

End StakeVaultStorage.is_upgradeable_proxy (Slither line:1407)


Begin Stake2VaultProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Stake2VaultProxy.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(0,returndatasize()()) (Slither line:2802)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
returndatasize()()

End Stake2VaultProxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin Stake2VaultProxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called '_impl'
Looking for corresponding Variable
Current function: _fallback

Begin Stake2VaultProxy.find_delegate_variable_from_name
Searching for _impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking ADMIN_ROLE (Slither line:1689)
Checking MINTER_ROLE (Slither line:1689)
Checking BURNER_ROLE (Slither line:1689)
Checking _roles (Slither line:1689)
Checking DEFAULT_ADMIN_ROLE (Slither line:1689)
Checking tos (Slither line:1689)
Checking name (Slither line:1689)
Checking cap (Slither line:1689)
Checking miningStartTime (Slither line:1689)
Checking miningEndTime (Slither line:1689)
Checking miningPerSecond (Slither line:1689)
Checking stakeType (Slither line:1689)
Checking stakeAddress (Slither line:1689)
Checking miningAmountTotal (Slither line:1689)
Checking nonMiningAmountTotal (Slither line:1689)
Checking totalMinedAmount (Slither line:1689)
Checking _lock (Slither line:1689)
Checking pauseProxy (Slither line:1689)
Checking migratedL2 (Slither line:1689)
Checking IMPLEMENTATION_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking _impl (Slither line:1703)
_impl is a Local Variable in Stake2VaultProxy._fallback (Slither line:1707)
Expression: _implementation() (Slither line:1719)

Begin Stake2VaultProxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
AssignmentOperation: impl = sload(uint256)(slot) (Slither line:2117)
CallExpression: sload(uint256) (Slither line:2123)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2140)
_implementation returns a variable of type address   called impl (Slither line:2193)
_implementation contains assembly - looking for sload (Slither line:2199)

End Stake2VaultProxy.find_delegate_from_call_exp (Slither line:2328)

Call Expression
End Stake2VaultProxy.find_delegate_variable_by_name (Slither line:1739)


End Stake2VaultProxy.find_delegatecall_in_asm (Slither line:1637)

Setting Stake2VaultProxy._delegate_variable = Stake2VaultProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End Stake2VaultProxy.is_proxy (Slither line:1476)


Begin Stake2VaultProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Stake2VaultProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

Stake2VaultProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)

Looking for setter in ProxyBase (Slither line:1204)


Begin ProxyBase.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End ProxyBase.find_setter_in_contract (Slither line:3345)


Could not find setter in ProxyBase 
Looking in Stake2VaultProxy (Slither line:1213)

Begin Stake2VaultProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: constructor(address) returns() (Slither line:3127)
Checking function: setProxyPause(bool) returns() (Slither line:3127)
Visibility: external
_roles[role].members.contains(account)
onlyOwner()
pauseProxy = _pause
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
require(bool,string)(isAdmin(msg.sender),Accessible: Caller is not an admin)
_contains(set._inner,bytes32(uint256(value)))
hasRole(ADMIN_ROLE,account)
set._indexes[value] != 0
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(impl != address(0),Stake2VaultProxy: input is zero)
sstore(uint256,uint256)(slot,newImplementation)
sstore(uint256,uint256)

End Stake2VaultProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: Stake2VaultProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin ProxyBase.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: _setImplementation (Slither line:2988)
Checking function: _implementation (Slither line:2988)
_implementation returns address variable called impl (Slither line:3008)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End ProxyBase.find_getter_in_contract (Slither line:3083)


Begin Stake2VaultProxy.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: _setImplementation (Slither line:2988)
Checking function: _implementation (Slither line:2988)
_implementation returns address variable called impl (Slither line:3008)
_implementation contains assembly (Slither line:3051)
_implementation contains assembly (Slither line:3051)
_implementation contains assembly (Slither line:3051)
_implementation contains assembly (Slither line:3051)

End Stake2VaultProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: _implementation in contract: Stake2VaultProxy (Slither line:1285)

End Stake2VaultProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: Stake2VaultProxy
Setter found in contract Stake2VaultProxy
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable IMPLEMENTATION_SLOT
impl_address_from_contract_call: getter is _implementation
getter.full_name = _implementation()
library call: EnumerableSet.length
library call: EnumerableSet.remove
library call: EnumerableSet.at
library call: Address.isContract
library call: EnumerableSet.contains
library call: EnumerableSet.add
impl_address_from_contract_call: CallExpression return(uint256,uint256)(0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is calldatasize()()
impl_address_from_contract_call: CallExpression calldatasize()()
impl_address_from_contract_call: CallExpression delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_impl,0,calldatasize()(),0,0)
impl_address_from_contract_call: arg is gas()()
impl_address_from_contract_call: CallExpression gas()()
impl_address_from_contract_call: CallExpression sload(uint256)(slot)
impl_address_from_contract_call: arg is slot
impl_address_from_contract_call: CallExpression returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression _fallback()
impl_address_from_contract_call: CallExpression _implementation()
impl_address_from_contract_call: CallExpression require(bool,string)(_impl != address(0) && ! pauseProxy,Stake2VaultProxy: impl OR proxy is false)
impl_address_from_contract_call: arg is _impl != address(0) && ! pauseProxy
impl_address_from_contract_call: arg is Stake2VaultProxy: impl OR proxy is false
impl_address_from_contract_call: CallExpression revert(uint256,uint256)(0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
Checking external function setProxyPause
Checking external function upgradeTo
Checking external function implementation
Checking external function initialize
Checking public function addAdmin
Checking public function removeAdmin
Checking external function transferAdmin
Checking public function isAdmin
Checking public function hasRole
Checking public function getRoleMemberCount
Checking public function getRoleMember
Checking public function getRoleAdmin
Checking public function grantRole
Checking public function revokeRole
Checking public function renounceRole
Checking external function setProxyPause
Checking external function upgradeTo
Checking public function implementation
Checking external function initialize
Checking external function receive
Checking external function fallback
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function Stake2VaultProxy.removeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy._grantRole (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.setProxyPause (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy._msgData (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.upgradeTo (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.getRoleMemberCount (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.constructor (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(slot,newImplementation)
functions_writing_to_variable: constructor writes newImplementation to IMPLEMENTATION_SLOT using sstore (proxy_features line:998)
functions_writing_to_variable: checking function Stake2VaultProxy.initialize (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.transferAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.grantRole (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.setProxyPause (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy._setupRole (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy._revokeRole (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.upgradeTo (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(slot,newImplementation)
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT using sstore (proxy_features line:998)
functions_writing_to_variable: checking function Stake2VaultProxy.isAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.getRoleMember (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.initialize (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.revokeRole (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy._setRoleAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy._msgSender (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.hasRole (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.receive (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.addAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy._setImplementation (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(slot,newImplementation)
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT using sstore (proxy_features line:998)
functions_writing_to_variable: checking function Stake2VaultProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = ADMIN_ROLE = keccak256(bytes)(ADMIN) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: ADMIN_ROLE = keccak256(bytes)(ADMIN) (proxy_features line:912)
functions_writing_to_variable: exp = MINTER_ROLE = keccak256(bytes)(MINTER) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: MINTER_ROLE = keccak256(bytes)(MINTER) (proxy_features line:912)
functions_writing_to_variable: exp = BURNER_ROLE = keccak256(bytes)(BURNER) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: BURNER_ROLE = keccak256(bytes)(BURNER) (proxy_features line:912)
functions_writing_to_variable: exp = DEFAULT_ADMIN_ROLE = 0x00 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: DEFAULT_ADMIN_ROLE = 0x00 (proxy_features line:912)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:924)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: checking function Stake2VaultProxy.getRoleAdmin (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function Stake2VaultProxy.renounceRole (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking external function upgradeTo
require(bool,string)(impl != address(0),Stake2VaultProxy: input is zero)
has_compatibility_checks: condition impl != address(0)
require(bool,string)(_implementation() != impl,Stake2VaultProxy: same)
has_compatibility_checks: condition _implementation() != impl
require(bool,string)(Address.isContract(newImplementation),ProxyBase: Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['onlyOwner()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
require(bool,string)(isAdmin(msg.sender),Accessible: Caller is not an admin)
has_compatibility_checks: condition isAdmin(msg.sender)
has_compatibility_checks: skipping internal function _setImplementation
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool,string)(_impl != address(0) && ! pauseProxy,Stake2VaultProxy: impl OR proxy is false)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: _impl = _implementation()
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result__fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_impl,0,calldatasize()(),0,0)
Found external function: setProxyPause
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(impl != address(0),Stake2VaultProxy: input is zero)
has_time_delay: (node.type) EXPRESSION
(Expression) sstore(uint256,uint256)(slot,newImplementation)
has_time_delay: (node.type) RETURN
(Expression) _roles[role].members.contains(account)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(_implementation() != impl,Stake2VaultProxy: same)
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(impl)
has_time_delay: (node.type) EXPRESSION
(Expression) impl = sload(uint256)(slot)
has_time_delay: (node.type) RETURN
(Expression) _contains(set._inner,bytes32(uint256(value)))
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(impl)
has_time_delay: (node.type) EXPRESSION
(Expression) onlyOwner()
has_time_delay: (node.type) RETURN
(Expression) set._indexes[value] != 0
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(Address.isContract(newImplementation),ProxyBase: Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(isAdmin(msg.sender),Accessible: Caller is not an admin)
has_time_delay: (node.type) RETURN
(Expression) hasRole(ADMIN_ROLE,account)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT

Begin StakeVaultProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin StakeVaultProxy.find_delegatecall_in_exp_node

Found Expression Node: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:2802)
Expression called: calldatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
0
calldatasize()()

End StakeVaultProxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin StakeVaultProxy.find_delegatecall_in_exp_node

Found Expression Node: result__fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_impl,0,calldatasize()(),0,0) (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2817)
Args:
gas()()
_impl
0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2824)

Destination is _impl (Slither line:2828)
dest.value: _impl (Slither line:2831)
Expression: _implementation() (Slither line:2836)

Begin StakeVaultProxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
AssignmentOperation: impl = sload(uint256)(slot) (Slither line:2117)
CallExpression: sload(uint256) (Slither line:2123)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2140)
_implementation returns a variable of type address   called impl (Slither line:2193)
_implementation contains assembly - looking for sload (Slither line:2199)

End StakeVaultProxy.find_delegate_from_call_exp (Slither line:2328)


End StakeVaultProxy.find_delegatecall_in_exp_node (Slither line:2858)

Setting StakeVaultProxy._delegate_variable = StakeVaultProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End StakeVaultProxy.is_proxy (Slither line:1476)


Begin StakeVaultProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: StakeVaultProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

StakeVaultProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)

Looking for setter in ProxyBase (Slither line:1204)


Begin ProxyBase.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End ProxyBase.find_setter_in_contract (Slither line:3345)


Could not find setter in ProxyBase 
Looking in StakeVaultProxy (Slither line:1213)

Begin StakeVaultProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: constructor(address) returns() (Slither line:3127)
Checking function: setProxyPause(bool) returns() (Slither line:3127)
Visibility: external
pauseProxy = _pause
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
hasRole(ADMIN_ROLE,account)
_contains(set._inner,bytes32(uint256(value)))
_roles[role].members.contains(account)
require(bool,string)(isAdmin(msg.sender),Accessible: Caller is not an admin)
set._indexes[value] != 0
onlyOwner()
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
sstore(uint256,uint256)(slot,newImplementation)
sstore(uint256,uint256)

End StakeVaultProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: StakeVaultProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin ProxyBase.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: _setImplementation (Slither line:2988)
Checking function: _implementation (Slither line:2988)
_implementation returns address variable called impl (Slither line:3008)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End ProxyBase.find_getter_in_contract (Slither line:3083)


Begin StakeVaultProxy.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: _setImplementation (Slither line:2988)
Checking function: _implementation (Slither line:2988)
_implementation returns address variable called impl (Slither line:3008)
_implementation contains assembly (Slither line:3051)

End StakeVaultProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: _implementation in contract: StakeVaultProxy (Slither line:1285)

End StakeVaultProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: StakeVaultProxy
Setter found in contract StakeVaultProxy
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable IMPLEMENTATION_SLOT
impl_address_from_contract_call: getter is _implementation
getter.full_name = _implementation()
library call: EnumerableSet.length
library call: EnumerableSet.remove
library call: EnumerableSet.at
library call: Address.isContract
library call: EnumerableSet.contains
library call: EnumerableSet.add
impl_address_from_contract_call: CallExpression calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is calldatasize()()
impl_address_from_contract_call: CallExpression calldatasize()()
impl_address_from_contract_call: CallExpression delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_impl,0,calldatasize()(),0,0)
impl_address_from_contract_call: arg is gas()()
impl_address_from_contract_call: CallExpression gas()()
impl_address_from_contract_call: CallExpression sload(uint256)(slot)
impl_address_from_contract_call: arg is slot
impl_address_from_contract_call: CallExpression returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression _fallback()
impl_address_from_contract_call: CallExpression _implementation()
impl_address_from_contract_call: CallExpression require(bool,string)(_impl != address(0) && ! pauseProxy,StakeVaultProxy: impl OR proxy is false)
impl_address_from_contract_call: arg is _impl != address(0) && ! pauseProxy
impl_address_from_contract_call: arg is StakeVaultProxy: impl OR proxy is false
impl_address_from_contract_call: CallExpression revert(uint256,uint256)(0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression return(uint256,uint256)(0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
Checking external function setProxyPause
Checking external function upgradeTo
Checking external function implementation
Checking external function initialize
Checking public function addAdmin
Checking public function removeAdmin
Checking external function transferAdmin
Checking public function isAdmin
Checking public function hasRole
Checking public function getRoleMemberCount
Checking public function getRoleMember
Checking public function getRoleAdmin
Checking public function grantRole
Checking public function revokeRole
Checking public function renounceRole
Checking external function setProxyPause
Checking external function upgradeTo
Checking public function implementation
Checking external function initialize
Checking external function receive
Checking external function fallback
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function StakeVaultProxy._setupRole (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy._revokeRole (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.initialize (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.getRoleMember (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.isAdmin (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.constructor (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(slot,newImplementation)
functions_writing_to_variable: constructor writes newImplementation to IMPLEMENTATION_SLOT using sstore (proxy_features line:998)
functions_writing_to_variable: checking function StakeVaultProxy.initialize (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy._setImplementation (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(slot,newImplementation)
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT using sstore (proxy_features line:998)
functions_writing_to_variable: checking function StakeVaultProxy.revokeRole (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy._setRoleAdmin (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy._msgSender (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.hasRole (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.setProxyPause (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.addAdmin (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.getRoleAdmin (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.setProxyPause (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.upgradeTo (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(slot,newImplementation)
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT using sstore (proxy_features line:998)
functions_writing_to_variable: checking function StakeVaultProxy.upgradeTo (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = ADMIN_ROLE = keccak256(bytes)(ADMIN) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: ADMIN_ROLE = keccak256(bytes)(ADMIN) (proxy_features line:912)
functions_writing_to_variable: exp = MINTER_ROLE = keccak256(bytes)(MINTER) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: MINTER_ROLE = keccak256(bytes)(MINTER) (proxy_features line:912)
functions_writing_to_variable: exp = BURNER_ROLE = keccak256(bytes)(BURNER) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: BURNER_ROLE = keccak256(bytes)(BURNER) (proxy_features line:912)
functions_writing_to_variable: exp = DEFAULT_ADMIN_ROLE = 0x00 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: DEFAULT_ADMIN_ROLE = 0x00 (proxy_features line:912)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:924)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: checking function StakeVaultProxy.renounceRole (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy._grantRole (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.removeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy._msgData (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.getRoleMemberCount (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.transferAdmin (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.receive (proxy_features line:898)
functions_writing_to_variable: checking function StakeVaultProxy.grantRole (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: checking external function upgradeTo
require(bool,string)(impl != address(0),StakeVaultProxy: input is zero)
has_compatibility_checks: condition impl != address(0)
require(bool,string)(_implementation() != impl,StakeVaultProxy: same)
has_compatibility_checks: condition _implementation() != impl
require(bool,string)(isAdmin(msg.sender),Accessible: Caller is not an admin)
has_compatibility_checks: condition isAdmin(msg.sender)
require(bool,string)(Address.isContract(newImplementation),ProxyBase: Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['onlyOwner()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result__fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_impl,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool,string)(_impl != address(0) && ! pauseProxy,StakeVaultProxy: impl OR proxy is false)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: _impl = _implementation()
Found external function: setProxyPause
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) sstore(uint256,uint256)(slot,newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(impl != address(0),StakeVaultProxy: input is zero)
has_time_delay: (node.type) RETURN
(Expression) _roles[role].members.contains(account)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(_implementation() != impl,StakeVaultProxy: same)
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(impl)
has_time_delay: (node.type) EXPRESSION
(Expression) impl = sload(uint256)(slot)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(impl)
has_time_delay: (node.type) RETURN
(Expression) _contains(set._inner,bytes32(uint256(value)))
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(isAdmin(msg.sender),Accessible: Caller is not an admin)
has_time_delay: (node.type) EXPRESSION
(Expression) onlyOwner()
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(Address.isContract(newImplementation),ProxyBase: Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) RETURN
(Expression) hasRole(ADMIN_ROLE,account)
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) RETURN
(Expression) set._indexes[value] != 0
