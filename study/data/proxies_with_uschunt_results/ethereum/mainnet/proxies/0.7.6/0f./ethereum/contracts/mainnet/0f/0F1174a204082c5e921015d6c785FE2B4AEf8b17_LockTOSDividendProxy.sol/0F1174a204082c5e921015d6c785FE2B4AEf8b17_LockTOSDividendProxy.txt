
Begin LibLockTOSDividend.is_proxy (Slither line:1425)


End LibLockTOSDividend.is_proxy (Slither line:1428)


Begin LibLockTOSDividend.is_upgradeable_proxy (Slither line:1136)

Checking contract: LibLockTOSDividend 

End LibLockTOSDividend.is_upgradeable_proxy (Slither line:1407)


Begin LibLockTOS.is_proxy (Slither line:1425)


End LibLockTOS.is_proxy (Slither line:1428)


Begin LibLockTOS.is_upgradeable_proxy (Slither line:1136)

Checking contract: LibLockTOS 

End LibLockTOS.is_upgradeable_proxy (Slither line:1407)


Begin Context.is_proxy (Slither line:1425)


End Context.is_proxy (Slither line:1428)


Begin Context.is_upgradeable_proxy (Slither line:1136)

Checking contract: Context 

End Context.is_upgradeable_proxy (Slither line:1407)


Begin EnumerableSet.is_proxy (Slither line:1425)


End EnumerableSet.is_proxy (Slither line:1428)


Begin EnumerableSet.is_upgradeable_proxy (Slither line:1136)

Checking contract: EnumerableSet 

End EnumerableSet.is_upgradeable_proxy (Slither line:1407)


Begin AccessRoleCommon.is_proxy (Slither line:1425)


End AccessRoleCommon.is_proxy (Slither line:1428)


Begin AccessRoleCommon.is_upgradeable_proxy (Slither line:1136)

Checking contract: AccessRoleCommon 

End AccessRoleCommon.is_upgradeable_proxy (Slither line:1407)


Begin AccessControl.is_proxy (Slither line:1425)


End AccessControl.is_proxy (Slither line:1428)


Begin AccessControl.is_upgradeable_proxy (Slither line:1136)

Checking contract: AccessControl 

End AccessControl.is_upgradeable_proxy (Slither line:1407)


Begin console.is_proxy (Slither line:1425)


End console.is_proxy (Slither line:1428)


Begin console.is_upgradeable_proxy (Slither line:1136)

Checking contract: console 

End console.is_upgradeable_proxy (Slither line:1407)


Begin ILockTOSDividendProxy.is_proxy (Slither line:1425)


End ILockTOSDividendProxy.is_proxy (Slither line:1428)


Begin ILockTOSDividendProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: ILockTOSDividendProxy 

End ILockTOSDividendProxy.is_upgradeable_proxy (Slither line:1407)


Begin LockTOSDividendStorage.is_proxy (Slither line:1425)


End LockTOSDividendStorage.is_proxy (Slither line:1428)


Begin LockTOSDividendStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: LockTOSDividendStorage 

End LockTOSDividendStorage.is_upgradeable_proxy (Slither line:1407)


Begin ProxyBase.is_proxy (Slither line:1425)


End ProxyBase.is_proxy (Slither line:1428)


Begin ProxyBase.is_upgradeable_proxy (Slither line:1136)

Checking contract: ProxyBase 

End ProxyBase.is_upgradeable_proxy (Slither line:1407)


Begin LockTOSStorage.is_proxy (Slither line:1425)


End LockTOSStorage.is_proxy (Slither line:1428)


Begin LockTOSStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: LockTOSStorage 

End LockTOSStorage.is_upgradeable_proxy (Slither line:1407)


Begin AccessibleCommon.is_proxy (Slither line:1425)


End AccessibleCommon.is_proxy (Slither line:1428)


Begin AccessibleCommon.is_upgradeable_proxy (Slither line:1136)

Checking contract: AccessibleCommon 

End AccessibleCommon.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin LockTOSDividendProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin LockTOSDividendProxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2802)
Expression called: _fallback
Type of call: tuple() (Slither line:2817)
Args:

End LockTOSDividendProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin LockTOSDividendProxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_100649_248_0__fallback_asm_0 = result__fallback_asm_0 (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)

End LockTOSDividendProxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin LockTOSDividendProxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(_impl != address(0) && ! pauseProxy,LockTOSProxy: impl OR proxy is false) (Slither line:2802)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2817)
Args:
_impl != address(0) && ! pauseProxy
LockTOSProxy: impl OR proxy is false

End LockTOSDividendProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin LockTOSDividendProxy.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(0,returndatasize()()) (Slither line:2802)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
returndatasize()()

End LockTOSDividendProxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin LockTOSDividendProxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called '_impl'
Looking for corresponding Variable
Current function: _fallback

Begin LockTOSDividendProxy.find_delegate_variable_from_name
Searching for _impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking pauseProxy (Slither line:1689)
Checking stakeRegistry (Slither line:1689)
Checking migratedL2 (Slither line:1689)
Checking epochUnit (Slither line:1689)
Checking lockTOS (Slither line:1689)
Checking genesis (Slither line:1689)
Checking distributions (Slither line:1689)
Checking distributedTokens (Slither line:1689)
Checking free (Slither line:1689)
Checking ADMIN_ROLE (Slither line:1689)
Checking MINTER_ROLE (Slither line:1689)
Checking BURNER_ROLE (Slither line:1689)
Checking _roles (Slither line:1689)
Checking DEFAULT_ADMIN_ROLE (Slither line:1689)
Checking IMPLEMENTATION_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking _impl (Slither line:1703)
_impl is a Local Variable in LockTOSDividendProxy._fallback (Slither line:1707)
Expression: _implementation() (Slither line:1719)

Begin LockTOSDividendProxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
AssignmentOperation: impl = sload(uint256)(slot) (Slither line:2117)
CallExpression: sload(uint256) (Slither line:2123)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2140)
_implementation returns a variable of type address   called impl (Slither line:2193)
_implementation contains assembly - looking for sload (Slither line:2199)

End LockTOSDividendProxy.find_delegate_from_call_exp (Slither line:2328)

Call Expression
End LockTOSDividendProxy.find_delegate_variable_by_name (Slither line:1739)


End LockTOSDividendProxy.find_delegatecall_in_asm (Slither line:1637)

Setting LockTOSDividendProxy._delegate_variable = LockTOSDividendProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End LockTOSDividendProxy.is_proxy (Slither line:1476)


Begin LockTOSDividendProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: LockTOSDividendProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

LockTOSDividendProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)

Looking for setter in ProxyBase (Slither line:1204)


Begin ProxyBase.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal

End ProxyBase.find_setter_in_contract (Slither line:3345)


Could not find setter in ProxyBase 
Looking in LockTOSDividendProxy (Slither line:1213)

Begin LockTOSDividendProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: constructor(address,address) returns() (Slither line:3127)
Checking function: setProxyPause(bool) returns() (Slither line:3127)
Visibility: external
hasRole(ADMIN_ROLE,account)
_contains(set._inner,bytes32(uint256(value)))
onlyOwner()
require(bool,string)(isAdmin(msg.sender),Accessible: Caller is not an admin)
pauseProxy = _pause
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_roles[role].members.contains(account)
set._indexes[value] != 0
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
onlyOwner()
require(bool,string)(isAdmin(msg.sender),Accessible: Caller is not an admin)
set._indexes[value] != 0
require(bool,string)(Address.isContract(newImplementation),ProxyBase: Cannot set a proxy implementation to a non-contract address)
size > 0
hasRole(ADMIN_ROLE,account)
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3216)
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
_contains(set._inner,bytes32(uint256(value)))
sstore(uint256,uint256)(slot,newImplementation)
sstore(uint256,uint256)

End LockTOSDividendProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: LockTOSDividendProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin ProxyBase.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: _setImplementation (Slither line:2988)
Checking function: _implementation (Slither line:2988)
_implementation returns address variable called impl (Slither line:3008)
Checking function: slitherConstructorConstantVariables (Slither line:2988)

End ProxyBase.find_getter_in_contract (Slither line:3083)


Begin LockTOSDividendProxy.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: _setImplementation (Slither line:2988)
Checking function: _implementation (Slither line:2988)
_implementation returns address variable called impl (Slither line:3008)
_implementation contains assembly (Slither line:3051)

End LockTOSDividendProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: _implementation in contract: LockTOSDividendProxy (Slither line:1285)

End LockTOSDividendProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: LockTOSDividendProxy
Setter found in contract LockTOSDividendProxy
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable IMPLEMENTATION_SLOT
impl_address_from_contract_call: getter is _implementation
getter.full_name = _implementation()
library call: EnumerableSet.remove
library call: Address.isContract
library call: EnumerableSet.at
library call: EnumerableSet.contains
library call: SafeMath.mul
library call: EnumerableSet.add
library call: SafeMath.div
library call: EnumerableSet.length
impl_address_from_contract_call: CallExpression _fallback()
impl_address_from_contract_call: CallExpression _implementation()
impl_address_from_contract_call: CallExpression require(bool,string)(_impl != address(0) && ! pauseProxy,LockTOSProxy: impl OR proxy is false)
impl_address_from_contract_call: arg is _impl != address(0) && ! pauseProxy
impl_address_from_contract_call: arg is LockTOSProxy: impl OR proxy is false
impl_address_from_contract_call: CallExpression revert(uint256,uint256)(0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression return(uint256,uint256)(0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is calldatasize()()
impl_address_from_contract_call: CallExpression calldatasize()()
impl_address_from_contract_call: CallExpression delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_impl,0,calldatasize()(),0,0)
impl_address_from_contract_call: arg is gas()()
impl_address_from_contract_call: CallExpression gas()()
impl_address_from_contract_call: CallExpression sload(uint256)(slot)
impl_address_from_contract_call: arg is slot
impl_address_from_contract_call: CallExpression returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
Checking external function setProxyPause
Checking external function upgradeTo
Checking external function implementation
Checking external function initialize
Checking public function addAdmin
Checking public function removeAdmin
Checking external function transferAdmin
Checking public function isAdmin
Checking public function hasRole
Checking public function getRoleMemberCount
Checking public function getRoleMember
Checking public function getRoleAdmin
Checking public function grantRole
Checking public function revokeRole
Checking public function renounceRole
Checking external function setProxyPause
Checking external function upgradeTo
Checking public function implementation
Checking external function initialize
Checking external function receive
Checking external function fallback
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function LockTOSDividendProxy.receive (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy._setImplementation (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(slot,newImplementation)
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT using sstore (proxy_features line:998)
functions_writing_to_variable: checking function LockTOSDividendProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.grantRole (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.transferAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.setProxyPause (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy._setupRole (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy._revokeRole (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = ADMIN_ROLE = keccak256(bytes)(ADMIN) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: ADMIN_ROLE = keccak256(bytes)(ADMIN) (proxy_features line:912)
functions_writing_to_variable: exp = MINTER_ROLE = keccak256(bytes)(MINTER) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: MINTER_ROLE = keccak256(bytes)(MINTER) (proxy_features line:912)
functions_writing_to_variable: exp = BURNER_ROLE = keccak256(bytes)(BURNER) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: BURNER_ROLE = keccak256(bytes)(BURNER) (proxy_features line:912)
functions_writing_to_variable: exp = DEFAULT_ADMIN_ROLE = 0x00 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: DEFAULT_ADMIN_ROLE = 0x00 (proxy_features line:912)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:924)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: checking function LockTOSDividendProxy.upgradeTo (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.isAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.getRoleMember (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.constructor (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(slot,newImplementation)
functions_writing_to_variable: constructor writes newImplementation to IMPLEMENTATION_SLOT using sstore (proxy_features line:998)
functions_writing_to_variable: checking function LockTOSDividendProxy.initialize (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.revokeRole (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.setProxyPause (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy._setRoleAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy._msgSender (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.hasRole (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.addAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.upgradeTo (proxy_features line:898)
get_value_assigned: sstore(uint256,uint256)(slot,newImplementation)
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT using sstore (proxy_features line:998)
functions_writing_to_variable: checking function LockTOSDividendProxy.getRoleAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.slitherConstructorVariables (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.initialize (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.renounceRole (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy._grantRole (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.removeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy._msgData (proxy_features line:898)
functions_writing_to_variable: checking function LockTOSDividendProxy.getRoleMemberCount (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking external function upgradeTo
require(bool,string)(isAdmin(msg.sender),Accessible: Caller is not an admin)
has_compatibility_checks: condition isAdmin(msg.sender)
require(bool,string)(Address.isContract(newImplementation),ProxyBase: Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['onlyOwner()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
require(bool,string)(impl != address(0),LockTOSProxy: input is zero)
has_compatibility_checks: condition impl != address(0)
require(bool,string)(_implementation() != impl,LockTOSProxy: same)
has_compatibility_checks: condition _implementation() != impl
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool,string)(_impl != address(0) && ! pauseProxy,LockTOSProxy: impl OR proxy is false)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result__fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_impl,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: _impl = _implementation()
Found external function: setProxyPause
has_time_delay: (node.type) EXPRESSION
(Expression) onlyOwner()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(isAdmin(msg.sender),Accessible: Caller is not an admin)
has_time_delay: (node.type) RETURN
(Expression) set._indexes[value] != 0
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(Address.isContract(newImplementation),ProxyBase: Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) RETURN
(Expression) hasRole(ADMIN_ROLE,account)
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) RETURN
(Expression) _contains(set._inner,bytes32(uint256(value)))
has_time_delay: (node.type) EXPRESSION
(Expression) sstore(uint256,uint256)(slot,newImplementation)
has_time_delay: (node.type) RETURN
(Expression) _roles[role].members.contains(account)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(impl != address(0),LockTOSProxy: input is zero)
has_time_delay: (node.type) EXPRESSION
(Expression) impl = sload(uint256)(slot)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(_implementation() != impl,LockTOSProxy: same)
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(impl)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(impl)
