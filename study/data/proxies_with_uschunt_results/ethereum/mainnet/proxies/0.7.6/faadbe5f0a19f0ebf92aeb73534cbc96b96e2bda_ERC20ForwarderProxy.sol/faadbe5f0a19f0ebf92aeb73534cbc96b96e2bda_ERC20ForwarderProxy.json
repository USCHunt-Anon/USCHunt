{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.6/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol#16-75)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.6/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol#16-75) is a proxy, but doesn't seem upgradeable.\n",
        "id": "cb70bcec6d81585d7521ef499de1dc4cc025c9eb09a62b94cfe4ec81796afff6",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.6/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol#143-200)",
        "elements": [],
        "description": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.6/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol#143-200) is a proxy, but doesn't seem upgradeable.\n",
        "id": "ce071903cfe6d69ec6921419754cf17b050cdc1a0c9a70ff8d5343825c9a46a2",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "AdminUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.6/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol#323-446)",
        "elements": [],
        "description": "AdminUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.6/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol#323-446) is an upgradeable proxy.\nIMPLEMENTATION_SLOT was found in a different contract.\n uses Unstructured Storage\n uses non-standard slot: 0x0b63f4b9f11e5ae2112641c92ed865d24a316fbdf51bbd102721d37df8b1f8e7\nFound compatibility checks in all upgrade functions.\n",
        "id": "0033ff4c1a991716eed766e336d9621fba62475457d7120fba50dc6016d717f8",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "UpgradeabilityProxy.IMPLEMENTATION_SLOT",
          "impl_address_setter": "AdminUpgradeabilityProxy.upgradeTo(address)",
          "impl_address_getter": "UpgradeabilityProxy._implementation()",
          "impl_address_location": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.6/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol#143-200)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x0b63f4b9f11e5ae2112641c92ed865d24a316fbdf51bbd102721d37df8b1f8e7",
          "unstructured_storage": true,
          "eip_1967": false,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "AdminUpgradeabilityProxy.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(addr) > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "AdminUpgradeabilityProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(addr) > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      },
      {
        "contract": "ERC20ForwarderProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.6/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol#576-583)",
        "elements": [],
        "description": "ERC20ForwarderProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.6/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol#576-583) is an upgradeable proxy.\nIMPLEMENTATION_SLOT was found in a different contract.\n uses Unstructured Storage\n uses non-standard slot: 0x0b63f4b9f11e5ae2112641c92ed865d24a316fbdf51bbd102721d37df8b1f8e7\nFound compatibility checks in all upgrade functions.\n",
        "id": "07dea7cc0b9d362484b608e75541973918173afc1cfd9798100f6a9b301bee59",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "UpgradeabilityProxy.IMPLEMENTATION_SLOT",
          "impl_address_setter": "AdminUpgradeabilityProxy.upgradeTo(address)",
          "impl_address_getter": "UpgradeabilityProxy._implementation()",
          "impl_address_location": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.6/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol/faadbe5f0a19f0ebf92aeb73534cbc96b96e2bda_ERC20ForwarderProxy.sol#143-200)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x0b63f4b9f11e5ae2112641c92ed865d24a316fbdf51bbd102721d37df8b1f8e7",
          "unstructured_storage": true,
          "eip_1967": false,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "AdminUpgradeabilityProxy.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(addr) > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "AdminUpgradeabilityProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(addr) > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "owner()",
              "isOwner()",
              "renounceOwnership()",
              "transferOwnership(address)",
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      }
    ]
  }
}