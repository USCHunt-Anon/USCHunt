
Begin LPoolStorage.is_proxy (Slither line:1425)


End LPoolStorage.is_proxy (Slither line:1428)


Begin LPoolStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: LPoolStorage 

End LPoolStorage.is_upgradeable_proxy (Slither line:1407)


Begin LPoolInterface.is_proxy (Slither line:1425)


End LPoolInterface.is_proxy (Slither line:1428)


Begin LPoolInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: LPoolInterface 

End LPoolInterface.is_upgradeable_proxy (Slither line:1407)


Begin DexAggregatorInterface.is_proxy (Slither line:1425)


End DexAggregatorInterface.is_proxy (Slither line:1428)


Begin DexAggregatorInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: DexAggregatorInterface 

End DexAggregatorInterface.is_upgradeable_proxy (Slither line:1407)


Begin XOLEInterface.is_proxy (Slither line:1425)


End XOLEInterface.is_proxy (Slither line:1428)


Begin XOLEInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: XOLEInterface 

End XOLEInterface.is_upgradeable_proxy (Slither line:1407)


Begin Types.is_proxy (Slither line:1425)


End Types.is_proxy (Slither line:1428)


Begin Types.is_upgradeable_proxy (Slither line:1136)

Checking contract: Types 

End Types.is_upgradeable_proxy (Slither line:1407)


Begin DelegatorInterface.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


Found LowLevelCall (Slither line:2740)


Found delegatecall in LowLevelCall (Slither line:2742)


End Contract.find_delegatecall_in_ir (Slither line:2773)


End DelegatorInterface.is_proxy (Slither line:1476)


Begin DelegatorInterface.is_upgradeable_proxy (Slither line:1136)

Checking contract: DelegatorInterface 
DelegatorInterface is delegating to implementation
Looking for setter (Slither line:1200)


Begin DelegatorInterface.find_setter_in_contract (Slither line:3119)

Checking function: setImplementation(address) returns() (Slither line:3127)
Visibility: public
Checking function: delegateTo(address,bytes) returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: delegateToImplementation(bytes) returns(bytes) (Slither line:3127)
Visibility: public
delegateTo(implementation,data)
revert(uint256,uint256)(returnData + 0x20,returndatasize()())
returnData
(success,returnData) = callee.delegatecall(data)
is an Assignment Operation (Slither line:3216)
Checking function: delegateToViewImplementation(bytes) returns(bytes) (Slither line:3127)
Visibility: public
delegateToViewImplementation contains assembly (Slither line:3153)
(success,returnData) = address(this).staticcall(abi.encodeWithSignature(delegateToImplementation(bytes),data))
is an Assignment Operation (Slither line:3216)
revert(uint256,uint256)(returnData + 0x20,returndatasize()())
abi.decode(returnData,(bytes))
Checking function: fallback() returns() (Slither line:3127)
Checking function: receive() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)

End DelegatorInterface.find_setter_in_contract (Slither line:3345)


Could not find implementation setter in DelegatorInterface (Slither line:1269)
Looking for getter (Slither line:1273)


Begin DelegatorInterface.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
Checking function: delegateTo (Slither line:2988)
delegateTo returns bytes variable  (Slither line:3008)
RETURN node expression: returnData (Slither line:3028)
Checking function: delegateToImplementation (Slither line:2988)
delegateToImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: delegateTo(implementation,data) (Slither line:3028)
Checking function: delegateToViewImplementation (Slither line:2988)
delegateToViewImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: abi.decode(returnData,(bytes)) (Slither line:3028)
Checking function: fallback (Slither line:2988)
Checking function: receive (Slither line:2988)
Checking function: _fallback (Slither line:2988)

End DelegatorInterface.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in DelegatorInterface (Slither line:1305)
Checking for implementation at slot 0 in contract LPoolStorage (Slither line:1355)
Found _notEntered at slot 0 in contract LPoolStorage (Slither line:1362)
Checking for _notEntered at slot 0 in contract LPoolInterface (Slither line:1355)
Found _notEntered at slot 0 in contract LPoolInterface (Slither line:1362)
Checking for _notEntered at slot 0 in contract Adminable (Slither line:1355)
Found admin at slot 0 in contract Adminable (Slither line:1362)
Checking for admin at slot 0 in contract XOLEDelegator (Slither line:1355)
Found implementation at slot 0 in contract XOLEDelegator (Slither line:1362)

Begin XOLEDelegator.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
Checking function: constructor (Slither line:2988)
Checking function: setPendingAdmin (Slither line:2988)
Checking function: acceptAdmin (Slither line:2988)
Checking function: delegateTo (Slither line:2988)
delegateTo returns bytes variable  (Slither line:3008)
RETURN node expression: returnData (Slither line:3028)
Checking function: delegateToImplementation (Slither line:2988)
delegateToImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: delegateTo(implementation,data) (Slither line:3028)
Checking function: delegateToViewImplementation (Slither line:2988)
delegateToViewImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: abi.decode(returnData,(bytes)) (Slither line:3028)
Checking function: fallback (Slither line:2988)
Checking function: receive (Slither line:2988)
Checking function: _fallback (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: setImplementation (Slither line:2988)

End XOLEDelegator.find_getter_in_contract (Slither line:3083)


Begin XOLEDelegator.find_setter_in_contract (Slither line:3119)

Checking function: constructor(address,DexAggregatorInterface,uint256,address,address,address) returns() (Slither line:3127)
Checking function: setImplementation(address) returns() (Slither line:3127)
Visibility: public
onlyAdmin()
require(bool,string)(msg.sender == admin,caller must be admin)
implementation = implementation_
is an Assignment Operation (Slither line:3216)

End XOLEDelegator.find_setter_in_contract (Slither line:3345)

Checking public function setImplementation
Checking public function delegateToImplementation
Checking public function delegateToViewImplementation
Checking external function fallback
Checking external function receive
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function DelegatorInterface.delegateToViewImplementation (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.setPendingAdmin (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator._fallback (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.acceptAdmin (proxy_features line:898)
functions_writing_to_variable: checking function DelegatorInterface.fallback (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.delegateToViewImplementation (proxy_features line:898)
functions_writing_to_variable: checking function DelegatorInterface.receive (proxy_features line:898)
functions_writing_to_variable: checking function DelegatorInterface.delegateToImplementation (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.setImplementation (proxy_features line:898)
functions_writing_to_variable: checking function DelegatorInterface._fallback (proxy_features line:898)
functions_writing_to_variable: checking function DelegatorInterface.setImplementation (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.fallback (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.delegateTo (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.receive (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.constructor (proxy_features line:898)
functions_writing_to_variable: exp = admin = msg.sender (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: admin = msg.sender (proxy_features line:912)
functions_writing_to_variable: exp = delegateTo(implementation_,abi.encodeWithSignature(initialize(address,address,uint256,address),_oleToken,_dexAgg,_devFundRatio,_dev)) (proxy_features line:909)
functions_writing_to_variable: exp = implementation = implementation_ (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = implementation_ (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: exp = admin = _admin (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: admin = _admin (proxy_features line:912)
functions_writing_to_variable: constructor writes implementation_ to implementation (proxy_features line:929)
functions_writing_to_variable: checking function DelegatorInterface.delegateTo (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.delegateToImplementation (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.setImplementation (proxy_features line:898)
functions_writing_to_variable: exp = oldImplementation = implementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = implementation (proxy_features line:912)
functions_writing_to_variable: exp = implementation = implementation_ (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = implementation_ (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: exp = NewImplementation(oldImplementation,implementation) (proxy_features line:909)
functions_writing_to_variable: exp = onlyAdmin() (proxy_features line:909)
functions_writing_to_variable: setImplementation writes implementation_ to implementation (proxy_features line:929)
functions_writing_to_variable: checking function XOLEDelegator.constructor (proxy_features line:898)
has_compatibility_checks: dependencies: ['implementation_', 'implementation_']
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking public function setImplementation
require(bool,string)(msg.sender == admin,caller must be admin)
has_compatibility_checks: condition msg.sender == admin
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: (success) = implementation.delegatecall(msg.data)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: IF
 dominator expression: msg.data.length > 0
can_toggle_delegatecall_on_off: successors:
 NodeType: EXPRESSION  expression: (success) = implementation.delegatecall(msg.data)
can_toggle_delegatecall_on_off: delegatecall_condition = True
 NodeType: NEW VARIABLE  expression: None
 NodeType: EXPRESSION  expression: returndatacopy(uint256,uint256,uint256)(free_mem_ptr__fallback_asm_0,0,returndatasize()())
 NodeType: EXPRESSION  expression: free_mem_ptr__fallback_asm_0 = mload(uint256)(0x40)
 NodeType: EXPRESSION  expression: revert(uint256,uint256)(free_mem_ptr__fallback_asm_0,returndatasize()())
 NodeType: NEW VARIABLE  expression: None
 NodeType: EXPRESSION  expression: return(uint256,uint256)(free_mem_ptr__fallback_asm_0,returndatasize()())
 NodeType: IF  expression: switch_expr_16809_144_0__fallback_asm_0 == 0
 NodeType: EXPRESSION  expression: switch_expr_16809_144_0__fallback_asm_0 = success
 NodeType: END_IF  expression: None
 NodeType: NEW VARIABLE  expression: None
 NodeType: END_IF  expression: None
 NodeType: INLINE ASM  expression: {'AST': {'nodeType': 'YulBlock', 'src': '16677:290:0', 'statements': [{'nodeType': 'YulVariableDeclaration', 'src': '16695:31:0', 'value': {'arguments': [{'kind': 'number', 'nodeType': 'YulLiteral', 'src': '16721:4:0', 'type': '', 'value': '0x40'}], 'functionName': {'name': 'mload', 'nodeType': 'YulIdentifier', 'src': '16715:5:0'}, 'nodeType': 'YulFunctionCall', 'src': '16715:11:0'}, 'variables': [{'name': 'free_mem_ptr', 'nodeType': 'YulTypedName', 'src': '16699:12:0', 'type': ''}]}, {'expression': {'arguments': [{'name': 'free_mem_ptr', 'nodeType': 'YulIdentifier', 'src': '16758:12:0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '16772:1:0', 'type': '', 'value': '0'}, {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '16775:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '16775:16:0'}], 'functionName': {'name': 'returndatacopy', 'nodeType': 'YulIdentifier', 'src': '16743:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '16743:49:0'}, 'nodeType': 'YulExpressionStatement', 'src': '16743:49:0'}, {'cases': [{'body': {'nodeType': 'YulBlock', 'src': '16847:40:0', 'statements': [{'expression': {'arguments': [{'name': 'free_mem_ptr', 'nodeType': 'YulIdentifier', 'src': '16855:12:0'}, {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '16869:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '16869:16:0'}], 'functionName': {'name': 'revert', 'nodeType': 'YulIdentifier', 'src': '16848:6:0'}, 'nodeType': 'YulFunctionCall', 'src': '16848:38:0'}, 'nodeType': 'YulExpressionStatement', 'src': '16848:38:0'}]}, 'nodeType': 'YulCase', 'src': '16840:47:0', 'value': {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '16845:1:0', 'type': '', 'value': '0'}}, {'body': {'nodeType': 'YulBlock', 'src': '16912:41:0', 'statements': [{'expression': {'arguments': [{'name': 'free_mem_ptr', 'nodeType': 'YulIdentifier', 'src': '16921:12:0'}, {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '16935:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '16935:16:0'}], 'functionName': {'name': 'return', 'nodeType': 'YulIdentifier', 'src': '16913:6:0'}, 'nodeType': 'YulFunctionCall', 'src': '16913:39:0'}, 'nodeType': 'YulExpressionStatement', 'src': '16913:39:0'}]}, 'nodeType': 'YulCase', 'src': '16904:49:0', 'value': 'default'}], 'expression': {'name': 'success', 'nodeType': 'YulIdentifier', 'src': '16816:7:0'}, 'nodeType': 'YulSwitch', 'src': '16809:144:0'}]}, 'evmVersion': 'istanbul', 'externalReferences': [{'declaration': 868, 'isOffset': False, 'isSlot': False, 'src': '16816:7:0', 'valueSize': 1}], 'id': 875, 'nodeType': 'InlineAssembly', 'src': '16668:299:0'}
Found public function: setImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) onlyAdmin()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == admin,caller must be admin)
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = implementation
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = implementation_
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,implementation)

Begin Adminable.is_proxy (Slither line:1425)


End Adminable.is_proxy (Slither line:1428)


Begin Adminable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Adminable 

End Adminable.is_upgradeable_proxy (Slither line:1407)


Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin SafeERC20.is_proxy (Slither line:1425)


End SafeERC20.is_proxy (Slither line:1428)


Begin SafeERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeERC20 

End SafeERC20.is_upgradeable_proxy (Slither line:1407)


Begin IERC20.is_proxy (Slither line:1425)


End IERC20.is_proxy (Slither line:1428)


Begin IERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20 

End IERC20.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin XOLEDelegator.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin XOLEDelegator.find_delegatecall_in_asm (Slither line:1541)


End XOLEDelegator.find_delegatecall_in_asm (Slither line:1637)


Begin XOLEDelegator.find_delegatecall_in_asm (Slither line:1541)


End XOLEDelegator.find_delegatecall_in_asm (Slither line:1637)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


Found LowLevelCall (Slither line:2740)


Found delegatecall in LowLevelCall (Slither line:2742)


End Contract.find_delegatecall_in_ir (Slither line:2773)


End XOLEDelegator.is_proxy (Slither line:1476)


Begin XOLEDelegator.is_upgradeable_proxy (Slither line:1136)

Checking contract: XOLEDelegator 
XOLEDelegator is delegating to implementation
Looking for setter (Slither line:1200)

Looking for setter in DelegatorInterface (Slither line:1204)


Begin DelegatorInterface.find_setter_in_contract (Slither line:3119)

Expression: implementation_ (Slither line:3122)
Checking function: setImplementation(address) returns() (Slither line:3127)
Visibility: public
Checking function: delegateTo(address,bytes) returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: delegateToImplementation(bytes) returns(bytes) (Slither line:3127)
Visibility: public
delegateTo(implementation,data)
revert(uint256,uint256)(returnData + 0x20,returndatasize()())
returnData
(success,returnData) = callee.delegatecall(data)
is an Assignment Operation (Slither line:3216)
implementation_
Checking function: delegateToViewImplementation(bytes) returns(bytes) (Slither line:3127)
Visibility: public
delegateToViewImplementation contains assembly (Slither line:3153)
(success,returnData) = address(this).staticcall(abi.encodeWithSignature(delegateToImplementation(bytes),data))
is an Assignment Operation (Slither line:3216)
implementation_
revert(uint256,uint256)(returnData + 0x20,returndatasize()())
abi.decode(returnData,(bytes))
Checking function: fallback() returns() (Slither line:3127)
Checking function: receive() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)

End DelegatorInterface.find_setter_in_contract (Slither line:3345)


Could not find setter in DelegatorInterface 
Looking in XOLEDelegator (Slither line:1213)

Begin XOLEDelegator.find_setter_in_contract (Slither line:3119)

Expression: implementation_ (Slither line:3122)
Checking function: constructor(address,DexAggregatorInterface,uint256,address,address,address) returns() (Slither line:3127)
Checking function: setImplementation(address) returns() (Slither line:3127)
Visibility: public
onlyAdmin()
require(bool,string)(msg.sender == admin,caller must be admin)
implementation = implementation_
is an Assignment Operation (Slither line:3216)
implementation_

End XOLEDelegator.find_setter_in_contract (Slither line:3345)


Implementation set by function: setImplementation in contract: XOLEDelegator (Slither line:1264)
Looking for getter (Slither line:1273)


Begin DelegatorInterface.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_
Checking function: delegateTo (Slither line:2988)
delegateTo returns bytes variable  (Slither line:3008)
RETURN node expression: returnData (Slither line:3028)
Checking function: delegateToImplementation (Slither line:2988)
delegateToImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: delegateTo(implementation,data) (Slither line:3028)
Checking function: delegateToViewImplementation (Slither line:2988)
delegateToViewImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: abi.decode(returnData,(bytes)) (Slither line:3028)
Checking function: fallback (Slither line:2988)
Checking function: receive (Slither line:2988)
Checking function: _fallback (Slither line:2988)

End DelegatorInterface.find_getter_in_contract (Slither line:3083)


Begin XOLEDelegator.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_
Checking function: constructor (Slither line:2988)
Checking function: setPendingAdmin (Slither line:2988)
Checking function: acceptAdmin (Slither line:2988)
Checking function: delegateTo (Slither line:2988)
delegateTo returns bytes variable  (Slither line:3008)
RETURN node expression: returnData (Slither line:3028)
Checking function: delegateToImplementation (Slither line:2988)
delegateToImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: delegateTo(implementation,data) (Slither line:3028)
Checking function: delegateToViewImplementation (Slither line:2988)
delegateToViewImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: abi.decode(returnData,(bytes)) (Slither line:3028)
Checking function: fallback (Slither line:2988)
Checking function: receive (Slither line:2988)
Checking function: _fallback (Slither line:2988)
Checking function: constructor (Slither line:2988)
Checking function: setImplementation (Slither line:2988)

End XOLEDelegator.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in XOLEDelegator (Slither line:1305)
or in DelegatorInterface (Slither line:1319)
Checking for implementation at slot 0 in contract LPoolStorage (Slither line:1355)
Found _notEntered at slot 0 in contract LPoolStorage (Slither line:1362)
Checking for _notEntered at slot 0 in contract LPoolInterface (Slither line:1355)
Found _notEntered at slot 0 in contract LPoolInterface (Slither line:1362)
Checking for _notEntered at slot 0 in contract DelegatorInterface (Slither line:1355)
Found implementation at slot 0 in contract DelegatorInterface (Slither line:1362)

Begin DelegatorInterface.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_
Checking function: delegateTo (Slither line:2988)
delegateTo returns bytes variable  (Slither line:3008)
RETURN node expression: returnData (Slither line:3028)
Checking function: delegateToImplementation (Slither line:2988)
delegateToImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: delegateTo(implementation,data) (Slither line:3028)
Checking function: delegateToViewImplementation (Slither line:2988)
delegateToViewImplementation returns bytes variable  (Slither line:3008)
RETURN node expression: abi.decode(returnData,(bytes)) (Slither line:3028)
Checking function: fallback (Slither line:2988)
Checking function: receive (Slither line:2988)
Checking function: _fallback (Slither line:2988)

End DelegatorInterface.find_getter_in_contract (Slither line:3083)

impl_address_from_contract_call: implementation_
impl_address_from_contract_call: StateVariable implementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression implementation.delegatecall(msg.data)
impl_address_from_contract_call: CallExpression returndatacopy(uint256,uint256,uint256)(free_mem_ptr__fallback_asm_0,0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr__fallback_asm_0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression mload(uint256)(0x40)
impl_address_from_contract_call: arg is 0x40
impl_address_from_contract_call: CallExpression revert(uint256,uint256)(free_mem_ptr__fallback_asm_0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr__fallback_asm_0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression _fallback()
impl_address_from_contract_call: CallExpression return(uint256,uint256)(free_mem_ptr__fallback_asm_0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr__fallback_asm_0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
Checking external function setPendingAdmin
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,caller must be admin)
Checking external function acceptAdmin
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == pendingAdmin,only pendingAdmin can accept admin)
Checking external function setPendingAdmin
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,caller must be admin)
Checking external function acceptAdmin
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == pendingAdmin,only pendingAdmin can accept admin)
Checking public function setImplementation
Checking public function delegateToImplementation
Checking public function delegateToViewImplementation
Checking public function setImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,caller must be admin)
Checking external function fallback
Checking external function receive
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function XOLEDelegator.delegateToViewImplementation (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.setPendingAdmin (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.delegateToImplementation (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.delegateTo (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.fallback (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator._fallback (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.setImplementation (proxy_features line:898)
functions_writing_to_variable: exp = oldImplementation = implementation (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: oldImplementation = implementation (proxy_features line:912)
functions_writing_to_variable: exp = implementation = implementation_ (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = implementation_ (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: exp = NewImplementation(oldImplementation,implementation) (proxy_features line:909)
functions_writing_to_variable: exp = onlyAdmin() (proxy_features line:909)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == admin,caller must be admin) (proxy_features line:909)
functions_writing_to_variable: setImplementation writes implementation_ to implementation (proxy_features line:929)
functions_writing_to_variable: checking function XOLEDelegator.constructor (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.receive (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.setImplementation (proxy_features line:898)
functions_writing_to_variable: checking function XOLEDelegator.constructor (proxy_features line:898)
functions_writing_to_variable: exp = admin = msg.sender (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: admin = msg.sender (proxy_features line:912)
functions_writing_to_variable: exp = delegateTo(implementation_,abi.encodeWithSignature(initialize(address,address,uint256,address),_oleToken,_dexAgg,_devFundRatio,_dev)) (proxy_features line:909)
functions_writing_to_variable: exp = implementation = implementation_ (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = implementation_ (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: exp = admin = _admin (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: admin = _admin (proxy_features line:912)
functions_writing_to_variable: constructor writes implementation_ to implementation (proxy_features line:929)
functions_writing_to_variable: checking function XOLEDelegator.acceptAdmin (proxy_features line:898)
has_compatibility_checks: dependencies: ['implementation_', 'implementation_']
has_compatibility_checks: checking public function setImplementation
require(bool,string)(msg.sender == admin,caller must be admin)
has_compatibility_checks: condition msg.sender == admin
has_compatibility_checks: skipping constructor
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: IF
 dominator expression: msg.data.length > 0
can_toggle_delegatecall_on_off: successors:
 NodeType: NEW VARIABLE  expression: None
 NodeType: END_IF  expression: None
 NodeType: INLINE ASM  expression: {'AST': {'nodeType': 'YulBlock', 'src': '16677:290:0', 'statements': [{'nodeType': 'YulVariableDeclaration', 'src': '16695:31:0', 'value': {'arguments': [{'kind': 'number', 'nodeType': 'YulLiteral', 'src': '16721:4:0', 'type': '', 'value': '0x40'}], 'functionName': {'name': 'mload', 'nodeType': 'YulIdentifier', 'src': '16715:5:0'}, 'nodeType': 'YulFunctionCall', 'src': '16715:11:0'}, 'variables': [{'name': 'free_mem_ptr', 'nodeType': 'YulTypedName', 'src': '16699:12:0', 'type': ''}]}, {'expression': {'arguments': [{'name': 'free_mem_ptr', 'nodeType': 'YulIdentifier', 'src': '16758:12:0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '16772:1:0', 'type': '', 'value': '0'}, {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '16775:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '16775:16:0'}], 'functionName': {'name': 'returndatacopy', 'nodeType': 'YulIdentifier', 'src': '16743:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '16743:49:0'}, 'nodeType': 'YulExpressionStatement', 'src': '16743:49:0'}, {'cases': [{'body': {'nodeType': 'YulBlock', 'src': '16847:40:0', 'statements': [{'expression': {'arguments': [{'name': 'free_mem_ptr', 'nodeType': 'YulIdentifier', 'src': '16855:12:0'}, {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '16869:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '16869:16:0'}], 'functionName': {'name': 'revert', 'nodeType': 'YulIdentifier', 'src': '16848:6:0'}, 'nodeType': 'YulFunctionCall', 'src': '16848:38:0'}, 'nodeType': 'YulExpressionStatement', 'src': '16848:38:0'}]}, 'nodeType': 'YulCase', 'src': '16840:47:0', 'value': {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '16845:1:0', 'type': '', 'value': '0'}}, {'body': {'nodeType': 'YulBlock', 'src': '16912:41:0', 'statements': [{'expression': {'arguments': [{'name': 'free_mem_ptr', 'nodeType': 'YulIdentifier', 'src': '16921:12:0'}, {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '16935:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '16935:16:0'}], 'functionName': {'name': 'return', 'nodeType': 'YulIdentifier', 'src': '16913:6:0'}, 'nodeType': 'YulFunctionCall', 'src': '16913:39:0'}, 'nodeType': 'YulExpressionStatement', 'src': '16913:39:0'}]}, 'nodeType': 'YulCase', 'src': '16904:49:0', 'value': 'default'}], 'expression': {'name': 'success', 'nodeType': 'YulIdentifier', 'src': '16816:7:0'}, 'nodeType': 'YulSwitch', 'src': '16809:144:0'}]}, 'evmVersion': 'istanbul', 'externalReferences': [{'declaration': 868, 'isOffset': False, 'isSlot': False, 'src': '16816:7:0', 'valueSize': 1}], 'id': 875, 'nodeType': 'InlineAssembly', 'src': '16668:299:0'}
 NodeType: END_IF  expression: None
 NodeType: EXPRESSION  expression: (success) = implementation.delegatecall(msg.data)
can_toggle_delegatecall_on_off: delegatecall_condition = True
 NodeType: NEW VARIABLE  expression: None
 NodeType: EXPRESSION  expression: returndatacopy(uint256,uint256,uint256)(free_mem_ptr__fallback_asm_0,0,returndatasize()())
 NodeType: EXPRESSION  expression: free_mem_ptr__fallback_asm_0 = mload(uint256)(0x40)
 NodeType: EXPRESSION  expression: revert(uint256,uint256)(free_mem_ptr__fallback_asm_0,returndatasize()())
 NodeType: NEW VARIABLE  expression: None
 NodeType: EXPRESSION  expression: return(uint256,uint256)(free_mem_ptr__fallback_asm_0,returndatasize()())
 NodeType: IF  expression: switch_expr_16809_144_0__fallback_asm_0 == 0
 NodeType: EXPRESSION  expression: switch_expr_16809_144_0__fallback_asm_0 = success
Found external function: setPendingAdmin
has_time_delay: (node.type) EXPRESSION
(Expression) onlyAdmin()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == admin,caller must be admin)
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = implementation
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = implementation_
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,implementation)

Begin XOLEStorage.is_proxy (Slither line:1425)


End XOLEStorage.is_proxy (Slither line:1428)


Begin XOLEStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: XOLEStorage 

End XOLEStorage.is_upgradeable_proxy (Slither line:1407)

