
Begin ProxyStorage.is_proxy (Slither line:1425)


End ProxyStorage.is_proxy (Slither line:1428)


Begin ProxyStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: ProxyStorage 

End ProxyStorage.is_upgradeable_proxy (Slither line:1407)


Begin BridgeProxy.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BridgeProxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(free_mem_ptr_delegateAndReturn_asm_0,0,returndatasize()()) (Slither line:2802)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2817)
Args:
free_mem_ptr_delegateAndReturn_asm_0
0
returndatasize()()

End BridgeProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BridgeProxy.find_delegatecall_in_exp_node

Found Expression Node: delegateAndReturn() (Slither line:2802)
Expression called: delegateAndReturn
Type of call: bytes memory (Slither line:2817)
Args:

End BridgeProxy.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BridgeProxy.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(free_mem_ptr_delegateAndReturn_asm_0,returndatasize()()) (Slither line:2802)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
free_mem_ptr_delegateAndReturn_asm_0
returndatasize()()

End BridgeProxy.find_delegatecall_in_exp_node (Slither line:2858)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BridgeProxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_2049_139_0_delegateAndReturn_asm_0 = success (Slither line:2802)
Expression Type: = (Slither line:2805)
Checking right side of assignment expression... (Slither line:2813)

End BridgeProxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BridgeProxy.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(free_mem_ptr_delegateAndReturn_asm_0,returndatasize()()) (Slither line:2802)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
free_mem_ptr_delegateAndReturn_asm_0
returndatasize()()

End BridgeProxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin BridgeProxy.find_delegatecall_in_asm (Slither line:1541)


End BridgeProxy.find_delegatecall_in_asm (Slither line:1637)


Begin BridgeProxy.find_delegatecall_in_asm (Slither line:1541)


End BridgeProxy.find_delegatecall_in_asm (Slither line:1637)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


Found LowLevelCall (Slither line:2740)


Found delegatecall in LowLevelCall (Slither line:2742)


End Contract.find_delegatecall_in_ir (Slither line:2773)


End BridgeProxy.is_proxy (Slither line:1476)


Begin BridgeProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: BridgeProxy 
BridgeProxy is delegating to implementation
Looking for setter (Slither line:1200)

Looking for setter in ProxyStorage (Slither line:1204)


Begin ProxyStorage.find_setter_in_contract (Slither line:3119)


End ProxyStorage.find_setter_in_contract (Slither line:3345)


Could not find setter in ProxyStorage 
Looking in BridgeProxy (Slither line:1213)

Begin BridgeProxy.find_setter_in_contract (Slither line:3119)

Checking function: constructor(address,address,address,address,uint256,uint256[]) returns() (Slither line:3127)
Checking function: delegateTo(address,bytes) returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: delegateAndReturn() returns(bytes) (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: setImplementation(address) returns(bool) (Slither line:3127)
Visibility: external
true
_setImplementation(newImplementation)
require(bool,string)(msg.sender == admin,BridgeProxy: Only admin can set implementation)
NewImplementation(oldImplementation,implementation)
implementation = implementation_
is an Assignment Operation (Slither line:3216)

End BridgeProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: setImplementation in contract: BridgeProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin ProxyStorage.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_

End ProxyStorage.find_getter_in_contract (Slither line:3083)


Begin BridgeProxy.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_
Checking function: constructor (Slither line:2988)
Checking function: delegateTo (Slither line:2988)
delegateTo returns bytes variable  (Slither line:3008)
RETURN node expression: returnData (Slither line:3028)
Checking function: delegateAndReturn (Slither line:2988)
delegateAndReturn returns bytes variable  (Slither line:3008)
Checking function: fallback (Slither line:2988)
Checking function: setImplementation (Slither line:2988)
setImplementation returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: _setPendingAdmin (Slither line:2988)
_setPendingAdmin returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: _acceptAdmin (Slither line:2988)
_acceptAdmin returns bool variable  (Slither line:3008)
RETURN node expression: true (Slither line:3028)
Checking function: _setImplementation (Slither line:2988)

End BridgeProxy.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in BridgeProxy (Slither line:1305)
or in ProxyStorage (Slither line:1319)
Checking for implementation at slot 0 in contract ProxyStorage (Slither line:1355)
Found implementation at slot 0 in contract ProxyStorage (Slither line:1362)

Begin ProxyStorage.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
implementation_

End ProxyStorage.find_getter_in_contract (Slither line:3083)

impl_address_from_contract_call: implementation_
impl_address_from_contract_call: StateVariable implementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression returndatacopy(uint256,uint256,uint256)(free_mem_ptr_delegateAndReturn_asm_0,0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_delegateAndReturn_asm_0
impl_address_from_contract_call: arg is 0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression delegateAndReturn()
impl_address_from_contract_call: CallExpression return(uint256,uint256)(free_mem_ptr_delegateAndReturn_asm_0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_delegateAndReturn_asm_0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression revert(uint256,uint256)(free_mem_ptr_delegateAndReturn_asm_0,returndatasize()())
impl_address_from_contract_call: arg is free_mem_ptr_delegateAndReturn_asm_0
impl_address_from_contract_call: arg is returndatasize()()
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression implementation.delegatecall(msg.data)
impl_address_from_contract_call: CallExpression mload(uint256)(0x40)
impl_address_from_contract_call: arg is 0x40
Checking external function setImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,BridgeProxy: Only admin can set implementation)
Checking public function _setPendingAdmin
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,BridgeProxy: Only admin can set pending admin)
Checking public function _acceptAdmin
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == pendingAdmin,BridgeProxy: Only pendingAdmin can accept admin)
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function BridgeProxy.delegateAndReturn (proxy_features line:898)
functions_writing_to_variable: checking function BridgeProxy._setImplementation (proxy_features line:898)
functions_writing_to_variable: exp = implementation = implementation_ (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = implementation_ (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: _setImplementation writes implementation_ to implementation (proxy_features line:929)
functions_writing_to_variable: checking function BridgeProxy._acceptAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BridgeProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function BridgeProxy._setPendingAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BridgeProxy.setImplementation (proxy_features line:898)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: setImplementation writes implementation_ to implementation (proxy_features line:1013)
functions_writing_to_variable: checking function BridgeProxy.delegateTo (proxy_features line:898)
functions_writing_to_variable: checking function BridgeProxy.constructor (proxy_features line:898)
get_value_assigned: implementation = implementation_
functions_writing_to_variable: constructor writes implementation_ to implementation (proxy_features line:1013)
has_compatibility_checks: dependencies: ['newImplementation', 'bridgeImplementation_', 'implementation_']
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: checking external function setImplementation
require(bool,string)(msg.sender == admin,BridgeProxy: Only admin can set implementation)
has_compatibility_checks: condition msg.sender == admin
has_compatibility_checks: skipping constructor
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: (success) = implementation.delegatecall(msg.data)
Found public function: constructor
Found fallback
Found external function: setImplementation
has_time_delay: (node.type) RETURN
(Expression) true
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = implementation
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == admin,BridgeProxy: Only admin can set implementation)
has_time_delay: (node.type) EXPRESSION
(Expression) NewImplementation(oldImplementation,implementation)
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = implementation_
