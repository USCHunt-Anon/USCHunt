{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "StakeAllAccountV2 (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.6/f7./ethereum/contracts/mainnet/f7/F7E218aeA7BEF6308fFA0892c298898afD10B31B_StakeAllAccountV2.sol/F7E218aeA7BEF6308fFA0892c298898afD10B31B_StakeAllAccountV2.sol#12-87)",
        "elements": [],
        "description": "StakeAllAccountV2 (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.6/f7./ethereum/contracts/mainnet/f7/F7E218aeA7BEF6308fFA0892c298898afD10B31B_StakeAllAccountV2.sol/F7E218aeA7BEF6308fFA0892c298898afD10B31B_StakeAllAccountV2.sol#12-87) may be an upgradeable proxy.\n_implementation is declared in the proxy.\nStakeAllAccountV2._fallback(bytes4)._implementation (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.6/f7./ethereum/contracts/mainnet/f7/F7E218aeA7BEF6308fFA0892c298898afD10B31B_StakeAllAccountV2.sol/F7E218aeA7BEF6308fFA0892c298898afD10B31B_StakeAllAccountV2.sol#63) gets value from a cross-contract call: implementations.getImplementation(_sig)\nAccountImplementations appears to be a Registry contract for the proxy\nThe address of AccountImplementations is stored as a state variable: StakeAllAccountV2.implementations\nCould not find setter for implementations\nMissing compatibility check in StakeAllAccountV2.receive()\nMissing compatibility check in StakeAllAccountV2.fallback()\n",
        "id": "db93139a4bd5a26de17cbc7073ffca36b5e33f1f53b956125cf6aa547fd016be",
        "features": {
          "upgradeable": "maybe",
          "impl_address_variable": "StakeAllAccountV2._fallback(bytes4)._implementation",
          "impl_address_setter": "not found",
          "impl_address_getter": "not found",
          "impl_address_location": "StakeAllAccountV2 (../../smart-contract-sanctuary/ethereum/contracts/mainnet/proxies/0.7.6/f7./ethereum/contracts/mainnet/f7/F7E218aeA7BEF6308fFA0892c298898afD10B31B_StakeAllAccountV2.sol/F7E218aeA7BEF6308fFA0892c298898afD10B31B_StakeAllAccountV2.sol#12-87)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "implementations.getImplementation(_sig)",
          "registry": "AccountImplementations",
          "registry_source_type": "AccountImplementations",
          "registry_source_variable": "StakeAllAccountV2.implementations",
          "registry_source_constant": false,
          "registry_source_setters": "none found",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "StakeAllAccountV2.receive()": "missing",
              "StakeAllAccountV2.fallback()": "missing"
            }
          },
          "can_remove_upgradeability": false
        }
      }
    ]
  }
}