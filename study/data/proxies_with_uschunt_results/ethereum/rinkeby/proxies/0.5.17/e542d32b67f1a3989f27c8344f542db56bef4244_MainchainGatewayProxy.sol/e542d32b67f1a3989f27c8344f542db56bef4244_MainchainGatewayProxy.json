{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.5.17/e542d32b67f1a3989f27c8344f542db56bef4244_MainchainGatewayProxy.sol/e542d32b67f1a3989f27c8344f542db56bef4244_MainchainGatewayProxy.sol#63-115)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.5.17/e542d32b67f1a3989f27c8344f542db56bef4244_MainchainGatewayProxy.sol/e542d32b67f1a3989f27c8344f542db56bef4244_MainchainGatewayProxy.sol#63-115) is an upgradeable proxy.\n_proxyTo was found in a different contract.\n_proxyTo is an address state variable.\n uses Inherited Storage\nFound compatibility checks in all upgrade functions.\n",
        "id": "7c40c97df68f2328269acf5be5726f43c8fa8288911f299322676de5815cf0af",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "ProxyStorage._proxyTo",
          "impl_address_setter": "Proxy.updateProxyTo(address)",
          "impl_address_getter": "Proxy.implementation()",
          "impl_address_location": "ProxyStorage (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.5.17/e542d32b67f1a3989f27c8344f542db56bef4244_MainchainGatewayProxy.sol/e542d32b67f1a3989f27c8344f542db56bef4244_MainchainGatewayProxy.sol#50-52)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "Proxy.constructor(address)": {
                "check": "require(bool)(_newProxyTo != address(0x0))",
                "is_correct": true
              },
              "Proxy.updateProxyTo(address)": {
                "check": "require(bool)(_newProxyTo != address(0x0))",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "changeAdmin(address)",
              "removeAdmin()",
              "implementation()",
              "proxyType()",
              "updateProxyTo(address)"
            ]
          }
        }
      },
      {
        "contract": "MainchainGatewayProxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.5.17/e542d32b67f1a3989f27c8344f542db56bef4244_MainchainGatewayProxy.sol/e542d32b67f1a3989f27c8344f542db56bef4244_MainchainGatewayProxy.sol#585-593)",
        "elements": [],
        "description": "MainchainGatewayProxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.5.17/e542d32b67f1a3989f27c8344f542db56bef4244_MainchainGatewayProxy.sol/e542d32b67f1a3989f27c8344f542db56bef4244_MainchainGatewayProxy.sol#585-593) is an upgradeable proxy.\n_proxyTo was found in a different contract.\n_proxyTo is an address state variable.\nFound compatibility checks in all upgrade functions.\n",
        "id": "76df0cff7037e40a644030bfa9781aaa3ee30c168df74d234281f37eaf285c35",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "ProxyStorage._proxyTo",
          "impl_address_setter": "Proxy.updateProxyTo(address)",
          "impl_address_getter": "Proxy.implementation()",
          "impl_address_location": "ProxyStorage (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.5.17/e542d32b67f1a3989f27c8344f542db56bef4244_MainchainGatewayProxy.sol/e542d32b67f1a3989f27c8344f542db56bef4244_MainchainGatewayProxy.sol#50-52)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "Proxy.constructor(address)": {
                "check": "require(bool)(_newProxyTo != address(0x0))",
                "is_correct": true
              },
              "Proxy.updateProxyTo(address)": {
                "check": "require(bool)(_newProxyTo != address(0x0))",
                "is_correct": true
              },
              "MainchainGatewayProxy.constructor(address,address)": {
                "check": "require(bool)(_newProxyTo != address(0x0))",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "updateRegistry(address)",
              "pause()",
              "unpause()",
              "changeAdmin(address)",
              "removeAdmin()",
              "implementation()",
              "proxyType()",
              "updateProxyTo(address)"
            ]
          }
        }
      }
    ]
  }
}