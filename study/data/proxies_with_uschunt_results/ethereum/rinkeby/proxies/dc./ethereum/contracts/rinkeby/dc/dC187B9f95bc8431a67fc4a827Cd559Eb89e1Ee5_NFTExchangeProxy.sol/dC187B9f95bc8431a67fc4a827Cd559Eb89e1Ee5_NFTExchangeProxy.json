{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "NFTExchangeProxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/dc./ethereum/contracts/rinkeby/dc/dC187B9f95bc8431a67fc4a827Cd559Eb89e1Ee5_NFTExchangeProxy.sol/dC187B9f95bc8431a67fc4a827Cd559Eb89e1Ee5_NFTExchangeProxy.sol#5-101)",
        "elements": [],
        "description": "NFTExchangeProxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/dc./ethereum/contracts/rinkeby/dc/dC187B9f95bc8431a67fc4a827Cd559Eb89e1Ee5_NFTExchangeProxy.sol/dC187B9f95bc8431a67fc4a827Cd559Eb89e1Ee5_NFTExchangeProxy.sol#5-101) is an upgradeable proxy.\nimplementationPosition is declared in the proxy.\n uses Unstructured Storage\n uses non-standard slot: keccak256(bytes)(implementation.contract:2021)\nFound compatibility checks in all upgrade functions.\n",
        "id": "86e8bdd728177aaa10e8e35e6ffe18619235e0bdc99d995d2bf0e86c9f4854a7",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "NFTExchangeProxy.implementationPosition",
          "impl_address_setter": "NFTExchangeProxy.upgradeTo(address)",
          "impl_address_getter": "NFTExchangeProxy.implementation()",
          "impl_address_location": "NFTExchangeProxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/dc./ethereum/contracts/rinkeby/dc/dC187B9f95bc8431a67fc4a827Cd559Eb89e1Ee5_NFTExchangeProxy.sol/dC187B9f95bc8431a67fc4a827Cd559Eb89e1Ee5_NFTExchangeProxy.sol#5-101)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "keccak256(bytes)(implementation.contract:2021)",
          "unstructured_storage": true,
          "eip_1967": false,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "NFTExchangeProxy.upgradeTo(address)": {
                "check": "require(bool)(currentImplementation != newImplementation)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "proxyOwner()",
              "implementation()",
              "transferProxyOwnership(address)",
              "upgradeTo(address)",
              "setAdminList(address,bool)"
            ]
          }
        }
      }
    ]
  }
}