
Begin IBeacon.is_proxy (Slither line:1425)


End IBeacon.is_proxy (Slither line:1428)


Begin IBeacon.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBeacon 

End IBeacon.is_upgradeable_proxy (Slither line:1407)


Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin StorageSlot.is_proxy (Slither line:1425)


End StorageSlot.is_proxy (Slither line:1428)


Begin StorageSlot.is_upgradeable_proxy (Slither line:1136)

Checking contract: StorageSlot 

End StorageSlot.is_upgradeable_proxy (Slither line:1407)


Begin ERC1967Upgrade.is_proxy (Slither line:1425)


End ERC1967Upgrade.is_proxy (Slither line:1428)


Begin ERC1967Upgrade.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC1967Upgrade 

End ERC1967Upgrade.is_upgradeable_proxy (Slither line:1407)


Begin Proxy.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(0,returndatasize()()) (Slither line:2792)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2807)
Args:
0
returndatasize()()

End Proxy.find_delegatecall_in_exp_node (Slither line:2848)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2792)
Expression called: _fallback
Type of call: tuple() (Slither line:2807)
Args:

End Proxy.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin Proxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in Proxy._delegate (Slither line:1805)
CallExpression: revert(uint256,uint256)(0,returndatasize()()) (Slither line:1819)
CallExpression: _fallback() (Slither line:1819)
AssignmentOperation: result__delegate_asm_0 (Slither line:1811)
CallExpression: return(uint256,uint256)(0,returndatasize()()) (Slither line:1819)
CallExpression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin Proxy.find_delegate_from_call_exp

_implementation() (Slither line:1993)
called = _implementation (Slither line:2000)
Got abstract function, looking for overriding function (Slither line:2015)
Failure (Slither line:2023)
_implementation returns a variable of type address   (Slither line:2183)
Return value is LocalVariable:  (Slither line:2256)
has no expression (Slither line:2316)

End Proxy.find_delegate_from_call_exp (Slither line:2318)

CallExpression: _beforeFallback() (Slither line:1819)
CallExpression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:1819)
AssignmentOperation: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0) (Slither line:1811)
CallExpression: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0) (Slither line:1819)
_delegate contains assembly, searching for sload (Slither line:1875)

End Proxy.find_delegate_variable_from_name (Slither line:1939)


End Proxy.find_delegatecall_in_asm (Slither line:1637)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_19409_220_0__delegate_asm_0 = result__delegate_asm_0 (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)

End Proxy.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(0,returndatasize()()) (Slither line:2792)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2807)
Args:
0
returndatasize()()

End Proxy.find_delegatecall_in_exp_node (Slither line:2848)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:2792)
Expression called: calldatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2807)
Args:
0
0
calldatasize()()

End Proxy.find_delegatecall_in_exp_node (Slither line:2848)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2792)
Expression called: _delegate
Type of call: tuple() (Slither line:2807)
Args:
_implementation()

End Proxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: _beforeFallback() (Slither line:2792)
Expression called: _beforeFallback
Type of call: tuple() (Slither line:2807)
Args:

End Proxy.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:2792)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2807)
Args:
0
0
returndatasize()()

End Proxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0) (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2807)
Args:
gas()()
implementation
0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2814)

Destination is implementation (Slither line:2818)
dest.value: implementation (Slither line:2821)
Expression: None (Slither line:2826)

Begin Proxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in Proxy._delegate (Slither line:1805)
CallExpression: revert(uint256,uint256)(0,returndatasize()()) (Slither line:1819)
CallExpression: _fallback() (Slither line:1819)
AssignmentOperation: result__delegate_asm_0 (Slither line:1811)
CallExpression: return(uint256,uint256)(0,returndatasize()()) (Slither line:1819)
CallExpression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()()) (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin Proxy.find_delegate_from_call_exp

_implementation() (Slither line:1993)
called = _implementation (Slither line:2000)
Got abstract function, looking for overriding function (Slither line:2015)
Failure (Slither line:2023)
_implementation returns a variable of type address   (Slither line:2183)
Return value is LocalVariable:  (Slither line:2256)
has no expression (Slither line:2316)

End Proxy.find_delegate_from_call_exp (Slither line:2318)

CallExpression: _beforeFallback() (Slither line:1819)
CallExpression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:1819)
AssignmentOperation: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0) (Slither line:1811)
CallExpression: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0) (Slither line:1819)
_delegate contains assembly, searching for sload (Slither line:1875)

End Proxy.find_delegate_variable_from_name (Slither line:1939)


End Proxy.find_delegatecall_in_exp_node (Slither line:2848)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 

End Proxy.is_upgradeable_proxy (Slither line:1407)


Begin ERC1967Proxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin ERC1967Proxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2792)
Expression called: _fallback
Type of call: tuple() (Slither line:2807)
Args:

End ERC1967Proxy.find_delegatecall_in_exp_node (Slither line:2848)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin ERC1967Proxy.find_delegatecall_in_asm (Slither line:1541)


End ERC1967Proxy.find_delegatecall_in_asm (Slither line:1637)


Begin ERC1967Proxy.find_delegatecall_in_asm (Slither line:1541)


End ERC1967Proxy.find_delegatecall_in_asm (Slither line:1637)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin ERC1967Proxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:2792)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2807)
Args:
0
0
returndatasize()()

End ERC1967Proxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin ERC1967Proxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_19409_220_0__delegate_asm_0 = result__delegate_asm_0 (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)

End ERC1967Proxy.find_delegatecall_in_exp_node (Slither line:2848)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin ERC1967Proxy.find_delegatecall_in_exp_node

Found Expression Node: r = slot (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)

End ERC1967Proxy.find_delegatecall_in_exp_node (Slither line:2848)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin ERC1967Proxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin ERC1967Proxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking _ROLLBACK_SLOT (Slither line:1689)
Checking _IMPLEMENTATION_SLOT (Slither line:1689)
Checking _ADMIN_SLOT (Slither line:1689)
Checking _BEACON_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in ERC1967Proxy._delegate (Slither line:1805)
CallExpression: _fallback() (Slither line:1819)
CallExpression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:1819)
AssignmentOperation: result__delegate_asm_0 (Slither line:1811)
AssignmentOperation: slot (Slither line:1811)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin ERC1967Proxy.find_delegate_from_call_exp

_implementation() (Slither line:1993)
called = _implementation (Slither line:2000)
Return node of function ERC1967Proxy._implementation(): RETURN ERC1967Upgrade._getImplementation() (Slither line:2031)
Encountered call expression at RETURN node: ERC1967Upgrade._getImplementation() (Slither line:2043)
Encountered member access expression: ERC1967Upgrade._getImplementation (Slither line:2047)

Begin ERC1967Proxy.find_delegate_from_member_access

Expression: ERC1967Upgrade._getImplementation (Slither line:2348)
ERC1967Upgrade (Slither line:2361)
_getImplementation is a member of the contract type: ERC1967Upgrade (Slither line:2406)
Looking for _getImplementation in ERC1967Upgrade (Slither line:2513)
Found the function called _getImplementation (Slither line:2517)
Returns a variable of type address (Slither line:2522)
Found RETURN node: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:2534)
Found another MemberAccess (Slither line:2542)
Member name: value
Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT)
MemberAccess after CallExpression: StorageSlot.getAddressSlot (Slither line:2546)
Too many MemberAccesses: returning (Slither line:2550)
find_delegate_from_member_access returned None (Slither line:2555)
Found storage slot: _IMPLEMENTATION_SLOT (Slither line:2568)

End ERC1967Proxy.find_delegate_from_member_access (Slither line:2635)


End ERC1967Proxy.find_delegate_from_call_exp (Slither line:2094)


End ERC1967Proxy.find_delegate_variable_from_name (Slither line:1939)


End ERC1967Proxy.find_delegatecall_in_asm (Slither line:1637)


End ERC1967Proxy.is_proxy (Slither line:1476)


Begin ERC1967Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC1967Proxy 
Local Variable: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:1164)
ERC1967Proxy is delegating to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
Looking for setter (Slither line:1200)

Looking for setter in ERC1967Upgrade (Slither line:1238)


Begin ERC1967Upgrade.find_setter_in_contract (Slither line:3109)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3112)
Checking function: _getImplementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3117)
Visibility: private
Checking function: _upgradeTo(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _upgradeToAndCall(address,bytes,bool) returns() (Slither line:3117)
Visibility: internal
Checking function: _upgradeToAndCallSecure(address,bytes,bool) returns() (Slither line:3117)
Visibility: internal
Checking function: _getAdmin() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _setAdmin(address) returns() (Slither line:3117)
Visibility: private
Checking function: _changeAdmin(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _getBeacon() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _setBeacon(address) returns() (Slither line:3117)
Visibility: private
Checking function: _upgradeBeaconToAndCall(address,bytes,bool) returns() (Slither line:3117)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3117)
Visibility: internal

End ERC1967Upgrade.find_setter_in_contract (Slither line:3315)


Could not find setter in ERC1967Upgrade (Slither line:1245)
Looking for setter in UUPSUpgradeable (Slither line:1252)


Begin UUPSUpgradeable.find_setter_in_contract (Slither line:3109)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3112)
Checking function: upgradeTo(address) returns() (Slither line:3117)
Visibility: external
Address.functionDelegateCall(newImplementation,abi.encodeWithSignature(upgradeTo(address),oldImplementation))
rollbackTesting.value = false
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
require(bool,string)(oldImplementation == _getImplementation(),ERC1967Upgrade: upgrade breaks further upgrades)
revert(uint256,uint256)(32 + returndata,returndata_size_verifyCallResult_asm_0)
_upgradeTo(newImplementation)
_authorizeUpgrade(newImplementation)
functionDelegateCall(target,data,Address: low-level delegate call failed)
_setImplementation(newImplementation)
r = slot
is an Assignment Operation (Slither line:3206)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
revert(string)(errorMessage)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
size > 0
returndata
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3206)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
require(bool,string)(address(this) != __self,Function must be called through delegatecall)
Address.functionDelegateCall(newImplementation,data)
require(bool,string)(_getImplementation() == __self,Function must be called through active proxy)
_setImplementation(newImplementation)
Upgraded(newImplementation)
_upgradeToAndCallSecure(newImplementation,new bytes(0),false)
require(bool,string)(isContract(target),Address: delegate call to non-contract)
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
r = slot
is an Assignment Operation (Slither line:3206)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
onlyProxy()
verifyCallResult(success,returndata,errorMessage)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)

End UUPSUpgradeable.find_setter_in_contract (Slither line:3315)

Looking for setter in ManagedDripsHub (Slither line:1252)


Begin ManagedDripsHub.find_setter_in_contract (Slither line:3109)

Expression: newImplementation (Slither line:3112)
Checking function: constructor(uint64) returns() (Slither line:3117)
Checking function: collect(address,SplitsReceiver[]) returns(uint128,uint128) (Slither line:3117)
Visibility: public
0
currFinishedCycle + 1 - nextCollectedCycle
super.collect(user,currReceivers)
whenNotPaused()
i ++
cycleAmt += receiver.amtDeltas[cycle].thisCycle
is an Assignment Operation (Slither line:3206)
newImplementation
require(bool,string)(hashSplits(currReceivers) == _storage().splitsHash[user],Invalid current splits receivers)
collectedAmt += uint128(cycleAmt)
is an Assignment Operation (Slither line:3206)
newImplementation
cycleAmt += receiver.amtDeltas[cycle].nextCycle
is an Assignment Operation (Slither line:3206)
newImplementation
delete receiver.amtDeltas[cycle]
cycle ++
StorageSlot.getBooleanSlot(SLOT_PAUSED)
dripsHubStorage = slot
is an Assignment Operation (Slither line:3206)
newImplementation
uint64(block.timestamp)
receiver.amtDeltas[cycle].thisCycle += cycleAmt
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
receiver.nextCollectedCycle = cycle
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
require(bool,string)(! paused(),Contract paused)
bytes32(0)
keccak256(bytes)(abi.encode(receivers))
split += splitsAmt
is an Assignment Operation (Slither line:3206)
newImplementation
receiverStates[splitsReceiver].collectable += splitsAmt
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
Split(user,splitsReceiver,splitsAmt)
_assertCurrSplits(user,currReceivers)
collected -= split
is an Assignment Operation (Slither line:3206)
newImplementation
collected = receiver.collectable
is an Assignment Operation (Slither line:3206)
newImplementation
receiver.collectable = 0
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
_pausedSlot().value
(collected,split) = _collectInternal(user,currReceivers)
is an Assignment Operation (Slither line:3206)
newImplementation
collected += _flushCyclesInternal(user,cycles)
is an Assignment Operation (Slither line:3206)
newImplementation
_transfer(user,int128(collected))
Collected(user,collected,split)
0
i ++
splitsWeight += currReceivers[i].weight
is an Assignment Operation (Slither line:3206)
newImplementation
Checking function: flushCycles(address,uint64) returns(uint64) (Slither line:3117)
Visibility: public
cycle ++
0
_storage().receiverStates[user].collectable += collected
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
super.flushCycles(user,maxCycles)
StorageSlot.getBooleanSlot(SLOT_PAUSED)
dripsHubStorage = slot
is an Assignment Operation (Slither line:3206)
newImplementation
whenNotPaused()
uint64(block.timestamp)
cycles = maxCycles
is an Assignment Operation (Slither line:3206)
newImplementation
receiver.amtDeltas[cycle].thisCycle += cycleAmt
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
cycles = flushable
is an Assignment Operation (Slither line:3206)
newImplementation
currFinishedCycle + 1 - nextCollectedCycle
receiver.nextCollectedCycle = cycle
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
flushable = flushableCycles(user)
is an Assignment Operation (Slither line:3206)
newImplementation
require(bool,string)(! paused(),Contract paused)
0
i ++
cycleAmt += receiver.amtDeltas[cycle].thisCycle
is an Assignment Operation (Slither line:3206)
newImplementation
flushable -= cycles
is an Assignment Operation (Slither line:3206)
newImplementation
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
collectedAmt += uint128(cycleAmt)
is an Assignment Operation (Slither line:3206)
newImplementation
_pausedSlot().value
cycleAmt += receiver.amtDeltas[cycle].nextCycle
is an Assignment Operation (Slither line:3206)
newImplementation
delete receiver.amtDeltas[cycle]
Checking function: _authorizeUpgrade(address) returns() (Slither line:3117)
Visibility: internal
Checking function: admin() returns(address) (Slither line:3117)
Visibility: public
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
_getAdmin()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
Checking function: changeAdmin(address) returns() (Slither line:3117)
Visibility: public
_setAdmin(newAdmin)
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
_getAdmin()
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
_changeAdmin(newAdmin)
onlyAdmin()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(admin() == msg.sender,Caller is not the admin)
Checking function: paused() returns(bool) (Slither line:3117)
Visibility: public
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
_pausedSlot().value
StorageSlot.getBooleanSlot(SLOT_PAUSED)
Checking function: pause() returns() (Slither line:3117)
Visibility: public
_getAdmin()
_pausedSlot().value = true
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
StorageSlot.getBooleanSlot(SLOT_PAUSED)
Paused(msg.sender)
whenNotPaused()
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
onlyAdmin()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
require(bool,string)(! paused(),Contract paused)
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
_pausedSlot().value
require(bool,string)(admin() == msg.sender,Caller is not the admin)
Checking function: unpause() returns() (Slither line:3117)
Visibility: public
_getAdmin()
StorageSlot.getBooleanSlot(SLOT_PAUSED)
_pausedSlot().value = false
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
Unpaused(msg.sender)
require(bool,string)(paused(),Contract not paused)
whenPaused()
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
onlyAdmin()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
_pausedSlot().value
require(bool,string)(admin() == msg.sender,Caller is not the admin)
Checking function: _pausedSlot() returns(StorageSlot.BooleanSlot) (Slither line:3117)
Visibility: private
Checking function: slitherConstructorVariables() returns() (Slither line:3117)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3117)
Visibility: internal
Checking function: upgradeTo(address) returns() (Slither line:3117)
Visibility: external
_upgradeTo(newImplementation)
_setImplementation(newImplementation)
revert(uint256,uint256)(32 + returndata,returndata_size_verifyCallResult_asm_0)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
functionDelegateCall(target,data,Address: low-level delegate call failed)
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
revert(string)(errorMessage)
Address.functionDelegateCall(newImplementation,data)
_setImplementation(newImplementation)
size > 0
returndata
_authorizeUpgrade(newImplementation)
Upgraded(newImplementation)
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3206)
newImplementation
_upgradeToAndCallSecure(newImplementation,new bytes(0),false)
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
onlyProxy()
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)

End ManagedDripsHub.find_setter_in_contract (Slither line:3315)


Implementation set by function: upgradeTo in contract: ManagedDripsHub (Slither line:1264)
Looking for getter (Slither line:1273)


Implementation retrieved by function: _getImplementation in contract: ERC1967Upgrade (Slither line:1285)

End ERC1967Proxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: ERC1967Proxy
Setter found in contract ManagedDripsHub
Found fallback
Found external function: receive
Found public function: constructor
impl_address_from_contract_call: newImplementation
Checking external function fallback
Checking external function receive
functions_writing_to_variable: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
functions_writing_to_variable: checking function ManagedDripsHub.dripsHash (proxy_features line:893)
functions_writing_to_variable: checking function ERC1967Proxy._changeAdmin (proxy_features line:893)
functions_writing_to_variable: checking function ERC1967Proxy.receive (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._upgradeToAndCallSecure (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCallSecure writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ERC1967Proxy._getImplementation (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.upgradeTo (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ERC1967Proxy._setImplementation (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ERC1967Proxy._beforeFallback (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._totalDripsAmtPerSec (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.flushCycles (proxy_features line:893)
functions_writing_to_variable: checking function ERC1967Proxy._getBeacon (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._userOrAccount (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._updateDripsBalance (proxy_features line:893)
functions_writing_to_variable: checking function ERC1967Proxy._upgradeTo (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHub.dripsHash (proxy_features line:893)
functions_writing_to_variable: checking function ERC1967Proxy._setBeacon (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._getAdmin (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.upgradeToAndCall (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHub.splitsHash (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._collectInternal (proxy_features line:893)
functions_writing_to_variable: checking function ERC1967Proxy._upgradeToAndCall (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHub._userOrAccount (proxy_features line:893)
functions_writing_to_variable: checking function ERC1967Proxy._upgradeBeaconToAndCall (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._emitDripsUpdated (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._authorizeUpgrade (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._setDrips (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._assertCurrSplits (proxy_features line:893)
functions_writing_to_variable: checking function ERC1967Proxy._upgradeToAndCallSecure (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCallSecure writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHub._setAdmin (proxy_features line:893)
functions_writing_to_variable: checking function ERC1967Proxy._delegate (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._flushCyclesInternal (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._currTimestamp (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._getImplementation (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.hashSplits (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._changeAdmin (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._assertDripsReceiversValid (proxy_features line:893)
functions_writing_to_variable: checking function ERC1967Proxy._getAdmin (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._setImplementation (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHub.constructor (proxy_features line:893)
functions_writing_to_variable: checking function ERC1967Proxy.constructor (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ERC1967Proxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._getBeacon (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.collect (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._transfer (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._upgradeTo (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHub._give (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.flushCycles (proxy_features line:893)
functions_writing_to_variable: checking function ERC1967Proxy._fallback (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._setBeacon (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._setDelta (proxy_features line:893)
functions_writing_to_variable: checking function ERC1967Proxy._setAdmin (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._updateDripsReceiversStates (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._authorizeUpgrade (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._upgradeToAndCall (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ERC1967Proxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: checking function ERC1967Proxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._upgradeBeaconToAndCall (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.admin (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.changeAdmin (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._storeNewDrips (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.constructor (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.paused (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._emitDripping (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.pause (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.unpause (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._dripsEndTime (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._storage (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._pausedSlot (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.hashDrips (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.collectable (proxy_features line:893)
functions_writing_to_variable: checking function ERC1967Proxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.collect (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._setSplits (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.slitherConstructorVariables (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._assertCurrDrips (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._assertSplitsValid (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.flushableCycles (proxy_features line:893)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _upgradeToAndCallSecure
has_compatibility_checks: checking external function upgradeTo
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = success
has_compatibility_checks: IF node exp = ! rollbackTesting.value
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['onlyProxy()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
require(bool,string)(address(this) != __self,Function must be called through delegatecall)
has_compatibility_checks: condition address(this) != __self
require(bool,string)(_getImplementation() == __self,Function must be called through active proxy)
has_compatibility_checks: condition _getImplementation() == __self
require(bool,string)(oldImplementation == _getImplementation(),ERC1967Upgrade: upgrade breaks further upgrades)
has_compatibility_checks: condition oldImplementation == _getImplementation()
has_compatibility_checks: skipping private function _setImplementation
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: checking external function upgradeToAndCall
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = success
has_compatibility_checks: IF node exp = ! rollbackTesting.value
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['onlyProxy()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
require(bool,string)(address(this) != __self,Function must be called through delegatecall)
has_compatibility_checks: condition address(this) != __self
require(bool,string)(_getImplementation() == __self,Function must be called through active proxy)
has_compatibility_checks: condition _getImplementation() == __self
require(bool,string)(oldImplementation == _getImplementation(),ERC1967Upgrade: upgrade breaks further upgrades)
has_compatibility_checks: condition oldImplementation == _getImplementation()
has_compatibility_checks: skipping internal function _upgradeToAndCall
has_compatibility_checks: skipping internal function _upgradeToAndCallSecure
has_compatibility_checks: skipping private function _setImplementation
has_compatibility_checks: checking public function constructor
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = success
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
assert(bool)(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition _IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: skipping internal function _upgradeToAndCall
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = _getImplementation()
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) IF
(Expression) data.length > 0 || forceCall
has_time_delay: (node.type) EXPRESSION
(Expression) revert(uint256,uint256)(32 + returndata,returndata_size_verifyCallResult_asm_0)
has_time_delay: (node.type) RETURN
(Expression) StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
has_time_delay: (node.type) IF
(Expression) success
has_time_delay: (node.type) RETURN
(Expression) functionDelegateCall(target,data,Address: low-level delegate call failed)
has_time_delay: (node.type) EXPRESSION
(Expression) r = slot
has_time_delay: (node.type) EXPRESSION
(Expression) revert(string)(errorMessage)
has_time_delay: (node.type) EXPRESSION
(Expression) Address.functionDelegateCall(newImplementation,data)
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) RETURN
(Expression) returndata
has_time_delay: (node.type) EXPRESSION
(Expression) _authorizeUpgrade(newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) rollbackTesting = StorageSlot.getBooleanSlot(_ROLLBACK_SLOT)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeToAndCallSecure(newImplementation,new bytes(0),false)
has_time_delay: (node.type) IF
(Expression) ! rollbackTesting.value
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_time_delay: (node.type) IF
(Expression) returndata.length > 0
has_time_delay: (node.type) EXPRESSION
(Expression) onlyProxy()
has_time_delay: (node.type) EXPRESSION
(Expression) StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_time_delay: (node.type) EXPRESSION
(Expression) rollbackTesting.value = true
has_time_delay: (node.type) EXPRESSION
(Expression) r = slot
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(address(this) != __self,Function must be called through delegatecall)
has_time_delay: (node.type) RETURN
(Expression) verifyCallResult(success,returndata,errorMessage)
has_time_delay: (node.type) EXPRESSION
(Expression) Address.functionDelegateCall(newImplementation,abi.encodeWithSignature(upgradeTo(address),oldImplementation))
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(_getImplementation() == __self,Function must be called through active proxy)
has_time_delay: (node.type) EXPRESSION
(Expression) (success,returndata) = target.delegatecall(data)
has_time_delay: (node.type) EXPRESSION
(Expression) returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata)
has_time_delay: (node.type) EXPRESSION
(Expression) rollbackTesting.value = false
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(oldImplementation == _getImplementation(),ERC1967Upgrade: upgrade breaks further upgrades)

Begin UUPSUpgradeable.is_proxy (Slither line:1425)


End UUPSUpgradeable.is_proxy (Slither line:1428)


Begin UUPSUpgradeable.is_upgradeable_proxy (Slither line:1136)

Checking contract: UUPSUpgradeable 

End UUPSUpgradeable.is_upgradeable_proxy (Slither line:1407)


Begin DripsHub.is_proxy (Slither line:1425)


End DripsHub.is_proxy (Slither line:1428)


Begin DripsHub.is_upgradeable_proxy (Slither line:1136)

Checking contract: DripsHub 

End DripsHub.is_upgradeable_proxy (Slither line:1407)


Begin ManagedDripsHub.is_proxy (Slither line:1425)


End ManagedDripsHub.is_proxy (Slither line:1428)


Begin ManagedDripsHub.is_upgradeable_proxy (Slither line:1136)

Checking contract: ManagedDripsHub 

End ManagedDripsHub.is_upgradeable_proxy (Slither line:1407)


Begin ManagedDripsHubProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin ManagedDripsHubProxy.find_delegatecall_in_exp_node

Found Expression Node: switch_expr_19409_220_0__delegate_asm_0 = result__delegate_asm_0 (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)

End ManagedDripsHubProxy.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin ManagedDripsHubProxy.find_delegatecall_in_asm (Slither line:1541)


End ManagedDripsHubProxy.find_delegatecall_in_asm (Slither line:1637)


Begin ManagedDripsHubProxy.find_delegatecall_in_asm (Slither line:1541)


End ManagedDripsHubProxy.find_delegatecall_in_asm (Slither line:1637)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin ManagedDripsHubProxy.find_delegatecall_in_exp_node

Found Expression Node: _beforeFallback() (Slither line:2792)
Expression called: _beforeFallback
Type of call: tuple() (Slither line:2807)
Args:

End ManagedDripsHubProxy.find_delegatecall_in_exp_node (Slither line:2848)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin ManagedDripsHubProxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin ManagedDripsHubProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking _ROLLBACK_SLOT (Slither line:1689)
Checking _IMPLEMENTATION_SLOT (Slither line:1689)
Checking _ADMIN_SLOT (Slither line:1689)
Checking _BEACON_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in ManagedDripsHubProxy._delegate (Slither line:1805)
AssignmentOperation: result__delegate_asm_0 (Slither line:1811)
CallExpression: _beforeFallback() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin ManagedDripsHubProxy.find_delegate_from_call_exp

_implementation() (Slither line:1993)
called = _implementation (Slither line:2000)
Return node of function ERC1967Proxy._implementation(): RETURN ERC1967Upgrade._getImplementation() (Slither line:2031)
Encountered call expression at RETURN node: ERC1967Upgrade._getImplementation() (Slither line:2043)
Encountered member access expression: ERC1967Upgrade._getImplementation (Slither line:2047)

Begin ManagedDripsHubProxy.find_delegate_from_member_access

Expression: ERC1967Upgrade._getImplementation (Slither line:2348)
ERC1967Upgrade (Slither line:2361)
_getImplementation is a member of the contract type: ERC1967Upgrade (Slither line:2406)
Looking for _getImplementation in ERC1967Upgrade (Slither line:2513)
Found the function called _getImplementation (Slither line:2517)
Returns a variable of type address (Slither line:2522)
Found RETURN node: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:2534)
Found another MemberAccess (Slither line:2542)
Member name: value
Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT)
MemberAccess after CallExpression: StorageSlot.getAddressSlot (Slither line:2546)
Too many MemberAccesses: returning (Slither line:2550)
find_delegate_from_member_access returned None (Slither line:2555)
Found storage slot: _IMPLEMENTATION_SLOT (Slither line:2568)

End ManagedDripsHubProxy.find_delegate_from_member_access (Slither line:2635)


End ManagedDripsHubProxy.find_delegate_from_call_exp (Slither line:2094)


End ManagedDripsHubProxy.find_delegate_variable_from_name (Slither line:1939)


End ManagedDripsHubProxy.find_delegatecall_in_asm (Slither line:1637)


End ManagedDripsHubProxy.is_proxy (Slither line:1476)


Begin ManagedDripsHubProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: ManagedDripsHubProxy 
Local Variable: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:1164)
ManagedDripsHubProxy is delegating to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
Looking for setter (Slither line:1200)

Looking for setter in ERC1967Upgrade (Slither line:1238)


Begin ERC1967Upgrade.find_setter_in_contract (Slither line:3109)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3112)
Checking function: _getImplementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3117)
Visibility: private
Checking function: _upgradeTo(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _upgradeToAndCall(address,bytes,bool) returns() (Slither line:3117)
Visibility: internal
Checking function: _upgradeToAndCallSecure(address,bytes,bool) returns() (Slither line:3117)
Visibility: internal
Checking function: _getAdmin() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _setAdmin(address) returns() (Slither line:3117)
Visibility: private
Checking function: _changeAdmin(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _getBeacon() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _setBeacon(address) returns() (Slither line:3117)
Visibility: private
Checking function: _upgradeBeaconToAndCall(address,bytes,bool) returns() (Slither line:3117)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3117)
Visibility: internal

End ERC1967Upgrade.find_setter_in_contract (Slither line:3315)


Could not find setter in ERC1967Upgrade (Slither line:1245)
Looking for setter in ERC1967Proxy (Slither line:1252)


Begin ERC1967Proxy.find_setter_in_contract (Slither line:3109)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3112)
Checking function: constructor(address,bytes) returns() (Slither line:3117)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3117)
Visibility: internal
Checking function: _getImplementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3117)
Visibility: private
Checking function: _upgradeTo(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _upgradeToAndCall(address,bytes,bool) returns() (Slither line:3117)
Visibility: internal
Checking function: _upgradeToAndCallSecure(address,bytes,bool) returns() (Slither line:3117)
Visibility: internal
Checking function: _getAdmin() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _setAdmin(address) returns() (Slither line:3117)
Visibility: private
Checking function: _changeAdmin(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _getBeacon() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _setBeacon(address) returns() (Slither line:3117)
Visibility: private
Checking function: _upgradeBeaconToAndCall(address,bytes,bool) returns() (Slither line:3117)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _fallback() returns() (Slither line:3117)
Checking function: fallback() returns() (Slither line:3117)
Checking function: receive() returns() (Slither line:3117)
Checking function: _beforeFallback() returns() (Slither line:3117)

End ERC1967Proxy.find_setter_in_contract (Slither line:3315)

Looking for setter in UUPSUpgradeable (Slither line:1252)


Begin UUPSUpgradeable.find_setter_in_contract (Slither line:3109)

Expression: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (Slither line:3112)
Checking function: upgradeTo(address) returns() (Slither line:3117)
Visibility: external
Address.functionDelegateCall(newImplementation,abi.encodeWithSignature(upgradeTo(address),oldImplementation))
rollbackTesting.value = false
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
require(bool,string)(oldImplementation == _getImplementation(),ERC1967Upgrade: upgrade breaks further upgrades)
revert(uint256,uint256)(32 + returndata,returndata_size_verifyCallResult_asm_0)
_upgradeTo(newImplementation)
_authorizeUpgrade(newImplementation)
functionDelegateCall(target,data,Address: low-level delegate call failed)
_setImplementation(newImplementation)
r = slot
is an Assignment Operation (Slither line:3206)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
revert(string)(errorMessage)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
size > 0
returndata
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3206)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
require(bool,string)(address(this) != __self,Function must be called through delegatecall)
Address.functionDelegateCall(newImplementation,data)
require(bool,string)(_getImplementation() == __self,Function must be called through active proxy)
_setImplementation(newImplementation)
Upgraded(newImplementation)
_upgradeToAndCallSecure(newImplementation,new bytes(0),false)
require(bool,string)(isContract(target),Address: delegate call to non-contract)
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
r = slot
is an Assignment Operation (Slither line:3206)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
onlyProxy()
verifyCallResult(success,returndata,errorMessage)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)

End UUPSUpgradeable.find_setter_in_contract (Slither line:3315)

Looking for setter in ManagedDripsHub (Slither line:1252)


Begin ManagedDripsHub.find_setter_in_contract (Slither line:3109)

Expression: newImplementation (Slither line:3112)
Checking function: constructor(uint64) returns() (Slither line:3117)
Checking function: collect(address,SplitsReceiver[]) returns(uint128,uint128) (Slither line:3117)
Visibility: public
0
currFinishedCycle + 1 - nextCollectedCycle
super.collect(user,currReceivers)
whenNotPaused()
i ++
cycleAmt += receiver.amtDeltas[cycle].thisCycle
is an Assignment Operation (Slither line:3206)
newImplementation
require(bool,string)(hashSplits(currReceivers) == _storage().splitsHash[user],Invalid current splits receivers)
collectedAmt += uint128(cycleAmt)
is an Assignment Operation (Slither line:3206)
newImplementation
cycleAmt += receiver.amtDeltas[cycle].nextCycle
is an Assignment Operation (Slither line:3206)
newImplementation
delete receiver.amtDeltas[cycle]
cycle ++
StorageSlot.getBooleanSlot(SLOT_PAUSED)
dripsHubStorage = slot
is an Assignment Operation (Slither line:3206)
newImplementation
uint64(block.timestamp)
receiver.amtDeltas[cycle].thisCycle += cycleAmt
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
receiver.nextCollectedCycle = cycle
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
require(bool,string)(! paused(),Contract paused)
bytes32(0)
keccak256(bytes)(abi.encode(receivers))
split += splitsAmt
is an Assignment Operation (Slither line:3206)
newImplementation
receiverStates[splitsReceiver].collectable += splitsAmt
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
Split(user,splitsReceiver,splitsAmt)
_assertCurrSplits(user,currReceivers)
collected -= split
is an Assignment Operation (Slither line:3206)
newImplementation
collected = receiver.collectable
is an Assignment Operation (Slither line:3206)
newImplementation
receiver.collectable = 0
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
_pausedSlot().value
(collected,split) = _collectInternal(user,currReceivers)
is an Assignment Operation (Slither line:3206)
newImplementation
collected += _flushCyclesInternal(user,cycles)
is an Assignment Operation (Slither line:3206)
newImplementation
_transfer(user,int128(collected))
Collected(user,collected,split)
0
i ++
splitsWeight += currReceivers[i].weight
is an Assignment Operation (Slither line:3206)
newImplementation
Checking function: flushCycles(address,uint64) returns(uint64) (Slither line:3117)
Visibility: public
cycle ++
0
_storage().receiverStates[user].collectable += collected
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
super.flushCycles(user,maxCycles)
StorageSlot.getBooleanSlot(SLOT_PAUSED)
dripsHubStorage = slot
is an Assignment Operation (Slither line:3206)
newImplementation
whenNotPaused()
uint64(block.timestamp)
cycles = maxCycles
is an Assignment Operation (Slither line:3206)
newImplementation
receiver.amtDeltas[cycle].thisCycle += cycleAmt
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
cycles = flushable
is an Assignment Operation (Slither line:3206)
newImplementation
currFinishedCycle + 1 - nextCollectedCycle
receiver.nextCollectedCycle = cycle
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
flushable = flushableCycles(user)
is an Assignment Operation (Slither line:3206)
newImplementation
require(bool,string)(! paused(),Contract paused)
0
i ++
cycleAmt += receiver.amtDeltas[cycle].thisCycle
is an Assignment Operation (Slither line:3206)
newImplementation
flushable -= cycles
is an Assignment Operation (Slither line:3206)
newImplementation
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
collectedAmt += uint128(cycleAmt)
is an Assignment Operation (Slither line:3206)
newImplementation
_pausedSlot().value
cycleAmt += receiver.amtDeltas[cycle].nextCycle
is an Assignment Operation (Slither line:3206)
newImplementation
delete receiver.amtDeltas[cycle]
Checking function: _authorizeUpgrade(address) returns() (Slither line:3117)
Visibility: internal
Checking function: admin() returns(address) (Slither line:3117)
Visibility: public
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
_getAdmin()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
Checking function: changeAdmin(address) returns() (Slither line:3117)
Visibility: public
_setAdmin(newAdmin)
StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
_getAdmin()
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
_changeAdmin(newAdmin)
onlyAdmin()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
AdminChanged(_getAdmin(),newAdmin)
require(bool,string)(admin() == msg.sender,Caller is not the admin)
Checking function: paused() returns(bool) (Slither line:3117)
Visibility: public
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
_pausedSlot().value
StorageSlot.getBooleanSlot(SLOT_PAUSED)
Checking function: pause() returns() (Slither line:3117)
Visibility: public
_getAdmin()
_pausedSlot().value = true
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
StorageSlot.getBooleanSlot(SLOT_PAUSED)
Paused(msg.sender)
whenNotPaused()
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
onlyAdmin()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
require(bool,string)(! paused(),Contract paused)
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
_pausedSlot().value
require(bool,string)(admin() == msg.sender,Caller is not the admin)
Checking function: unpause() returns() (Slither line:3117)
Visibility: public
_getAdmin()
StorageSlot.getBooleanSlot(SLOT_PAUSED)
_pausedSlot().value = false
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)
Unpaused(msg.sender)
require(bool,string)(paused(),Contract not paused)
whenPaused()
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
onlyAdmin()
StorageSlot.getAddressSlot(_ADMIN_SLOT).value
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
_pausedSlot().value
require(bool,string)(admin() == msg.sender,Caller is not the admin)
Checking function: _pausedSlot() returns(StorageSlot.BooleanSlot) (Slither line:3117)
Visibility: private
Checking function: slitherConstructorVariables() returns() (Slither line:3117)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3117)
Visibility: internal
Checking function: upgradeTo(address) returns() (Slither line:3117)
Visibility: external
_upgradeTo(newImplementation)
_setImplementation(newImplementation)
revert(uint256,uint256)(32 + returndata,returndata_size_verifyCallResult_asm_0)
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
functionDelegateCall(target,data,Address: low-level delegate call failed)
r = slot
is an Assignment Operation (Slither line:3206)
newImplementation
revert(string)(errorMessage)
Address.functionDelegateCall(newImplementation,data)
_setImplementation(newImplementation)
size > 0
returndata
_authorizeUpgrade(newImplementation)
Upgraded(newImplementation)
size = extcodesize(uint256)(account)
is an Assignment Operation (Slither line:3206)
newImplementation
_upgradeToAndCallSecure(newImplementation,new bytes(0),false)
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
onlyProxy()
StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
is an Assignment Operation (Slither line:3206)
Left side is a MemberAccess (Slither line:3209)

End ManagedDripsHub.find_setter_in_contract (Slither line:3315)


Implementation set by function: upgradeTo in contract: ManagedDripsHub (Slither line:1264)
Looking for getter (Slither line:1273)


Implementation retrieved by function: _getImplementation in contract: ERC1967Upgrade (Slither line:1285)

End ManagedDripsHubProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: ManagedDripsHubProxy
Setter found in contract ManagedDripsHub
Found public function: constructor
Found fallback
Found external function: receive
Found public function: constructor
impl_address_from_contract_call: newImplementation
Checking external function fallback
Checking external function receive
functions_writing_to_variable: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
functions_writing_to_variable: checking function ManagedDripsHub.dripsHash (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._upgradeToAndCallSecure (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCallSecure writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHubProxy.receive (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.upgradeTo (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHubProxy._beforeFallback (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._totalDripsAmtPerSec (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.flushCycles (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._userOrAccount (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._updateDripsBalance (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.dripsHash (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._getAdmin (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.splitsHash (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.upgradeToAndCall (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHub._collectInternal (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._userOrAccount (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._emitDripsUpdated (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._authorizeUpgrade (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._setDrips (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._assertCurrSplits (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._setAdmin (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._flushCyclesInternal (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._currTimestamp (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._getImplementation (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.hashSplits (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._changeAdmin (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._assertDripsReceiversValid (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._setImplementation (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHub.constructor (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._getBeacon (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.collect (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._transfer (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy.constructor (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHub._upgradeTo (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHub._give (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.flushCycles (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._setBeacon (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._setDelta (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._updateDripsReceiversStates (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._authorizeUpgrade (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._upgradeToAndCall (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHub._upgradeBeaconToAndCall (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.admin (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy._getImplementation (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy._changeAdmin (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.changeAdmin (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._storeNewDrips (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.constructor (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy._setImplementation (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHub.paused (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._emitDripping (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy._getBeacon (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.pause (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy._upgradeTo (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHub.unpause (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy._setBeacon (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._dripsEndTime (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._storage (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._pausedSlot (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy._upgradeToAndCall (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCall writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHub.hashDrips (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy._upgradeBeaconToAndCall (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy.constructor (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: constructor writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHub.collectable (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy._upgradeToAndCallSecure (proxy_features line:893)
get_value_assigned: StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
functions_writing_to_variable: _upgradeToAndCallSecure writes newImplementation to StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value (proxy_features line:987)
functions_writing_to_variable: checking function ManagedDripsHubProxy._delegate (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.collect (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._setSplits (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.slitherConstructorVariables (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy._getAdmin (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._assertCurrDrips (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub._assertSplitsValid (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHub.flushableCycles (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy._fallback (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy._setAdmin (proxy_features line:893)
functions_writing_to_variable: checking function ManagedDripsHubProxy.fallback (proxy_features line:893)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _upgradeToAndCallSecure
has_compatibility_checks: checking external function upgradeTo
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = success
has_compatibility_checks: IF node exp = ! rollbackTesting.value
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['onlyProxy()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
require(bool,string)(address(this) != __self,Function must be called through delegatecall)
has_compatibility_checks: condition address(this) != __self
require(bool,string)(_getImplementation() == __self,Function must be called through active proxy)
has_compatibility_checks: condition _getImplementation() == __self
require(bool,string)(oldImplementation == _getImplementation(),ERC1967Upgrade: upgrade breaks further upgrades)
has_compatibility_checks: condition oldImplementation == _getImplementation()
has_compatibility_checks: checking external function upgradeToAndCall
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = success
has_compatibility_checks: IF node exp = ! rollbackTesting.value
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['onlyProxy()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
require(bool,string)(address(this) != __self,Function must be called through delegatecall)
has_compatibility_checks: condition address(this) != __self
require(bool,string)(_getImplementation() == __self,Function must be called through active proxy)
has_compatibility_checks: condition _getImplementation() == __self
require(bool,string)(oldImplementation == _getImplementation(),ERC1967Upgrade: upgrade breaks further upgrades)
has_compatibility_checks: condition oldImplementation == _getImplementation()
has_compatibility_checks: skipping private function _setImplementation
has_compatibility_checks: checking public function constructor
has_compatibility_checks: IF node exp = success
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
assert(bool)(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition _IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: skipping internal function _upgradeToAndCall
has_compatibility_checks: skipping private function _setImplementation
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: skipping internal function _upgradeToAndCall
has_compatibility_checks: checking public function constructor
has_compatibility_checks: IF node exp = data.length > 0 || forceCall
has_compatibility_checks: IF node exp = success
has_compatibility_checks: IF node exp = returndata.length > 0
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: IF node can lead to revert ['revert(string)(errorMessage)']
has_compatibility_checks: ConditionalExpression if returndata.length > 0 then returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata) else revert(string)(errorMessage)
require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_compatibility_checks: condition Address.isContract(newImplementation)
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
assert(bool)(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition _IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_compatibility_checks: condition isContract(target)
require(bool,string)(newAdmin != address(0),ERC1967: new admin is the zero address)
has_compatibility_checks: condition newAdmin != address(0)
has_compatibility_checks: skipping internal function _upgradeToAndCallSecure
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) oldImplementation = _getImplementation()
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) IF
(Expression) data.length > 0 || forceCall
has_time_delay: (node.type) EXPRESSION
(Expression) revert(uint256,uint256)(32 + returndata,returndata_size_verifyCallResult_asm_0)
has_time_delay: (node.type) RETURN
(Expression) StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value
has_time_delay: (node.type) IF
(Expression) success
has_time_delay: (node.type) RETURN
(Expression) functionDelegateCall(target,data,Address: low-level delegate call failed)
has_time_delay: (node.type) EXPRESSION
(Expression) r = slot
has_time_delay: (node.type) EXPRESSION
(Expression) revert(string)(errorMessage)
has_time_delay: (node.type) EXPRESSION
(Expression) Address.functionDelegateCall(newImplementation,data)
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) RETURN
(Expression) returndata
has_time_delay: (node.type) EXPRESSION
(Expression) _authorizeUpgrade(newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) rollbackTesting = StorageSlot.getBooleanSlot(_ROLLBACK_SLOT)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeToAndCallSecure(newImplementation,new bytes(0),false)
has_time_delay: (node.type) IF
(Expression) ! rollbackTesting.value
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(Address.isContract(newImplementation),ERC1967: new implementation is not a contract)
has_time_delay: (node.type) IF
(Expression) returndata.length > 0
has_time_delay: (node.type) EXPRESSION
(Expression) onlyProxy()
has_time_delay: (node.type) EXPRESSION
(Expression) StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(isContract(target),Address: delegate call to non-contract)
has_time_delay: (node.type) EXPRESSION
(Expression) rollbackTesting.value = true
has_time_delay: (node.type) EXPRESSION
(Expression) r = slot
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(address(this) != __self,Function must be called through delegatecall)
has_time_delay: (node.type) RETURN
(Expression) verifyCallResult(success,returndata,errorMessage)
has_time_delay: (node.type) EXPRESSION
(Expression) Address.functionDelegateCall(newImplementation,abi.encodeWithSignature(upgradeTo(address),oldImplementation))
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(_getImplementation() == __self,Function must be called through active proxy)
has_time_delay: (node.type) EXPRESSION
(Expression) (success,returndata) = target.delegatecall(data)
has_time_delay: (node.type) EXPRESSION
(Expression) returndata_size_verifyCallResult_asm_0 = mload(uint256)(returndata)
has_time_delay: (node.type) EXPRESSION
(Expression) rollbackTesting.value = false
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(oldImplementation == _getImplementation(),ERC1967Upgrade: upgrade breaks further upgrades)
