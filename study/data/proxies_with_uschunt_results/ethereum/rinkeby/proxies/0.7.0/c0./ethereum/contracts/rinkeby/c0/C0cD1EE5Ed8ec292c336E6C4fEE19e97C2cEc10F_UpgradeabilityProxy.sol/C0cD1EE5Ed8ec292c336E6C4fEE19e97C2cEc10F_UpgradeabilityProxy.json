{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.7.0/c0./ethereum/contracts/rinkeby/c0/C0cD1EE5Ed8ec292c336E6C4fEE19e97C2cEc10F_UpgradeabilityProxy.sol/C0cD1EE5Ed8ec292c336E6C4fEE19e97C2cEc10F_UpgradeabilityProxy.sol#6-138)",
        "elements": [],
        "description": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.7.0/c0./ethereum/contracts/rinkeby/c0/C0cD1EE5Ed8ec292c336E6C4fEE19e97C2cEc10F_UpgradeabilityProxy.sol/C0cD1EE5Ed8ec292c336E6C4fEE19e97C2cEc10F_UpgradeabilityProxy.sol#6-138) is an upgradeable proxy.\nimplementationPosition is declared in the proxy.\n uses Unstructured Storage\n uses non-standard slot: keccak256(bytes)(proxy.implementation)\nMissing compatibility check in UpgradeabilityProxy.transferImplementation()\nMissing compatibility check in UpgradeabilityProxy.constructor(address,address,bytes,bool)\n",
        "id": "d97f9b984d16099963aff1de45a2e25e2623f33fda75e04a9dbd75a2731b5a94",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "UpgradeabilityProxy.implementationPosition",
          "impl_address_setter": "UpgradeabilityProxy.transferImplementation()",
          "impl_address_getter": "UpgradeabilityProxy.implementation()",
          "impl_address_location": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.7.0/c0./ethereum/contracts/rinkeby/c0/C0cD1EE5Ed8ec292c336E6C4fEE19e97C2cEc10F_UpgradeabilityProxy.sol/C0cD1EE5Ed8ec292c336E6C4fEE19e97C2cEc10F_UpgradeabilityProxy.sol#6-138)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "keccak256(bytes)(proxy.implementation)",
          "unstructured_storage": true,
          "eip_1967": false,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "UpgradeabilityProxy.transferImplementation()": "missing",
              "UpgradeabilityProxy.constructor(address,address,bytes,bool)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "proxyOwner()",
              "newProxyOwner()",
              "setNewProxyOwner(address)",
              "transferProxyOwnership()",
              "implementation()",
              "newImplementation()",
              "timelock()",
              "setNewImplementation(address)",
              "transferImplementation()"
            ]
          }
        }
      }
    ]
  }
}