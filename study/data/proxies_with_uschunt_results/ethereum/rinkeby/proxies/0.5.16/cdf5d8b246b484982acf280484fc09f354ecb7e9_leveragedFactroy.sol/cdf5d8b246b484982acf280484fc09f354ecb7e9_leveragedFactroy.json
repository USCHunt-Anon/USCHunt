{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "fnxProxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.5.16/cdf5d8b246b484982acf280484fc09f354ecb7e9_leveragedFactroy.sol/cdf5d8b246b484982acf280484fc09f354ecb7e9_leveragedFactroy.sol#292-408)",
        "elements": [],
        "description": "fnxProxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.5.16/cdf5d8b246b484982acf280484fc09f354ecb7e9_leveragedFactroy.sol/cdf5d8b246b484982acf280484fc09f354ecb7e9_leveragedFactroy.sol#292-408) is an upgradeable proxy.\nimplementPositon is declared in the proxy.\n uses Unstructured Storage\n uses non-standard slot: keccak256(bytes)(org.Finnexus.implementation.storage)\nMissing compatibility check in fnxProxy.constructor(address)\nFound compatibility check in fnxProxy.upgradeTo(address)\n",
        "id": "279c0a0c9a4e9b5971ac9de1dd45b7d653c8a6bc9769da98532e549648c955ad",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "fnxProxy.implementPositon",
          "impl_address_setter": "fnxProxy.upgradeTo(address)",
          "impl_address_getter": "fnxProxy.implementation()",
          "impl_address_location": "fnxProxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.5.16/cdf5d8b246b484982acf280484fc09f354ecb7e9_leveragedFactroy.sol/cdf5d8b246b484982acf280484fc09f354ecb7e9_leveragedFactroy.sol#292-408)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "keccak256(bytes)(org.Finnexus.implementation.storage)",
          "unstructured_storage": true,
          "eip_1967": false,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "fnxProxy.constructor(address)": "missing",
              "fnxProxy.upgradeTo(address)": "require(bool)(currentImplementation != _newImplementation)"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "transferProxyOwnership(address)",
              "version()",
              "proxyOwner()",
              "proxyType()",
              "implementation()",
              "upgradeTo(address)"
            ]
          }
        }
      }
    ]
  }
}