{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.6.2/6331ef5694D9c5cb047F746B913a4979FA3F93aD_ProxyMock.sol/6331ef5694D9c5cb047F746B913a4979FA3F93aD_ProxyMock.sol#7-112)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.6.2/6331ef5694D9c5cb047F746B913a4979FA3F93aD_ProxyMock.sol/6331ef5694D9c5cb047F746B913a4979FA3F93aD_ProxyMock.sol#7-112) is a proxy, but doesn't seem upgradeable.\n",
        "id": "cb70bcec6d81585d7521ef499de1dc4cc025c9eb09a62b94cfe4ec81796afff6",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "ProxyMock (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.6.2/6331ef5694D9c5cb047F746B913a4979FA3F93aD_ProxyMock.sol/6331ef5694D9c5cb047F746B913a4979FA3F93aD_ProxyMock.sol#115-179)",
        "elements": [],
        "description": "ProxyMock (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.6.2/6331ef5694D9c5cb047F746B913a4979FA3F93aD_ProxyMock.sol/6331ef5694D9c5cb047F746B913a4979FA3F93aD_ProxyMock.sol#115-179) is an upgradeable proxy.\n_IMPLEMENTATION was found in a different contract.\n_IMPLEMENTATION is an address state variable.\nFound compatibility checks in all upgrade functions.\n",
        "id": "fb2615e71c7e29732e8b2bb27010f8f115ba57fddd7199ea99a6926b21405e55",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "Proxy._IMPLEMENTATION",
          "impl_address_setter": "ProxyMock.upgradeTo(address)",
          "impl_address_getter": "Proxy._implementation()",
          "impl_address_location": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.6.2/6331ef5694D9c5cb047F746B913a4979FA3F93aD_ProxyMock.sol/6331ef5694D9c5cb047F746B913a4979FA3F93aD_ProxyMock.sol#7-112)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "ProxyMock.upgradeTo(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(c) > 0,UpgradeableProxy: new implementation is not a contract)",
                "is_correct": true
              },
              "ProxyMock.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(extcodesize(uint256)(c) > 0,UpgradeableProxy: new implementation is not a contract)",
                "is_correct": true
              },
              "ProxyMock.constructor(address)": {
                "check": "require(bool,string)(extcodesize(uint256)(c) > 0,UpgradeableProxy: new implementation is not a contract)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      }
    ]
  }
}