{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.4.24/c0Ad0a61e76b8d7fB8bC3bF6a98974567A30eD46_UpgradeabilityProxy.sol/c0Ad0a61e76b8d7fB8bC3bF6a98974567A30eD46_UpgradeabilityProxy.sol#20-53)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.4.24/c0Ad0a61e76b8d7fB8bC3bF6a98974567A30eD46_UpgradeabilityProxy.sol/c0Ad0a61e76b8d7fB8bC3bF6a98974567A30eD46_UpgradeabilityProxy.sol#20-53) is a proxy, but doesn't seem upgradeable.\n",
        "id": "cb70bcec6d81585d7521ef499de1dc4cc025c9eb09a62b94cfe4ec81796afff6",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.4.24/c0Ad0a61e76b8d7fB8bC3bF6a98974567A30eD46_UpgradeabilityProxy.sol/c0Ad0a61e76b8d7fB8bC3bF6a98974567A30eD46_UpgradeabilityProxy.sol#61-121)",
        "elements": [],
        "description": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.4.24/c0Ad0a61e76b8d7fB8bC3bF6a98974567A30eD46_UpgradeabilityProxy.sol/c0Ad0a61e76b8d7fB8bC3bF6a98974567A30eD46_UpgradeabilityProxy.sol#61-121) is a proxy, but doesn't seem upgradeable.\n",
        "id": "ce071903cfe6d69ec6921419754cf17b050cdc1a0c9a70ff8d5343825c9a46a2",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "FsCoinToolProxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.4.24/c0Ad0a61e76b8d7fB8bC3bF6a98974567A30eD46_UpgradeabilityProxy.sol/c0Ad0a61e76b8d7fB8bC3bF6a98974567A30eD46_UpgradeabilityProxy.sol#129-207)",
        "elements": [],
        "description": "FsCoinToolProxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.4.24/c0Ad0a61e76b8d7fB8bC3bF6a98974567A30eD46_UpgradeabilityProxy.sol/c0Ad0a61e76b8d7fB8bC3bF6a98974567A30eD46_UpgradeabilityProxy.sol#129-207) is an upgradeable proxy.\nimplementationPosition was found in a different contract.\n uses Unstructured Storage\n uses non-standard slot: keccak256()(cointool.app.proxy.implementation)\nFound compatibility checks in all upgrade functions.\n",
        "id": "1cf11e11a3fdc037bb0377166ad8e260c45bcc92078ad40903af0525974b773d",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "UpgradeabilityProxy.implementationPosition",
          "impl_address_setter": "FsCoinToolProxy.upgradeTo(address,string)",
          "impl_address_getter": "UpgradeabilityProxy.implementation()",
          "impl_address_location": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.4.24/c0Ad0a61e76b8d7fB8bC3bF6a98974567A30eD46_UpgradeabilityProxy.sol/c0Ad0a61e76b8d7fB8bC3bF6a98974567A30eD46_UpgradeabilityProxy.sol#61-121)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "keccak256()(cointool.app.proxy.implementation)",
          "unstructured_storage": true,
          "eip_1967": false,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "FsCoinToolProxy.upgradeToAndCall(address,string,bytes)": {
                "check": "require(bool)(currentImplementation != _newImplementation)",
                "is_correct": true
              },
              "FsCoinToolProxy.constructor(address,string)": {
                "check": "require(bool)(currentImplementation != _newImplementation)",
                "is_correct": true
              },
              "FsCoinToolProxy.upgradeTo(address,string)": {
                "check": "require(bool)(currentImplementation != _newImplementation)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "version()",
              "implementation()",
              "implementation()",
              "version()",
              "proxyOwner()",
              "transferProxyOwnership(address)",
              "upgradeTo(address,string)",
              "upgradeToAndCall(address,string,bytes)"
            ]
          }
        }
      }
    ]
  }
}