{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Diamond (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.7.6/72811B2df316990c3dbEaA79dA72165D2F884AA8_Diamond.sol/72811B2df316990c3dbEaA79dA72165D2F884AA8_Diamond.sol#199-240)",
        "elements": [],
        "description": "Diamond (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.7.6/72811B2df316990c3dbEaA79dA72165D2F884AA8_Diamond.sol/72811B2df316990c3dbEaA79dA72165D2F884AA8_Diamond.sol#199-240) is an upgradeable proxy.\nfacet is declared in the proxy.\nfacetAddressAndSelectorPosition probably maps function signatures to addresses, but detector could not find `msg.sig` use.\nNo setter functions found to search for compatibility checks.\nTo remove upgradeability, delete diamondCut from LibDiamond\n",
        "id": "9dc183b9298db37f4bb2b784f86197e0ac8dd61074678a8cfa6bcdf75e85bf65",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "Diamond.fallback().facet",
          "impl_address_setter": "LibDiamond.diamondCut(IDiamondCut.FacetCut[],address,bytes)",
          "impl_address_getter": "not found",
          "impl_address_location": "Diamond (../../smart-contract-sanctuary/ethereum/contracts/rinkeby/sorted/0.7.6/72811B2df316990c3dbEaA79dA72165D2F884AA8_Diamond.sol/72811B2df316990c3dbEaA79dA72165D2F884AA8_Diamond.sol#199-240)",
          "impl_address_scope": "StructureVariable",
          "impl_address_type": "mapping(bytes4 => LibDiamond.FacetAddressAndSelectorPosition)",
          "impl_mapping_from_msg_sig": "maybe",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": "no setters found"
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove diamondCut from LibDiamond"
        }
      }
    ]
  }
}