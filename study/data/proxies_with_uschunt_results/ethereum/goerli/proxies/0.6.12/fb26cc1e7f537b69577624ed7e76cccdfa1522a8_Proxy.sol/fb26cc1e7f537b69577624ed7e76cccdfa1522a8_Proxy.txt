
Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin Upgradeable.is_proxy (Slither line:1425)


End Upgradeable.is_proxy (Slither line:1428)


Begin Upgradeable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Upgradeable 

End Upgradeable.is_upgradeable_proxy (Slither line:1407)


Begin Proxy.is_proxy (Slither line:1425)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0x0,calldatasize()()) (Slither line:2792)
Expression called: calldatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2807)
Args:
ptr_fallback_asm_0
0x0
calldatasize()()

End Proxy.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)


End Proxy.find_delegatecall_in_asm (Slither line:1637)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)


End Proxy.find_delegatecall_in_asm (Slither line:1637)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: result_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_impl,ptr_fallback_asm_0,calldatasize()(),0x0,0) (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2807)
Args:
gas()()
_impl
ptr_fallback_asm_0
calldatasize()()
0x0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2814)

Destination is _impl (Slither line:2818)
dest.value: _impl (Slither line:2821)
Expression: getImplementation() (Slither line:2826)

Begin Proxy.find_delegate_from_call_exp

getImplementation() (Slither line:1993)
called = getImplementation (Slither line:2000)
AssignmentOperation: implementation = sload(uint256)(position) (Slither line:2107)
CallExpression: sload(uint256) (Slither line:2113)
Found storage slot: implementationPosition (Slither line:2130)
getImplementation returns a variable of type address   called implementation (Slither line:2183)
getImplementation contains assembly - looking for sload (Slither line:2189)

End Proxy.find_delegate_from_call_exp (Slither line:2318)


End Proxy.find_delegatecall_in_exp_node (Slither line:2848)

Setting Proxy._delegate_variable = Proxy._proxy_impl_slot: implementationPosition (Slither line:1473)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 
Call destination implementationPosition is constant (Slither line:1146)

implementationPosition is the implementation storage slot (Slither line:1149)

Proxy is delegating to implementationPosition
Looking for setter (Slither line:1200)

Looking for setter in Upgradeable (Slither line:1204)


Begin Upgradeable.find_setter_in_contract (Slither line:3109)

Expression: keccak256(bytes)(btcpx.relay.proxy.implementation) (Slither line:3112)
Checking function: constructor() returns() (Slither line:3117)
Checking function: getImplementation() returns(address) (Slither line:3117)
Visibility: public
getImplementation contains assembly (Slither line:3143)
implementation = sload(uint256)(position)
is an Assignment Operation (Slither line:3206)
keccak256(bytes)(btcpx.relay.proxy.implementation)
Checking function: setImplementation(address) returns() (Slither line:3117)
Visibility: public
setImplementation contains assembly (Slither line:3143)
require(bool,string)(currentImplementation != _newImplementation,ERR_SAME_ADDRESSES)
implementation = sload(uint256)(position)
is an Assignment Operation (Slither line:3206)
keccak256(bytes)(btcpx.relay.proxy.implementation)
require(bool,string)(msg.sender == getOwner(),ERR_NOT_OWNER)
sstore(uint256,uint256)(position,_newImplementation)
sstore(uint256,uint256)

End Upgradeable.find_setter_in_contract (Slither line:3315)


Implementation set by function: setImplementation in contract: Upgradeable (Slither line:1264)
Looking for getter (Slither line:1273)


Begin Upgradeable.find_getter_in_contract (Slither line:2964)

implementationPosition is a Variable object
keccak256(bytes)(btcpx.relay.proxy.implementation)
Checking function: constructor (Slither line:2978)
Checking function: getOwner (Slither line:2978)
getOwner returns address variable called owner (Slither line:2998)
Checking function: setOwner (Slither line:2978)
Checking function: transferOwnership (Slither line:2978)
Checking function: _transferOwnership (Slither line:2978)
Checking function: constructor (Slither line:2978)
Checking function: getImplementation (Slither line:2978)
getImplementation returns address variable called implementation (Slither line:2998)
Checking function: setImplementation (Slither line:2978)
Checking function: isContract (Slither line:2978)
isContract returns bool variable  (Slither line:2998)
RETURN node expression: false (Slither line:3018)
RETURN node expression: size > 0 (Slither line:3018)
Checking function: slitherConstructorConstantVariables (Slither line:2978)

End Upgradeable.find_getter_in_contract (Slither line:3073)


Begin Proxy.find_getter_in_contract (Slither line:2964)

implementationPosition is a Variable object
keccak256(bytes)(btcpx.relay.proxy.implementation)
Checking function: constructor (Slither line:2978)
Checking function: getImplementation (Slither line:2978)
getImplementation returns address variable called implementation (Slither line:2998)
getImplementation contains assembly (Slither line:3041)

End Proxy.find_getter_in_contract (Slither line:3073)


Implementation retrieved by function: getImplementation in contract: Proxy (Slither line:1285)

End Proxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: Proxy
Setter found in contract Upgradeable
impl_address_from_contract_call: keccak256(bytes)(btcpx.relay.proxy.implementation)
impl_address_from_contract_call: StateVariable implementationPosition
impl_address_from_contract_call: getter is getImplementation
getter.full_name = getImplementation()
impl_address_from_contract_call: CallExpression calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0x0,calldatasize()())
impl_address_from_contract_call: arg is ptr_fallback_asm_0
impl_address_from_contract_call: arg is 0x0
impl_address_from_contract_call: arg is calldatasize()()
impl_address_from_contract_call: CallExpression calldatasize()()
impl_address_from_contract_call: CallExpression delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_impl,ptr_fallback_asm_0,calldatasize()(),0x0,0)
impl_address_from_contract_call: arg is gas()()
impl_address_from_contract_call: CallExpression gas()()
impl_address_from_contract_call: CallExpression revert(uint256,uint256)(ptr_fallback_asm_0,size_fallback_asm_0)
impl_address_from_contract_call: arg is ptr_fallback_asm_0
impl_address_from_contract_call: arg is size_fallback_asm_0
impl_address_from_contract_call: CallExpression return(uint256,uint256)(ptr_fallback_asm_0,size_fallback_asm_0)
impl_address_from_contract_call: arg is ptr_fallback_asm_0
impl_address_from_contract_call: arg is size_fallback_asm_0
impl_address_from_contract_call: CallExpression sload(uint256)(position)
impl_address_from_contract_call: arg is position
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression require(bool,string)(msg.data.length > 0,ERR_INVALID_DATA)
impl_address_from_contract_call: arg is msg.data.length > 0
impl_address_from_contract_call: arg is ERR_INVALID_DATA
impl_address_from_contract_call: CallExpression require(bool,string)(msg.sender == getOwner(),ERR_NOT_OWNER)
impl_address_from_contract_call: arg is msg.sender == getOwner()
impl_address_from_contract_call: arg is ERR_NOT_OWNER
impl_address_from_contract_call: CallExpression returndatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0x0,size_fallback_asm_0)
impl_address_from_contract_call: arg is ptr_fallback_asm_0
impl_address_from_contract_call: arg is 0x0
impl_address_from_contract_call: arg is size_fallback_asm_0
impl_address_from_contract_call: CallExpression sload(uint256)(position)
impl_address_from_contract_call: arg is position
impl_address_from_contract_call: CallExpression getImplementation()
impl_address_from_contract_call: CallExpression onlyOwner()
impl_address_from_contract_call: CallExpression mload(uint256)(0x40)
impl_address_from_contract_call: arg is 0x40
called: keccak256(bytes)
Checking public function getImplementation
Checking public function setImplementation
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == getOwner(),ERR_NOT_OWNER)
Checking public function getOwner
Checking external function transferOwnership
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == getOwner(),ERR_NOT_OWNER)
Checking external function fallback
functions_writing_to_variable: implementationPosition
functions_writing_to_variable: checking function Upgradeable.setImplementation (proxy_features line:893)
get_value_assigned: sstore(uint256,uint256)(position,_newImplementation)
functions_writing_to_variable: setImplementation writes _newImplementation to implementationPosition using sstore (proxy_features line:993)
functions_writing_to_variable: checking function Upgradeable.transferOwnership (proxy_features line:893)
functions_writing_to_variable: checking function Proxy._transferOwnership (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function Upgradeable.getImplementation (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function Upgradeable.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: exp = ownerPosition = keccak256(bytes)(btcpx.relay.proxy.owner) (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ownerPosition = keccak256(bytes)(btcpx.relay.proxy.owner) (proxy_features line:907)
functions_writing_to_variable: exp = ERR_ZERO_ADDRESS = Zero address (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ERR_ZERO_ADDRESS = Zero address (proxy_features line:907)
functions_writing_to_variable: exp = ERR_NOT_OWNER = Sender is not owner (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ERR_NOT_OWNER = Sender is not owner (proxy_features line:907)
functions_writing_to_variable: exp = implementationPosition = keccak256(bytes)(btcpx.relay.proxy.implementation) (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: implementationPosition = keccak256(bytes)(btcpx.relay.proxy.implementation) (proxy_features line:907)
functions_writing_to_variable: Identifier: implementationPosition (proxy_features line:919)
get_value_assigned: implementationPosition = keccak256(bytes)(btcpx.relay.proxy.implementation)
functions_writing_to_variable: exp = ERR_INVALID_ADDRESS = Implementation address is invalid (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ERR_INVALID_ADDRESS = Implementation address is invalid (proxy_features line:907)
functions_writing_to_variable: exp = ERR_INVALID_DATA = Function data is invalid (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ERR_INVALID_DATA = Function data is invalid (proxy_features line:907)
functions_writing_to_variable: exp = ERR_CONTRACT_ADDRESS = Destination address is not contract (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ERR_CONTRACT_ADDRESS = Destination address is not contract (proxy_features line:907)
functions_writing_to_variable: exp = ERR_SAME_ADDRESSES = Old and New implementation addresses are same (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ERR_SAME_ADDRESSES = Old and New implementation addresses are same (proxy_features line:907)
functions_writing_to_variable: checking function Upgradeable._transferOwnership (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: exp = ownerPosition = keccak256(bytes)(btcpx.relay.proxy.owner) (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ownerPosition = keccak256(bytes)(btcpx.relay.proxy.owner) (proxy_features line:907)
functions_writing_to_variable: exp = ERR_ZERO_ADDRESS = Zero address (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ERR_ZERO_ADDRESS = Zero address (proxy_features line:907)
functions_writing_to_variable: exp = ERR_NOT_OWNER = Sender is not owner (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ERR_NOT_OWNER = Sender is not owner (proxy_features line:907)
functions_writing_to_variable: exp = implementationPosition = keccak256(bytes)(btcpx.relay.proxy.implementation) (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: implementationPosition = keccak256(bytes)(btcpx.relay.proxy.implementation) (proxy_features line:907)
functions_writing_to_variable: Identifier: implementationPosition (proxy_features line:919)
get_value_assigned: implementationPosition = keccak256(bytes)(btcpx.relay.proxy.implementation)
functions_writing_to_variable: exp = ERR_INVALID_ADDRESS = Implementation address is invalid (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ERR_INVALID_ADDRESS = Implementation address is invalid (proxy_features line:907)
functions_writing_to_variable: exp = ERR_INVALID_DATA = Function data is invalid (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ERR_INVALID_DATA = Function data is invalid (proxy_features line:907)
functions_writing_to_variable: exp = ERR_CONTRACT_ADDRESS = Destination address is not contract (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ERR_CONTRACT_ADDRESS = Destination address is not contract (proxy_features line:907)
functions_writing_to_variable: exp = ERR_SAME_ADDRESSES = Old and New implementation addresses are same (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ERR_SAME_ADDRESSES = Old and New implementation addresses are same (proxy_features line:907)
functions_writing_to_variable: checking function Proxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.getOwner (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.getImplementation (proxy_features line:893)
functions_writing_to_variable: checking function Upgradeable.constructor (proxy_features line:893)
functions_writing_to_variable: checking function Upgradeable.constructor (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.setOwner (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.setImplementation (proxy_features line:893)
get_value_assigned: sstore(uint256,uint256)(position,_newImplementation)
functions_writing_to_variable: setImplementation writes _newImplementation to implementationPosition using sstore (proxy_features line:993)
functions_writing_to_variable: checking function Upgradeable.getOwner (proxy_features line:893)
functions_writing_to_variable: checking function Upgradeable.isContract (proxy_features line:893)
functions_writing_to_variable: checking function Upgradeable.setOwner (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.isContract (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.transferOwnership (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.constructor (proxy_features line:893)
has_compatibility_checks: dependencies: []
has_compatibility_checks: checking public function setImplementation
require(bool,string)(currentImplementation != _newImplementation,ERR_SAME_ADDRESSES)
has_compatibility_checks: condition currentImplementation != _newImplementation
check_condition_from_expression: modifier calls: ['onlyOwner()']
check_condition_from_expression: condition getImplementation() != _newImplementation
has_compatibility_checks: IF node exp = _target == address(0)
require(bool,string)(msg.sender == getOwner(),ERR_NOT_OWNER)
has_compatibility_checks: condition msg.sender == getOwner()
require(bool,string)(_newImplementation != address(0),ERR_ZERO_ADDRESS)
has_compatibility_checks: condition _newImplementation != address(0)
check_condition_from_expression: modifier calls: ['onlyOwner()']
check_condition_from_expression: condition _newImplementation != address(0)
require(bool,string)(isContract(_newImplementation),ERR_CONTRACT_ADDRESS)
has_compatibility_checks: condition isContract(_newImplementation)
check_condition_from_expression: modifier calls: ['onlyOwner()']
has_compatibility_checks: checking public function setImplementation
require(bool,string)(currentImplementation != _newImplementation,ERR_SAME_ADDRESSES)
has_compatibility_checks: condition currentImplementation != _newImplementation
check_condition_from_expression: modifier calls: ['onlyOwner()']
check_condition_from_expression: condition getImplementation() != _newImplementation
has_compatibility_checks: IF node exp = _target == address(0)
require(bool,string)(_newImplementation != address(0),ERR_ZERO_ADDRESS)
has_compatibility_checks: condition _newImplementation != address(0)
check_condition_from_expression: modifier calls: ['onlyOwner()']
check_condition_from_expression: condition _newImplementation != address(0)
require(bool,string)(msg.sender == getOwner(),ERR_NOT_OWNER)
has_compatibility_checks: condition msg.sender == getOwner()
require(bool,string)(isContract(_newImplementation),ERR_CONTRACT_ADDRESS)
has_compatibility_checks: condition isContract(_newImplementation)
check_condition_from_expression: modifier calls: ['onlyOwner()']
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool,string)(msg.data.length > 0,ERR_INVALID_DATA)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: onlyOwner()
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0x0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: ptr_fallback_asm_0 = mload(uint256)(0x40)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: _impl = getImplementation()
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_impl,ptr_fallback_asm_0,calldatasize()(),0x0,0)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
Found public function: constructor
Found public function: getImplementation
has_time_delay: (node.type) NEW VARIABLE
(Expression) currentImplementation = getImplementation()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(currentImplementation != _newImplementation,ERR_SAME_ADDRESSES)
has_time_delay: (node.type) IF
(Expression) _target == address(0)
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = sload(uint256)(position)
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = implementationPosition
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == getOwner(),ERR_NOT_OWNER)
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = ownerPosition
has_time_delay: (node.type) EXPRESSION
(Expression) sstore(uint256,uint256)(position,_newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) onlyOwner()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(_newImplementation != address(0),ERR_ZERO_ADDRESS)
has_time_delay: (node.type) RETURN
(Expression) false
has_time_delay: (node.type) EXPRESSION
(Expression) owner = sload(uint256)(position)
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(isContract(_newImplementation),ERR_CONTRACT_ADDRESS)
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(_target)
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = implementationPosition
