
Begin ProxyToken.is_proxy (Slither line:1425)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin ProxyToken.find_delegatecall_in_exp_node

Found Expression Node: success_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),master_fallback_asm_0,ptr_fallback_asm_0,calldatasize()(),0,0) (Slither line:2800)
Expression Type: = (Slither line:2803)
Checking right side of assignment expression... (Slither line:2811)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2815)
Args:
gas()()
master_fallback_asm_0
ptr_fallback_asm_0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2822)

Destination is master_fallback_asm_0 (Slither line:2826)
dest.value: master_fallback_asm_0 (Slither line:2829)
Expression: None (Slither line:2834)

Begin ProxyToken.find_delegate_variable_from_name
Searching for master_fallback_asm_0 (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking masterCopy (Slither line:1689)
Checking name32 (Slither line:1689)
Checking ownerPrices (Slither line:1689)
Checking balances (Slither line:1689)
Checking allowed (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
fallback contains assembly, searching for sload (Slither line:1875)

End ProxyToken.find_delegate_variable_from_name (Slither line:1947)


End ProxyToken.find_delegatecall_in_exp_node (Slither line:2856)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin ProxyToken.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(0,returndatasize()()) (Slither line:2800)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2815)
Args:
0
returndatasize()()

End ProxyToken.find_delegatecall_in_exp_node (Slither line:2856)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin ProxyToken.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:2800)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2815)
Args:
0
0
returndatasize()()

End ProxyToken.find_delegatecall_in_exp_node (Slither line:2856)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin ProxyToken.find_delegatecall_in_exp_node

Found Expression Node: ptr_fallback_asm_0 = mload(uint256)(0x40) (Slither line:2800)
Expression Type: = (Slither line:2803)
Checking right side of assignment expression... (Slither line:2811)
Expression called: mload(uint256)
Type of call: uint256 (Slither line:2815)
Args:
0x40

End ProxyToken.find_delegatecall_in_exp_node (Slither line:2856)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin ProxyToken.find_delegatecall_in_exp_node

Found Expression Node: mstore(uint256,uint256)(0,master_fallback_asm_0) (Slither line:2800)
Expression called: mstore(uint256,uint256)
Type of call:  (Slither line:2815)
Args:
0
master_fallback_asm_0

End ProxyToken.find_delegatecall_in_exp_node (Slither line:2856)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Found Assembly Node (Slither line:1447)


Begin ProxyToken.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'master'
Looking for corresponding Variable
Current function: fallback

Begin ProxyToken.find_delegate_variable_from_name
Searching for master (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking masterCopy (Slither line:1689)
Checking name32 (Slither line:1689)
Checking ownerPrices (Slither line:1689)
Checking balances (Slither line:1689)
Checking allowed (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
fallback contains assembly, searching for sload (Slither line:1875)
{'kind': 'number', 'nodeType': 'YulLiteral', 'src': '1167:1:0', 'type': '', 'value': '0'} (Slither line:1907)
Found sload(0), getting first state variable

End ProxyToken.find_delegate_variable_from_name (Slither line:1947)


End ProxyToken.find_delegatecall_in_asm (Slither line:1637)


End ProxyToken.is_proxy (Slither line:1476)


Begin ProxyToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: ProxyToken 
ProxyToken is delegating to masterCopy
Looking for setter (Slither line:1200)


Begin ProxyToken.find_setter_in_contract (Slither line:3117)

Checking function: constructor(address) returns() (Slither line:3125)
Checking function: fallback() returns() (Slither line:3125)

End ProxyToken.find_setter_in_contract (Slither line:3343)


Could not find implementation setter in ProxyToken (Slither line:1269)
Looking for getter (Slither line:1273)


Begin ProxyToken.find_getter_in_contract (Slither line:2972)

masterCopy is a Variable object
Checking function: constructor (Slither line:2986)
Checking function: fallback (Slither line:2986)

End ProxyToken.find_getter_in_contract (Slither line:3081)

Could not find implementation getter in ProxyToken (Slither line:1305)
Checking for masterCopy at slot 0 in contract AbstractBaseR (Slither line:1355)
Found baseNode at slot 0 in contract AbstractBaseR (Slither line:1362)
Checking for baseNode at slot 0 in contract AbstractRR (Slither line:1355)
Found defaultResolver at slot 0 in contract AbstractRR (Slither line:1362)
Checking for defaultResolver at slot 0 in contract AbstractGWF (Slither line:1355)
Found resolverContract at slot 0 in contract AbstractGWF (Slither line:1362)
Checking for resolverContract at slot 0 in contract AbstractTM (Slither line:1355)
Found masterCopy at slot 0 in contract AbstractTM (Slither line:1362)

Begin AbstractTM.find_getter_in_contract (Slither line:2972)

masterCopy is a Variable object

End AbstractTM.find_getter_in_contract (Slither line:3081)


Begin AbstractTM.find_setter_in_contract (Slither line:3117)

Checking function: getMemberBalances(bytes32,address) returns(uint256[]) (Slither line:3125)
Visibility: external
Checking function: balanceOf(address) returns(uint256) (Slither line:3125)
Visibility: external
Checking function: sellPrice() returns(uint256) (Slither line:3125)
Visibility: external
Checking function: buyPrice() returns(uint256) (Slither line:3125)
Visibility: external
Checking function: name() returns(string) (Slither line:3125)
Visibility: external

End AbstractTM.find_setter_in_contract (Slither line:3343)

Checking for masterCopy at slot 0 in contract TokenMaster2 (Slither line:1355)
Found masterCopy at slot 0 in contract TokenMaster2 (Slither line:1362)

Begin TokenMaster2.find_getter_in_contract (Slither line:2972)

masterCopy is a Variable object
Checking function: owner (Slither line:2986)
owner returns address variable called ow (Slither line:3006)
RETURN node expression: address(uint160(ownerPrices & k_aMask)) (Slither line:3026)
Checking function: name (Slither line:2986)
name returns string variable  (Slither line:3006)
RETURN node expression: bytes32ToStr(name32) (Slither line:3026)
Checking function: standard (Slither line:2986)
standard returns string variable called std (Slither line:3006)
RETURN node expression: ERC-20 (Slither line:3026)
Checking function: symbol (Slither line:2986)
symbol returns string variable called sym (Slither line:3006)
RETURN node expression: shares (Slither line:3026)
Checking function: decimals (Slither line:2986)
decimals returns uint8 variable called dec (Slither line:3006)
RETURN node expression: 2 (Slither line:3026)
Checking function: totalSupply (Slither line:2986)
totalSupply returns uint256 variable called spl (Slither line:3006)
RETURN node expression: 120000000 (Slither line:3026)
Checking function: sellPrice (Slither line:2986)
sellPrice returns uint256 variable called sp (Slither line:3006)
RETURN node expression: uint256((uint256(ownerPrices & k_sMask) >> 208) & k_mask) (Slither line:3026)
Checking function: buyPrice (Slither line:2986)
buyPrice returns uint256 variable called bp (Slither line:3006)
RETURN node expression: uint256((uint256(ownerPrices & k_bMask) >> 160) & k_mask) (Slither line:3026)
Checking function: balanceOf (Slither line:2986)
balanceOf returns uint256 variable called thebalance (Slither line:3006)
RETURN node expression: balances[tokenOwner] >> 1 (Slither line:3026)
Checking function: frozen (Slither line:2986)
frozen returns bool variable called isFrozen (Slither line:3006)
RETURN node expression: (uint256(balances[tokenOwner] & k_frozenFlag) > 0) (Slither line:3026)
Checking function: tokenAllow (Slither line:2986)
tokenAllow returns uint256 variable called tokens (Slither line:3006)
RETURN node expression: allowed[tokenOwner][spender] (Slither line:3026)
Checking function: saveOwner (Slither line:2986)
saveOwner returns bytes32 variable called o (Slither line:3006)
RETURN node expression: bytes32(uint256(uint256(buyP) << 160) + uint256(uint256(sellP) << 208) + uint256(uint160(own))) (Slither line:3026)
Checking function: getResolverReport (Slither line:2986)
getResolverReport returns address variable called rslv_owner (Slither line:3006)
getResolverReport returns address variable called gwp (Slither line:3006)
getResolverReport returns bytes variable called abi32_ (Slither line:3006)
getResolverReport returns bytes variable called abi128_ (Slither line:3006)
getResolverReport returns address[] variable called GWPowners (Slither line:3006)
RETURN node expression: (gwfc.ens().owner(hash),address(gwpc),abi32,abi128,gwpc.getOwners()) (Slither line:3026)
Checking function: tokenReportBalances (Slither line:2986)
tokenReportBalances returns uint256[] variable called tokenR (Slither line:3006)
tokenReportBalances returns address[] variable called GWPowners (Slither line:3006)
tokenReportBalances returns uint256[] variable called balArr (Slither line:3006)
RETURN node expression: (token,GWPowners,balArr) (Slither line:3026)
Checking function: getMemberBalances (Slither line:2986)
getMemberBalances returns uint256[] variable  (Slither line:3006)
RETURN node expression: balArr (Slither line:3026)
RETURN node expression: balArr (Slither line:3026)
Checking function: getNodeHash (Slither line:2986)
getNodeHash returns bytes32 variable called hash (Slither line:3006)
RETURN node expression: hash (Slither line:3026)
Checking function: getMemberReverseRecords (Slither line:2986)
getMemberReverseRecords returns uint256 variable called result (Slither line:3006)
RETURN node expression: uint256(result) (Slither line:3026)
Checking function: getDomainReport (Slither line:2986)
getDomainReport returns uint256[] variable called token (Slither line:3006)
getDomainReport returns bytes variable called structure (Slither line:3006)
getDomainReport returns address[] variable called GWPowners (Slither line:3006)
getDomainReport returns uint256[] variable called balArr (Slither line:3006)
getDomainReport returns bytes variable called abi128_ (Slither line:3006)
RETURN node expression: (new uint256[](0),bytes(gwfc),new address[](0),new uint256[](0),bytes(gwfc)) (Slither line:3026)
RETURN node expression: (new uint256[](0),bytes(gwfc - invalid),new address[](0),new uint256[](0),bytes(gwfc - invalid)) (Slither line:3026)
RETURN node expression: (tokenRep,structure_,new address[](0),new uint256[](0),bytes(default)) (Slither line:3026)
RETURN node expression: (tokenRep,structure_,GWPowners,balArr,abi128) (Slither line:3026)
RETURN node expression: (tokenRep,structure_,new address[](0),new uint256[](0),bytes(gwpc)) (Slither line:3026)
Checking function: char (Slither line:2986)
char returns bytes1 variable called c (Slither line:3006)
RETURN node expression: bytes1(uint8(b) + 0x30) (Slither line:3026)
RETURN node expression: bytes1(uint8(b) + 0x57) (Slither line:3026)
Checking function: b_String (Slither line:2986)
b_String returns string variable  (Slither line:3006)
RETURN node expression: string(s) (Slither line:3026)
Checking function: mb32 (Slither line:2986)
mb32 returns bytes32 variable called a (Slither line:3006)
Checking function: bytes32ToStr (Slither line:2986)
bytes32ToStr returns string variable  (Slither line:3006)
RETURN node expression: string(bArr) (Slither line:3026)
Checking function: toString (Slither line:2986)
toString returns string variable  (Slither line:3006)
RETURN node expression: string(bArr) (Slither line:3026)
Checking function: memcpy (Slither line:2986)
Checking function: substring (Slither line:2986)
substring returns bytes variable  (Slither line:3006)
RETURN node expression: ret (Slither line:3026)
Checking function: delArr (Slither line:2986)
delArr returns uint8[] variable  (Slither line:3006)
RETURN node expression: delimiter (Slither line:3026)
Checking function: approve_v2d (Slither line:2986)
Checking function: transfer_G8l (Slither line:2986)
Checking function: drainShares (Slither line:2986)
Checking function: transferFrom_78S (Slither line:2986)
Checking function: transferOwnership_m0 (Slither line:2986)
Checking function: freezeAccount_16R (Slither line:2986)
Checking function: setPrices_7d4 (Slither line:2986)
Checking function: buy_uae (Slither line:2986)
Checking function: sell_LA2 (Slither line:2986)
Checking function: newToken (Slither line:2986)
Checking function: version (Slither line:2986)
version returns uint256 variable called v (Slither line:3006)
RETURN node expression: 2001009 (Slither line:3026)
Checking function: fallback (Slither line:2986)
Checking function: receive (Slither line:2986)
Checking function: constructor (Slither line:2986)
Checking function: slitherConstructorVariables (Slither line:2986)
Checking function: slitherConstructorConstantVariables (Slither line:2986)

End TokenMaster2.find_getter_in_contract (Slither line:3081)


Begin TokenMaster2.find_setter_in_contract (Slither line:3117)

Checking function: owner() returns(address) (Slither line:3125)
Visibility: external
address(uint160(ownerPrices & k_aMask))
Checking function: name() returns(string) (Slither line:3125)
Visibility: external
bArr[i] = _b[i]
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
i ++
string(bArr)
bytes32ToStr(name32)
Checking function: standard() returns(string) (Slither line:3125)
Visibility: external
ERC-20
Checking function: symbol() returns(string) (Slither line:3125)
Visibility: external
shares
Checking function: decimals() returns(uint8) (Slither line:3125)
Visibility: external
2
Checking function: totalSupply() returns(uint256) (Slither line:3125)
Visibility: external
120000000
Checking function: sellPrice() returns(uint256) (Slither line:3125)
Visibility: external
uint256((uint256(ownerPrices & k_sMask) >> 208) & k_mask)
Checking function: buyPrice() returns(uint256) (Slither line:3125)
Visibility: external
uint256((uint256(ownerPrices & k_bMask) >> 160) & k_mask)
Checking function: balanceOf(address) returns(uint256) (Slither line:3125)
Visibility: external
balances[tokenOwner] >> 1
Checking function: frozen(address) returns(bool) (Slither line:3125)
Visibility: external
(uint256(balances[tokenOwner] & k_frozenFlag) > 0)
Checking function: tokenAllow(address,address) returns(uint256) (Slither line:3125)
Visibility: external
allowed[tokenOwner][spender]
Checking function: saveOwner(uint256,uint256,address) returns(bytes32) (Slither line:3125)
Visibility: private
Checking function: getResolverReport(bytes32) returns(address,address,bytes,bytes,address[]) (Slither line:3125)
Visibility: external
ignore1 = ignore1 + ignore2
is an Assignment Operation (Slither line:3214)
(ignore1,abi32) = gwfc.resolverContract().ABI(hash,32)
is an Assignment Operation (Slither line:3214)
(gwfc.ens().owner(hash),address(gwpc),abi32,abi128,gwpc.getOwners())
(ignore2,abi128) = gwfc.resolverContract().ABI(hash,128)
is an Assignment Operation (Slither line:3214)
Checking function: tokenReportBalances(bytes32) returns(uint256[],address[],uint256[]) (Slither line:3125)
Visibility: external
balArr = AbstractTM(address(this)).getMemberBalances(hash,gwfc)
is an Assignment Operation (Slither line:3214)
token[3] = uint256((uint256(ownerPrices & k_sMask) >> 208) & k_mask)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
token[0] = uint256(uint160(gwfc))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
token[7] = uint256(bytes32(name32 | 0x2000000000000000000000000000000000000000000000000000000000000000))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
(token,GWPowners,balArr)
token[4] = uint256((uint256(ownerPrices & k_bMask) >> 160) & k_mask)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
GWPowners = AbstractGWP(gwpc).getOwners()
is an Assignment Operation (Slither line:3214)
token[1] = uint256(uint160(gwpc))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
token[8] = uint256(gwpc.balance)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
token[5] = uint256(balances[address(this)] >> 1)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
token[9] = uint256(address(this).balance)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
token[2] = 2
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
token[6] = uint256(balances[gwpc] >> 1)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
Checking function: getMemberBalances(bytes32,address) returns(uint256[]) (Slither line:3125)
Visibility: external
i = 0
is an Assignment Operation (Slither line:3214)
require(bool,string)(l_ownerArr.length >= 2,Bad owners array!)
balArr[i + m] = uint256(tArr[i])
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
memAddr = l_ownerArr[i]
is an Assignment Operation (Slither line:3214)
i ++
balArr[i * 2] = uint256(memAddr.balance)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
balArr[(i * 2) + 1] = uint256(AbstractTM(ptc).balanceOf(memAddr))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
balArr
i ++
balArr
Checking function: getNodeHash(string,address) returns(bytes32) (Slither line:3125)
Visibility: internal
Checking function: getMemberReverseRecords(address,address) returns(uint256) (Slither line:3125)
Visibility: private
Checking function: getDomainReport(string,address,bytes32) returns(uint256[],bytes,address[],uint256[],bytes) (Slither line:3125)
Visibility: external
memcpy(dest,src,len)
srcpart_memcpy_asm_1 = mload(uint256)(src) & ~ mask
is an Assignment Operation (Slither line:3214)
dest = ret + 32
is an Assignment Operation (Slither line:3214)
src = self + 32 + offset
is an Assignment Operation (Slither line:3214)
(report_,gwpc_,ptc_,gwfc_,structure_) = AbstractGWF(gwfc).domainReport(_domain,0)
is an Assignment Operation (Slither line:3214)
ret
destpart_memcpy_asm_1 = mload(uint256)(dest) & mask
is an Assignment Operation (Slither line:3214)
result = 0
is an Assignment Operation (Slither line:3214)
mstore(uint256,uint256)(dest,destpart_memcpy_asm_1 | srcpart_memcpy_asm_1)
(new uint256[](0),bytes(gwfc),new address[](0),new uint256[](0),bytes(gwfc))
a = mload(uint256)(_data + 32)
is an Assignment Operation (Slither line:3214)
(new uint256[](0),bytes(gwfc - invalid),new address[](0),new uint256[](0),bytes(gwfc - invalid))
require(bool,string)(offset + len <= self.length,substring!!!)
i ++
node = AbstractGWF(gwfc).reverseContract().node(owners[i])
is an Assignment Operation (Slither line:3214)
nm = AbstractResolver(AbstractRR(AbstractGWF(gwfc).reverseContract()).defaultResolver()).name(node)
is an Assignment Operation (Slither line:3214)
m = m * 2
is an Assignment Operation (Slither line:3214)
result += m
is an Assignment Operation (Slither line:3214)
result += n
is an Assignment Operation (Slither line:3214)
tokenRep[10] = report_
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
tokenRep[11] = uint256(uint160(gwpc_))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
tokenRep[12] = uint256(uint160(ptc_))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
tokenRep[13] = uint256(uint160(gwfc_))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
result += l
is an Assignment Operation (Slither line:3214)
i += 2
is an Assignment Operation (Slither line:3214)
ignore2 ++
(tokenRep,structure_,new address[](0),new uint256[](0),bytes(default))
hash = keccak256(bytes)(abi.encodePacked(AbstractBaseR(AbstractGWF(gwfc).base()).baseNode(),keccak256(bytes)(substring(bytes(dn),delArr(dn)[0] + 1,delArr(dn)[1] - delArr(dn)[0] - 1))))
is an Assignment Operation (Slither line:3214)
(tokenRep,structure_,GWPowners,balArr,abi128)
n = n * 2
is an Assignment Operation (Slither line:3214)
hash = keccak256(bytes)(abi.encodePacked(hash,keccak256(bytes)(substring(bytes(dn),0,delArr(dn)[0]))))
is an Assignment Operation (Slither line:3214)
i += 3
is an Assignment Operation (Slither line:3214)
tokenRep[14] = getMemberReverseRecords(AbstractResolver(AbstractGWF(gwfc).resolverContract()).addr(hash),gwfc)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
l = l * 2
is an Assignment Operation (Slither line:3214)
hash
balArr = AbstractTM(address(this)).getMemberBalances(hash,gwfc_)
is an Assignment Operation (Slither line:3214)
uint256(result)
i += 4
is an Assignment Operation (Slither line:3214)
(tokenRep,structure_,new address[](0),new uint256[](0),bytes(gwpc))
len = 0
is an Assignment Operation (Slither line:3214)
i += 5
is an Assignment Operation (Slither line:3214)
GWPowners = AbstractGWP(gwpc).getOwners()
is an Assignment Operation (Slither line:3214)
len -= 32
is an Assignment Operation (Slither line:3214)
tokenRep[0] = uint256(uint160(address(AbstractGWP(gwpc).getGWF())))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
len ++
tokenRep[1] = uint256(uint160(gwpc))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
i += 6
is an Assignment Operation (Slither line:3214)
dest += 32
is an Assignment Operation (Slither line:3214)
tokenRep[2] = 2
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
mstore(uint256,uint256)(dest,mload(uint256)(src))
tokenRep[3] = uint256(AbstractTM(ptc_).sellPrice())
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
src += 32
is an Assignment Operation (Slither line:3214)
tokenRep[4] = uint256(AbstractTM(ptc_).buyPrice())
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
tokenRep[5] = uint256(AbstractTM(ptc_).balanceOf(address(this)))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
tokenRep[6] = uint256(AbstractTM(ptc_).balanceOf(gwpc))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
delimiter[nb] = uint8(i)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
tokenRep[7] = uint256(mb32(bytes(AbstractTM(ptc_).name())))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
nb ++
None
tokenRep[8] = uint256(gwpc.balance)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
tokenRep[9] = uint256(address(this).balance)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
(ignore2,abi128) = AbstractGWF(gwfc).resolverContract().ABI(hash,128)
is an Assignment Operation (Slither line:3214)
delimiter
i += 1
is an Assignment Operation (Slither line:3214)
Checking function: char(bytes1) returns(bytes1) (Slither line:3125)
Visibility: private
Checking function: b_String(bytes32,uint256,bool) returns(string) (Slither line:3125)
Visibility: private
Checking function: mb32(bytes) returns(bytes32) (Slither line:3125)
Visibility: private
Checking function: bytes32ToStr(bytes32) returns(string) (Slither line:3125)
Visibility: internal
Checking function: toString(bytes32) returns(string) (Slither line:3125)
Visibility: internal
Checking function: memcpy(uint256,uint256,uint256) returns() (Slither line:3125)
Visibility: private
Checking function: substring(bytes,uint256,uint256) returns(bytes) (Slither line:3125)
Visibility: internal
Checking function: delArr(string) returns(uint8[]) (Slither line:3125)
Visibility: internal
Checking function: approve_v2d(address,uint256) returns() (Slither line:3125)
Visibility: external
Approval(msg.sender,spender,tokens)
require(bool,string)(uint256(balances[msg.sender] & k_frozenFlag) == 0,account frozen!)
allowed[msg.sender][spender] += tokens
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
Checking function: transfer_G8l(address,uint256) returns() (Slither line:3125)
Visibility: external
require(bool,string)(uint256(balSender & k_frozenFlag) == 0,account frozen!)
require(bool,string)(bal + amount >= bal,overflow error!)
require(bool,string)(balSender >> 1 >= amount,not enough token!)
balances[msg.sender] -= amount << 1
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
balances[toReceiver] += amount << 1
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
Transfer(msg.sender,toReceiver,amount)
Checking function: drainShares(bytes32,address,address,address) returns() (Slither line:3125)
Visibility: external
balances[toReceiver] += amount
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
require(bool,string)(AbstractGWF(_GWF).getProxyToken(dHash) == address(this) && address(uint160(ownerPrices & k_aMask)) == _GWF,unknown group!)
Transfer(from,toReceiver,amount)
require(bool,string)(AbstractGWF(_GWF).getIsOwner(dHash,from),not an owner!)
require(bool,string)(bal + amount >= bal,overflow error!)
require(bool,string)(amount > 0,balance 0!)
require(bool,string)(AbstractGWF(_GWF).getGWProxy(dHash) == msg.sender,only GWP!)
balances[from] -= amount
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
require(bool,string)(uint256(amount & k_frozenFlag) == 0,account frozen!)
Checking function: transferFrom_78S(address,address,uint256) returns() (Slither line:3125)
Visibility: external
Transfer(from,toReceiver,amount)
allowed[from][msg.sender] -= amount
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
require(bool,string)(bal + amount >= bal,overflow error!)
require(bool,string)(balances[from] >> 1 >= amount,not enough token!)
balances[from] -= amount << 1
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
require(bool,string)(uint256(balances[msg.sender] & k_frozenFlag) == 0,account frozen!)
balances[toReceiver] += amount << 1
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
require(bool,string)(allowed[from][msg.sender] >= amount,allowance too small)
Checking function: transferOwnership_m0(address) returns() (Slither line:3125)
Visibility: external
ownerPrices = uint256(oPrices & k_pMask) + uint256(uint160(newOwner))
is an Assignment Operation (Slither line:3214)
require(bool,string)(msg.sender == address(uint160(oPrices & k_aMask)),only owner)
Checking function: freezeAccount_16R(address,bool) returns() (Slither line:3125)
Visibility: external
require(bool,string)(msg.sender == address(uint160(ownerPrices & k_aMask)),only owner)
balances[target] = uint256(b)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
FrozenFunds(target,freeze)
b = b - uint256(b % 2)
is an Assignment Operation (Slither line:3214)
balances[target] = uint256(b + 1)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
Checking function: setPrices_7d4(uint256,uint256) returns() (Slither line:3125)
Visibility: external
require(bool,string)(msg.sender == o,only owner)
ownerPrices = uint256(newBuyPrice << 160) + uint256(newSellPrice << 208) + uint256(uint160(o))
is an Assignment Operation (Slither line:3214)
Checking function: buy_uae() returns() (Slither line:3125)
Visibility: external
require(bool,string)(localCounter == _guardCounter,re-entrance attack prohibited. Yeah!)
require(bool,string)(msg.value > 0 && bPrice > 0,value/price 0)
require(bool,string)(uint256(bal & k_frozenFlag) == 0,account frozen!)
require(bool,string)(balances[address(this)] >> 1 >= amount,not enough token!)
require(bool,string)((bal >> 1) + (amount << 1) >= (bal >> 1),overflow error!)
require(bool,string)(msg.value > 0,value 0!)
balances[address(this)] -= amount << 1
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
balances[msg.sender] += amount << 1
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
Transfer(address(this),msg.sender,amount)
_guardCounter += 1
is an Assignment Operation (Slither line:3214)
nonReentrant()
Checking function: sell_LA2(uint256) returns() (Slither line:3125)
Visibility: external
address(msg.sender).transfer(amount * sPrice)
require(bool,string)(localCounter == _guardCounter,re-entrance attack prohibited. Yeah!)
Transfer(msg.sender,address(this),amount)
nonReentrant()
require(bool,string)(uint256(bal & k_frozenFlag) == 0,account frozen!)
require(bool,string)(amount > 0 && sPrice > 0,value/price 0)
require(bool,string)(bal >> 1 >= amount,not enough token!)
bal = balances[address(this)] >> 1
is an Assignment Operation (Slither line:3214)
_guardCounter += 1
is an Assignment Operation (Slither line:3214)
require(bool,string)(bal + amount >= bal,overflow error!)
balances[address(this)] += amount << 1
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
balances[msg.sender] -= amount << 1
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
Checking function: newToken(uint256[]) returns() (Slither line:3125)
Visibility: external
ownerPrices = k_sellBuy + uint256(uint160(msg.sender) & k_aMask)
is an Assignment Operation (Slither line:3214)
require(bool,string)(localCounter == _guardCounter,re-entrance attack prohibited. Yeah!)
Transfer(k_add00,iOwner,iShare >> 1)
name32 = bytes32(_data[l])
is an Assignment Operation (Slither line:3214)
i ++
balances[address(this)] = contractShare
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
Transfer(k_add00,address(this),contractShare2)
iOwner = address(uint160(uint256(_data[l + 1])))
is an Assignment Operation (Slither line:3214)
balances[iOwner] = contractShare
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
Transfer(k_add00,iOwner,contractShare2)
nonReentrant()
iOwner = address(uint160(_data[i] & k_aMask))
is an Assignment Operation (Slither line:3214)
_guardCounter += 1
is an Assignment Operation (Slither line:3214)
iShare = uint256(uint256(_data[i] & k_pMask) >> 159) & k_shareMask
is an Assignment Operation (Slither line:3214)
require(bool,string)((iShare != 0) && (iOwner != k_add00),Illegal owner/share in list.)
require(bool,string)(l <= 31 && l >= 2,2-31 owners)
balances[iOwner] = iShare
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
Checking function: version() returns(uint256) (Slither line:3125)
Visibility: external
2001009
Checking function: fallback() returns() (Slither line:3125)
Checking function: receive() returns() (Slither line:3125)
Checking function: constructor(bytes32) returns() (Slither line:3125)
Checking function: slitherConstructorVariables() returns() (Slither line:3125)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3125)
Visibility: internal

End TokenMaster2.find_setter_in_contract (Slither line:3343)

Checking node of type END_IF (Slither line:1395)
Checking node of type EXPRESSION (Slither line:1395)
success_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),master_fallback_asm_0,ptr_fallback_asm_0,calldatasize()(),0,0)
Checking node of type EXPRESSION (Slither line:1395)
revert(uint256,uint256)(0,returndatasize()())
Checking node of type EXPRESSION (Slither line:1395)
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
Checking node of type NEW VARIABLE (Slither line:1395)
master_fallback_asm_0
None
Checking node of type EXPRESSION (Slither line:1395)
ptr_fallback_asm_0 = mload(uint256)(0x40)
Checking node of type NEW VARIABLE (Slither line:1395)
ptr_fallback_asm_0
None
Checking node of type EXPRESSION (Slither line:1395)
mstore(uint256,uint256)(0,master_fallback_asm_0)
Checking node of type INLINE ASM (Slither line:1395)
Checking node of type IF (Slither line:1395)
Checking node of type NEW VARIABLE (Slither line:1395)
success_fallback_asm_0
None
Checking node of type EXPRESSION (Slither line:1395)
calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,calldatasize()())
Checking node of type EXPRESSION (Slither line:1395)
return(uint256,uint256)(0,0x20)
Checking node of type END_IF (Slither line:1395)
Checking node of type IF (Slither line:1395)
Checking node of type EXPRESSION (Slither line:1395)
master_fallback_asm_0 = sload(uint256)(0) & 0xffffffffffffffffffffffffffffffffffffffff
Checking node of type ENTRY_POINT (Slither line:1395)
Checking node of type EXPRESSION (Slither line:1395)
return(uint256,uint256)(0,returndatasize()())

End ProxyToken.is_upgradeable_proxy (Slither line:1407)

Checking external function fallback
functions_writing_to_variable: masterCopy
functions_writing_to_variable: checking function ProxyToken.constructor (proxy_features line:895)
functions_writing_to_variable: exp = masterCopy = _masterCopy (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: masterCopy = _masterCopy (proxy_features line:909)
functions_writing_to_variable: Identifier: masterCopy (proxy_features line:921)
get_value_assigned: masterCopy = _masterCopy
functions_writing_to_variable: constructor writes _masterCopy to masterCopy (proxy_features line:926)
functions_writing_to_variable: checking function ProxyToken.fallback (proxy_features line:895)
has_compatibility_checks: dependencies: ['_masterCopy']
has_compatibility_checks: checking public function constructor
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: END_IF
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: success_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),master_fallback_asm_0,ptr_fallback_asm_0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: ptr_fallback_asm_0 = mload(uint256)(0x40)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: IF
 dominator expression: calldataload(uint256)(0) == 0xa619486e00000000000000000000000000000000000000000000000000000000
can_toggle_delegatecall_on_off: successors:
 NodeType: END_IF  expression: None
 NodeType: EXPRESSION  expression: success_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),master_fallback_asm_0,ptr_fallback_asm_0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off: delegatecall_condition = False
 NodeType: EXPRESSION  expression: revert(uint256,uint256)(0,returndatasize()())
 NodeType: EXPRESSION  expression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
 NodeType: EXPRESSION  expression: ptr_fallback_asm_0 = mload(uint256)(0x40)
 NodeType: NEW VARIABLE  expression: None
 NodeType: EXPRESSION  expression: mstore(uint256,uint256)(0,master_fallback_asm_0)
 NodeType: IF  expression: success_fallback_asm_0 == 0
 NodeType: NEW VARIABLE  expression: None
 NodeType: EXPRESSION  expression: return(uint256,uint256)(0,0x20)
 NodeType: END_IF  expression: None
 NodeType: EXPRESSION  expression: calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,calldatasize()())
 NodeType: EXPRESSION  expression: return(uint256,uint256)(0,returndatasize()())
Found public function: constructor
Found fallback

Begin AbstractGWP.is_proxy (Slither line:1425)


End AbstractGWP.is_proxy (Slither line:1428)


Begin AbstractGWP.is_upgradeable_proxy (Slither line:1136)

Checking contract: AbstractGWP 

End AbstractGWP.is_upgradeable_proxy (Slither line:1407)


Begin AbstractBaseR.is_proxy (Slither line:1425)


End AbstractBaseR.is_proxy (Slither line:1428)


Begin AbstractBaseR.is_upgradeable_proxy (Slither line:1136)

Checking contract: AbstractBaseR 

End AbstractBaseR.is_upgradeable_proxy (Slither line:1407)


Begin AbstractENS.is_proxy (Slither line:1425)


End AbstractENS.is_proxy (Slither line:1428)


Begin AbstractENS.is_upgradeable_proxy (Slither line:1136)

Checking contract: AbstractENS 

End AbstractENS.is_upgradeable_proxy (Slither line:1407)


Begin AbstractResolver.is_proxy (Slither line:1425)


End AbstractResolver.is_proxy (Slither line:1428)


Begin AbstractResolver.is_upgradeable_proxy (Slither line:1136)

Checking contract: AbstractResolver 

End AbstractResolver.is_upgradeable_proxy (Slither line:1407)


Begin AbstractRR.is_proxy (Slither line:1425)


End AbstractRR.is_proxy (Slither line:1428)


Begin AbstractRR.is_upgradeable_proxy (Slither line:1136)

Checking contract: AbstractRR 

End AbstractRR.is_upgradeable_proxy (Slither line:1407)


Begin AbstractDefaultRR.is_proxy (Slither line:1425)


End AbstractDefaultRR.is_proxy (Slither line:1428)


Begin AbstractDefaultRR.is_upgradeable_proxy (Slither line:1136)

Checking contract: AbstractDefaultRR 

End AbstractDefaultRR.is_upgradeable_proxy (Slither line:1407)


Begin AbstractReverseRegistrar.is_proxy (Slither line:1425)


End AbstractReverseRegistrar.is_proxy (Slither line:1428)


Begin AbstractReverseRegistrar.is_upgradeable_proxy (Slither line:1136)

Checking contract: AbstractReverseRegistrar 

End AbstractReverseRegistrar.is_upgradeable_proxy (Slither line:1407)


Begin AbstractGWF.is_proxy (Slither line:1425)


End AbstractGWF.is_proxy (Slither line:1428)


Begin AbstractGWF.is_upgradeable_proxy (Slither line:1136)

Checking contract: AbstractGWF 

End AbstractGWF.is_upgradeable_proxy (Slither line:1407)


Begin AbstractTM.is_proxy (Slither line:1425)


End AbstractTM.is_proxy (Slither line:1428)


Begin AbstractTM.is_upgradeable_proxy (Slither line:1136)

Checking contract: AbstractTM 

End AbstractTM.is_upgradeable_proxy (Slither line:1407)


Begin TokenMaster2.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin TokenMaster2.find_delegatecall_in_exp_node

Found Expression Node: Deposit(msg.sender,msg.value) (Slither line:2800)
Expression called: Deposit
Type of call: tuple() (Slither line:2815)
Args:
msg.sender
msg.value

End TokenMaster2.find_delegatecall_in_exp_node (Slither line:2856)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin TokenMaster2.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(false,TokenMaster fallback!) (Slither line:2800)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2815)
Args:
false
TokenMaster fallback!

End TokenMaster2.find_delegatecall_in_exp_node (Slither line:2856)


End TokenMaster2.is_proxy (Slither line:1476)


Begin TokenMaster2.is_upgradeable_proxy (Slither line:1136)

Checking contract: TokenMaster2 

End TokenMaster2.is_upgradeable_proxy (Slither line:1407)

