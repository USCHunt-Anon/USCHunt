
Begin AbstractReverseRegistrar.is_proxy (Slither line:1425)


End AbstractReverseRegistrar.is_proxy (Slither line:1428)


Begin AbstractReverseRegistrar.is_upgradeable_proxy (Slither line:1136)

Checking contract: AbstractReverseRegistrar 

End AbstractReverseRegistrar.is_upgradeable_proxy (Slither line:1407)


Begin ProxyGroupWallet.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin ProxyGroupWallet.find_delegatecall_in_exp_node

Found Expression Node: calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,calldatasize()()) (Slither line:2800)
Expression called: calldatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2815)
Args:
ptr_fallback_asm_0
0
calldatasize()()

End ProxyGroupWallet.find_delegatecall_in_exp_node (Slither line:2856)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin ProxyGroupWallet.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(0,returndatasize()()) (Slither line:2800)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2815)
Args:
0
returndatasize()()

End ProxyGroupWallet.find_delegatecall_in_exp_node (Slither line:2856)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin ProxyGroupWallet.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(0,returndatasize()()) (Slither line:2800)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2815)
Args:
0
returndatasize()()

End ProxyGroupWallet.find_delegatecall_in_exp_node (Slither line:2856)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin ProxyGroupWallet.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()()) (Slither line:2800)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2815)
Args:
0
0
returndatasize()()

End ProxyGroupWallet.find_delegatecall_in_exp_node (Slither line:2856)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin ProxyGroupWallet.find_delegatecall_in_exp_node

Found Expression Node: success_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),master_fallback_asm_0,ptr_fallback_asm_0,calldatasize()(),0,0) (Slither line:2800)
Expression Type: = (Slither line:2803)
Checking right side of assignment expression... (Slither line:2811)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2815)
Args:
gas()()
master_fallback_asm_0
ptr_fallback_asm_0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2822)

Destination is master_fallback_asm_0 (Slither line:2826)
dest.value: master_fallback_asm_0 (Slither line:2829)
Expression: None (Slither line:2834)

Begin ProxyGroupWallet.find_delegate_variable_from_name
Searching for master_fallback_asm_0 (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking masterCopy (Slither line:1689)
Checking tArr (Slither line:1689)
Checking owners (Slither line:1689)
Checking GWF (Slither line:1689)
Checking structures (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
fallback contains assembly, searching for sload (Slither line:1875)

End ProxyGroupWallet.find_delegate_variable_from_name (Slither line:1947)


End ProxyGroupWallet.find_delegatecall_in_exp_node (Slither line:2856)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin ProxyGroupWallet.find_delegatecall_in_exp_node

Found Expression Node: ptr_fallback_asm_0 = mload(uint256)(0x40) (Slither line:2800)
Expression Type: = (Slither line:2803)
Checking right side of assignment expression... (Slither line:2811)
Expression called: mload(uint256)
Type of call: uint256 (Slither line:2815)
Args:
0x40

End ProxyGroupWallet.find_delegatecall_in_exp_node (Slither line:2856)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin ProxyGroupWallet.find_delegatecall_in_exp_node

Found Expression Node: mstore(uint256,uint256)(0,master_fallback_asm_0) (Slither line:2800)
Expression called: mstore(uint256,uint256)
Type of call:  (Slither line:2815)
Args:
0
master_fallback_asm_0

End ProxyGroupWallet.find_delegatecall_in_exp_node (Slither line:2856)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Found Assembly Node (Slither line:1447)


Begin ProxyGroupWallet.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'master'
Looking for corresponding Variable
Current function: fallback

Begin ProxyGroupWallet.find_delegate_variable_from_name
Searching for master (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking masterCopy (Slither line:1689)
Checking tArr (Slither line:1689)
Checking owners (Slither line:1689)
Checking GWF (Slither line:1689)
Checking structures (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
fallback contains assembly, searching for sload (Slither line:1875)
{'kind': 'number', 'nodeType': 'YulLiteral', 'src': '1706:1:0', 'type': '', 'value': '0'} (Slither line:1907)
Found sload(0), getting first state variable

End ProxyGroupWallet.find_delegate_variable_from_name (Slither line:1947)


End ProxyGroupWallet.find_delegatecall_in_asm (Slither line:1637)


End ProxyGroupWallet.is_proxy (Slither line:1476)


Begin ProxyGroupWallet.is_upgradeable_proxy (Slither line:1136)

Checking contract: ProxyGroupWallet 
ProxyGroupWallet is delegating to masterCopy
Looking for setter (Slither line:1200)


Begin ProxyGroupWallet.find_setter_in_contract (Slither line:3117)

Checking function: constructor(address,AbstractReverseRegistrar,string) returns() (Slither line:3125)
Checking function: fallback() returns() (Slither line:3125)

End ProxyGroupWallet.find_setter_in_contract (Slither line:3343)


Could not find implementation setter in ProxyGroupWallet (Slither line:1269)
Looking for getter (Slither line:1273)


Begin ProxyGroupWallet.find_getter_in_contract (Slither line:2972)

masterCopy is a Variable object
Checking function: constructor (Slither line:2986)
Checking function: fallback (Slither line:2986)

End ProxyGroupWallet.find_getter_in_contract (Slither line:3081)

Could not find implementation getter in ProxyGroupWallet (Slither line:1305)
Checking for masterCopy at slot 0 in contract AbstractGroupWalletFactory (Slither line:1355)
Found resolverContract at slot 0 in contract AbstractGroupWalletFactory (Slither line:1362)
Checking for resolverContract at slot 0 in contract AbstractBaseRegistrar (Slither line:1355)
Found baseNode at slot 0 in contract AbstractBaseRegistrar (Slither line:1362)
Checking for baseNode at slot 0 in contract AbstractResolver (Slither line:1355)
Found hashes at slot 0 in contract AbstractResolver (Slither line:1362)
Checking for hashes at slot 0 in contract AbstractETHRegistrarController (Slither line:1355)
Found commitments at slot 0 in contract AbstractETHRegistrarController (Slither line:1362)
Checking for commitments at slot 0 in contract GroupWalletMaster (Slither line:1355)
Found masterCopy at slot 0 in contract GroupWalletMaster (Slither line:1362)

Begin GroupWalletMaster.find_getter_in_contract (Slither line:2972)

masterCopy is a Variable object
Checking function: getMasterCopy (Slither line:2986)
getMasterCopy returns address variable  (Slither line:3006)
RETURN node expression: masterCopy (Slither line:3026)

End GroupWalletMaster.find_getter_in_contract (Slither line:3081)


Begin GroupWalletMaster.find_setter_in_contract (Slither line:3117)

Checking function: getMasterCopy() returns(address) (Slither line:3125)
Visibility: external
masterCopy
Checking function: getGWF() returns(address) (Slither line:3125)
Visibility: external
GWF
Checking function: getENS() returns(AbstractENS) (Slither line:3125)
Visibility: internal
Checking function: getRsv() returns(AbstractResolver) (Slither line:3125)
Visibility: internal
Checking function: getCtrl() returns(AbstractETHRegistrarController) (Slither line:3125)
Visibility: internal
Checking function: getTarget(uint256) returns(address) (Slither line:3125)
Visibility: private
Checking function: getTValue(uint256) returns(uint64) (Slither line:3125)
Visibility: private
Checking function: getAsset(uint256) returns(uint8) (Slither line:3125)
Visibility: private
Checking function: getFlags(uint256) returns(uint64) (Slither line:3125)
Visibility: private
Checking function: getType(uint256) returns(uint8) (Slither line:3125)
Visibility: private
Checking function: saveFlags(uint256,uint64) returns() (Slither line:3125)
Visibility: private
Checking function: saveAsset(uint256,uint8) returns() (Slither line:3125)
Visibility: private
Checking function: saveExecuted(uint256,uint64,uint256) returns() (Slither line:3125)
Visibility: private
Checking function: my_require(bool,string) returns() (Slither line:3125)
Visibility: private
Checking function: char(bytes1) returns(bytes1) (Slither line:3125)
Visibility: private
Checking function: bytesToStr(bytes32,uint256) returns(string) (Slither line:3125)
Visibility: internal
Checking function: bytes32ToAsciiString(bytes32,uint256) returns(string) (Slither line:3125)
Visibility: private
Checking function: getT(uint256) returns(uint256) (Slither line:3125)
Visibility: internal
Checking function: dHashFromLabelBytes32(bytes32) returns(bytes32) (Slither line:3125)
Visibility: internal
Checking function: getdHashFromTRecord(uint256) returns(bytes32) (Slither line:3125)
Visibility: internal
Checking function: checkPreconditions(uint256,uint256,uint256) returns() (Slither line:3125)
Visibility: private
Checking function: checkSplitPreconditions(uint256,uint8) returns(uint256) (Slither line:3125)
Visibility: private
Checking function: confirmTransaction_Q6d(uint256) returns() (Slither line:3125)
Visibility: external
i ++
AbstractTokenMaster(AbstractGroupWalletFactory(GWF).getProxyToken(l_dHash)).transfer_G8l(target,10000)
count = 0
is an Assignment Operation (Slither line:3214)
mask = 32
is an Assignment Operation (Slither line:3214)
false
i ++
owners[i] = _newOwner
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
None
tArr[_tId] = uint256(uint256(uint256((uint256(f) << 216) & k_flagsMask) + uint256(t & k_flags3Mask)) | k_executeFlag)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
my_require(isAddressOwner(msg.sender), no owner)
my_require(false,ownerChange illegal owner!!!)
count ++
mask
i ++
mask = mask * 2
is an Assignment Operation (Slither line:3214)
i ++
my_require(msg.value > 0, value=0)
count
nb ++
getENS().setSubnodeRecord(l_dHash,l_label,address(this),address(getRsv()),uint64(block.timestamp * 1000) & uint64(0xffffffffffff0000))
tArr[_tId]
0
getRsv().setAddr(l_dlabelHash,target)
m = m * 2
is an Assignment Operation (Slither line:3214)
false
getRsv().setABI(l_dHash,32,abi.encodePacked(structures[uint256(uint160(target))]))
AbstractENS(AbstractGroupWalletFactory(GWF).ens())
o --
my_require((newMaj >= 2) && (newMaj <= MAX_OWNER_COUNT),required 2-31!!!)
getENS().setOwner(l_dlabelHash,target)
f = (uint64(f | uint64(MAX_OWNER_COUNT)) ^ uint64(MAX_OWNER_COUNT)) + uint64(newMaj)
is an Assignment Operation (Slither line:3214)
AbstractGroupWalletFactory(GWF).resolverContract()
saveExecuted(_tId,f,t)
nb
None
uint64(uint256(uint256(uint256(uint256(tArr[tNb]) & k_flagsMask) >> 216) & k_flags2Mask))
my_require(address(address(uint160(target))).send(welcomeBudget),Funding new member failed.)
Deposit(target,welcomeBudget)
AbstractTokenMaster(AbstractGroupWalletFactory(GWF).getProxyToken(l_dHash)).drainShares(l_dHash,GWF,owners[ownerId],target)
true
require(bool,string)(b,str)
(succ,returnData) = target.call{value: uint64((uint256(uint256(t) & k_valueMask) >> 160) & k_value2Mask) << 20}()
is an Assignment Operation (Slither line:3214)
saveExecuted(_tId,f,t)
None
tArr[_tId] = uint256(((uint256(f) << 216) & k_flagsMask) + uint256(t & k_flags3Mask))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
None
None
Deposit(target,uint256(uint64((uint256(uint256(t) & k_valueMask) >> 160) & k_value2Mask) << 20))
tArr[_tId] = uint256(((uint256(f) << 216) & k_flagsMask) + uint256(t & k_flags3Mask)) | k_executeFlag
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
my_require(! isAddressOwner(target),ownerDoesNotExist!!!)
tArr[_tId] = uint256(((uint256(f) << 216) & k_flagsMask) + uint256(t & k_flags3Mask))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
None
Deposit(target,val)
my_require(false,string(abi.encode(returnData,returnData.length)))
welcomeOneNewOwner(target,ownerNb)
my_require(false,cmd type!!!)
ownerChange(owners[ownerNb],target)
saveExecuted(_tId,f,t)
saveExecuted(_tId,f,t)
my_require(uint64(f & o) == 0,notConfirmed!!!)
None
None
my_require(uint8((uint256(uint256(t) & k_assetMask) >> 208) & k_asset2Mask) < 128,Q6d notExecuted!!!)
f = uint64(f | o)
is an Assignment Operation (Slither line:3214)
my_require(! isAddressOwner(target),ownerDoesNotExist!!!)
callExecution(_tId,t,f)
my_require(owners.length < MAX_OWNER_COUNT && r >= 2 && r <= owners.length,addOwner requirement!!!)
f = (uint64(f | uint64(MAX_OWNER_COUNT)) ^ uint64(MAX_OWNER_COUNT)) + ((uint64(activeOwners()) / 2) + 1)
is an Assignment Operation (Slither line:3214)
owners.push(target)
tArr[_tId] = uint256(((uint256(f) << 216) & k_flagsMask) + uint256(t & k_flags3Mask))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
welcomeOneNewOwner(target,MAX_OWNER_COUNT)
my_require(value > 0,nb shares = 0!!!)
f = (uint64(f | uint64(MAX_OWNER_COUNT)) ^ uint64(MAX_OWNER_COUNT)) + ((uint64(activeOwners()) / 2) + 1)
is an Assignment Operation (Slither line:3214)
ownerChange(target,address(0x0))
saveExecuted(_tId,f,t)
None
l_token.transfer_G8l(target,value)
saveExecuted(_tId,f,t)
None
removeOneOwner(target)
my_require(address(address(uint160(target))).send(val),Refunding ex-member failed.)
Checking function: confirmSpinOffGroup_L51b(bytes32[],bytes,bytes32[],bytes32[]) returns() (Slither line:3125)
Visibility: external
i ++
AbstractGroupWalletFactory(GWF).replicate_group_l9Y{value: msg.value * 9 / 10}(_in,data32,_mem)
saveExecuted(_tId,f,t)
count = 0
is an Assignment Operation (Slither line:3214)
false
mask = 32
is an Assignment Operation (Slither line:3214)
o = 1
is an Assignment Operation (Slither line:3214)
i ++
f_s = 0
is an Assignment Operation (Slither line:3214)
owners[i] = _newOwner
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
None
tArr[_tId] = uint256(uint256(uint256((uint256(f) << 216) & k_flagsMask) + uint256(t & k_flags3Mask)) | k_executeFlag)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
my_require(isAddressOwner(msg.sender), no owner)
my_require(false,ownerChange illegal owner!!!)
count ++
mask
o = o * 2
is an Assignment Operation (Slither line:3214)
i ++
t = uint256(_mem[7 + (f_s * 4)]) & k_addressMask
is an Assignment Operation (Slither line:3214)
mask = mask * 2
is an Assignment Operation (Slither line:3214)
f_s ++
i ++
my_require(msg.value > 0, value=0)
count
AbstractTokenMaster(AbstractGroupWalletFactory(GWF).getProxyToken(bytes32(tArr[uint256(uint160(GWF))]))).drainShares(bytes32(tArr[uint256(uint160(GWF))]),GWF,owners[i],address(uint160(t)))
nb ++
ownerChange(owners[i],address(0x0))
tArr[_tId]
0
m = m * 2
is an Assignment Operation (Slither line:3214)
false
idx = 0
is an Assignment Operation (Slither line:3214)
i ++
o --
AbstractGroupWalletFactory(GWF).resolverContract()
f_s = uint64(uint64(f | uint64(MAX_OWNER_COUNT)) ^ uint64(MAX_OWNER_COUNT)) + ((uint64(activeOwners()) / 2) + 1)
is an Assignment Operation (Slither line:3214)
nb
saveFlags(_tId,f_s)
i = 1
is an Assignment Operation (Slither line:3214)
my_require(owners.length > 3,group too small!)
getOpenSplitTransactionNb(tNb - 1,exec)
0
true
require(bool,string)(b,str)
t = tArr[i]
is an Assignment Operation (Slither line:3214)
i ++
o = uint8((uint256(uint256(t) & k_assetMask) >> 208) & k_asset2Mask)
is an Assignment Operation (Slither line:3214)
my_require(address(address(uint160(uint256(_mem[7 + (o * 4)]) & k_addressMask))).send(uint256(uint256(t) & k_addressMask)),Forwarding failed.)
Deposit(address(uint160(uint256(_mem[7 + (o * 4)]) & k_addressMask)),uint256(uint256(t) & k_addressMask))
t = tArr[i]
is an Assignment Operation (Slither line:3214)
tArr[i] = uint256(uint256((uint256(f_s) << 216) & k_flagsMask) + uint256(t & k_flags3Mask)) | k_executeFlag
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
f = uint64(uint256((uint256(uint256(t) & k_flagsMask) >> 216) & k_flags2Mask))
is an Assignment Operation (Slither line:3214)
a = uint8(uint256((uint256(uint256(t) & k_assetMask) >> 208) & k_asset2Mask))
is an Assignment Operation (Slither line:3214)
tArr[_tId] = uint256(((uint256(f) << 216) & k_flagsMask) + uint256(t & k_flags3Mask))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
i
i --
0
my_require(uint64(f & o) == 0 && uint8((uint256(uint256(t) & k_assetMask) >> 208) & k_asset2Mask) < 128 && (((t & k_typeMask) >> 252) == 8) && isAddressOwner(msg.sender),notConfirmed,notExecuted,nb,owner)
None
f = uint64(f | o)
is an Assignment Operation (Slither line:3214)
tArr[_tId] = uint256(uint256(uint256(flags) << 216) & k_flagsMask) + uint256(tArr[_tId] & k_flags3Mask)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
getRsv().setABI(bytes32(tArr[uint256(uint160(GWF))]),128,abi.encodePacked(_abi))
Checking function: submitFirstTransaction_gm(uint256,uint256) returns() (Slither line:3125)
Visibility: external
i ++
my_require(tArr[0] == 0,tArr in use error!!!)
tArr[0] = uint256((uint256(uint64(uint64(owners.length >> 1) + 1) | getOwnerMask(msg.sender)) << 216) & k_flagsMask) + uint256(uint256(firstTRecord) & k_flags3Mask)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
0
tArr[uint256(uint160(GWF))] = dhash
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
false
mask = 32
is an Assignment Operation (Slither line:3214)
false
GroupWalletDeployed(msg.sender,owners.length,uint256(block.timestamp))
mask
true
require(bool,string)(b,str)
mask = mask * 2
is an Assignment Operation (Slither line:3214)
my_require(isAddressOwner(msg.sender),ownerExists!!!)
i ++
Checking function: submitTransaction_Hom(uint256) returns() (Slither line:3125)
Visibility: external
i ++
uint64(getFlags(_tId) & uint64(MAX_OWNER_COUNT))
my_require(isAddressOwner(msg.sender),ownerExists!!!)
0
mask = 32
is an Assignment Operation (Slither line:3214)
my_require(tArr[tNb] == 0,tArr overwrite error!!!)
false
false
None
my_require(uint256(uint256(tRecord & k_typeMask) >> 252) == cmd,action nb!)
uint64(uint256(uint256(uint256(uint256(tArr[tNb]) & k_flagsMask) >> 216) & k_flags2Mask))
tArr[msg.value] = uint256((uint256(uint64(getTRequired(msg.value - 1)) | getOwnerMask(msg.sender)) << 216) & k_flagsMask) + uint256(uint256(aTRecord) & k_flags3Mask)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
mask
checkPreconditions(msg.value,aTRecord,0)
my_require(tNb > 0,value=0 !)
true
require(bool,string)(b,str)
mask = mask * 2
is an Assignment Operation (Slither line:3214)
i ++
Checking function: submitSplitTransaction(uint256,bytes32,bytes32) returns() (Slither line:3125)
Visibility: external
checkPreconditions(msg.value,aTRecord,7)
i ++
my_require(checkSplitPreconditions(msg.value,0) == 0,split 0!)
uint64(getFlags(_tId) & uint64(MAX_OWNER_COUNT))
tArr[msg.value] = uint256((uint256(uint64(getTRequired(msg.value - 1)) | getOwnerMask(msg.sender)) << 216) & k_flagsMask) + uint256(uint256(aTRecord) & k_flags3Mask)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
mask = 32
is an Assignment Operation (Slither line:3214)
false
tArr[uint256(_commitment) & k_addressMask] = uint256(_commitment)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
tArr[(uint256(_commitment) & k_addressMask) + 1] = uint256(_dname)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
keccak256(bytes)(abi.encodePacked(AbstractGroupWalletFactory(GWF).base().baseNode(),keccak256(bytes)(bytes(bytesToStr(_name,uint256(_name) & 0xff)))))
AbstractGroupWalletFactory(GWF).reserve_replicate(dHashFromLabelBytes32(_dname),_commitment)
mask
mask = mask * 2
is an Assignment Operation (Slither line:3214)
i ++
nb ++
0
m = m * 2
is an Assignment Operation (Slither line:3214)
false
idx = 0
is an Assignment Operation (Slither line:3214)
o --
nb
uint64(uint256(uint256(uint256(uint256(tArr[tNb]) & k_flagsMask) >> 216) & k_flags2Mask))
my_require(owners.length > 3,group too small!)
getOpenSplitTransactionNb(tNb - 1,exec)
0
true
require(bool,string)(b,str)
bArr[i] = _b[i]
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
t = tArr[i]
is an Assignment Operation (Slither line:3214)
i ++
f = uint64(uint256((uint256(uint256(t) & k_flagsMask) >> 216) & k_flags2Mask))
is an Assignment Operation (Slither line:3214)
a = uint8(uint256((uint256(uint256(t) & k_assetMask) >> 208) & k_asset2Mask))
is an Assignment Operation (Slither line:3214)
string(bArr)
i
i --
my_require(tNb > 0,value=0 !)
0
my_require(isAddressOwner(msg.sender),ownerExists!!!)
my_require(tArr[tNb] == 0,tArr overwrite error!!!)
None
my_require(uint256(uint256(tRecord & k_typeMask) >> 252) == cmd,action nb!)
Checking function: submitExecuteSplitTransaction(uint256,uint256) returns() (Slither line:3125)
Visibility: external
i ++
uint64(getFlags(_tId) & uint64(MAX_OWNER_COUNT))
AbstractGroupWalletFactory(GWF).controllerContract()
mask = 32
is an Assignment Operation (Slither line:3214)
false
keccak256(bytes)(abi.encodePacked(AbstractGroupWalletFactory(GWF).base().baseNode(),keccak256(bytes)(bytes(bytesToStr(_name,uint256(_name) & 0xff)))))
checkPreconditions(tNb,aTRecord,8)
my_require(uint256(tArr[uint160(aTRecord) & k_addressMask] & k_addressMask) == (uint256(aTRecord) & k_addressMask),string(abi.encodePacked(bytes32ToAsciiString(bytes32(uint256(tArr[uint160(aTRecord) & k_addressMask] & k_addressMask)),32), unknown domain!!!)))
mask
my_require(splitTNb > 0,string(abi.encodePacked(bytes32ToAsciiString(bytes32(splitTNb),32), no split)))
mask = mask * 2
is an Assignment Operation (Slither line:3214)
i ++
tArr[splitTNb] = uint256(uint256(tArr[splitTNb]) | k_executeFlag)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
nb ++
0
m = m * 2
is an Assignment Operation (Slither line:3214)
false
AbstractENS(AbstractGroupWalletFactory(GWF).ens())
idx = 0
is an Assignment Operation (Slither line:3214)
o --
AbstractGroupWalletFactory(GWF).resolverContract()
nb
getCtrl().registerWithConfig{value: _rent}(_dname,address(this),uint256(365 * 86400),bytes32(_secret),address(getRsv()),GWF)
uint64(uint256(uint256(uint256(uint256(tArr[tNb]) & k_flagsMask) >> 216) & k_flags2Mask))
getRsv().setName(dHash,string(abi.encodePacked(_dname,.eth)))
my_require(owners.length > 3,group too small!)
getENS().setOwner(dHash,GWF)
getOpenSplitTransactionNb(tNb - 1,exec)
tArr[tNb] = uint256((uint256(uint64(getTRequired(tNb - 1)) | getOwnerMask(msg.sender)) << 216) & k_flagsMask) + uint256(uint256(aTRecord) & k_flags3Mask)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
0
true
require(bool,string)(b,str)
s[0] = 0x30
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
s[1] = 0x78
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
bArr[i] = _b[i]
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
t = tArr[i]
is an Assignment Operation (Slither line:3214)
i ++
f = uint64(uint256((uint256(uint256(t) & k_flagsMask) >> 216) & k_flags2Mask))
is an Assignment Operation (Slither line:3214)
bytes1(uint8(b) + 0x30)
a = uint8(uint256((uint256(uint256(t) & k_assetMask) >> 208) & k_asset2Mask))
is an Assignment Operation (Slither line:3214)
string(bArr)
bytes1(uint8(b) + 0x57)
i
i ++
i --
my_require(tNb > 0,value=0 !)
0
my_require(isAddressOwner(msg.sender),ownerExists!!!)
s[2 + (2 * i)] = char(hi)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
my_require(tArr[tNb] == 0,tArr overwrite error!!!)
s[2 + (2 * i) + 1] = char(lo)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
string(s)
None
my_require(uint256(uint256(tRecord & k_typeMask) >> 252) == cmd,action nb!)
Checking function: getMemberWelcome(address) returns(bytes) (Slither line:3125)
Visibility: external
i ++
abi.encode(tArr[uint256(uint160(target) + 2)],tArr[uint256(uint160(target) + 3)])
false
false
true
require(bool,string)(b,str)
my_require(isAddressOwner(target),NOT an owner!!!)
Checking function: submitTransaction_addUser(uint256,uint256,uint256,uint256,uint256,bytes) returns() (Slither line:3125)
Visibility: external
i ++
structures[targetId] = data
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
uint64(getFlags(_tId) & uint64(MAX_OWNER_COUNT))
0
false
mask = 32
is an Assignment Operation (Slither line:3214)
false
AbstractENS(AbstractGroupWalletFactory(GWF).ens())
my_require(getENS().owner(bytes32(tArr[uint256(uint160(GWF))])) == address(this), - GWP contract is NOT domain owner!)
tArr[0] = uint256((uint256(uint64(uint64(owners.length >> 1) + 1) | getOwnerMask(msg.sender)) << 216) & k_flagsMask) + uint256(uint256(aTRecord) & k_flags3Mask)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
my_require(msg.value > 0 || (msg.value == 0 && dhash > 0x0),bad msg.value!!!)
tArr[uint256(uint160(GWF))] = dhash
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
GroupWalletDeployed(msg.sender,owners.length,uint256(block.timestamp))
uint64(uint256(uint256(uint256(uint256(tArr[tNb]) & k_flagsMask) >> 216) & k_flags2Mask))
tArr[msg.value] = uint256(uint256(uint256(uint64(getTRequired(msg.value - 1)) | getOwnerMask(msg.sender)) << 216) & k_flagsMask) + uint256(uint256(aTRecord) & k_flags3Mask)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
my_require(isAddressOwner(msg.sender) && (((aTRecord & k_typeMask) >> 252 == 2) || ((aTRecord & k_typeMask) >> 252 == 4)),only owner, bad cmd)
mask
tArr[targetId + 1] = labelHash
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
true
tArr[targetId + 2] = memK1
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
require(bool,string)(b,str)
mask = mask * 2
is an Assignment Operation (Slither line:3214)
tArr[targetId + 3] = memK2
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
i ++
Checking function: executeTransaction_G1A(uint256) returns() (Slither line:3125)
Visibility: external
i ++
AbstractTokenMaster(AbstractGroupWalletFactory(GWF).getProxyToken(l_dHash)).transfer_G8l(target,10000)
count = 0
is an Assignment Operation (Slither line:3214)
false
mask = 32
is an Assignment Operation (Slither line:3214)
i ++
owners[i] = _newOwner
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
None
tArr[_tId] = uint256(uint256(uint256((uint256(f) << 216) & k_flagsMask) + uint256(t & k_flags3Mask)) | k_executeFlag)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
my_require(false,ownerChange illegal owner!!!)
count ++
mask
i ++
mask = mask * 2
is an Assignment Operation (Slither line:3214)
i ++
count
nb ++
getENS().setSubnodeRecord(l_dHash,l_label,address(this),address(getRsv()),uint64(block.timestamp * 1000) & uint64(0xffffffffffff0000))
0
getRsv().setAddr(l_dlabelHash,target)
m = m * 2
is an Assignment Operation (Slither line:3214)
false
getRsv().setABI(l_dHash,32,abi.encodePacked(structures[uint256(uint160(target))]))
AbstractENS(AbstractGroupWalletFactory(GWF).ens())
o --
my_require((newMaj >= 2) && (newMaj <= MAX_OWNER_COUNT),required 2-31!!!)
getENS().setOwner(l_dlabelHash,target)
f = (uint64(f | uint64(MAX_OWNER_COUNT)) ^ uint64(MAX_OWNER_COUNT)) + uint64(newMaj)
is an Assignment Operation (Slither line:3214)
AbstractGroupWalletFactory(GWF).resolverContract()
saveExecuted(_tId,f,t)
nb
None
uint64(uint256(uint256(uint256(uint256(tArr[tNb]) & k_flagsMask) >> 216) & k_flags2Mask))
my_require(address(address(uint160(target))).send(welcomeBudget),Funding new member failed.)
Deposit(target,welcomeBudget)
AbstractTokenMaster(AbstractGroupWalletFactory(GWF).getProxyToken(l_dHash)).drainShares(l_dHash,GWF,owners[ownerId],target)
true
require(bool,string)(b,str)
(succ,returnData) = target.call{value: uint64((uint256(uint256(t) & k_valueMask) >> 160) & k_value2Mask) << 20}()
is an Assignment Operation (Slither line:3214)
saveExecuted(_tId,f,t)
my_require(isAddressOwner(msg.sender),only by owner!)
None
tArr[_tId] = uint256(((uint256(f) << 216) & k_flagsMask) + uint256(t & k_flags3Mask))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
None
None
None
Deposit(target,uint256(uint64((uint256(uint256(t) & k_valueMask) >> 160) & k_value2Mask) << 20))
tArr[_tId] = uint256(((uint256(f) << 216) & k_flagsMask) + uint256(t & k_flags3Mask)) | k_executeFlag
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
my_require(! isAddressOwner(target),ownerDoesNotExist!!!)
tArr[_tId] = uint256(((uint256(f) << 216) & k_flagsMask) + uint256(t & k_flags3Mask))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
None
my_require(false,string(abi.encode(returnData,returnData.length)))
Deposit(target,val)
welcomeOneNewOwner(target,ownerNb)
my_require(false,cmd type!!!)
ownerChange(owners[ownerNb],target)
my_require(uint64(f & o) > 0,confirmed!!!)
saveExecuted(_tId,f,t)
saveExecuted(_tId,f,t)
my_require(uint8((uint256(uint256(t) & k_assetMask) >> 208) & k_asset2Mask) < 128,G1a notExecuted!!!)
None
None
f = uint64(uint64((uint256(uint256(t) & k_flagsMask) >> 216) & k_flags2Mask))
is an Assignment Operation (Slither line:3214)
my_require(! isAddressOwner(target),ownerDoesNotExist!!!)
callExecution(_tId,t,f)
my_require(owners.length < MAX_OWNER_COUNT && r >= 2 && r <= owners.length,addOwner requirement!!!)
f = (uint64(f | uint64(MAX_OWNER_COUNT)) ^ uint64(MAX_OWNER_COUNT)) + ((uint64(activeOwners()) / 2) + 1)
is an Assignment Operation (Slither line:3214)
owners.push(target)
welcomeOneNewOwner(target,MAX_OWNER_COUNT)
my_require(value > 0,nb shares = 0!!!)
f = (uint64(f | uint64(MAX_OWNER_COUNT)) ^ uint64(MAX_OWNER_COUNT)) + ((uint64(activeOwners()) / 2) + 1)
is an Assignment Operation (Slither line:3214)
ownerChange(target,address(0x0))
saveExecuted(_tId,f,t)
None
l_token.transfer_G8l(target,value)
saveExecuted(_tId,f,t)
None
removeOneOwner(target)
my_require(address(address(uint160(target))).send(val),Refunding ex-member failed.)
Checking function: welcomeOneNewOwner(address,uint256) returns() (Slither line:3125)
Visibility: internal
Checking function: callExecution(uint256,uint256,uint64) returns() (Slither line:3125)
Visibility: internal
Checking function: removeOneOwner(address) returns() (Slither line:3125)
Visibility: internal
Checking function: activeOwners() returns(uint8) (Slither line:3125)
Visibility: private
Checking function: revokeConfirmation_NlP(uint256) returns() (Slither line:3125)
Visibility: external
i ++
0
false
mask = 32
is an Assignment Operation (Slither line:3214)
false
my_require(isAddressOwner(msg.sender),not an owner!)
my_require(o > 0,no OwnerMask!!!)
mask
my_require(uint64(f & o) > 0,confirmed!!!)
true
my_require((uint256(t) & k_executeFlag) == 0,cannot revoke executed!!!)
require(bool,string)(b,str)
mask = mask * 2
is an Assignment Operation (Slither line:3214)
tArr[_tId] = uint256((uint256(uint64(f | o) ^ uint64(o)) << 216) & k_flagsMask) + uint256(t & k_flags3Mask)
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
i ++
Checking function: getTNumberPublic() returns(uint256) (Slither line:3125)
Visibility: public
count += 1
is an Assignment Operation (Slither line:3214)
count
i ++
count = 0
is an Assignment Operation (Slither line:3214)
Checking function: isConfirmed(uint256) returns(bool) (Slither line:3125)
Visibility: public
nb ++
uint64(getFlags(_tId) & uint64(MAX_OWNER_COUNT))
m = m * 2
is an Assignment Operation (Slither line:3214)
r = uint64(owners.length >> 1) + 1
is an Assignment Operation (Slither line:3214)
o --
nb
(r <= c)
uint64(uint256(uint256(uint256(uint256(tArr[tNb]) & k_flagsMask) >> 216) & k_flags2Mask))
r = uint64(owners.length >> 1) + 1
is an Assignment Operation (Slither line:3214)
r = uint64(getTRequired(_tNb - 1))
is an Assignment Operation (Slither line:3214)
Checking function: getRequiredPublic(uint256) returns(uint256) (Slither line:3125)
Visibility: external
uint64(uint256(uint256(uint256(uint256(tArr[tNb]) & k_flagsMask) >> 216) & k_flags2Mask))
uint256(uint64(owners.length >> 1) + 1)
uint64(getFlags(_tId) & uint64(MAX_OWNER_COUNT))
getTRequired(_tNb - 1)
Checking function: getIsOwner(address) returns(bool) (Slither line:3125)
Visibility: external
i ++
true
false
false
isAddressOwner(_owner)
Checking function: getTransactionsCount() returns(uint256) (Slither line:3125)
Visibility: external
count += 1
is an Assignment Operation (Slither line:3214)
getTNumberPublic()
count
i ++
count = 0
is an Assignment Operation (Slither line:3214)
Checking function: getTransactions(uint256) returns(address,uint256,uint8,bool,uint64,uint8,bool) (Slither line:3125)
Visibility: external
nb ++
uint64(getFlags(_tId) & uint64(MAX_OWNER_COUNT))
m = m * 2
is an Assignment Operation (Slither line:3214)
r = uint64(owners.length >> 1) + 1
is an Assignment Operation (Slither line:3214)
o --
uint64(uint256((uint256(uint256(tArr[tNb]) & k_valueMask) >> 160) & k_value2Mask))
uint8(uint256(uint256(uint256(uint256(tArr[tNb]) & k_assetMask) >> 208) & k_asset2Mask))
address(uint160(uint256(uint256(tArr[tNb]) & k_addressMask)))
(getTarget(_tNb),getTValue(_tNb),getAsset(_tNb),isTExecuted(_tNb),getFlags(_tNb),getType(_tNb),isConfirmed(_tNb))
nb
(r <= c)
count += 1
is an Assignment Operation (Slither line:3214)
uint64(uint256(uint256(uint256(uint256(tArr[tNb]) & k_flagsMask) >> 216) & k_flags2Mask))
i ++
count = 0
is an Assignment Operation (Slither line:3214)
uint8(uint256(uint256(uint256(uint256(tArr[tNb]) & k_typeMask) >> 252) & k_type2Mask))
r = uint64(owners.length >> 1) + 1
is an Assignment Operation (Slither line:3214)
(getAsset(_tNb) > 127)
count
r = uint64(getTRequired(_tNb - 1))
is an Assignment Operation (Slither line:3214)
Checking function: getTransactionRecord(uint256) returns(uint256) (Slither line:3125)
Visibility: external
count += 1
is an Assignment Operation (Slither line:3214)
tArr[_tNb]
count
i ++
count = 0
is an Assignment Operation (Slither line:3214)
0
Checking function: getAllTransactions() returns(uint256[]) (Slither line:3125)
Visibility: public
resultArr[i] = tArr[i]
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
i ++
count += 1
is an Assignment Operation (Slither line:3214)
resultArr
i ++
new uint256[](0)
i = 0
is an Assignment Operation (Slither line:3214)
Checking function: getConfirmationCount(uint256) returns(uint256) (Slither line:3125)
Visibility: external
o --
uint64(uint256(uint256(uint256(uint256(tArr[tNb]) & k_flagsMask) >> 216) & k_flags2Mask))
nb ++
nb
m = m * 2
is an Assignment Operation (Slither line:3214)
uint256(nbOfConfirmations(uint64(f >> 5)))
Checking function: getTransactionCount(bool,bool) returns(uint256) (Slither line:3125)
Visibility: external
count += 1
is an Assignment Operation (Slither line:3214)
i ++
uint8(uint256(uint256(uint256(uint256(tArr[tNb]) & k_assetMask) >> 208) & k_asset2Mask))
count += 1
is an Assignment Operation (Slither line:3214)
i ++
count = 0
is an Assignment Operation (Slither line:3214)
0
(getAsset(_tNb) > 127)
count
Checking function: addressConfirmations(uint256,address) returns(bool) (Slither line:3125)
Visibility: external
(uint64(f & o) > 0)
ownerConfirmed(_tNb,_owner)
0
mask = 32
is an Assignment Operation (Slither line:3214)
uint64(uint256(uint256(uint256(uint256(tArr[tNb]) & k_flagsMask) >> 216) & k_flags2Mask))
mask
mask = mask * 2
is an Assignment Operation (Slither line:3214)
i ++
Checking function: getOwners() returns(address[]) (Slither line:3125)
Visibility: external
owners
Checking function: getConfirmations(uint256) returns(address[]) (Slither line:3125)
Visibility: external
(uint64(f & o) > 0)
0
mask = 32
is an Assignment Operation (Slither line:3214)
_confirmations[i] = confirmationsTemp[i]
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
i ++
i ++
uint64(uint256(uint256(uint256(uint256(tArr[tNb]) & k_flagsMask) >> 216) & k_flags2Mask))
confirmationsTemp[count ++] = owners[i]
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
i ++
mask
_confirmations = new address[](count)
is an Assignment Operation (Slither line:3214)
mask = mask * 2
is an Assignment Operation (Slither line:3214)
i = 0
is an Assignment Operation (Slither line:3214)
Checking function: nbOfConfirmations(uint64) returns(uint64) (Slither line:3125)
Visibility: internal
Checking function: isAddressOwner(address) returns(bool) (Slither line:3125)
Visibility: private
Checking function: ownerChange(address,address) returns() (Slither line:3125)
Visibility: private
Checking function: getOwnerMask(address) returns(uint64) (Slither line:3125)
Visibility: private
Checking function: isTExecuted(uint256) returns(bool) (Slither line:3125)
Visibility: private
Checking function: getOpenSplitTransactionNb(uint256,uint8) returns(uint256) (Slither line:3125)
Visibility: private
Checking function: ownerConfirmed(uint256,address) returns(bool) (Slither line:3125)
Visibility: private
Checking function: getTRequired(uint256) returns(uint64) (Slither line:3125)
Visibility: private
Checking function: newProxyGroupWallet_j5O(address[]) returns() (Slither line:3125)
Visibility: external
owners.push(_owners[i])
GWF = msg.sender
is an Assignment Operation (Slither line:3214)
i ++
require(bool,string)(b,str)
my_require(_owners[i] != address(0x0),Bad owner list!)
Checking function: saveAsset(bytes32,uint256,string,string) returns() (Slither line:3125)
Visibility: external
EtherScriptSaved(dhash,key)
i ++
my_require(isAddressOwner(msg.sender) && dhash != 0x0 && getENS().recordExists(dhash) && getENS().owner(dhash) == address(this),- owner,domain hash,domain exist,only owner)
false
false
getRsv().setText(dhash,key,data)
AbstractENS(AbstractGroupWalletFactory(GWF).ens())
AbstractGroupWalletFactory(GWF).resolverContract()
my_require(pHash > 0 && getENS().owner(bytes32(pHash)) == address(this) && bytes32(pHash) == dhash, - pHash,GWP NOT owner/hash unexpected)
ColorTableSaved(dhash)
true
require(bool,string)(b,str)
Checking function: version() returns(uint256) (Slither line:3125)
Visibility: external
2001009
Checking function: forwardEther(address) returns() (Slither line:3125)
Visibility: external
Deposit(receiver,msg.value)
require(bool,string)(b,str)
my_require(msg.value > 0 && receiver.send(msg.value),Forwarding failed.)
Checking function: depositEther(uint256,uint256) returns() (Slither line:3125)
Visibility: external
uint64(getFlags(_tId) & uint64(MAX_OWNER_COUNT))
0
mask = 32
is an Assignment Operation (Slither line:3214)
my_require(tNb > 0 && tArr[tNb] == 0,depositEther failed.)
uint64(uint256(uint256(uint256(uint256(tArr[tNb]) & k_flagsMask) >> 216) & k_flags2Mask))
my_require(msg.value > 0 && uint160(commit) != 0x0 && uint256(uint256(aTRecord & k_typeMask) >> 252) == 10,value=0,address,cmd)
mask
tArr[tNb] = uint256(uint256(uint256(uint64(uint64(getTRequired(tNb - 1)) | o)) << 216) & k_flagsMask) + uint256(uint256(uint256(aTRecord) & k_address2Mask) + uint256(msg.value))
is an Assignment Operation (Slither line:3214)
Left side is an IndexAccess (Slither line:3243)
require(bool,string)(b,str)
mask = mask * 2
is an Assignment Operation (Slither line:3214)
Deposit(address(address(this)),uint256(msg.value))
i ++
Checking function: fallback() returns() (Slither line:3125)
Checking function: receive() returns() (Slither line:3125)
Checking function: constructor(address[]) returns() (Slither line:3125)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3125)
Visibility: internal

End GroupWalletMaster.find_setter_in_contract (Slither line:3343)


Begin GroupWalletMaster.getter_return_is_non_constant (Slither line:2881)

Found getter function but not setter
Checking if getter calls any other function
