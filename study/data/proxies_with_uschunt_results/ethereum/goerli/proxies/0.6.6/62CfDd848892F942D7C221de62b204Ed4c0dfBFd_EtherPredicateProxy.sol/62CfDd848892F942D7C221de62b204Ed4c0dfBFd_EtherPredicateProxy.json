{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "UpgradableProxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.6.6/62CfDd848892F942D7C221de62b204Ed4c0dfBFd_EtherPredicateProxy.sol/62CfDd848892F942D7C221de62b204Ed4c0dfBFd_EtherPredicateProxy.sol#53-151)",
        "elements": [],
        "description": "UpgradableProxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.6.6/62CfDd848892F942D7C221de62b204Ed4c0dfBFd_EtherPredicateProxy.sol/62CfDd848892F942D7C221de62b204Ed4c0dfBFd_EtherPredicateProxy.sol#53-151) is an upgradeable proxy.\nIMPLEMENTATION_SLOT is declared in the proxy.\n uses Unstructured Storage\n uses non-standard slot: keccak256(bytes)(matic.network.proxy.implementation)\nMissing compatibility check in UpgradableProxy.constructor(address)\nFound compatibility check in UpgradableProxy.updateImplementation(address)\nFound compatibility check in UpgradableProxy.updateImplementation(address)\nFound compatibility check in UpgradableProxy.updateAndCall(address,bytes)\nFound compatibility check in UpgradableProxy.updateAndCall(address,bytes)\n",
        "id": "6d6f0e6cf68d8cdd53a0cf777249c276ca0413d7b81bb57909db9e342cb82c12",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "UpgradableProxy.IMPLEMENTATION_SLOT",
          "impl_address_setter": "UpgradableProxy.updateImplementation(address)",
          "impl_address_getter": "UpgradableProxy.loadImplementation()",
          "impl_address_location": "UpgradableProxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.6.6/62CfDd848892F942D7C221de62b204Ed4c0dfBFd_EtherPredicateProxy.sol/62CfDd848892F942D7C221de62b204Ed4c0dfBFd_EtherPredicateProxy.sol#53-151)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "keccak256(bytes)(matic.network.proxy.implementation)",
          "unstructured_storage": true,
          "eip_1967": false,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "UpgradableProxy.constructor(address)": "missing",
              "UpgradableProxy.updateImplementation(address)": "require(bool,string)(extcodesize(uint256)(_target) > 0,DESTINATION_ADDRESS_IS_NOT_A_CONTRACT)",
              "UpgradableProxy.updateAndCall(address,bytes)": "require(bool,string)(extcodesize(uint256)(_target) > 0,DESTINATION_ADDRESS_IS_NOT_A_CONTRACT)"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "proxyType()",
              "implementation()",
              "proxyType()",
              "implementation()",
              "proxyOwner()",
              "implementation()",
              "transferProxyOwnership(address)",
              "updateImplementation(address)",
              "updateAndCall(address,bytes)"
            ]
          }
        }
      },
      {
        "contract": "EtherPredicateProxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.6.6/62CfDd848892F942D7C221de62b204Ed4c0dfBFd_EtherPredicateProxy.sol/62CfDd848892F942D7C221de62b204Ed4c0dfBFd_EtherPredicateProxy.sol#157-163)",
        "elements": [],
        "description": "EtherPredicateProxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.6.6/62CfDd848892F942D7C221de62b204Ed4c0dfBFd_EtherPredicateProxy.sol/62CfDd848892F942D7C221de62b204Ed4c0dfBFd_EtherPredicateProxy.sol#157-163) is an upgradeable proxy.\nIMPLEMENTATION_SLOT was found in a different contract.\n uses Unstructured Storage\n uses non-standard slot: keccak256(bytes)(matic.network.proxy.implementation)\nMissing compatibility check in EtherPredicateProxy.constructor(address)\nMissing compatibility check in UpgradableProxy.constructor(address)\nMissing compatibility check in UpgradableProxy.constructor(address)\nFound compatibility check in UpgradableProxy.updateImplementation(address)\nFound compatibility check in UpgradableProxy.updateAndCall(address,bytes)\nFound compatibility check in UpgradableProxy.updateImplementation(address)\nFound compatibility check in UpgradableProxy.updateImplementation(address)\nFound compatibility check in UpgradableProxy.updateAndCall(address,bytes)\nFound compatibility check in UpgradableProxy.updateAndCall(address,bytes)\n",
        "id": "007681057a6d80ee6fcb0fa3e3dc7c48a6a7ca8c950ea0d4bc3df3f33b3dbdbb",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "UpgradableProxy.IMPLEMENTATION_SLOT",
          "impl_address_setter": "UpgradableProxy.updateImplementation(address)",
          "impl_address_getter": "UpgradableProxy.loadImplementation()",
          "impl_address_location": "UpgradableProxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.6.6/62CfDd848892F942D7C221de62b204Ed4c0dfBFd_EtherPredicateProxy.sol/62CfDd848892F942D7C221de62b204Ed4c0dfBFd_EtherPredicateProxy.sol#53-151)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "keccak256(bytes)(matic.network.proxy.implementation)",
          "unstructured_storage": true,
          "eip_1967": false,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "EtherPredicateProxy.constructor(address)": "missing",
              "UpgradableProxy.constructor(address)": "missing",
              "UpgradableProxy.updateImplementation(address)": "require(bool,string)(extcodesize(uint256)(_target) > 0,DESTINATION_ADDRESS_IS_NOT_A_CONTRACT)",
              "UpgradableProxy.updateAndCall(address,bytes)": "require(bool,string)(extcodesize(uint256)(_target) > 0,DESTINATION_ADDRESS_IS_NOT_A_CONTRACT)"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "proxyOwner()",
              "implementation()",
              "transferProxyOwnership(address)",
              "updateImplementation(address)",
              "updateAndCall(address,bytes)",
              "proxyType()",
              "implementation()",
              "proxyType()",
              "implementation()"
            ]
          }
        }
      }
    ]
  }
}