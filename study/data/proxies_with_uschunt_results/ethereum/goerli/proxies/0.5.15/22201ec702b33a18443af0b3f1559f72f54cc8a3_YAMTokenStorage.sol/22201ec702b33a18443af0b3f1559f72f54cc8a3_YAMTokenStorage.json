{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "YAMDelegator (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.5.15/22201ec702b33a18443af0b3f1559f72f54cc8a3_YAMTokenStorage.sol/22201ec702b33a18443af0b3f1559f72f54cc8a3_YAMTokenStorage.sol#403-874)",
        "elements": [],
        "description": "YAMDelegator (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.5.15/22201ec702b33a18443af0b3f1559f72f54cc8a3_YAMTokenStorage.sol/22201ec702b33a18443af0b3f1559f72f54cc8a3_YAMTokenStorage.sol#403-874) is an upgradeable proxy.\nimplementation was found in a different contract.\nimplementation is an address state variable.\nMissing compatibility check in YAMDelegator.constructor(string,string,uint8,uint256,address,bytes)\nMissing compatibility check in YAMDelegator._setImplementation(address,bool,bytes)\n",
        "id": "b90e0de45b69b144291e79166be80305ee9cd51a90884d899a925cbe546c242c",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "YAMDelegationStorage.implementation",
          "impl_address_setter": "YAMDelegator._setImplementation(address,bool,bytes)",
          "impl_address_getter": "not found",
          "impl_address_location": "YAMDelegationStorage (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.5.15/22201ec702b33a18443af0b3f1559f72f54cc8a3_YAMTokenStorage.sol/22201ec702b33a18443af0b3f1559f72f54cc8a3_YAMTokenStorage.sol#380-385)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "YAMDelegator.constructor(string,string,uint8,uint256,address,bytes)": "missing",
              "YAMDelegator._setImplementation(address,bool,bytes)": "missing"
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "erc20": [
              "balanceOf(address)",
              "transfer(address,uint256)",
              "transferFrom(address,address,uint256)",
              "approve(address,uint256)",
              "allowance(address,address)"
            ],
            "other": [
              "_setImplementation(address,bool,bytes)",
              "balanceOfUnderlying(address)",
              "increaseAllowance(address,uint256)",
              "decreaseAllowance(address,uint256)",
              "maxScalingFactor()",
              "yamToFragment(uint256)",
              "fragmentToYam(uint256)",
              "getPriorVotes(address,uint256)",
              "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)",
              "delegate(address)",
              "delegates(address)",
              "getCurrentVotes(address)",
              "mint(address,uint256)",
              "rebase(uint256,uint256,bool)",
              "_setRebaser(address)",
              "_setIncentivizer(address)",
              "_setPendingGov(address)",
              "_acceptGov()",
              "_setImplementation(address,bool,bytes)",
              "mint(address,uint256)",
              "increaseAllowance(address,uint256)",
              "maxScalingFactor()",
              "rebase(uint256,uint256,bool)",
              "decreaseAllowance(address,uint256)",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
              "rescueTokens(address,address,uint256)",
              "delegates(address)",
              "balanceOfUnderlying(address)",
              "_setPendingGov(address)",
              "_setRebaser(address)",
              "_setIncentivizer(address)",
              "_setMigrator(address)",
              "_acceptGov()",
              "getPriorVotes(address,uint256)",
              "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)",
              "delegate(address)",
              "getCurrentVotes(address)",
              "yamToFragment(uint256)",
              "fragmentToYam(uint256)",
              "delegateToImplementation(bytes)",
              "delegateToViewImplementation(bytes)"
            ]
          }
        }
      }
    ]
  }
}