{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "AProxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol#701-763)",
        "elements": [],
        "description": "AProxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol#701-763) may be an upgradeable proxy.\n_implementationAddress is declared in the proxy.\nAProxy.fallback()._implementationAddress (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol#750) gets value from a cross-contract call: vStore().getAddress(implementationAddressKey())\nIVStore appears to be a Registry contract for the proxy\nThe address of IVStore comes from the value of ABase.vStore(). (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol#528)\nNo setter functions found to search for compatibility checks.\n",
        "id": "dfec4f36f42191efb5b91021656ab2f1671ec4c2eb114cb3da5512e7a4a54641",
        "features": {
          "upgradeable": "maybe",
          "impl_address_variable": "AProxy.fallback()._implementationAddress",
          "impl_address_setter": "not found",
          "impl_address_getter": "AProxy.implementationAddress()",
          "impl_address_location": "AProxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol#701-763)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "vStore().getAddress(implementationAddressKey())",
          "registry": "IVStore",
          "registry_source_type": "IVStore",
          "registry_source_variable": "",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": "no setters found"
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "erc20": [
              "name()"
            ],
            "other": [
              "version()",
              "institutionId()",
              "vAddress()",
              "setUserAddresses(address[],string,uint8[],bytes32[],bytes32[])",
              "setRecoveryAddress(address,string,uint8[],bytes32[],bytes32[])",
              "version()",
              "institutionId()",
              "setUserAddresses(address[],string,uint8[],bytes32[],bytes32[])",
              "setRecoveryAddress(address,string,uint8[],bytes32[],bytes32[])",
              "setVStoreProxyAddress(address,string,uint8[],bytes32[],bytes32[])",
              "implementationAddress()",
              "setVStoreProxyAddress(address,string,uint8[],bytes32[],bytes32[])",
              "implementationAddress()"
            ]
          }
        }
      },
      {
        "contract": "VErc20Proxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol#766-789)",
        "elements": [],
        "description": "VErc20Proxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol#766-789) may be an upgradeable proxy.\n_implementationAddress is declared in the proxy.\nAProxy.fallback()._implementationAddress (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol#750) gets value from a cross-contract call: vStore().getAddress(implementationAddressKey())\nIVStore appears to be a Registry contract for the proxy\nThe address of IVStore comes from the value of ABase.vStore(). (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol#528)\nNo setter functions found to search for compatibility checks.\n",
        "id": "733c6945557f034cf3a128c3cc61b724bb2616ebf2b38004dd5580635e004bb6",
        "features": {
          "upgradeable": "maybe",
          "impl_address_variable": "AProxy.fallback()._implementationAddress",
          "impl_address_setter": "not found",
          "impl_address_getter": "AProxy.implementationAddress()",
          "impl_address_location": "VErc20Proxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol/3193223668e5831406a0cd1a8b01d2b96852a210_VErc20Proxy.sol#766-789)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "vStore().getAddress(implementationAddressKey())",
          "registry": "IVStore",
          "registry_source_type": "IVStore",
          "registry_source_variable": "",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": "no setters found"
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "erc20": [
              "name()"
            ],
            "other": [
              "setVStoreProxyAddress(address,string,uint8[],bytes32[],bytes32[])",
              "implementationAddress()",
              "version()",
              "institutionId()",
              "vAddress()",
              "setUserAddresses(address[],string,uint8[],bytes32[],bytes32[])",
              "setRecoveryAddress(address,string,uint8[],bytes32[],bytes32[])",
              "version()",
              "institutionId()",
              "setUserAddresses(address[],string,uint8[],bytes32[],bytes32[])",
              "setRecoveryAddress(address,string,uint8[],bytes32[],bytes32[])",
              "setVStoreProxyAddress(address,string,uint8[],bytes32[],bytes32[])",
              "implementationAddress()"
            ]
          }
        }
      }
    ]
  }
}