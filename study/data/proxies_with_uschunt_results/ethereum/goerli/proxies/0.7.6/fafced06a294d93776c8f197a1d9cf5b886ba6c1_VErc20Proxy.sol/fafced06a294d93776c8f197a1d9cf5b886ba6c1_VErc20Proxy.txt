
Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin IRecovery.is_proxy (Slither line:1425)


End IRecovery.is_proxy (Slither line:1428)


Begin IRecovery.is_upgradeable_proxy (Slither line:1136)

Checking contract: IRecovery 

End IRecovery.is_upgradeable_proxy (Slither line:1407)


Begin IStorage.is_proxy (Slither line:1425)


End IStorage.is_proxy (Slither line:1428)


Begin IStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: IStorage 

End IStorage.is_upgradeable_proxy (Slither line:1407)


Begin IErc20.is_proxy (Slither line:1425)


End IErc20.is_proxy (Slither line:1428)


Begin IErc20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IErc20 

End IErc20.is_upgradeable_proxy (Slither line:1407)


Begin IBase.is_proxy (Slither line:1425)


End IBase.is_proxy (Slither line:1428)


Begin IBase.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBase 

End IBase.is_upgradeable_proxy (Slither line:1407)


Begin AStorage.is_proxy (Slither line:1425)


End AStorage.is_proxy (Slither line:1428)


Begin AStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: AStorage 

End AStorage.is_upgradeable_proxy (Slither line:1407)


Begin IProxy.is_proxy (Slither line:1425)


End IProxy.is_proxy (Slither line:1428)


Begin IProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: IProxy 

End IProxy.is_upgradeable_proxy (Slither line:1407)


Begin IVLighthouse.is_proxy (Slither line:1425)


End IVLighthouse.is_proxy (Slither line:1428)


Begin IVLighthouse.is_upgradeable_proxy (Slither line:1136)

Checking contract: IVLighthouse 

End IVLighthouse.is_upgradeable_proxy (Slither line:1407)


Begin IVErc20.is_proxy (Slither line:1425)


End IVErc20.is_proxy (Slither line:1428)


Begin IVErc20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IVErc20 

End IVErc20.is_upgradeable_proxy (Slither line:1407)


Begin ABase.is_proxy (Slither line:1425)


End ABase.is_proxy (Slither line:1428)


Begin ABase.is_upgradeable_proxy (Slither line:1136)

Checking contract: ABase 

End ABase.is_upgradeable_proxy (Slither line:1407)


Begin AProxy.is_proxy (Slither line:1425)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin AProxy.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(ptr_fallback_asm_0,returndatasize()()) (Slither line:2800)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2815)
Args:
ptr_fallback_asm_0
returndatasize()()

End AProxy.find_delegatecall_in_exp_node (Slither line:2856)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin AProxy.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(ptr_fallback_asm_0,returndatasize()()) (Slither line:2800)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2815)
Args:
ptr_fallback_asm_0
returndatasize()()

End AProxy.find_delegatecall_in_exp_node (Slither line:2856)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin AProxy.find_delegatecall_in_exp_node

Found Expression Node: calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,calldatasize()()) (Slither line:2800)
Expression called: calldatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2815)
Args:
ptr_fallback_asm_0
0
calldatasize()()

End AProxy.find_delegatecall_in_exp_node (Slither line:2856)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin AProxy.find_delegatecall_in_exp_node

Found Expression Node: result_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_implementationAddress,ptr_fallback_asm_0,calldatasize()(),0,0) (Slither line:2800)
Expression Type: = (Slither line:2803)
Checking right side of assignment expression... (Slither line:2811)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2815)
Args:
gas()()
_implementationAddress
ptr_fallback_asm_0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2822)

Destination is _implementationAddress (Slither line:2826)
dest.value: _implementationAddress (Slither line:2829)
Expression: implementationAddress() (Slither line:2834)

Begin AProxy.find_delegate_from_call_exp

implementationAddress() (Slither line:2001)
called = implementationAddress (Slither line:2008)
Return node of function AProxy.implementationAddress(): RETURN vLighthouse().addressByKey(implementationAddressKey()) (Slither line:2039)
Encountered call expression at RETURN node: vLighthouse().addressByKey(implementationAddressKey()) (Slither line:2051)
Encountered member access expression: vLighthouse().addressByKey (Slither line:2055)

Begin AProxy.find_delegate_from_member_access

Expression: vLighthouse().addressByKey (Slither line:2356)
vLighthouse() (Slither line:2369)
Member of call expression result: vLighthouse (Slither line:2372)
Call to function vLighthouse returns IVLighthouse(addressStorage[VLIGHTHOUSE_PROXY_ADDRESS]) (Slither line:2383)
addressByKey is a member of the contract type: IVLighthouse (Slither line:2414)
Which is an interface (Slither line:2418)
Could not find a contract that inherits IVLighthouse (Slither line:2439)

End AProxy.find_delegate_from_call_exp (Slither line:2102)


End AProxy.find_delegatecall_in_exp_node (Slither line:2856)


End AProxy.is_proxy (Slither line:1476)


Begin AProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: AProxy 
Local Variable: _implementationAddress (Slither line:1164)
AProxy is delegating to _implementationAddress
Looking for setter (Slither line:1200)


Begin AProxy.find_setter_in_contract (Slither line:3117)

Expression: implementationAddress() (Slither line:3120)
Checking function: constructor(bytes32,address) returns() (Slither line:3125)
Checking function: implementationAddress() returns(address) (Slither line:3125)
Visibility: public
vLighthouse().addressByKey(implementationAddressKey())
IVLighthouse(addressStorage[VLIGHTHOUSE_PROXY_ADDRESS])
bytes32Storage[IMPLEMENTATION_ADDRESS_KEY]
Checking function: implementationAddressKey() returns(bytes32) (Slither line:3125)
Visibility: internal
Checking function: receive() returns() (Slither line:3125)
Checking function: fallback() returns() (Slither line:3125)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3125)
Visibility: internal
Checking function: version() returns(string) (Slither line:3125)
Visibility: public
Lime Kiln
Checking function: vLighthouse() returns(IVLighthouse) (Slither line:3125)
Visibility: internal
Checking function: vAddress() returns(address) (Slither line:3125)
Visibility: internal
Checking function: containsVAddress(address[]) returns(bool) (Slither line:3125)
Visibility: internal
Checking function: containsOwnerAddress(address[]) returns(bool) (Slither line:3125)
Visibility: internal
Checking function: containsRecoveryAddress(string,address[]) returns(bool) (Slither line:3125)
Visibility: internal
Checking function: containsAdminAddresses(address[],string) returns(bool) (Slither line:3125)
Visibility: internal
Checking function: containsSuperAdminAddresses(address[]) returns(bool) (Slither line:3125)
Visibility: internal
Checking function: validateSignatures(ABase.Signatures) returns(address[]) (Slither line:3125)
Visibility: internal
Checking function: spliceTimestamps(string) returns(uint256,uint256) (Slither line:3125)
Visibility: private
Checking function: flagThisNonce(string) returns() (Slither line:3125)
Visibility: private
Checking function: isThisNonceUsed(string) returns(bool) (Slither line:3125)
Visibility: private
Checking function: encodePackedAddressArray(address[]) returns(bytes) (Slither line:3125)
Visibility: internal
Checking function: encodePackedStringArray(string[]) returns(bytes) (Slither line:3125)
Visibility: internal
Checking function: encodePackedBytes32Array(bytes32[]) returns(bytes) (Slither line:3125)
Visibility: internal
Checking function: encodePackedUint32Array(uint256[]) returns(bytes) (Slither line:3125)
Visibility: internal
Checking function: compare(string,string) returns(bool) (Slither line:3125)
Visibility: internal
Checking function: encodeSymbolPair(string,string) returns(bytes32) (Slither line:3125)
Visibility: internal
Checking function: toTokens(IVErc20,uint256) returns(uint256) (Slither line:3125)
Visibility: internal
Checking function: toUnderlyingTokens(IVErc20,uint256) returns(uint256) (Slither line:3125)
Visibility: internal
Checking function: key(string) returns(bytes32) (Slither line:3125)
Visibility: internal
Checking function: name() returns(string) (Slither line:3125)
Visibility: external
Checking function: version() returns(string) (Slither line:3125)
Visibility: external
Checking function: implementationAddress() returns(address) (Slither line:3125)
Visibility: external

End AProxy.find_setter_in_contract (Slither line:3343)


Could not find implementation setter in AProxy (Slither line:1269)
Looking for getter (Slither line:1273)


Begin AProxy.find_getter_in_contract (Slither line:2972)

_implementationAddress is a Variable object
implementationAddress()
Checking function: version (Slither line:2986)
version returns string variable  (Slither line:3006)
RETURN node expression: Lime Kiln (Slither line:3026)
Checking function: vLighthouse (Slither line:2986)
vLighthouse returns IVLighthouse variable  (Slither line:3006)
Checking function: vAddress (Slither line:2986)
vAddress returns address variable  (Slither line:3006)
RETURN node expression: vLighthouse().addressByKey(VADDRESS) (Slither line:3026)
Checking function: containsVAddress (Slither line:2986)
containsVAddress returns bool variable  (Slither line:3006)
RETURN node expression: false (Slither line:3026)
RETURN node expression: true (Slither line:3026)
Checking function: containsOwnerAddress (Slither line:2986)
containsOwnerAddress returns bool variable  (Slither line:3006)
RETURN node expression: false (Slither line:3026)
RETURN node expression: true (Slither line:3026)
RETURN node expression: true (Slither line:3026)
Checking function: containsRecoveryAddress (Slither line:2986)
containsRecoveryAddress returns bool variable  (Slither line:3006)
RETURN node expression: false (Slither line:3026)
RETURN node expression: true (Slither line:3026)
Checking function: containsAdminAddresses (Slither line:2986)
containsAdminAddresses returns bool variable  (Slither line:3006)
RETURN node expression: false (Slither line:3026)
RETURN node expression: true (Slither line:3026)
Checking function: containsSuperAdminAddresses (Slither line:2986)
containsSuperAdminAddresses returns bool variable  (Slither line:3006)
RETURN node expression: true (Slither line:3026)
RETURN node expression: false (Slither line:3026)
Checking function: validateSignatures (Slither line:2986)
validateSignatures returns address[] variable called signedBy (Slither line:3006)
RETURN node expression: addresses (Slither line:3026)
Checking function: spliceTimestamps (Slither line:2986)
spliceTimestamps returns uint256 variable called begin (Slither line:3006)
spliceTimestamps returns uint256 variable called end (Slither line:3006)
Checking function: flagThisNonce (Slither line:2986)
Checking function: isThisNonceUsed (Slither line:2986)
isThisNonceUsed returns bool variable  (Slither line:3006)
RETURN node expression: bytes32ToBoolStorage[NONCES][key(nonce)] (Slither line:3026)
Checking function: encodePackedAddressArray (Slither line:2986)
encodePackedAddressArray returns bytes variable  (Slither line:3006)
RETURN node expression: data (Slither line:3026)
Checking function: encodePackedStringArray (Slither line:2986)
encodePackedStringArray returns bytes variable  (Slither line:3006)
RETURN node expression: data (Slither line:3026)
Checking function: encodePackedBytes32Array (Slither line:2986)
encodePackedBytes32Array returns bytes variable  (Slither line:3006)
RETURN node expression: data (Slither line:3026)
Checking function: encodePackedUint32Array (Slither line:2986)
encodePackedUint32Array returns bytes variable  (Slither line:3006)
RETURN node expression: data (Slither line:3026)
Checking function: compare (Slither line:2986)
compare returns bool variable  (Slither line:3006)
RETURN node expression: (keccak256(bytes)(abi.encodePacked(a)) == keccak256(bytes)(abi.encodePacked(b))) (Slither line:3026)
Checking function: encodeSymbolPair (Slither line:2986)
encodeSymbolPair returns bytes32 variable  (Slither line:3006)
RETURN node expression: key(string(abi.encodePacked(symbol,/,pairedSymbol))) (Slither line:3026)
Checking function: toTokens (Slither line:2986)
toTokens returns uint256 variable  (Slither line:3006)
RETURN node expression: underlyingTokens.mul(10 ** (18 + 18 - vErc20.underlying().decimals())).div(1e18).mul(vErc20.exchangeRate()).div(1e18) (Slither line:3026)
Checking function: toUnderlyingTokens (Slither line:2986)
toUnderlyingTokens returns uint256 variable  (Slither line:3006)
RETURN node expression: tokens.mul(1e18).div(vErc20.exchangeRate()).mul(1e18).div(10 ** (18 + 18 - vErc20.underlying().decimals())) (Slither line:3026)
Checking function: key (Slither line:2986)
key returns bytes32 variable  (Slither line:3006)
RETURN node expression: keccak256(bytes)(abi.encodePacked(_key)) (Slither line:3026)
Checking function: constructor (Slither line:2986)
Checking function: implementationAddress (Slither line:2986)

implementationAddress appears to be the implementation getter (Slither line:2991)


End AProxy.find_getter_in_contract (Slither line:3081)


Implementation retrieved by function: implementationAddress in contract: AProxy (Slither line:1285)

Begin AProxy.getter_return_is_non_constant (Slither line:2881)

Found getter function but not setter
Checking if getter calls any other function
RETURN: vLighthouse().addressByKey(implementationAddressKey()) (Slither line:2886)

End AProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: AProxy
_implementationAddress is dependent on addressStorage
_implementationAddress is dependent on bytes32Storage
_implementationAddress is dependent on VERC20_ADDRESS
Expression for _implementationAddress: implementationAddress()
Called: implementationAddress
impl_address_from_contract_call: implementationAddress()
called: implementationAddress
implementationAddress returns vLighthouse().addressByKey(implementationAddressKey())
called: vLighthouse().addressByKey
found MemberAccess: vLighthouse().addressByKey
TypeConversion: IVLighthouse(addressStorage[VLIGHTHOUSE_PROXY_ADDRESS])
find_registry_address_source: vLighthouse().addressByKey(implementationAddressKey())
MemberAccess: vLighthouse().addressByKey
CallExpression: vLighthouse()
Identifier: vLighthouse
Checking public function version
Checking external function name
Checking external function version
Checking external function implementationAddress
Checking public function implementationAddress
Checking external function receive
Checking external function fallback
functions_writing_to_variable: _implementationAddress
functions_writing_to_variable: checking function AProxy.toTokens (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.receive (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.compare (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.flagThisNonce (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.containsAdminAddresses (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.encodePackedStringArray (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.vAddress (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.containsOwnerAddress (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.encodePackedBytes32Array (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.implementationAddress (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.validateSignatures (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.isThisNonceUsed (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.containsVAddress (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.name (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.slitherConstructorConstantVariables (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.spliceTimestamps (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.encodeSymbolPair (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.constructor (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.toUnderlyingTokens (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.containsSuperAdminAddresses (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.encodePackedAddressArray (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.encodePackedUint32Array (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.implementationAddress (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.containsRecoveryAddress (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.version (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.version (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.implementationAddressKey (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.key (proxy_features line:895)
functions_writing_to_variable: checking function AProxy.vLighthouse (proxy_features line:895)
has_compatibility_checks: dependencies: ['TMP_431', '', '_implementationAddressKey', 'TMP_433', 'IMPLEMENTATION_ADDRESS_KEY', 'REF_158', 'bytes32Storage', 'TMP_430', '', 'VERC20_ADDRESS', 'TMP_313', '_vLighthouseProxyAddress', 'REF_246', '', '_vLighthouseProxyAddress', 'addressStorage', 'TMP_429']
functions_writing_to_variable: IMPLEMENTATION_ADDRESS_KEY
functions_writing_to_variable: checking function AStorage.key (proxy_features line:895)
functions_writing_to_variable: checking function AStorage.slitherConstructorConstantVariables (proxy_features line:895)
functions_writing_to_variable: exp = USER_ID = keccak256(bytes)(abi.encodePacked(USER_ID)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: USER_ID = keccak256(bytes)(abi.encodePacked(USER_ID)) (proxy_features line:909)
functions_writing_to_variable: exp = USER = keccak256(bytes)(abi.encodePacked(USER)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: USER = keccak256(bytes)(abi.encodePacked(USER)) (proxy_features line:909)
functions_writing_to_variable: exp = ADDRESS_TO_USER_ID = keccak256(bytes)(abi.encodePacked(ADDRESS_TO_USER_ID)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: ADDRESS_TO_USER_ID = keccak256(bytes)(abi.encodePacked(ADDRESS_TO_USER_ID)) (proxy_features line:909)
functions_writing_to_variable: exp = ADDITIONAL_USER_ADDRESSES = keccak256(bytes)(abi.encodePacked(ADDITIONAL_USER_ADDRESSES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: ADDITIONAL_USER_ADDRESSES = keccak256(bytes)(abi.encodePacked(ADDITIONAL_USER_ADDRESSES)) (proxy_features line:909)
functions_writing_to_variable: exp = VLIGHTHOUSE_ADDRESS = keccak256(bytes)(abi.encodePacked(VLIGHTHOUSE_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VLIGHTHOUSE_ADDRESS = keccak256(bytes)(abi.encodePacked(VLIGHTHOUSE_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VLIGHTHOUSE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(VLIGHTHOUSE_PROXY_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VLIGHTHOUSE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(VLIGHTHOUSE_PROXY_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VFINANCE_ADDRESS = keccak256(bytes)(abi.encodePacked(VFINANCE_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VFINANCE_ADDRESS = keccak256(bytes)(abi.encodePacked(VFINANCE_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VFINANCE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(VFINANCE_PROXY_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VFINANCE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(VFINANCE_PROXY_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VERC20_ADDRESS = keccak256(bytes)(abi.encodePacked(VERC20_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VERC20_ADDRESS = keccak256(bytes)(abi.encodePacked(VERC20_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VERC20_PROXY_ADDRESSES = keccak256(bytes)(abi.encodePacked(VERC20_PROXY_ADDRESSES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VERC20_PROXY_ADDRESSES = keccak256(bytes)(abi.encodePacked(VERC20_PROXY_ADDRESSES)) (proxy_features line:909)
functions_writing_to_variable: exp = VWALLET_ADDRESS = keccak256(bytes)(abi.encodePacked(VWALLET_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VWALLET_ADDRESS = keccak256(bytes)(abi.encodePacked(VWALLET_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VWALLET_PROXY_ADDRESSES = keccak256(bytes)(abi.encodePacked(VWALLET_PROXY_ADDRESSES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VWALLET_PROXY_ADDRESSES = keccak256(bytes)(abi.encodePacked(VWALLET_PROXY_ADDRESSES)) (proxy_features line:909)
functions_writing_to_variable: exp = IMPLEMENTATION_ADDRESS_KEY = keccak256(bytes)(abi.encodePacked(IMPLEMENTATION_ADDRESS_KEY)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_ADDRESS_KEY = keccak256(bytes)(abi.encodePacked(IMPLEMENTATION_ADDRESS_KEY)) (proxy_features line:909)
functions_writing_to_variable: Identifier: IMPLEMENTATION_ADDRESS_KEY (proxy_features line:921)
get_value_assigned: IMPLEMENTATION_ADDRESS_KEY = keccak256(bytes)(abi.encodePacked(IMPLEMENTATION_ADDRESS_KEY))
functions_writing_to_variable: exp = VADDRESS = keccak256(bytes)(abi.encodePacked(VADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VADDRESS = keccak256(bytes)(abi.encodePacked(VADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = WITHDRAWALS = keccak256(bytes)(abi.encodePacked(WITHDRAWALS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: WITHDRAWALS = keccak256(bytes)(abi.encodePacked(WITHDRAWALS)) (proxy_features line:909)
functions_writing_to_variable: exp = NAME = keccak256(bytes)(abi.encodePacked(NAME)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: NAME = keccak256(bytes)(abi.encodePacked(NAME)) (proxy_features line:909)
functions_writing_to_variable: exp = SYMBOL = keccak256(bytes)(abi.encodePacked(SYMBOL)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: SYMBOL = keccak256(bytes)(abi.encodePacked(SYMBOL)) (proxy_features line:909)
functions_writing_to_variable: exp = UNDERLYING_ADDRESS = keccak256(bytes)(abi.encodePacked(UNDERLYING_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: UNDERLYING_ADDRESS = keccak256(bytes)(abi.encodePacked(UNDERLYING_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = REDEEM_ADDRESSES = keccak256(bytes)(abi.encodePacked(REDEEM_ADDRESSES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: REDEEM_ADDRESSES = keccak256(bytes)(abi.encodePacked(REDEEM_ADDRESSES)) (proxy_features line:909)
functions_writing_to_variable: exp = SUPPLY = keccak256(bytes)(abi.encodePacked(SUPPLY)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: SUPPLY = keccak256(bytes)(abi.encodePacked(SUPPLY)) (proxy_features line:909)
functions_writing_to_variable: exp = BALANCES = keccak256(bytes)(abi.encodePacked(BALANCES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: BALANCES = keccak256(bytes)(abi.encodePacked(BALANCES)) (proxy_features line:909)
functions_writing_to_variable: exp = INSTITUTION_ID = keccak256(bytes)(abi.encodePacked(INSTITUTION_ID)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: INSTITUTION_ID = keccak256(bytes)(abi.encodePacked(INSTITUTION_ID)) (proxy_features line:909)
functions_writing_to_variable: exp = INCREMENT_EXCHANGES_TIMESTAMP = keccak256(bytes)(abi.encodePacked(INCREMENT_EXCHANGES_TIMESTAMP)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: INCREMENT_EXCHANGES_TIMESTAMP = keccak256(bytes)(abi.encodePacked(INCREMENT_EXCHANGES_TIMESTAMP)) (proxy_features line:909)
functions_writing_to_variable: exp = ALLOWANCES = keccak256(bytes)(abi.encodePacked(ALLOWANCES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: ALLOWANCES = keccak256(bytes)(abi.encodePacked(ALLOWANCES)) (proxy_features line:909)
functions_writing_to_variable: exp = NONCES = keccak256(bytes)(abi.encodePacked(abi.encodePacked(NONCES))) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: NONCES = keccak256(bytes)(abi.encodePacked(abi.encodePacked(NONCES))) (proxy_features line:909)
functions_writing_to_variable: exp = CHAIN_ID = keccak256(bytes)(abi.encodePacked(CHAIN_ID)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: CHAIN_ID = keccak256(bytes)(abi.encodePacked(CHAIN_ID)) (proxy_features line:909)
functions_writing_to_variable: exp = ERC20_PREDICATE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(ERC20_PREDICATE_PROXY_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: ERC20_PREDICATE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(ERC20_PREDICATE_PROXY_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = ROOT_CHAIN_MANAGER_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(ROOT_CHAIN_MANAGER_PROXY_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: ROOT_CHAIN_MANAGER_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(ROOT_CHAIN_MANAGER_PROXY_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = CHILD_CHAIN_MANAGER_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(CHILD_CHAIN_MANAGER_PROXY_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: CHILD_CHAIN_MANAGER_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(CHILD_CHAIN_MANAGER_PROXY_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = BALANCER_VAULT_ADDRESS = keccak256(bytes)(abi.encodePacked(BALANCER_VAULT_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: BALANCER_VAULT_ADDRESS = keccak256(bytes)(abi.encodePacked(BALANCER_VAULT_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VPAYOUT_ADDRESS = keccak256(bytes)(abi.encodePacked(VPAYOUT_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VPAYOUT_ADDRESS = keccak256(bytes)(abi.encodePacked(VPAYOUT_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = PAYOUT_ADDRESSES = keccak256(bytes)(abi.encodePacked(PAYOUT_ADDRESSES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: PAYOUT_ADDRESSES = keccak256(bytes)(abi.encodePacked(PAYOUT_ADDRESSES)) (proxy_features line:909)
functions_writing_to_variable: bytes32Storage
functions_writing_to_variable: checking function AStorage.key (proxy_features line:895)
functions_writing_to_variable: checking function AStorage.slitherConstructorConstantVariables (proxy_features line:895)
functions_writing_to_variable: VERC20_ADDRESS
functions_writing_to_variable: checking function AStorage.key (proxy_features line:895)
functions_writing_to_variable: checking function AStorage.slitherConstructorConstantVariables (proxy_features line:895)
functions_writing_to_variable: exp = USER_ID = keccak256(bytes)(abi.encodePacked(USER_ID)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: USER_ID = keccak256(bytes)(abi.encodePacked(USER_ID)) (proxy_features line:909)
functions_writing_to_variable: exp = USER = keccak256(bytes)(abi.encodePacked(USER)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: USER = keccak256(bytes)(abi.encodePacked(USER)) (proxy_features line:909)
functions_writing_to_variable: exp = ADDRESS_TO_USER_ID = keccak256(bytes)(abi.encodePacked(ADDRESS_TO_USER_ID)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: ADDRESS_TO_USER_ID = keccak256(bytes)(abi.encodePacked(ADDRESS_TO_USER_ID)) (proxy_features line:909)
functions_writing_to_variable: exp = ADDITIONAL_USER_ADDRESSES = keccak256(bytes)(abi.encodePacked(ADDITIONAL_USER_ADDRESSES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: ADDITIONAL_USER_ADDRESSES = keccak256(bytes)(abi.encodePacked(ADDITIONAL_USER_ADDRESSES)) (proxy_features line:909)
functions_writing_to_variable: exp = VLIGHTHOUSE_ADDRESS = keccak256(bytes)(abi.encodePacked(VLIGHTHOUSE_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VLIGHTHOUSE_ADDRESS = keccak256(bytes)(abi.encodePacked(VLIGHTHOUSE_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VLIGHTHOUSE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(VLIGHTHOUSE_PROXY_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VLIGHTHOUSE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(VLIGHTHOUSE_PROXY_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VFINANCE_ADDRESS = keccak256(bytes)(abi.encodePacked(VFINANCE_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VFINANCE_ADDRESS = keccak256(bytes)(abi.encodePacked(VFINANCE_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VFINANCE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(VFINANCE_PROXY_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VFINANCE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(VFINANCE_PROXY_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VERC20_ADDRESS = keccak256(bytes)(abi.encodePacked(VERC20_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VERC20_ADDRESS = keccak256(bytes)(abi.encodePacked(VERC20_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: Identifier: VERC20_ADDRESS (proxy_features line:921)
get_value_assigned: VERC20_ADDRESS = keccak256(bytes)(abi.encodePacked(VERC20_ADDRESS))
functions_writing_to_variable: exp = VERC20_PROXY_ADDRESSES = keccak256(bytes)(abi.encodePacked(VERC20_PROXY_ADDRESSES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VERC20_PROXY_ADDRESSES = keccak256(bytes)(abi.encodePacked(VERC20_PROXY_ADDRESSES)) (proxy_features line:909)
functions_writing_to_variable: exp = VWALLET_ADDRESS = keccak256(bytes)(abi.encodePacked(VWALLET_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VWALLET_ADDRESS = keccak256(bytes)(abi.encodePacked(VWALLET_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VWALLET_PROXY_ADDRESSES = keccak256(bytes)(abi.encodePacked(VWALLET_PROXY_ADDRESSES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VWALLET_PROXY_ADDRESSES = keccak256(bytes)(abi.encodePacked(VWALLET_PROXY_ADDRESSES)) (proxy_features line:909)
functions_writing_to_variable: exp = IMPLEMENTATION_ADDRESS_KEY = keccak256(bytes)(abi.encodePacked(IMPLEMENTATION_ADDRESS_KEY)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_ADDRESS_KEY = keccak256(bytes)(abi.encodePacked(IMPLEMENTATION_ADDRESS_KEY)) (proxy_features line:909)
functions_writing_to_variable: exp = VADDRESS = keccak256(bytes)(abi.encodePacked(VADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VADDRESS = keccak256(bytes)(abi.encodePacked(VADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = WITHDRAWALS = keccak256(bytes)(abi.encodePacked(WITHDRAWALS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: WITHDRAWALS = keccak256(bytes)(abi.encodePacked(WITHDRAWALS)) (proxy_features line:909)
functions_writing_to_variable: exp = NAME = keccak256(bytes)(abi.encodePacked(NAME)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: NAME = keccak256(bytes)(abi.encodePacked(NAME)) (proxy_features line:909)
functions_writing_to_variable: exp = SYMBOL = keccak256(bytes)(abi.encodePacked(SYMBOL)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: SYMBOL = keccak256(bytes)(abi.encodePacked(SYMBOL)) (proxy_features line:909)
functions_writing_to_variable: exp = UNDERLYING_ADDRESS = keccak256(bytes)(abi.encodePacked(UNDERLYING_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: UNDERLYING_ADDRESS = keccak256(bytes)(abi.encodePacked(UNDERLYING_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = REDEEM_ADDRESSES = keccak256(bytes)(abi.encodePacked(REDEEM_ADDRESSES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: REDEEM_ADDRESSES = keccak256(bytes)(abi.encodePacked(REDEEM_ADDRESSES)) (proxy_features line:909)
functions_writing_to_variable: exp = SUPPLY = keccak256(bytes)(abi.encodePacked(SUPPLY)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: SUPPLY = keccak256(bytes)(abi.encodePacked(SUPPLY)) (proxy_features line:909)
functions_writing_to_variable: exp = BALANCES = keccak256(bytes)(abi.encodePacked(BALANCES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: BALANCES = keccak256(bytes)(abi.encodePacked(BALANCES)) (proxy_features line:909)
functions_writing_to_variable: exp = INSTITUTION_ID = keccak256(bytes)(abi.encodePacked(INSTITUTION_ID)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: INSTITUTION_ID = keccak256(bytes)(abi.encodePacked(INSTITUTION_ID)) (proxy_features line:909)
functions_writing_to_variable: exp = INCREMENT_EXCHANGES_TIMESTAMP = keccak256(bytes)(abi.encodePacked(INCREMENT_EXCHANGES_TIMESTAMP)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: INCREMENT_EXCHANGES_TIMESTAMP = keccak256(bytes)(abi.encodePacked(INCREMENT_EXCHANGES_TIMESTAMP)) (proxy_features line:909)
functions_writing_to_variable: exp = ALLOWANCES = keccak256(bytes)(abi.encodePacked(ALLOWANCES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: ALLOWANCES = keccak256(bytes)(abi.encodePacked(ALLOWANCES)) (proxy_features line:909)
functions_writing_to_variable: exp = NONCES = keccak256(bytes)(abi.encodePacked(abi.encodePacked(NONCES))) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: NONCES = keccak256(bytes)(abi.encodePacked(abi.encodePacked(NONCES))) (proxy_features line:909)
functions_writing_to_variable: exp = CHAIN_ID = keccak256(bytes)(abi.encodePacked(CHAIN_ID)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: CHAIN_ID = keccak256(bytes)(abi.encodePacked(CHAIN_ID)) (proxy_features line:909)
functions_writing_to_variable: exp = ERC20_PREDICATE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(ERC20_PREDICATE_PROXY_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: ERC20_PREDICATE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(ERC20_PREDICATE_PROXY_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = ROOT_CHAIN_MANAGER_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(ROOT_CHAIN_MANAGER_PROXY_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: ROOT_CHAIN_MANAGER_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(ROOT_CHAIN_MANAGER_PROXY_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = CHILD_CHAIN_MANAGER_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(CHILD_CHAIN_MANAGER_PROXY_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: CHILD_CHAIN_MANAGER_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(CHILD_CHAIN_MANAGER_PROXY_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = BALANCER_VAULT_ADDRESS = keccak256(bytes)(abi.encodePacked(BALANCER_VAULT_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: BALANCER_VAULT_ADDRESS = keccak256(bytes)(abi.encodePacked(BALANCER_VAULT_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VPAYOUT_ADDRESS = keccak256(bytes)(abi.encodePacked(VPAYOUT_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VPAYOUT_ADDRESS = keccak256(bytes)(abi.encodePacked(VPAYOUT_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = PAYOUT_ADDRESSES = keccak256(bytes)(abi.encodePacked(PAYOUT_ADDRESSES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: PAYOUT_ADDRESSES = keccak256(bytes)(abi.encodePacked(PAYOUT_ADDRESSES)) (proxy_features line:909)
functions_writing_to_variable: addressStorage
functions_writing_to_variable: checking function AStorage.key (proxy_features line:895)
functions_writing_to_variable: checking function AStorage.slitherConstructorConstantVariables (proxy_features line:895)
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool,string)(_implementationAddress != address(0),VProxy::fallback - invalid implementation address)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_implementationAddress,ptr_fallback_asm_0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: _implementationAddress = implementationAddress()
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: ptr_fallback_asm_0 = mload(uint256)(0x40)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,calldatasize()())
Found public function: version

Begin VErc20Proxy.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin VErc20Proxy.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(ptr_fallback_asm_0,returndatasize()()) (Slither line:2800)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2815)
Args:
ptr_fallback_asm_0
returndatasize()()

End VErc20Proxy.find_delegatecall_in_exp_node (Slither line:2856)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin VErc20Proxy.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(ptr_fallback_asm_0,returndatasize()()) (Slither line:2800)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2815)
Args:
ptr_fallback_asm_0
returndatasize()()

End VErc20Proxy.find_delegatecall_in_exp_node (Slither line:2856)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin VErc20Proxy.find_delegatecall_in_exp_node

Found Expression Node: calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,calldatasize()()) (Slither line:2800)
Expression called: calldatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2815)
Args:
ptr_fallback_asm_0
0
calldatasize()()

End VErc20Proxy.find_delegatecall_in_exp_node (Slither line:2856)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2735)


End Contract.find_delegatecall_in_ir (Slither line:2771)


Begin VErc20Proxy.find_delegatecall_in_exp_node

Found Expression Node: result_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_implementationAddress,ptr_fallback_asm_0,calldatasize()(),0,0) (Slither line:2800)
Expression Type: = (Slither line:2803)
Checking right side of assignment expression... (Slither line:2811)
Expression called: delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)
Type of call: uint256 (Slither line:2815)
Args:
gas()()
_implementationAddress
ptr_fallback_asm_0
calldatasize()()
0
0

Found delegatecall in expression:
delegatecall(uint256,uint256,uint256,uint256,uint256,uint256) (Slither line:2822)

Destination is _implementationAddress (Slither line:2826)
dest.value: _implementationAddress (Slither line:2829)
Expression: implementationAddress() (Slither line:2834)

Begin VErc20Proxy.find_delegate_from_call_exp

implementationAddress() (Slither line:2001)
called = implementationAddress (Slither line:2008)
Return node of function AProxy.implementationAddress(): RETURN vLighthouse().addressByKey(implementationAddressKey()) (Slither line:2039)
Encountered call expression at RETURN node: vLighthouse().addressByKey(implementationAddressKey()) (Slither line:2051)
Encountered member access expression: vLighthouse().addressByKey (Slither line:2055)

Begin VErc20Proxy.find_delegate_from_member_access

Expression: vLighthouse().addressByKey (Slither line:2356)
vLighthouse() (Slither line:2369)
Member of call expression result: vLighthouse (Slither line:2372)
Call to function vLighthouse returns IVLighthouse(addressStorage[VLIGHTHOUSE_PROXY_ADDRESS]) (Slither line:2383)
addressByKey is a member of the contract type: IVLighthouse (Slither line:2414)
Which is an interface (Slither line:2418)
Could not find a contract that inherits IVLighthouse (Slither line:2439)

End VErc20Proxy.find_delegate_from_call_exp (Slither line:2102)


End VErc20Proxy.find_delegatecall_in_exp_node (Slither line:2856)


End VErc20Proxy.is_proxy (Slither line:1476)


Begin VErc20Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: VErc20Proxy 
Local Variable: _implementationAddress (Slither line:1164)
VErc20Proxy is delegating to _implementationAddress
Looking for setter (Slither line:1200)


Begin VErc20Proxy.find_setter_in_contract (Slither line:3117)

Expression: implementationAddress() (Slither line:3120)
Checking function: constructor(address,string,string,address,string) returns() (Slither line:3125)
Checking function: name() returns(string) (Slither line:3125)
Visibility: public
stringStorage[NAME]
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3125)
Visibility: internal
Checking function: constructor(bytes32,address) returns() (Slither line:3125)
Checking function: implementationAddress() returns(address) (Slither line:3125)
Visibility: public
bytes32Storage[IMPLEMENTATION_ADDRESS_KEY]
vLighthouse().addressByKey(implementationAddressKey())
IVLighthouse(addressStorage[VLIGHTHOUSE_PROXY_ADDRESS])
Checking function: implementationAddressKey() returns(bytes32) (Slither line:3125)
Visibility: internal
Checking function: receive() returns() (Slither line:3125)
Checking function: fallback() returns() (Slither line:3125)
Checking function: version() returns(string) (Slither line:3125)
Visibility: public
Lime Kiln
Checking function: vLighthouse() returns(IVLighthouse) (Slither line:3125)
Visibility: internal
Checking function: vAddress() returns(address) (Slither line:3125)
Visibility: internal
Checking function: containsVAddress(address[]) returns(bool) (Slither line:3125)
Visibility: internal
Checking function: containsOwnerAddress(address[]) returns(bool) (Slither line:3125)
Visibility: internal
Checking function: containsRecoveryAddress(string,address[]) returns(bool) (Slither line:3125)
Visibility: internal
Checking function: containsAdminAddresses(address[],string) returns(bool) (Slither line:3125)
Visibility: internal
Checking function: containsSuperAdminAddresses(address[]) returns(bool) (Slither line:3125)
Visibility: internal
Checking function: validateSignatures(ABase.Signatures) returns(address[]) (Slither line:3125)
Visibility: internal
Checking function: spliceTimestamps(string) returns(uint256,uint256) (Slither line:3125)
Visibility: private
Checking function: flagThisNonce(string) returns() (Slither line:3125)
Visibility: private
Checking function: isThisNonceUsed(string) returns(bool) (Slither line:3125)
Visibility: private
Checking function: encodePackedAddressArray(address[]) returns(bytes) (Slither line:3125)
Visibility: internal
Checking function: encodePackedStringArray(string[]) returns(bytes) (Slither line:3125)
Visibility: internal
Checking function: encodePackedBytes32Array(bytes32[]) returns(bytes) (Slither line:3125)
Visibility: internal
Checking function: encodePackedUint32Array(uint256[]) returns(bytes) (Slither line:3125)
Visibility: internal
Checking function: compare(string,string) returns(bool) (Slither line:3125)
Visibility: internal
Checking function: encodeSymbolPair(string,string) returns(bytes32) (Slither line:3125)
Visibility: internal
Checking function: toTokens(IVErc20,uint256) returns(uint256) (Slither line:3125)
Visibility: internal
Checking function: toUnderlyingTokens(IVErc20,uint256) returns(uint256) (Slither line:3125)
Visibility: internal
Checking function: key(string) returns(bytes32) (Slither line:3125)
Visibility: internal
Checking function: name() returns(string) (Slither line:3125)
Visibility: external
Checking function: version() returns(string) (Slither line:3125)
Visibility: external
Checking function: implementationAddress() returns(address) (Slither line:3125)
Visibility: external

End VErc20Proxy.find_setter_in_contract (Slither line:3343)


Could not find implementation setter in VErc20Proxy (Slither line:1269)
Looking for getter (Slither line:1273)


Begin VErc20Proxy.find_getter_in_contract (Slither line:2972)

_implementationAddress is a Variable object
implementationAddress()
Checking function: constructor (Slither line:2986)
Checking function: implementationAddress (Slither line:2986)

implementationAddress appears to be the implementation getter (Slither line:2991)


End VErc20Proxy.find_getter_in_contract (Slither line:3081)


Implementation retrieved by function: implementationAddress in contract: VErc20Proxy (Slither line:1285)

Begin VErc20Proxy.getter_return_is_non_constant (Slither line:2881)

Found getter function but not setter
Checking if getter calls any other function
RETURN: bytes32Storage[IMPLEMENTATION_ADDRESS_KEY] (Slither line:2886)
ENTRY_POINT: None (Slither line:2886)
ENTRY_POINT: None (Slither line:2886)
ENTRY_POINT: None (Slither line:2886)
RETURN: vLighthouse().addressByKey(implementationAddressKey()) (Slither line:2886)

End VErc20Proxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: VErc20Proxy
_implementationAddress is dependent on addressStorage
_implementationAddress is dependent on bytes32Storage
Expression for _implementationAddress: implementationAddress()
Called: implementationAddress
impl_address_from_contract_call: implementationAddress()
called: implementationAddress
implementationAddress returns vLighthouse().addressByKey(implementationAddressKey())
called: vLighthouse().addressByKey
found MemberAccess: vLighthouse().addressByKey
TypeConversion: IVLighthouse(addressStorage[VLIGHTHOUSE_PROXY_ADDRESS])
find_registry_address_source: vLighthouse().addressByKey(implementationAddressKey())
MemberAccess: vLighthouse().addressByKey
CallExpression: vLighthouse()
Identifier: vLighthouse
Checking public function implementationAddress
Checking public function version
Checking external function name
Checking external function version
Checking external function implementationAddress
Checking public function name
Checking external function receive
Checking external function fallback
functions_writing_to_variable: _implementationAddress
functions_writing_to_variable: checking function VErc20Proxy.containsAdminAddresses (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.vAddress (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.implementationAddressKey (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.encodePackedStringArray (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.toTokens (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.slitherConstructorConstantVariables (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.containsOwnerAddress (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.encodePackedBytes32Array (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.validateSignatures (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.receive (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.isThisNonceUsed (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.containsVAddress (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.name (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.spliceTimestamps (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.encodeSymbolPair (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.name (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.toUnderlyingTokens (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.containsSuperAdminAddresses (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.encodePackedAddressArray (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.encodePackedUint32Array (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.constructor (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.version (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.containsRecoveryAddress (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.version (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.implementationAddress (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.key (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.vLighthouse (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.constructor (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.compare (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.implementationAddress (proxy_features line:895)
functions_writing_to_variable: checking function VErc20Proxy.flagThisNonce (proxy_features line:895)
has_compatibility_checks: dependencies: ['_implementationAddressKey', '_underlyingAddress', 'IMPLEMENTATION_ADDRESS_KEY', 'TMP_567', 'bytes32Storage', '', '', 'REF_290', 'REF_289', '', '_vLighthouseProxyAddress', 'TMP_565', 'TMP_564', 'TMP_587', 'addressStorage', 'TMP_563']
functions_writing_to_variable: IMPLEMENTATION_ADDRESS_KEY
functions_writing_to_variable: checking function AStorage.key (proxy_features line:895)
functions_writing_to_variable: checking function AStorage.slitherConstructorConstantVariables (proxy_features line:895)
functions_writing_to_variable: exp = USER_ID = keccak256(bytes)(abi.encodePacked(USER_ID)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: USER_ID = keccak256(bytes)(abi.encodePacked(USER_ID)) (proxy_features line:909)
functions_writing_to_variable: exp = USER = keccak256(bytes)(abi.encodePacked(USER)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: USER = keccak256(bytes)(abi.encodePacked(USER)) (proxy_features line:909)
functions_writing_to_variable: exp = ADDRESS_TO_USER_ID = keccak256(bytes)(abi.encodePacked(ADDRESS_TO_USER_ID)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: ADDRESS_TO_USER_ID = keccak256(bytes)(abi.encodePacked(ADDRESS_TO_USER_ID)) (proxy_features line:909)
functions_writing_to_variable: exp = ADDITIONAL_USER_ADDRESSES = keccak256(bytes)(abi.encodePacked(ADDITIONAL_USER_ADDRESSES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: ADDITIONAL_USER_ADDRESSES = keccak256(bytes)(abi.encodePacked(ADDITIONAL_USER_ADDRESSES)) (proxy_features line:909)
functions_writing_to_variable: exp = VLIGHTHOUSE_ADDRESS = keccak256(bytes)(abi.encodePacked(VLIGHTHOUSE_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VLIGHTHOUSE_ADDRESS = keccak256(bytes)(abi.encodePacked(VLIGHTHOUSE_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VLIGHTHOUSE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(VLIGHTHOUSE_PROXY_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VLIGHTHOUSE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(VLIGHTHOUSE_PROXY_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VFINANCE_ADDRESS = keccak256(bytes)(abi.encodePacked(VFINANCE_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VFINANCE_ADDRESS = keccak256(bytes)(abi.encodePacked(VFINANCE_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VFINANCE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(VFINANCE_PROXY_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VFINANCE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(VFINANCE_PROXY_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VERC20_ADDRESS = keccak256(bytes)(abi.encodePacked(VERC20_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VERC20_ADDRESS = keccak256(bytes)(abi.encodePacked(VERC20_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VERC20_PROXY_ADDRESSES = keccak256(bytes)(abi.encodePacked(VERC20_PROXY_ADDRESSES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VERC20_PROXY_ADDRESSES = keccak256(bytes)(abi.encodePacked(VERC20_PROXY_ADDRESSES)) (proxy_features line:909)
functions_writing_to_variable: exp = VWALLET_ADDRESS = keccak256(bytes)(abi.encodePacked(VWALLET_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VWALLET_ADDRESS = keccak256(bytes)(abi.encodePacked(VWALLET_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VWALLET_PROXY_ADDRESSES = keccak256(bytes)(abi.encodePacked(VWALLET_PROXY_ADDRESSES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VWALLET_PROXY_ADDRESSES = keccak256(bytes)(abi.encodePacked(VWALLET_PROXY_ADDRESSES)) (proxy_features line:909)
functions_writing_to_variable: exp = IMPLEMENTATION_ADDRESS_KEY = keccak256(bytes)(abi.encodePacked(IMPLEMENTATION_ADDRESS_KEY)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_ADDRESS_KEY = keccak256(bytes)(abi.encodePacked(IMPLEMENTATION_ADDRESS_KEY)) (proxy_features line:909)
functions_writing_to_variable: Identifier: IMPLEMENTATION_ADDRESS_KEY (proxy_features line:921)
get_value_assigned: IMPLEMENTATION_ADDRESS_KEY = keccak256(bytes)(abi.encodePacked(IMPLEMENTATION_ADDRESS_KEY))
functions_writing_to_variable: exp = VADDRESS = keccak256(bytes)(abi.encodePacked(VADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VADDRESS = keccak256(bytes)(abi.encodePacked(VADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = WITHDRAWALS = keccak256(bytes)(abi.encodePacked(WITHDRAWALS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: WITHDRAWALS = keccak256(bytes)(abi.encodePacked(WITHDRAWALS)) (proxy_features line:909)
functions_writing_to_variable: exp = NAME = keccak256(bytes)(abi.encodePacked(NAME)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: NAME = keccak256(bytes)(abi.encodePacked(NAME)) (proxy_features line:909)
functions_writing_to_variable: exp = SYMBOL = keccak256(bytes)(abi.encodePacked(SYMBOL)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: SYMBOL = keccak256(bytes)(abi.encodePacked(SYMBOL)) (proxy_features line:909)
functions_writing_to_variable: exp = UNDERLYING_ADDRESS = keccak256(bytes)(abi.encodePacked(UNDERLYING_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: UNDERLYING_ADDRESS = keccak256(bytes)(abi.encodePacked(UNDERLYING_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = REDEEM_ADDRESSES = keccak256(bytes)(abi.encodePacked(REDEEM_ADDRESSES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: REDEEM_ADDRESSES = keccak256(bytes)(abi.encodePacked(REDEEM_ADDRESSES)) (proxy_features line:909)
functions_writing_to_variable: exp = SUPPLY = keccak256(bytes)(abi.encodePacked(SUPPLY)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: SUPPLY = keccak256(bytes)(abi.encodePacked(SUPPLY)) (proxy_features line:909)
functions_writing_to_variable: exp = BALANCES = keccak256(bytes)(abi.encodePacked(BALANCES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: BALANCES = keccak256(bytes)(abi.encodePacked(BALANCES)) (proxy_features line:909)
functions_writing_to_variable: exp = INSTITUTION_ID = keccak256(bytes)(abi.encodePacked(INSTITUTION_ID)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: INSTITUTION_ID = keccak256(bytes)(abi.encodePacked(INSTITUTION_ID)) (proxy_features line:909)
functions_writing_to_variable: exp = INCREMENT_EXCHANGES_TIMESTAMP = keccak256(bytes)(abi.encodePacked(INCREMENT_EXCHANGES_TIMESTAMP)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: INCREMENT_EXCHANGES_TIMESTAMP = keccak256(bytes)(abi.encodePacked(INCREMENT_EXCHANGES_TIMESTAMP)) (proxy_features line:909)
functions_writing_to_variable: exp = ALLOWANCES = keccak256(bytes)(abi.encodePacked(ALLOWANCES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: ALLOWANCES = keccak256(bytes)(abi.encodePacked(ALLOWANCES)) (proxy_features line:909)
functions_writing_to_variable: exp = NONCES = keccak256(bytes)(abi.encodePacked(abi.encodePacked(NONCES))) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: NONCES = keccak256(bytes)(abi.encodePacked(abi.encodePacked(NONCES))) (proxy_features line:909)
functions_writing_to_variable: exp = CHAIN_ID = keccak256(bytes)(abi.encodePacked(CHAIN_ID)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: CHAIN_ID = keccak256(bytes)(abi.encodePacked(CHAIN_ID)) (proxy_features line:909)
functions_writing_to_variable: exp = ERC20_PREDICATE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(ERC20_PREDICATE_PROXY_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: ERC20_PREDICATE_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(ERC20_PREDICATE_PROXY_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = ROOT_CHAIN_MANAGER_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(ROOT_CHAIN_MANAGER_PROXY_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: ROOT_CHAIN_MANAGER_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(ROOT_CHAIN_MANAGER_PROXY_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = CHILD_CHAIN_MANAGER_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(CHILD_CHAIN_MANAGER_PROXY_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: CHILD_CHAIN_MANAGER_PROXY_ADDRESS = keccak256(bytes)(abi.encodePacked(CHILD_CHAIN_MANAGER_PROXY_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = BALANCER_VAULT_ADDRESS = keccak256(bytes)(abi.encodePacked(BALANCER_VAULT_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: BALANCER_VAULT_ADDRESS = keccak256(bytes)(abi.encodePacked(BALANCER_VAULT_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = VPAYOUT_ADDRESS = keccak256(bytes)(abi.encodePacked(VPAYOUT_ADDRESS)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: VPAYOUT_ADDRESS = keccak256(bytes)(abi.encodePacked(VPAYOUT_ADDRESS)) (proxy_features line:909)
functions_writing_to_variable: exp = PAYOUT_ADDRESSES = keccak256(bytes)(abi.encodePacked(PAYOUT_ADDRESSES)) (proxy_features line:906)
functions_writing_to_variable: AssignmentOperation: PAYOUT_ADDRESSES = keccak256(bytes)(abi.encodePacked(PAYOUT_ADDRESSES)) (proxy_features line:909)
functions_writing_to_variable: bytes32Storage
functions_writing_to_variable: checking function AStorage.key (proxy_features line:895)
functions_writing_to_variable: checking function AStorage.slitherConstructorConstantVariables (proxy_features line:895)
functions_writing_to_variable: addressStorage
functions_writing_to_variable: checking function AStorage.key (proxy_features line:895)
functions_writing_to_variable: checking function AStorage.slitherConstructorConstantVariables (proxy_features line:895)
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: _implementationAddress = implementationAddress()
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: ptr_fallback_asm_0 = mload(uint256)(0x40)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool,string)(_implementationAddress != address(0),VProxy::fallback - invalid implementation address)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),_implementationAddress,ptr_fallback_asm_0,calldatasize()(),0,0)
Found public function: implementationAddress

Begin IRootChainManager.is_proxy (Slither line:1425)


End IRootChainManager.is_proxy (Slither line:1428)


Begin IRootChainManager.is_upgradeable_proxy (Slither line:1136)

Checking contract: IRootChainManager 

End IRootChainManager.is_upgradeable_proxy (Slither line:1407)


Begin IVFinance.is_proxy (Slither line:1425)


End IVFinance.is_proxy (Slither line:1428)


Begin IVFinance.is_upgradeable_proxy (Slither line:1136)

Checking contract: IVFinance 

End IVFinance.is_upgradeable_proxy (Slither line:1407)


Begin AErc20.is_proxy (Slither line:1425)


End AErc20.is_proxy (Slither line:1428)


Begin AErc20.is_upgradeable_proxy (Slither line:1136)

Checking contract: AErc20 

End AErc20.is_upgradeable_proxy (Slither line:1407)


Begin VErc20.is_proxy (Slither line:1425)


End VErc20.is_proxy (Slither line:1428)


Begin VErc20.is_upgradeable_proxy (Slither line:1136)

Checking contract: VErc20 

End VErc20.is_upgradeable_proxy (Slither line:1407)

