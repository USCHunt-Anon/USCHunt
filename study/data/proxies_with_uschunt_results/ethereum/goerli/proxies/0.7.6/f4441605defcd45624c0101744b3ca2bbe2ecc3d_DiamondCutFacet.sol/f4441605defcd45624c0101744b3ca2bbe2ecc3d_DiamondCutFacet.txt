
Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin LibGovStorage.is_proxy (Slither line:1425)


End LibGovStorage.is_proxy (Slither line:1428)


Begin LibGovStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: LibGovStorage 

End LibGovStorage.is_upgradeable_proxy (Slither line:1407)


Begin LibPolygonStorage.is_proxy (Slither line:1425)


End LibPolygonStorage.is_proxy (Slither line:1428)


Begin LibPolygonStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: LibPolygonStorage 

End LibPolygonStorage.is_upgradeable_proxy (Slither line:1407)


Begin LibDiamond.is_proxy (Slither line:1425)


End LibDiamond.is_proxy (Slither line:1428)


Begin LibDiamond.is_upgradeable_proxy (Slither line:1136)

Checking contract: LibDiamond 

End LibDiamond.is_upgradeable_proxy (Slither line:1407)


Begin IDiamondLoupe.is_proxy (Slither line:1425)


End IDiamondLoupe.is_proxy (Slither line:1428)


Begin IDiamondLoupe.is_upgradeable_proxy (Slither line:1136)

Checking contract: IDiamondLoupe 

End IDiamondLoupe.is_upgradeable_proxy (Slither line:1407)


Begin IERC165.is_proxy (Slither line:1425)


End IERC165.is_proxy (Slither line:1428)


Begin IERC165.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC165 

End IERC165.is_upgradeable_proxy (Slither line:1407)


Begin IDiamondCut.is_proxy (Slither line:1425)


End IDiamondCut.is_proxy (Slither line:1428)


Begin IDiamondCut.is_upgradeable_proxy (Slither line:1136)

Checking contract: IDiamondCut 

End IDiamondCut.is_upgradeable_proxy (Slither line:1407)


Begin DiamondCutFacet.is_proxy (Slither line:1425)


End DiamondCutFacet.is_proxy (Slither line:1428)


Begin DiamondCutFacet.is_upgradeable_proxy (Slither line:1136)

Checking contract: DiamondCutFacet 

End DiamondCutFacet.is_upgradeable_proxy (Slither line:1407)


Begin DiamondLoupe.is_proxy (Slither line:1425)


End DiamondLoupe.is_proxy (Slither line:1428)


Begin DiamondLoupe.is_upgradeable_proxy (Slither line:1136)

Checking contract: DiamondLoupe 

End DiamondLoupe.is_upgradeable_proxy (Slither line:1407)


Begin LoveToken.is_proxy (Slither line:1425)


End LoveToken.is_proxy (Slither line:1428)


Begin LoveToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: LoveToken 

End LoveToken.is_upgradeable_proxy (Slither line:1407)


Begin DiamondLove.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin DiamondLove.find_delegatecall_in_exp_node

Found Expression Node: ds = position (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)

End DiamondLove.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin DiamondLove.find_delegatecall_in_exp_node

Found Expression Node: return(uint256,uint256)(0,returndatasize()()) (Slither line:2792)
Expression called: return(uint256,uint256)
Type of call:  (Slither line:2807)
Args:
0
returndatasize()()

End DiamondLove.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin DiamondLove.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'facet'
Looking for corresponding Variable
Current function: fallback

Begin DiamondLove.find_delegate_variable_from_name
Searching for facet (Slither line:1674)

Searching State Variables (Slither line:1687)

Searching Local Variables (Slither line:1698)
Checking ds (Slither line:1703)
Checking position (Slither line:1703)
Checking facet (Slither line:1703)
facet is a Local Variable in DiamondLove.fallback (Slither line:1707)
facet appears to be a Diamond facet address (Slither line:1713)

End DiamondLove.find_delegate_variable_by_name


End DiamondLove.find_delegatecall_in_asm (Slither line:1637)


End DiamondLove.is_proxy (Slither line:1476)


Begin DiamondLove.is_upgradeable_proxy (Slither line:1136)

Checking contract: DiamondLove 
Local Variable: facet (Slither line:1164)
DiamondLove is delegating to facet
Looking for setter (Slither line:1200)


Begin DiamondLove.find_setter_in_contract (Slither line:3109)

Expression: address(bytes20(ds.facets[msg.sig])) (Slither line:3112)
Checking function: constructor() returns() (Slither line:3117)
Checking function: fallback() returns() (Slither line:3117)
Checking function: receive() returns() (Slither line:3117)

Begin DiamondCut corner case handling (Slither line:3277)

Expression: selectorInSlotIndex = 7 (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: selectorIndex ++ (Slither line:3284)
Expression type: ++ (Slither line:3286)
Expression: require(bool,string)(contractSize > 0,_errorMessage) (Slither line:3284)
require(bool,string)
Expression: funcSLoveToken[5] = LoveToken.mintingAllowedAfter.selector (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: contractSize = extcodesize(uint256)(_contract) (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: funcSLoveToken[6] = LoveToken.setMinter.selector (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: ps.childChainManagerProxy = 0xb5505a6d998549090530911180f38aC5130101c6 (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: selectorInSlotIndex -- (Slither line:3284)
Expression type: -- (Slither line:3286)
Expression: funcSLoveToken[7] = LoveToken.mint.selector (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: LibDiamond.setContractOwner(0xe843cAc20FCA69B8B95c346c0E76eA1b0df87050) (Slither line:3284)
LibDiamond.setContractOwner
Expression: funcSLoveToken[8] = LoveToken.transfer.selector (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: require(bool,string)(address(bytes20(oldFacet)) == address(0),LibDiamondCut: Can't add function that already exists) (Slither line:3284)
require(bool,string)
Expression: funcSLoveToken[9] = LoveToken.transferFrom.selector (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: ds.facets[selector] = bytes20(_newFacetAddress) | bytes32(_selectorCount) (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: funcSLoveToken[10] = LoveToken.approve.selector (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: ds = position (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: cut[2] = IDiamondCut.FacetCut(address(loveToken),IDiamondCut.FacetCutAction.Add,funcSLoveToken) (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: LibDiamond.diamondCut(cut,address(0),new bytes(0)) (Slither line:3284)
LibDiamond.diamondCut
Expression: _selectorSlot = (_selectorSlot & ~ (CLEAR_SELECTOR_MASK >> selectorInSlotPosition)) | (bytes32(selector) >> selectorInSlotPosition) (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: _selectorCount ++ (Slither line:3284)
Expression type: ++ (Slither line:3286)
Expression: ds.supportedInterfaces[type()(IERC165).interfaceId] = true (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: ds.supportedInterfaces[type()(IDiamondCut).interfaceId] = true (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: ds.selectorSlots[_selectorCount >> 3] = _selectorSlot (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: require(bool,string)(address(bytes20(oldFacet_scope_5)) != address(0),LibDiamondCut: Can't remove function that doesn't exist) (Slither line:3284)
require(bool,string)
Expression: require(bool,string)(_calldata.length > 0,LibDiamondCut: _calldata is empty but _init is not address(0)) (Slither line:3284)
require(bool,string)
Expression: funcSDiamondCut[0] = DiamondCutFacet.diamondCut.selector (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: ds.supportedInterfaces[type()(IDiamondLoupe).interfaceId] = true (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: _selectorSlot = 0 (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: require(bool,string)(address(bytes20(oldFacet_scope_5)) != address(this),LibDiamondCut: Can't remove immutable function) (Slither line:3284)
require(bool,string)
Expression: cut[0] = IDiamondCut.FacetCut(address(diamondCutFacet),IDiamondCut.FacetCutAction.Add,funcSDiamondCut) (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: lastSelector = bytes4(_selectorSlot << (selectorInSlotIndex << 5)) (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: funcSDiamondLoupe[0] = IDiamondLoupe.facetFunctionSelectors.selector (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: ds.contractOwner = _newOwner (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: delete ds.facets[selector_scope_4] (Slither line:3284)
Expression type: delete (Slither line:3286)
Expression: funcSDiamondLoupe[1] = IDiamondLoupe.facets.selector (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: OwnershipTransferred(previousOwner,_newOwner) (Slither line:3284)
OwnershipTransferred
Expression: ds.facets[lastSelector] = (oldFacet_scope_5 & CLEAR_ADDRESS_MASK) | bytes20(ds.facets[lastSelector]) (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: funcSDiamondLoupe[2] = IDiamondLoupe.facetAddress.selector (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: enforceHasContractCode(_newFacetAddress,LibDiamondCut: Replace facet has no code) (Slither line:3284)
enforceHasContractCode
Expression: funcSDiamondLoupe[3] = IDiamondLoupe.facetAddresses.selector (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: funcSDiamondLoupe[4] = IERC165.supportsInterface.selector (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: cut[1] = IDiamondCut.FacetCut(address(diamondLoupe),IDiamondCut.FacetCutAction.Add,funcSDiamondLoupe) (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: oldSelectorsSlotCount = oldSelectorCount >> 3 (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: oldSelectorInSlotPosition = (oldSelectorCount & 7) << 5 (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: funcSLoveToken[0] = LoveToken.name.selector (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: funcSLoveToken[1] = LoveToken.symbol.selector (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: funcSLoveToken[2] = LoveToken.decimals.selector (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: selectorIndex_scope_0 ++ (Slither line:3284)
Expression type: ++ (Slither line:3286)
Expression: funcSLoveToken[3] = LoveToken.totalSupply.selector (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: oldSelectorSlot = (oldSelectorSlot & ~ (CLEAR_SELECTOR_MASK >> oldSelectorInSlotPosition)) | (bytes32(lastSelector) >> oldSelectorInSlotPosition) (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: funcSLoveToken[4] = LoveToken.balanceOf.selector (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: ds.selectorSlots[oldSelectorsSlotCount] = oldSelectorSlot (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: _selectorCount = selectorSlotCount * 8 + selectorInSlotIndex (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: _selectorSlot = ds.selectorSlots[selectorSlotCount] (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: _selectorSlot = (_selectorSlot & ~ (CLEAR_SELECTOR_MASK >> oldSelectorInSlotPosition)) | (bytes32(lastSelector) >> oldSelectorInSlotPosition) (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: enforceHasContractCode(_init,LibDiamondCut: _init address has no code) (Slither line:3284)
enforceHasContractCode
Expression: require(bool,string)(oldFacetAddress != address(this),LibDiamondCut: Can't replace immutable function) (Slither line:3284)
require(bool,string)
Expression: facetIndex ++ (Slither line:3284)
Expression type: ++ (Slither line:3286)
Expression: (success,error) = _init.delegatecall(_calldata) (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: require(bool,string)(oldFacetAddress != _newFacetAddress,LibDiamondCut: Can't replace function with same function) (Slither line:3284)
require(bool,string)
Expression: (selectorCount,selectorSlot) = addReplaceRemoveFacetSelectors(selectorCount,selectorSlot,_diamondCut[facetIndex].facetAddress,_diamondCut[facetIndex].action,_diamondCut[facetIndex].functionSelectors) (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: require(bool,string)(oldFacetAddress != address(0),LibDiamondCut: Can't replace function that doesn't exist) (Slither line:3284)
require(bool,string)
Expression: delete ds.selectorSlots[selectorSlotCount] (Slither line:3284)
Expression type: delete (Slither line:3286)
Expression: ds.facets[selector_scope_1] = (oldFacet_scope_2 & CLEAR_ADDRESS_MASK) | bytes20(_newFacetAddress) (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: _selectorSlot = 0 (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: ds.selectorCount = uint16(selectorCount) (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: revert(string)(LibDiamondCut: Incorrect FacetCutAction) (Slither line:3284)
revert(string)
Expression: ds = position (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: DiamondCut(_diamondCut,_init,_calldata) (Slither line:3284)
DiamondCut
Expression: require(bool,string)(_newFacetAddress == address(0),LibDiamondCut: Remove facet address must be address(0)) (Slither line:3284)
require(bool,string)
Expression: ds.selectorSlots[selectorCount >> 3] = selectorSlot (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: revert(string)(string(error)) (Slither line:3284)
revert(string)
Expression: initializeDiamondCut(_init,_calldata) (Slither line:3284)
initializeDiamondCut
Expression: revert(string)(LibDiamondCut: _init function reverted) (Slither line:3284)
revert(string)
Expression: require(bool,string)(_selectors.length > 0,LibDiamondCut: No selectors in facet to cut) (Slither line:3284)
require(bool,string)
Expression: enforceHasContractCode(_newFacetAddress,LibDiamondCut: Add facet has no code) (Slither line:3284)
enforceHasContractCode
Expression: gs.totalSupplyCap = 100_000_000e18 (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: selectorIndex_scope_3 ++ (Slither line:3284)
Expression type: ++ (Slither line:3286)
Expression: gs.totalSupply = 1_000_000e18 (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: gs.loveMinter = 0xe843cAc20FCA69B8B95c346c0E76eA1b0df87050 (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: selectorSlot = ds.selectorSlots[selectorCount >> 3] (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: ds = position (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: require(bool,string)(_calldata.length == 0,LibDiamondCut: _init is address(0) but_calldata is not empty) (Slither line:3284)
require(bool,string)
Expression: gs.loveBoat = 0xe843cAc20FCA69B8B95c346c0E76eA1b0df87050 (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: selectorSlotCount -- (Slither line:3284)
Expression type: -- (Slither line:3286)
Expression: gs.mintingAllowedAfter = block.timestamp + 86400 * 365 (Slither line:3284)
Expression type: = (Slither line:3286)
Expression: gs.balances[gs.loveBoat] = gs.totalSupply (Slither line:3284)
Expression type: = (Slither line:3286)

End DiamondCut corner case handling (Slither line:3313)


End DiamondLove.find_setter_in_contract (Slither line:3315)


Implementation set by function: diamondCut in contract: DiamondCutFacet (Slither line:1264)
Looking for getter (Slither line:1273)


Begin DiamondLove.find_getter_in_contract (Slither line:2964)

facet is a Variable object
address(bytes20(ds.facets[msg.sig]))
Checking function: constructor (Slither line:2978)
Checking function: fallback (Slither line:2978)
Checking function: receive (Slither line:2978)

End DiamondLove.find_getter_in_contract (Slither line:3073)

Could not find implementation getter in DiamondLove (Slither line:1305)

Begin SafeMath.find_getter_in_contract (Slither line:2964)

facet is a Variable object
address(bytes20(ds.facets[msg.sig]))
Checking function: add (Slither line:2978)
add returns uint256 variable  (Slither line:2998)
RETURN node expression: c (Slither line:3018)
Checking function: add (Slither line:2978)
add returns uint256 variable  (Slither line:2998)
RETURN node expression: c (Slither line:3018)
Checking function: sub (Slither line:2978)
sub returns uint256 variable  (Slither line:2998)
RETURN node expression: sub(a,b,SafeMath: subtraction underflow) (Slither line:3018)
Checking function: sub (Slither line:2978)
sub returns uint256 variable  (Slither line:2998)
RETURN node expression: c (Slither line:3018)
Checking function: mul (Slither line:2978)
mul returns uint256 variable  (Slither line:2998)
RETURN node expression: 0 (Slither line:3018)
RETURN node expression: c (Slither line:3018)
Checking function: mul (Slither line:2978)
mul returns uint256 variable  (Slither line:2998)
RETURN node expression: 0 (Slither line:3018)
RETURN node expression: c (Slither line:3018)
Checking function: div (Slither line:2978)
div returns uint256 variable  (Slither line:2998)
RETURN node expression: div(a,b,SafeMath: division by zero) (Slither line:3018)
Checking function: div (Slither line:2978)
div returns uint256 variable  (Slither line:2998)
RETURN node expression: c (Slither line:3018)
Checking function: mod (Slither line:2978)
mod returns uint256 variable  (Slither line:2998)
RETURN node expression: mod(a,b,SafeMath: modulo by zero) (Slither line:3018)
Checking function: mod (Slither line:2978)
mod returns uint256 variable  (Slither line:2998)
RETURN node expression: a % b (Slither line:3018)

End SafeMath.find_getter_in_contract (Slither line:3073)

impl_address_from_contract_call: address(bytes20(ds.facets[msg.sig]))
Checking external function fallback
Checking external function receive
functions_writing_to_variable: facet
functions_writing_to_variable: checking function DiamondCutFacet.diamondCut (proxy_features line:893)
functions_writing_to_variable: checking function DiamondLove.constructor (proxy_features line:893)
functions_writing_to_variable: checking function DiamondLove.receive (proxy_features line:893)
functions_writing_to_variable: checking function DiamondCutFacet.diamondCut (proxy_features line:893)
has_compatibility_checks: dependencies: ['REF_273', 'REF_274', 'ds', 'TMP_348', 'TMP_349']
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: ds = position
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: position = LibDiamond.DIAMOND_STORAGE_POSITION
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: facet = address(bytes20(ds.facets[msg.sig]))
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool,string)(facet != address(0),DiamondLove: Function does not exist)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result_fallback_asm_1 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),facet,0,calldatasize()(),0,0)
Found public function: constructor
Found fallback
Found external function: receive
