{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "AProxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.7.6/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol#797-854)",
        "elements": [],
        "description": "AProxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.7.6/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol#797-854) may be an upgradeable proxy.\n_implementationAddress is declared in the proxy.\nAProxy.fallback()._implementationAddress (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.7.6/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol#837) gets value from a cross-contract call: vLighthouse().getAddress(implementationAddressKey())\nIVLighthouse appears to be a Registry contract for the proxy\nThe address of IVLighthouse comes from the value of ABase.vLighthouse(). (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.7.6/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol#538)\nNo setter functions found to search for compatibility checks.\n",
        "id": "84b028afde88af8eda310054ad35d95f94b6de0d84e051f584fc968e7a289c54",
        "features": {
          "upgradeable": "maybe",
          "impl_address_variable": "AProxy.fallback()._implementationAddress",
          "impl_address_setter": "not found",
          "impl_address_getter": "AProxy.implementationAddress()",
          "impl_address_location": "AProxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.7.6/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol#797-854)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "vLighthouse().getAddress(implementationAddressKey())",
          "registry": "IVLighthouse",
          "registry_source_type": "IVLighthouse",
          "registry_source_variable": "",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": "no setters found"
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "erc20": [
              "name()"
            ],
            "other": [
              "version()",
              "user()",
              "vAddress()",
              "userAddress()",
              "recoveryAddress()",
              "version()",
              "user()",
              "vAddress()",
              "userAddress()",
              "recoveryAddress()",
              "implementationAddress()",
              "vLighthouseProxyAddress()",
              "implementationAddress()",
              "vLighthouseProxyAddress()"
            ]
          }
        }
      },
      {
        "contract": "VErc20Proxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.7.6/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol#857-877)",
        "elements": [],
        "description": "VErc20Proxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.7.6/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol#857-877) may be an upgradeable proxy.\n_implementationAddress is declared in the proxy.\nAProxy.fallback()._implementationAddress (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.7.6/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol#837) gets value from a cross-contract call: vLighthouse().getAddress(implementationAddressKey())\nIVLighthouse appears to be a Registry contract for the proxy\nThe address of IVLighthouse comes from the value of ABase.vLighthouse(). (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.7.6/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol#538)\nNo setter functions found to search for compatibility checks.\n",
        "id": "a6d0c48877f7e86d01edbe6d031daa5cdc76bf3e51de587355c773cdcc84dff5",
        "features": {
          "upgradeable": "maybe",
          "impl_address_variable": "AProxy.fallback()._implementationAddress",
          "impl_address_setter": "not found",
          "impl_address_getter": "AProxy.implementationAddress()",
          "impl_address_location": "VErc20Proxy (../../smart-contract-sanctuary/ethereum/contracts/goerli/sorted/0.7.6/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol/1332204f9ce46d3e7acb6f88acfe43a2f5cbf72e_VErc20Proxy.sol#857-877)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "vLighthouse().getAddress(implementationAddressKey())",
          "registry": "IVLighthouse",
          "registry_source_type": "IVLighthouse",
          "registry_source_variable": "",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": "no setters found"
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "erc20": [
              "name()"
            ],
            "other": [
              "implementationAddress()",
              "vLighthouseProxyAddress()",
              "version()",
              "user()",
              "vAddress()",
              "userAddress()",
              "recoveryAddress()",
              "version()",
              "user()",
              "vAddress()",
              "userAddress()",
              "recoveryAddress()",
              "implementationAddress()",
              "vLighthouseProxyAddress()"
            ]
          }
        }
      }
    ]
  }
}