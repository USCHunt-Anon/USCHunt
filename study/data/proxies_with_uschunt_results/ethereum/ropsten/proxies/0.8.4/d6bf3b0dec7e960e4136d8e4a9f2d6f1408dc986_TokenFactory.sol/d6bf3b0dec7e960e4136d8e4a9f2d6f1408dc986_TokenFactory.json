{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "TokenProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.8.4/d6bf3b0dec7e960e4136d8e4a9f2d6f1408dc986_TokenFactory.sol/d6bf3b0dec7e960e4136d8e4a9f2d6f1408dc986_TokenFactory.sol#3728-3789)",
        "elements": [],
        "description": "TokenProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.8.4/d6bf3b0dec7e960e4136d8e4a9f2d6f1408dc986_TokenFactory.sol/d6bf3b0dec7e960e4136d8e4a9f2d6f1408dc986_TokenFactory.sol#3728-3789) is an upgradeable proxy.\n_implementation was found in a different contract.\n_implementation is an address state variable.\nUpgradeableBeacon._implementation (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.8.4/d6bf3b0dec7e960e4136d8e4a9f2d6f1408dc986_TokenFactory.sol/d6bf3b0dec7e960e4136d8e4a9f2d6f1408dc986_TokenFactory.sol#855) gets value from a cross-contract call: IBeaconUpgradeable(_getBeacon()).implementation()\nUpgradeableBeacon appears to be a Beacon contract for the proxy\nThe address of UpgradeableBeacon comes from the value of ERC1967UpgradeUpgradeable._getBeacon(). (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.8.4/d6bf3b0dec7e960e4136d8e4a9f2d6f1408dc986_TokenFactory.sol/d6bf3b0dec7e960e4136d8e4a9f2d6f1408dc986_TokenFactory.sol#3665)\nFound compatibility checks in all upgrade functions.\nTo remove upgradeability, delete upgradeTo from UpgradeableBeacon\n",
        "id": "b88e93eea1aebf76452c058597d7087c12ddb624705627ede4add632f7320115",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "UpgradeableBeacon._implementation",
          "impl_address_setter": "UpgradeableBeacon.upgradeTo(address)",
          "impl_address_getter": "UpgradeableBeacon.implementation()",
          "impl_address_location": "UpgradeableBeacon (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.8.4/d6bf3b0dec7e960e4136d8e4a9f2d6f1408dc986_TokenFactory.sol/d6bf3b0dec7e960e4136d8e4a9f2d6f1408dc986_TokenFactory.sol#854-903)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "IBeaconUpgradeable(_getBeacon()).implementation()",
          "beacon": "UpgradeableBeacon",
          "beacon_source_type": "address",
          "beacon_source_variable": "",
          "transparent": false,
          "external_functions_require_specific_sender": true,
          "fallback_receive_not_callable_by_specific_sender": true,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "UpgradeableBeacon.upgradeTo(address)": {
                "check": "require(bool,string)(account.code.length > 0,UpgradeableBeacon: implementation is not a contract)",
                "is_correct": true
              },
              "UpgradeableBeacon.constructor(address)": {
                "check": "require(bool,string)(account.code.length > 0,UpgradeableBeacon: implementation is not a contract)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove upgradeTo from UpgradeableBeacon",
          "immutable_functions": {
            "other": [
              "initialize(address,address,string,string,string)",
              "changeAdmin(address)",
              "getImplOwner(address)"
            ]
          }
        }
      }
    ]
  }
}