
Begin Accessibility.is_proxy (Slither line:1425)


End Accessibility.is_proxy (Slither line:1428)


Begin Accessibility.is_upgradeable_proxy (Slither line:1136)

Checking contract: Accessibility 

End Accessibility.is_upgradeable_proxy (Slither line:1407)


Begin StorageState.is_proxy (Slither line:1425)


End StorageState.is_proxy (Slither line:1428)


Begin StorageState.is_upgradeable_proxy (Slither line:1136)

Checking contract: StorageState 

End StorageState.is_upgradeable_proxy (Slither line:1407)


Begin KeyValueStorage.is_proxy (Slither line:1425)


End KeyValueStorage.is_proxy (Slither line:1428)


Begin KeyValueStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: KeyValueStorage 

End KeyValueStorage.is_upgradeable_proxy (Slither line:1407)


Begin Proxy.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let result := delegatecall(gas(), _impl, add(data, 0x20), mload(data), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called '_impl'
Looking for corresponding Variable
Current function: fallback

Begin Proxy.find_delegate_variable_from_name
Searching for _impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking _storage (Slither line:1689)
Checking admins (Slither line:1689)
Checking implementation (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking _impl (Slither line:1703)
_impl is a Local Variable in Proxy.fallback (Slither line:1707)
Expression: implementation (Slither line:1719)
Identifier value: implementation (Slither line:1725)
implementation is a State Variable in contract Proxy (Slither line:1730)

End Proxy.find_delegate_variable_by_name


End Proxy.find_delegatecall_in_asm (Slither line:1637)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 
Proxy is delegating to implementation
Looking for setter (Slither line:1200)


Begin Proxy.find_setter_in_contract (Slither line:3109)

Checking function: constructor() returns() (Slither line:3117)
Checking function: upgradeTo(address) returns() (Slither line:3117)
Visibility: public
onlyAdmin(AccessRank.Three)
require(bool)(implementation != impl)
implementation = impl
is an Assignment Operation (Slither line:3206)

End Proxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: upgradeTo in contract: Proxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin Proxy.find_getter_in_contract (Slither line:2964)

implementation is a Variable object
impl
Checking function: constructor (Slither line:2978)
Checking function: provideAccess (Slither line:2978)
Checking function: constructor (Slither line:2978)
Checking function: upgradeTo (Slither line:2978)
Checking function: storageAddress (Slither line:2978)
storageAddress returns address variable  (Slither line:2998)
RETURN node expression: address(_storage) (Slither line:3018)
Checking function: setStorage (Slither line:2978)
Checking function: fallback (Slither line:2978)

End Proxy.find_getter_in_contract (Slither line:3073)

Could not find implementation getter in Proxy (Slither line:1305)

Begin Accessibility.find_getter_in_contract (Slither line:2964)

implementation is a Variable object
impl
Checking function: constructor (Slither line:2978)
Checking function: provideAccess (Slither line:2978)

End Accessibility.find_getter_in_contract (Slither line:3073)

Checking public function provideAccess
Checking public function upgradeTo
Checking public function storageAddress
Checking public function setStorage
Checking public function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function Proxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.upgradeTo (proxy_features line:893)
functions_writing_to_variable: exp = require(bool)(implementation != impl) (proxy_features line:904)
functions_writing_to_variable: exp = implementation = impl (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: implementation = impl (proxy_features line:907)
functions_writing_to_variable: Identifier: implementation (proxy_features line:919)
get_value_assigned: implementation = impl
functions_writing_to_variable: exp = LogUpgrade(impl) (proxy_features line:904)
functions_writing_to_variable: exp = onlyAdmin(AccessRank.Three) (proxy_features line:904)
functions_writing_to_variable: exp = require(bool,string)(admins[msg.sender] == r || admins[msg.sender] == AccessRank.Three,access denied) (proxy_features line:904)
functions_writing_to_variable: upgradeTo writes impl to implementation (proxy_features line:924)
functions_writing_to_variable: checking function Proxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.setStorage (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.provideAccess (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.storageAddress (proxy_features line:893)
has_compatibility_checks: dependencies: ['impl']
has_compatibility_checks: checking public function upgradeTo
require(bool)(implementation != impl)
has_compatibility_checks: condition implementation != impl
check_condition_from_expression: modifier calls: ['onlyAdmin(AccessRank.Three)']
check_condition_from_expression: condition impl != impl
require(bool,string)(admins[msg.sender] == r || admins[msg.sender] == AccessRank.Three,access denied)
has_compatibility_checks: condition admins[msg.sender] == r || admins[msg.sender] == AccessRank.Three
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    let result := delegatecall(gas(), _impl, add(data, 0x20), mload(data), 0, 0)
    let size := returndatasize()
    let ptr := mload(0x40)
    returndatacopy(ptr, 0, size)
    switch result
    case 0 {
        revert(ptr, size)
    }
    default {
        return(ptr, size)
    }
}
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: data = msg.data
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: _impl = implementation
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: require(bool)(_impl != address(0))
Found public function: constructor
Found public function: provideAccess
has_time_delay: (node.type) EXPRESSION
(Expression) onlyAdmin(AccessRank.Three)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(implementation != impl)
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = impl
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(admins[msg.sender] == r || admins[msg.sender] == AccessRank.Three,access denied)
has_time_delay: (node.type) EXPRESSION
(Expression) LogUpgrade(impl)
