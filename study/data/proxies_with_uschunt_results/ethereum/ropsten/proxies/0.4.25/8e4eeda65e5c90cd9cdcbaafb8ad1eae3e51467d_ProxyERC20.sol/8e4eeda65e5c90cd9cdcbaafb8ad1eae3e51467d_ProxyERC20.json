{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.25/8e4eeda65e5c90cd9cdcbaafb8ad1eae3e51467d_ProxyERC20.sol/8e4eeda65e5c90cd9cdcbaafb8ad1eae3e51467d_ProxyERC20.sol#113-212)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.25/8e4eeda65e5c90cd9cdcbaafb8ad1eae3e51467d_ProxyERC20.sol/8e4eeda65e5c90cd9cdcbaafb8ad1eae3e51467d_ProxyERC20.sol#113-212) is an upgradeable proxy.\ntarget is declared in the proxy.\ntarget is a state variable of type Proxyable\nFound compatibility checks in all upgrade functions.\nIncorrect compatibility check in setTarget: target = _target\nCan toggle delegatecall on/off: condition: useDELEGATECALL\n",
        "id": "68f4007d4c197599ac9fa986942c7882b131bd3c2a3a324e89935ac956c3a1c8",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "Proxy.target",
          "impl_address_setter": "Proxy.setTarget(Proxyable)",
          "impl_address_getter": "not found",
          "impl_address_location": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.25/8e4eeda65e5c90cd9cdcbaafb8ad1eae3e51467d_ProxyERC20.sol/8e4eeda65e5c90cd9cdcbaafb8ad1eae3e51467d_ProxyERC20.sol#113-212)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "Proxyable",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "Proxy.setTarget(Proxyable)": {
                "check": "target = _target",
                "is_correct": false
              }
            }
          },
          "can_remove_upgradeability": false,
          "can_toggle_delegatecall": true,
          "toggle_delegatecall_condition": "useDELEGATECALL",
          "toggle_alternative_logic": "uses call instead of delegatecall",
          "toggle_setters": [
            "setUseDELEGATECALL"
          ],
          "immutable_functions": {
            "other": [
              "nominateNewOwner(address)",
              "acceptOwnership()",
              "setTarget(Proxyable)",
              "setUseDELEGATECALL(bool)",
              "_emit(bytes,uint256,bytes32,bytes32,bytes32,bytes32)"
            ]
          }
        }
      },
      {
        "contract": "ProxyERC20 (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.25/8e4eeda65e5c90cd9cdcbaafb8ad1eae3e51467d_ProxyERC20.sol/8e4eeda65e5c90cd9cdcbaafb8ad1eae3e51467d_ProxyERC20.sol#360-482)",
        "elements": [],
        "description": "ProxyERC20 (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.25/8e4eeda65e5c90cd9cdcbaafb8ad1eae3e51467d_ProxyERC20.sol/8e4eeda65e5c90cd9cdcbaafb8ad1eae3e51467d_ProxyERC20.sol#360-482) is an upgradeable proxy.\nProxyERC20 uses `call` instead of `delegatecall`\ntarget was found in a different contract.\ntarget is a state variable of type Proxyable\nFound compatibility checks in all upgrade functions.\nIncorrect compatibility check in setTarget: target = _target\nIncorrect compatibility check in setTarget: target = _target\nCan toggle delegatecall on/off: condition: useDELEGATECALL\n",
        "id": "c0bccde6cc1d7fc204ae3eaad25c92675b3383f7880a76551080ca78847cab40",
        "features": {
          "upgradeable": true,
          "uses_call_instead_of_delegatecall": true,
          "impl_address_variable": "Proxy.target",
          "impl_address_setter": "Proxy.setTarget(Proxyable)",
          "impl_address_getter": "not found",
          "impl_address_location": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.25/8e4eeda65e5c90cd9cdcbaafb8ad1eae3e51467d_ProxyERC20.sol/8e4eeda65e5c90cd9cdcbaafb8ad1eae3e51467d_ProxyERC20.sol#113-212)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "Proxyable",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "Proxy.setTarget(Proxyable)": {
                "check": "target = _target",
                "is_correct": false
              }
            }
          },
          "can_remove_upgradeability": false,
          "can_toggle_delegatecall": true,
          "toggle_delegatecall_condition": "useDELEGATECALL",
          "toggle_alternative_logic": "uses call instead of delegatecall",
          "toggle_setters": [
            "setUseDELEGATECALL"
          ],
          "immutable_functions": {
            "erc20": [
              "totalSupply()",
              "balanceOf(address)",
              "transfer(address,uint256)",
              "transferFrom(address,address,uint256)",
              "approve(address,uint256)",
              "allowance(address,address)",
              "name()",
              "symbol()",
              "decimals()"
            ],
            "other": [
              "setTarget(Proxyable)",
              "setUseDELEGATECALL(bool)",
              "_emit(bytes,uint256,bytes32,bytes32,bytes32,bytes32)",
              "nominateNewOwner(address)",
              "acceptOwnership()"
            ]
          }
        }
      }
    ]
  }
}