
Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin Upgradeable.is_proxy (Slither line:1425)


End Upgradeable.is_proxy (Slither line:1428)


Begin Upgradeable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Upgradeable 

End Upgradeable.is_upgradeable_proxy (Slither line:1407)


Begin UpgradeableMaster.is_proxy (Slither line:1425)


End UpgradeableMaster.is_proxy (Slither line:1428)


Begin UpgradeableMaster.is_upgradeable_proxy (Slither line:1136)

Checking contract: UpgradeableMaster 

End UpgradeableMaster.is_upgradeable_proxy (Slither line:1407)


Begin Proxy.is_proxy (Slither line:1425)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let ptr := mload(0x40) (Slither line:1576)
    calldatacopy(ptr, 0x0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), _target, ptr, calldatasize(), 0x0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called '_target'
Looking for corresponding Variable
Current function: fallback

Begin Proxy.find_delegate_variable_from_name
Searching for _target (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking masterPosition (Slither line:1689)
Checking targetPosition (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking _target (Slither line:1703)
_target is a Local Variable in Proxy.fallback (Slither line:1707)
Expression: getTarget() (Slither line:1719)

Begin Proxy.find_delegate_from_call_exp

getTarget() (Slither line:1993)
called = getTarget (Slither line:2000)
getTarget returns a variable of type address   called target (Slither line:2183)
getTarget contains assembly - looking for sload (Slither line:2189)
Looking in ASSEMBLY node (Slither line:2196)
{  (Slither line:2200)
    target := sload(position)  (Slither line:2200)
Return value set by sload in asm (Slither line:2202)
Found storage slot: targetPosition (Slither line:2222)

End Proxy.find_delegate_from_call_exp (Slither line:2318)

Call Expression
End Proxy.find_delegate_variable_by_name (Slither line:1739)


Begin Proxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2673)


End Proxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2700)


End Proxy.find_delegatecall_in_asm (Slither line:1637)

Setting Proxy._delegate_variable = Proxy._proxy_impl_slot: targetPosition (Slither line:1473)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 
Call destination targetPosition is constant (Slither line:1146)

targetPosition is the implementation storage slot (Slither line:1149)

Proxy is delegating to targetPosition
Looking for setter (Slither line:1200)


Begin Proxy.find_setter_in_contract (Slither line:3109)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3112)
Checking function: constructor(address,bytes) returns() (Slither line:3117)
Checking function: initialize(bytes) returns() (Slither line:3117)
Checking function: upgrade(bytes) returns() (Slither line:3117)
Visibility: external
revert(string)(upg11)
Checking function: getTarget() returns(address) (Slither line:3117)
Visibility: public
getTarget contains assembly (Slither line:3143)
Checking function: setTarget(address) returns() (Slither line:3117)
Visibility: internal
Checking function: upgradeTarget(address,bytes) returns() (Slither line:3117)
Visibility: external
require(bool,string)(_address == getMaster(),oro11)
requireMaster(msg.sender)
setTarget(newTarget)
require(bool,string)(upgradeSuccess,ufu11)
    sstore(position, _newTarget) (Slither line:3153)
upgradeTarget reads and/or writes to variable position (Slither line:3160)
upgradeTarget reads and/or writes to variable targetPosition (Slither line:3160)

End Proxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: upgradeTarget in contract: Proxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin Proxy.find_getter_in_contract (Slither line:2964)

targetPosition is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: constructor (Slither line:2978)
Checking function: requireMaster (Slither line:2978)
Checking function: getMaster (Slither line:2978)
getMaster returns address variable called master (Slither line:2998)
getMaster contains assembly (Slither line:3041)
getMaster contains assembly (Slither line:3041)
getMaster contains assembly (Slither line:3041)
Checking function: setMaster (Slither line:2978)
Checking function: transferMastership (Slither line:2978)
Checking function: constructor (Slither line:2978)
Checking function: initialize (Slither line:2978)
Checking function: upgrade (Slither line:2978)
Checking function: getTarget (Slither line:2978)
getTarget returns address variable called target (Slither line:2998)
getTarget contains assembly (Slither line:3041)
getTarget contains assembly (Slither line:3041)

End Proxy.find_getter_in_contract (Slither line:3073)


Implementation retrieved by function: getTarget in contract: Proxy (Slither line:1285)

End Proxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: Proxy
Setter found in contract Proxy
Checking public function getMaster
Checking external function transferMastership
Checking external function getNoticePeriod
Checking external function upgradeNoticePeriodStarted
Checking external function upgradePreparationStarted
Checking external function upgradeCanceled
Checking external function upgradeFinishes
Checking external function isReadyForUpgrade
Checking external function upgradeTarget
Checking external function initialize
Checking external function upgrade
Checking public function getTarget
Checking external function upgradeTarget
Checking external function getNoticePeriod
Checking external function upgradeNoticePeriodStarted
Checking external function upgradePreparationStarted
Checking external function upgradeCanceled
Checking external function upgradeFinishes
Checking external function isReadyForUpgrade
Checking external function fallback
functions_writing_to_variable: targetPosition
functions_writing_to_variable: checking function Proxy.initialize (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.transferMastership (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.upgradeNoticePeriodStarted (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.upgradeFinishes (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.upgrade (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.isReadyForUpgrade (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.upgradePreparationStarted (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.requireMaster (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.getNoticePeriod (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.getTarget (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.upgradeTarget (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.upgradeCanceled (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: exp = masterPosition = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: masterPosition = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:907)
functions_writing_to_variable: exp = targetPosition = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: targetPosition = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:907)
functions_writing_to_variable: Identifier: targetPosition (proxy_features line:919)
get_value_assigned: targetPosition = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: checking function Proxy.setTarget (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(position, _newTarget)
(proxy_features line:948)
_newTarget
functions_writing_to_variable: setTarget writes _newTarget to targetPosition w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function Proxy.getMaster (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.upgradeNoticePeriodStarted (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.upgradeFinishes (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.upgradeTarget (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(position, _newTarget)
(proxy_features line:948)
_newTarget
functions_writing_to_variable: upgradeTarget writes _newTarget to targetPosition w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function Proxy.isReadyForUpgrade (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.constructor (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(position, _newTarget)
(proxy_features line:948)
_newTarget
functions_writing_to_variable: constructor writes _newTarget to targetPosition w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function Proxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.upgradePreparationStarted (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.setMaster (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.getNoticePeriod (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.upgradeCanceled (proxy_features line:893)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function setTarget
has_compatibility_checks: checking external function upgradeTarget
require(bool,string)(_address == getMaster(),oro11)
has_compatibility_checks: condition _address == getMaster()
require(bool,string)(upgradeSuccess,ufu11)
has_compatibility_checks: condition upgradeSuccess
check_condition_from_expression: Identifier upgradeSuccess
has_compatibility_checks: checking public function constructor
require(bool,string)(initializationSuccess,uin11)
has_compatibility_checks: condition initializationSuccess
check_condition_from_expression: Identifier initializationSuccess
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    let ptr := mload(0x40)
    calldatacopy(ptr, 0x0, calldatasize())
    let result := delegatecall(gas(), _target, ptr, calldatasize(), 0x0, 0)
    let size := returndatasize()
    returndatacopy(ptr, 0x0, size)
    switch result
    case 0 {
        revert(ptr, size)
    }
    default {
        return(ptr, size)
    }
}
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: _target = getTarget()
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: constructor
Found public function: getMaster
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(_address == getMaster(),oro11)
has_time_delay: (node.type) EXPRESSION
(Expression) requireMaster(msg.sender)
has_time_delay: (node.type) EXPRESSION
(Expression) setTarget(newTarget)
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = targetPosition
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = targetPosition
has_time_delay: (node.type) NEW VARIABLE
(Expression) position = masterPosition
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(upgradeSuccess,ufu11)
has_time_delay: (node.type) EXPRESSION
(Expression) (upgradeSuccess) = getTarget().delegatecall(abi.encodeWithSignature(upgrade(bytes),newTargetUpgradeParameters))
