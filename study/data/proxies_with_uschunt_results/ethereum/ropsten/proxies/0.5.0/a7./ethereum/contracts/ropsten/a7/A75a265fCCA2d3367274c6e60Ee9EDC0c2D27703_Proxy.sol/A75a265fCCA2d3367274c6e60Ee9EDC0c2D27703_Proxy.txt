
Begin Proxy.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let ptr := mload(0x40) (Slither line:1576)
    calldatacopy(ptr, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), contractAddr, ptr, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'contractAddr'
Looking for corresponding Variable
Current function: fallback

Begin Proxy.find_delegate_variable_from_name
Searching for contractAddr (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking targetAddress (Slither line:1689)
Checking admin (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking contractAddr (Slither line:1703)
contractAddr is a Local Variable in Proxy.fallback (Slither line:1707)
Expression: targetAddress (Slither line:1719)
Identifier value: targetAddress (Slither line:1725)
targetAddress is a State Variable in contract Proxy (Slither line:1730)

End Proxy.find_delegate_variable_by_name


End Proxy.find_delegatecall_in_asm (Slither line:1637)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 
Proxy is delegating to targetAddress
Looking for setter (Slither line:1200)


Begin Proxy.find_setter_in_contract (Slither line:3109)

Checking function: constructor() returns() (Slither line:3117)
Checking function: setTargetAddress(address) returns() (Slither line:3117)
Visibility: public
targetAddress = _address
is an Assignment Operation (Slither line:3206)

End Proxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: setTargetAddress in contract: Proxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin Proxy.find_getter_in_contract (Slither line:2964)

targetAddress is a Variable object
_address
Checking function: constructor (Slither line:2978)
Checking function: setTargetAddress (Slither line:2978)
Checking function: getContAdr (Slither line:2978)
getContAdr returns address variable  (Slither line:2998)
RETURN node expression: targetAddress (Slither line:3018)

End Proxy.find_getter_in_contract (Slither line:3073)


Implementation retrieved by function: getContAdr in contract: Proxy (Slither line:1285)

End Proxy.is_upgradeable_proxy (Slither line:1293)

Checking public function setTargetAddress
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,Admin only function)
Checking public function getContAdr
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,Admin only function)
Checking public function setTargetAddress
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,Admin only function)
Checking public function getContAdr
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == admin,Admin only function)
Checking external function fallback
functions_writing_to_variable: targetAddress
functions_writing_to_variable: checking function Proxy.getContAdr (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.setTargetAddress (proxy_features line:893)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == admin,Admin only function) (proxy_features line:904)
functions_writing_to_variable: exp = require(bool)(_address != address(0)) (proxy_features line:904)
functions_writing_to_variable: exp = targetAddress = _address (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: targetAddress = _address (proxy_features line:907)
functions_writing_to_variable: Identifier: targetAddress (proxy_features line:919)
get_value_assigned: targetAddress = _address
functions_writing_to_variable: setTargetAddress writes _address to targetAddress (proxy_features line:924)
functions_writing_to_variable: checking function Proxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.constructor (proxy_features line:893)
functions_writing_to_variable: exp = targetAddress = 0xa8adE9c2B0993653F2028bAE4557588a4d187E1a (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: targetAddress = 0xa8adE9c2B0993653F2028bAE4557588a4d187E1a (proxy_features line:907)
functions_writing_to_variable: Identifier: targetAddress (proxy_features line:919)
get_value_assigned: targetAddress = 0xa8adE9c2B0993653F2028bAE4557588a4d187E1a
functions_writing_to_variable: exp = admin = msg.sender (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: admin = msg.sender (proxy_features line:907)
has_compatibility_checks: dependencies: ['_address']
has_compatibility_checks: checking public function setTargetAddress
require(bool,string)(msg.sender == admin,Admin only function)
has_compatibility_checks: condition msg.sender == admin
require(bool)(_address != address(0))
has_compatibility_checks: condition _address != address(0)
check_condition_from_expression: condition _address != address(0)
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    let ptr := mload(0x40)
    calldatacopy(ptr, 0, calldatasize())
    let result := delegatecall(gas(), contractAddr, ptr, calldatasize(), 0, 0)
    let size := returndatasize()
    returndatacopy(ptr, 0, size)
    switch result
    case 0 {
        revert(ptr, size)
    }
    default {
        return(ptr, size)
    }
}
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: contractAddr = targetAddress
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
Found public function: constructor
Found public function: setTargetAddress
has_time_delay: (node.type) EXPRESSION
(Expression) targetAddress = _address
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == admin,Admin only function)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(_address != address(0))
