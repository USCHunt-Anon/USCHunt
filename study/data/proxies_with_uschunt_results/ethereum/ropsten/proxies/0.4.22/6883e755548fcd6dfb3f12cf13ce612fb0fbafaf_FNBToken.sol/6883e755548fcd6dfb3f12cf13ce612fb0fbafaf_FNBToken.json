{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "FNBToken (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.22/new/6883e755548fcd6dfb3f12cf13ce612fb0fbafaf_FNBToken.sol/6883e755548fcd6dfb3f12cf13ce612fb0fbafaf_FNBToken.sol#101-179)",
        "elements": [],
        "description": "FNBToken (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.22/new/6883e755548fcd6dfb3f12cf13ce612fb0fbafaf_FNBToken.sol/6883e755548fcd6dfb3f12cf13ce612fb0fbafaf_FNBToken.sol#101-179) is an upgradeable proxy.\nimplementation is declared in the proxy.\nimplementation is an address state variable\nFound compatibility checks in all upgrade functions.\n",
        "id": "1dbceefe84a585161e61e53d7127aac377ef2f6aebfe1a66d5f0d0f401bd385c",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "FNBToken.implementation",
          "impl_address_setter": "FNBToken.upgradeTo(address)",
          "impl_address_getter": "not found",
          "impl_address_location": "FNBToken (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.22/new/6883e755548fcd6dfb3f12cf13ce612fb0fbafaf_FNBToken.sol/6883e755548fcd6dfb3f12cf13ce612fb0fbafaf_FNBToken.sol#101-179)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "master_copy_coupling": "missing implementation source",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "FNBToken.upgradeTo(address)": {
                "check": "require(bool)(implementation != _newImplementation)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "erc20": [
              "totalSupply()",
              "balanceOf(address)",
              "transfer(address,uint256)",
              "transferFrom(address,address,uint256)",
              "approve(address,uint256)",
              "allowance(address,address)"
            ],
            "other": [
              "transferOwnership(address)",
              "acceptOwnership()",
              "upgradeTo(address)"
            ]
          }
        }
      }
    ]
  }
}