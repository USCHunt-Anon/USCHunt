
Begin IPairFeeDistribution.is_proxy (Slither line:1425)


End IPairFeeDistribution.is_proxy (Slither line:1428)


Begin IPairFeeDistribution.is_upgradeable_proxy (Slither line:1136)

Checking contract: IPairFeeDistribution 

End IPairFeeDistribution.is_upgradeable_proxy (Slither line:1407)


Begin Math.is_proxy (Slither line:1425)


End Math.is_proxy (Slither line:1428)


Begin Math.is_upgradeable_proxy (Slither line:1136)

Checking contract: Math 

End Math.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath256.is_proxy (Slither line:1425)


End SafeMath256.is_proxy (Slither line:1428)


Begin SafeMath256.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath256 

End SafeMath256.is_upgradeable_proxy (Slither line:1407)


Begin DecFloat32.is_proxy (Slither line:1425)


End DecFloat32.is_proxy (Slither line:1428)


Begin DecFloat32.is_upgradeable_proxy (Slither line:1136)

Checking contract: DecFloat32 

End DecFloat32.is_upgradeable_proxy (Slither line:1407)


Begin ProxyData.is_proxy (Slither line:1425)


End ProxyData.is_proxy (Slither line:1428)


Begin ProxyData.is_upgradeable_proxy (Slither line:1136)

Checking contract: ProxyData 

End ProxyData.is_upgradeable_proxy (Slither line:1407)


Begin IGraSwapFactory.is_proxy (Slither line:1425)


End IGraSwapFactory.is_proxy (Slither line:1428)


Begin IGraSwapFactory.is_upgradeable_proxy (Slither line:1136)

Checking contract: IGraSwapFactory 

End IGraSwapFactory.is_upgradeable_proxy (Slither line:1407)


Begin IERC20.is_proxy (Slither line:1425)


End IERC20.is_proxy (Slither line:1428)


Begin IERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20 

End IERC20.is_upgradeable_proxy (Slither line:1407)


Begin IGraSwapBlackList.is_proxy (Slither line:1425)


End IGraSwapBlackList.is_proxy (Slither line:1428)


Begin IGraSwapBlackList.is_upgradeable_proxy (Slither line:1136)

Checking contract: IGraSwapBlackList 

End IGraSwapBlackList.is_upgradeable_proxy (Slither line:1407)


Begin IGraWhiteList.is_proxy (Slither line:1425)


End IGraWhiteList.is_proxy (Slither line:1428)


Begin IGraWhiteList.is_upgradeable_proxy (Slither line:1136)

Checking contract: IGraWhiteList 

End IGraWhiteList.is_upgradeable_proxy (Slither line:1407)


Begin IGraSwapToken.is_proxy (Slither line:1425)


End IGraSwapToken.is_proxy (Slither line:1428)


Begin IGraSwapToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: IGraSwapToken 

End IGraSwapToken.is_upgradeable_proxy (Slither line:1407)


Begin IGraSwapERC20.is_proxy (Slither line:1425)


End IGraSwapERC20.is_proxy (Slither line:1428)


Begin IGraSwapERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IGraSwapERC20 

End IGraSwapERC20.is_upgradeable_proxy (Slither line:1407)


Begin IGraSwapPool.is_proxy (Slither line:1425)


End IGraSwapPool.is_proxy (Slither line:1428)


Begin IGraSwapPool.is_upgradeable_proxy (Slither line:1136)

Checking contract: IGraSwapPool 

End IGraSwapPool.is_upgradeable_proxy (Slither line:1407)


Begin IGraSwapPair.is_proxy (Slither line:1425)


End IGraSwapPair.is_proxy (Slither line:1428)


Begin IGraSwapPair.is_upgradeable_proxy (Slither line:1136)

Checking contract: IGraSwapPair 

End IGraSwapPair.is_upgradeable_proxy (Slither line:1407)


Begin GraSwapERC20.is_proxy (Slither line:1425)


End GraSwapERC20.is_proxy (Slither line:1428)


Begin GraSwapERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: GraSwapERC20 

End GraSwapERC20.is_upgradeable_proxy (Slither line:1407)


Begin GraSwapPool.is_proxy (Slither line:1425)


End GraSwapPool.is_proxy (Slither line:1428)


Begin GraSwapPool.is_upgradeable_proxy (Slither line:1136)

Checking contract: GraSwapPool 

End GraSwapPool.is_upgradeable_proxy (Slither line:1407)


Begin GraSwapPair.is_proxy (Slither line:1425)


End GraSwapPair.is_proxy (Slither line:1428)


Begin GraSwapPair.is_upgradeable_proxy (Slither line:1136)

Checking contract: GraSwapPair 

End GraSwapPair.is_upgradeable_proxy (Slither line:1407)


Begin GraSwapPairProxy.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin GraSwapPairProxy.find_delegatecall_in_exp_node

Found Expression Node: size_fallback_asm_0 = returndatasize()() (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)
Expression called: returndatasize()
Type of call: uint256 (Slither line:2807)
Args:

End GraSwapPairProxy.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin GraSwapPairProxy.find_delegatecall_in_exp_node

Found Expression Node: mstore(uint256,uint256)(end_fallback_asm_0,factory) (Slither line:2792)
Expression called: mstore(uint256,uint256)
Type of call:  (Slither line:2807)
Args:
end_fallback_asm_0
factory

End GraSwapPairProxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin GraSwapPairProxy.find_delegatecall_in_exp_node

Found Expression Node: returndatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,size_fallback_asm_0) (Slither line:2792)
Expression called: returndatacopy(uint256,uint256,uint256)
Type of call:  (Slither line:2807)
Args:
ptr_fallback_asm_0
0
size_fallback_asm_0

End GraSwapPairProxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin GraSwapPairProxy.find_delegatecall_in_exp_node

Found Expression Node: end_fallback_asm_0 = end_fallback_asm_0 + 32 (Slither line:2792)
Expression Type: = (Slither line:2795)
Checking right side of assignment expression... (Slither line:2803)

End GraSwapPairProxy.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin GraSwapPairProxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'impl'
Looking for corresponding Variable
Current function: fallback

Begin GraSwapPairProxy.find_delegate_variable_from_name
Searching for impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking _unusedVar0 (Slither line:1689)
Checking _unusedVar1 (Slither line:1689)
Checking _unusedVar2 (Slither line:1689)
Checking _unusedVar3 (Slither line:1689)
Checking _unusedVar4 (Slither line:1689)
Checking _unusedVar5 (Slither line:1689)
Checking _unusedVar6 (Slither line:1689)
Checking _unusedVar7 (Slither line:1689)
Checking _unusedVar8 (Slither line:1689)
Checking _unusedVar9 (Slither line:1689)
Checking _unlocked (Slither line:1689)
Checking _immuFactory (Slither line:1689)
Checking _immuMoneyToken (Slither line:1689)
Checking _immuStockToken (Slither line:1689)
Checking _immuGras (Slither line:1689)
Checking _immuOther (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking impl (Slither line:1703)
impl is a Local Variable in GraSwapPairProxy.fallback (Slither line:1707)
Expression: IGraSwapFactory(address(_immuFactory)).pairLogic() (Slither line:1719)

Begin GraSwapPairProxy.find_delegate_from_call_exp

IGraSwapFactory(address(_immuFactory)).pairLogic() (Slither line:1993)
called = IGraSwapFactory(address(_immuFactory)).pairLogic (Slither line:2000)
Called member of IGraSwapFactory(address(_immuFactory)) (Slither line:2007)

Begin GraSwapPairProxy.find_delegate_from_member_access

Expression: IGraSwapFactory(address(_immuFactory)).pairLogic() (Slither line:2348)
IGraSwapFactory(address(_immuFactory)) (Slither line:2361)
pairLogic is a member of the contract type: IGraSwapFactory (Slither line:2406)
Which is an interface (Slither line:2410)
GraSwapFactory inherits IGraSwapFactory (Slither line:2417)
Looking for pairLogic in GraSwapFactory (Slither line:2513)
Found the function called pairLogic (Slither line:2517)
Returns a variable of type address (Slither line:2522)

End GraSwapPairProxy.find_delegate_from_member_access (Slither line:2635)


End GraSwapPairProxy.find_delegate_from_call_exp (Slither line:2009)

Call Expression
End GraSwapPairProxy.find_delegate_variable_by_name (Slither line:1739)


End GraSwapPairProxy.find_delegatecall_in_asm (Slither line:1637)


End GraSwapPairProxy.is_proxy (Slither line:1476)


Begin GraSwapPairProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: GraSwapPairProxy 
GraSwapPairProxy is delegating to pairLogic
Looking for setter (Slither line:1200)

Looking for setter in GraSwapFactory (Slither line:1204)


Begin GraSwapFactory.find_setter_in_contract (Slither line:3109)

Checking function: constructor(address,address,address,address,address) returns() (Slither line:3117)
Checking function: createPair(address,address,bool) returns(address) (Slither line:3117)
Visibility: external
pfd.addpair(pair)
differenceTooLarge = true
is an Assignment Operation (Slither line:3206)
priceDiv = uint64(uint256(10) ** (stockDec - moneyDec))
is an Assignment Operation (Slither line:3206)
require(bool,string)(23 >= stockDec && stockDec >= 0,GraSwapFactory: STOCK_DECIMALS_NOT_SUPPORTED)
require(bool,string)(_tokensToPair[salt] == address(0),GraSwapFactory: PAIR_EXISTS)
differenceTooLarge = true
is an Assignment Operation (Slither line:3206)
require(bool,string)(! differenceTooLarge,GraSwapFactory: DECIMALS_DIFF_TOO_LARGE)
pair = address(Graswap)
is an Assignment Operation (Slither line:3206)
uint256(IERC20(token).decimals())
allPairs.push(pair)
priceMul = uint64(uint256(10) ** (moneyDec - stockDec))
is an Assignment Operation (Slither line:3206)
dec = stockDec - 4
is an Assignment Operation (Slither line:3206)
18
_tokensToPair[salt] = pair
is an Assignment Operation (Slither line:3206)
Left side is an IndexAccess (Slither line:3235)
_pairWithToken[pair] = TokensInPair(stock,money)
is an Assignment Operation (Slither line:3206)
Left side is an IndexAccess (Slither line:3235)
PairCreated(pair,stock,money,isOnlySwap)
require(bool,string)(stock != money,GraSwapFactory: IDENTICAL_ADDRESSES)
Checking function: _getDecimals(address) returns(uint256) (Slither line:3117)
Visibility: private
Checking function: allPairsLength() returns(uint256) (Slither line:3117)
Visibility: external
allPairs.length
Checking function: setFeeToAddresses(address,address,address) returns() (Slither line:3117)
Visibility: external
feeTo_1 = _feeTo_1
is an Assignment Operation (Slither line:3206)
feeTo_2 = _feeTo_2
is an Assignment Operation (Slither line:3206)
feeToPrivate = _feeToPrivate
is an Assignment Operation (Slither line:3206)
require(bool,string)(msg.sender == feeToSetter,GraSwapFactory: FORBIDDEN)
Checking function: setFeeToSetter(address) returns() (Slither line:3117)
Visibility: external
feeToSetter = _feeToSetter
is an Assignment Operation (Slither line:3206)
require(bool,string)(msg.sender == feeToSetter,GraSwapFactory: FORBIDDEN)
Checking function: setPairLogic(address) returns() (Slither line:3117)
Visibility: external
require(bool,string)(msg.sender == gov,GraSwapFactory: SETTER_MISMATCH)
pairLogic = implLogic
is an Assignment Operation (Slither line:3206)

End GraSwapFactory.find_setter_in_contract (Slither line:3315)


Implementation set by function: setPairLogic in contract: GraSwapFactory (Slither line:1264)
Looking for getter (Slither line:1273)


Begin GraSwapFactory.find_getter_in_contract (Slither line:2964)

pairLogic is a Variable object
implLogic
Checking function: constructor (Slither line:2978)
Checking function: createPair (Slither line:2978)
createPair returns address variable called pair (Slither line:2998)
Checking function: _getDecimals (Slither line:2978)
_getDecimals returns uint256 variable  (Slither line:2998)
RETURN node expression: 18 (Slither line:3018)
RETURN node expression: uint256(IERC20(token).decimals()) (Slither line:3018)
Checking function: allPairsLength (Slither line:2978)
allPairsLength returns uint256 variable  (Slither line:2998)
RETURN node expression: allPairs.length (Slither line:3018)
Checking function: setFeeToAddresses (Slither line:2978)
Checking function: setFeeToSetter (Slither line:2978)
Checking function: setPairLogic (Slither line:2978)
Checking function: setFeeBPS (Slither line:2978)
Checking function: getTokensFromPair (Slither line:2978)
getTokensFromPair returns address variable called stock (Slither line:2998)
getTokensFromPair returns address variable called money (Slither line:2998)
Checking function: tokensToPair (Slither line:2978)
tokensToPair returns address variable called pair (Slither line:2998)
RETURN node expression: _tokensToPair[key] (Slither line:3018)
Checking function: slitherConstructorVariables (Slither line:2978)

End GraSwapFactory.find_getter_in_contract (Slither line:3073)


Begin GraSwapPairProxy.find_getter_in_contract (Slither line:2964)

pairLogic is a Variable object
implLogic
Checking function: constructor (Slither line:2978)
Checking function: receive (Slither line:2978)
Checking function: fallback (Slither line:2978)

End GraSwapPairProxy.find_getter_in_contract (Slither line:3073)

Could not find implementation getter in GraSwapPairProxy (Slither line:1305)
or in GraSwapFactory (Slither line:1319)

Begin IPairFeeDistribution.find_getter_in_contract (Slither line:2964)

pairLogic is a Variable object
implLogic

End IPairFeeDistribution.find_getter_in_contract (Slither line:3073)

impl_address_from_contract_call: implLogic
impl_address_from_contract_call: StateVariable pairLogic
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression returndatasize()()
impl_address_from_contract_call: CallExpression IGraSwapFactory(address(_immuFactory)).pairLogic()
found MemberAccess calling getter in another contract: IGraSwapFactory(address(_immuFactory)).pairLogic()
called: IGraSwapFactory(address(_immuFactory)).pairLogic
found MemberAccess: IGraSwapFactory(address(_immuFactory)).pairLogic
TypeConversion: IGraSwapFactory(address(_immuFactory))
find_registry_address_source: IGraSwapFactory(address(_immuFactory)).pairLogic()
MemberAccess: IGraSwapFactory(address(_immuFactory)).pairLogic
TypeConversion: IGraSwapFactory(address(_immuFactory))
Checking external function receive
Checking external function fallback
functions_writing_to_variable: pairLogic
functions_writing_to_variable: checking function GraSwapFactory.feeBPS (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.setFeeBPS (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.feeTo_1 (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapPairProxy.receive (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.createPair (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapPairProxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.getTokensFromPair (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapPairProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.pairLogic (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.setPairLogic (proxy_features line:893)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == gov,GraSwapFactory: SETTER_MISMATCH) (proxy_features line:904)
functions_writing_to_variable: exp = pairLogic = implLogic (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: pairLogic = implLogic (proxy_features line:907)
functions_writing_to_variable: Identifier: pairLogic (proxy_features line:919)
get_value_assigned: pairLogic = implLogic
functions_writing_to_variable: setPairLogic writes implLogic to pairLogic (proxy_features line:924)
functions_writing_to_variable: checking function GraSwapFactory.feeTo_2 (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory._getDecimals (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.setFeeBPS (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.tokensToPair (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.setFeeToAddresses (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.constructor (proxy_features line:893)
functions_writing_to_variable: exp = feeToSetter = _feeToSetter (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: feeToSetter = _feeToSetter (proxy_features line:907)
functions_writing_to_variable: exp = gov = _gov (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: gov = _gov (proxy_features line:907)
functions_writing_to_variable: exp = graContract = _graContract (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: graContract = _graContract (proxy_features line:907)
functions_writing_to_variable: exp = pairLogic = _pairLogic (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: pairLogic = _pairLogic (proxy_features line:907)
functions_writing_to_variable: Identifier: pairLogic (proxy_features line:919)
get_value_assigned: pairLogic = _pairLogic
functions_writing_to_variable: exp = pfd = IPairFeeDistribution(_distribution) (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: pfd = IPairFeeDistribution(_distribution) (proxy_features line:907)
functions_writing_to_variable: constructor writes _pairLogic to pairLogic (proxy_features line:924)
functions_writing_to_variable: checking function GraSwapFactory.allPairsLength (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.getTokensFromPair (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.feeToPrivate (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.setPairLogic (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.slitherConstructorVariables (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.setFeeToAddresses (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.tokensToPair (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.feeToSetter (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.setFeeToSetter (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.allPairsLength (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.setFeeToSetter (proxy_features line:893)
functions_writing_to_variable: checking function GraSwapFactory.createPair (proxy_features line:893)
has_compatibility_checks: dependencies: ['_pairLogic', 'implLogic']
has_compatibility_checks: checking external function setPairLogic
require(bool,string)(msg.sender == gov,GraSwapFactory: SETTER_MISMATCH)
has_compatibility_checks: condition msg.sender == gov
has_compatibility_checks: checking public function constructor
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: mstore(uint256,uint256)(end_fallback_asm_0,stockToken)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: end_fallback_asm_0 = end_fallback_asm_0 + 32
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: other = _immuOther
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: factory = _immuFactory
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: mstore(uint256,uint256)(end_fallback_asm_0,graContract)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: size_fallback_asm_0 = calldatasize()()
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: impl = IGraSwapFactory(address(_immuFactory)).pairLogic()
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: end_fallback_asm_0 = end_fallback_asm_0 + 32
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: mstore(uint256,uint256)(end_fallback_asm_0,factory)
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: moneyToken = _immuMoneyToken
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: mstore(uint256,uint256)(end_fallback_asm_0,other)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: end_fallback_asm_0 = end_fallback_asm_0 + 32
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: stockToken = _immuStockToken
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: mstore(uint256,uint256)(end_fallback_asm_0,moneyToken)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: size_fallback_asm_0 = size_fallback_asm_0 + 160
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: calldatacopy(uint256,uint256,uint256)(ptr_fallback_asm_0,0,size_fallback_asm_0)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: end_fallback_asm_0 = ptr_fallback_asm_0 + size_fallback_asm_0
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: ptr_fallback_asm_0 = mload(uint256)(0x40)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: result_fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),impl,ptr_fallback_asm_0,size_fallback_asm_0,0,0)
can_toggle_delegatecall_on_off:
 dominator node type: EXPRESSION
 dominator expression: end_fallback_asm_0 = end_fallback_asm_0 + 32
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: graContract = _immuGras
Found public function: constructor
Found external function: receive
Found fallback
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == gov,GraSwapFactory: SETTER_MISMATCH)
has_time_delay: (node.type) EXPRESSION
(Expression) pairLogic = implLogic

Begin GraSwapFactory.is_proxy (Slither line:1425)


End GraSwapFactory.is_proxy (Slither line:1428)


Begin GraSwapFactory.is_upgradeable_proxy (Slither line:1136)

Checking contract: GraSwapFactory 

End GraSwapFactory.is_upgradeable_proxy (Slither line:1407)

