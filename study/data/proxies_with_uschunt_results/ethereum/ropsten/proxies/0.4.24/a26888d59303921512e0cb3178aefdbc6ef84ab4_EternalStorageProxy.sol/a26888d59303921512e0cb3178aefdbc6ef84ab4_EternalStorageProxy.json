{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.24/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol#63-152)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.24/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol#63-152) is a proxy, but doesn't seem upgradeable.\n",
        "id": "cb70bcec6d81585d7521ef499de1dc4cc025c9eb09a62b94cfe4ec81796afff6",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.24/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol#197-224)",
        "elements": [],
        "description": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.24/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol#197-224) is a proxy, but doesn't seem upgradeable.\n",
        "id": "ce071903cfe6d69ec6921419754cf17b050cdc1a0c9a70ff8d5343825c9a46a2",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "OwnedUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.24/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol#264-324)",
        "elements": [],
        "description": "OwnedUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.24/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol#264-324) is an upgradeable proxy.\n_implementation was found in a different contract.\n_implementation is an address state variable.\nFound compatibility checks in all upgrade functions.\n",
        "id": "001f1e881993c8963486586c5b8d35f5b673b76c05b3d7bd7d800b7e7b7eec2f",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "UpgradeabilityStorage._implementation",
          "impl_address_setter": "OwnedUpgradeabilityProxy.upgradeTo(uint256,address)",
          "impl_address_getter": "UpgradeabilityStorage.implementation()",
          "impl_address_location": "UpgradeabilityStorage (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.24/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol#162-184)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "OwnedUpgradeabilityProxy.upgradeTo(uint256,address)": {
                "check": "require(bool)(size > 0)",
                "is_correct": true
              },
              "OwnedUpgradeabilityProxy.upgradeToAndCall(uint256,address,bytes)": {
                "check": "require(bool)(size > 0)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "version()",
              "implementation()",
              "implementation()",
              "upgradeabilityOwner()",
              "transferProxyOwnership(address)",
              "upgradeTo(uint256,address)",
              "upgradeToAndCall(uint256,address,bytes)"
            ]
          }
        }
      },
      {
        "contract": "EternalStorageProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.24/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol#339-340)",
        "elements": [],
        "description": "EternalStorageProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.24/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol#339-340) is an upgradeable proxy.\n_implementation was found in a different contract.\n_implementation is an address state variable.\n uses Eternal Storage\nFound compatibility checks in all upgrade functions.\n",
        "id": "9da4992d18fe39051a706665638d863ad06327daa1aeb8c316d4053c3451c63e",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "UpgradeabilityStorage._implementation",
          "impl_address_setter": "OwnedUpgradeabilityProxy.upgradeTo(uint256,address)",
          "impl_address_getter": "UpgradeabilityStorage.implementation()",
          "impl_address_location": "UpgradeabilityStorage (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.24/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol/a26888d59303921512e0cb3178aefdbc6ef84ab4_EternalStorageProxy.sol#162-184)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "eternal_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "OwnedUpgradeabilityProxy.upgradeTo(uint256,address)": {
                "check": "require(bool)(size > 0)",
                "is_correct": true
              },
              "OwnedUpgradeabilityProxy.upgradeToAndCall(uint256,address,bytes)": {
                "check": "require(bool)(size > 0)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "transferProxyOwnership(address)",
              "upgradeTo(uint256,address)",
              "upgradeToAndCall(uint256,address,bytes)",
              "version()",
              "implementation()",
              "implementation()",
              "upgradeabilityOwner()"
            ]
          }
        }
      }
    ]
  }
}