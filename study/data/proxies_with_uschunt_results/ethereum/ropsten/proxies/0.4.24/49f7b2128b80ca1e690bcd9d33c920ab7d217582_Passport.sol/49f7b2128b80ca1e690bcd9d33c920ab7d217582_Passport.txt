
Begin OwnableProxy.is_proxy (Slither line:1425)


End OwnableProxy.is_proxy (Slither line:1428)


Begin OwnableProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: OwnableProxy 

End OwnableProxy.is_upgradeable_proxy (Slither line:1407)


Begin ClaimableProxy.is_proxy (Slither line:1425)


End ClaimableProxy.is_proxy (Slither line:1428)


Begin ClaimableProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: ClaimableProxy 

End ClaimableProxy.is_upgradeable_proxy (Slither line:1407)


Begin DestructibleProxy.is_proxy (Slither line:1425)


End DestructibleProxy.is_proxy (Slither line:1428)


Begin DestructibleProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: DestructibleProxy 

End DestructibleProxy.is_upgradeable_proxy (Slither line:1407)


Begin IPassportLogicRegistry.is_proxy (Slither line:1425)


End IPassportLogicRegistry.is_proxy (Slither line:1428)


Begin IPassportLogicRegistry.is_upgradeable_proxy (Slither line:1136)

Checking contract: IPassportLogicRegistry 

End IPassportLogicRegistry.is_upgradeable_proxy (Slither line:1407)


Begin Proxy.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2792)
Expression called: _delegate
Type of call: tuple() (Slither line:2807)
Args:
_implementation()

End Proxy.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin Proxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in Proxy._delegate (Slither line:1805)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin Proxy.find_delegate_from_call_exp

_implementation() (Slither line:1993)
called = _implementation (Slither line:2000)
Got abstract function, looking for overriding function (Slither line:2015)
Failure (Slither line:2023)
_implementation returns a variable of type address   (Slither line:2183)
Return value is LocalVariable:  (Slither line:2256)
has no expression (Slither line:2316)

End Proxy.find_delegate_from_call_exp (Slither line:2318)

_delegate contains assembly, searching for sload (Slither line:1875)

End Proxy.find_delegate_variable_from_name (Slither line:1939)


Begin Proxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2673)


End Proxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2700)


End Proxy.find_delegatecall_in_asm (Slither line:1637)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 

End Proxy.is_upgradeable_proxy (Slither line:1407)


Begin Passport.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin Passport.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    reg := sload(slot) (Slither line:1576)
} (Slither line:1576)

End Passport.find_delegatecall_in_asm (Slither line:1637)


Begin Passport.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    reg := sload(slot) (Slither line:1576)
} (Slither line:1576)

End Passport.find_delegatecall_in_asm (Slither line:1637)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Passport.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2792)
Expression called: _delegate
Type of call: tuple() (Slither line:2807)
Args:
_implementation()

End Passport.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin Passport.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin Passport.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking OWNER_SLOT (Slither line:1689)
Checking PENDING_OWNER_SLOT (Slither line:1689)
Checking REGISTRY_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in Passport._delegate (Slither line:1805)
AssignmentOperation: REGISTRY_SLOT (Slither line:1811)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin Passport.find_delegate_from_call_exp

_implementation() (Slither line:1993)
called = _implementation (Slither line:2000)
Return node of function Passport._implementation(): RETURN _getRegistry().getCurrentPassportLogic() (Slither line:2031)
Encountered call expression at RETURN node: _getRegistry().getCurrentPassportLogic() (Slither line:2043)
Encountered member access expression: _getRegistry().getCurrentPassportLogic (Slither line:2047)

Begin Passport.find_delegate_from_member_access

Expression: _getRegistry().getCurrentPassportLogic (Slither line:2348)
_getRegistry() (Slither line:2361)
Member of call expression result: _getRegistry (Slither line:2364)
Call to function _getRegistry returns reg (Slither line:2375)
getCurrentPassportLogic is a member of the contract type: IPassportLogicRegistry (Slither line:2406)
Which is an interface (Slither line:2410)
Could not find a contract that inherits IPassportLogicRegistry (Slither line:2431)

End Passport.find_delegate_from_call_exp (Slither line:2094)


End Passport.find_delegate_variable_from_name (Slither line:1939)


End Passport.find_delegatecall_in_asm (Slither line:1637)


End Passport.is_proxy (Slither line:1476)


Begin Passport.is_upgradeable_proxy (Slither line:1136)

Checking contract: Passport 
Local Variable: implementation (Slither line:1164)
_getRegistry() (Slither line:1171)
Call destination _getRegistry().getCurrentPassportLogic() is hidden in an interface (Slither line:1192)

detect_storage_slot: Passport
Expression for implementation: _getRegistry().getCurrentPassportLogic()
Called: _getRegistry().getCurrentPassportLogic
impl_address_from_contract_call: _getRegistry().getCurrentPassportLogic()
called: _getRegistry().getCurrentPassportLogic
found MemberAccess: _getRegistry().getCurrentPassportLogic
Identifier: reg
find_registry_address_source: _getRegistry().getCurrentPassportLogic()
MemberAccess: _getRegistry().getCurrentPassportLogic
CallExpression: _getRegistry()
Identifier: _getRegistry
Checking public function destroy
Found 'msg.sender ==' in expression: require(bool)(msg.sender == _getOwner())
Checking public function destroyAndSend
Found 'msg.sender ==' in expression: require(bool)(msg.sender == _getOwner())
Checking public function renounceOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == _getOwner())
Checking public function transferOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == _getOwner())
Checking public function destroy
Found 'msg.sender ==' in expression: require(bool)(msg.sender == _getOwner())
Checking public function destroyAndSend
Found 'msg.sender ==' in expression: require(bool)(msg.sender == _getOwner())
Checking public function renounceOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == _getOwner())
Checking public function transferOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == _getOwner())
Checking public function owner
Checking public function pendingOwner
Checking public function transferOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == _getOwner())
Checking public function claimOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == _getPendingOwner())
Checking public function changePassportLogicRegistry
Found 'msg.sender ==' in expression: require(bool)(msg.sender == _getOwner())
Checking public function getPassportLogicRegistry
Checking external function fallback
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function Passport.pendingOwner (proxy_features line:893)
functions_writing_to_variable: checking function Passport.owner (proxy_features line:893)
functions_writing_to_variable: checking function Passport._setRegistry (proxy_features line:893)
functions_writing_to_variable: checking function Passport.destroyAndSend (proxy_features line:893)
functions_writing_to_variable: checking function Passport.transferOwnership (proxy_features line:893)
functions_writing_to_variable: checking function Passport.fallback (proxy_features line:893)
functions_writing_to_variable: checking function Passport.constructor (proxy_features line:893)
functions_writing_to_variable: checking function Passport.constructor (proxy_features line:893)
functions_writing_to_variable: checking function Passport._getOwner (proxy_features line:893)
functions_writing_to_variable: checking function Passport._implementation (proxy_features line:893)
functions_writing_to_variable: checking function Passport.claimOwnership (proxy_features line:893)
functions_writing_to_variable: checking function Passport.changePassportLogicRegistry (proxy_features line:893)
functions_writing_to_variable: checking function Passport.renounceOwnership (proxy_features line:893)
functions_writing_to_variable: checking function Passport._setOwner (proxy_features line:893)
functions_writing_to_variable: checking function Passport.getPassportLogicRegistry (proxy_features line:893)
functions_writing_to_variable: checking function Passport.transferOwnership (proxy_features line:893)
functions_writing_to_variable: checking function Passport._getPendingOwner (proxy_features line:893)
functions_writing_to_variable: checking function Passport._implementation (proxy_features line:893)
functions_writing_to_variable: checking function Passport._transferOwnership (proxy_features line:893)
functions_writing_to_variable: checking function Passport.constructor (proxy_features line:893)
functions_writing_to_variable: checking function Passport._setPendingOwner (proxy_features line:893)
functions_writing_to_variable: checking function Passport._getRegistry (proxy_features line:893)
functions_writing_to_variable: checking function Passport.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: checking function Passport.destroy (proxy_features line:893)
has_compatibility_checks: dependencies: ['TMP_138', '', 'TMP_137', 'TMP_124', 'reg']
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 {
        revert(0, returndatasize())
    }
    default {
        return(0, returndatasize())
    }
}
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: destroy
