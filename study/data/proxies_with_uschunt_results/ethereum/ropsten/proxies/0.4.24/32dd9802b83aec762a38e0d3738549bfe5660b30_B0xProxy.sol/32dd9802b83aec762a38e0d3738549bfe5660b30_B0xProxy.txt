
Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin ReentrancyGuard.is_proxy (Slither line:1425)


End ReentrancyGuard.is_proxy (Slither line:1428)


Begin ReentrancyGuard.is_upgradeable_proxy (Slither line:1136)

Checking contract: ReentrancyGuard 

End ReentrancyGuard.is_upgradeable_proxy (Slither line:1407)


Begin Debugger.is_proxy (Slither line:1425)


End Debugger.is_proxy (Slither line:1428)


Begin Debugger.is_upgradeable_proxy (Slither line:1136)

Checking contract: Debugger 

End Debugger.is_upgradeable_proxy (Slither line:1407)


Begin GasTracker.is_proxy (Slither line:1425)


End GasTracker.is_proxy (Slither line:1428)


Begin GasTracker.is_upgradeable_proxy (Slither line:1136)

Checking contract: GasTracker 

End GasTracker.is_upgradeable_proxy (Slither line:1407)


Begin B0xObjects.is_proxy (Slither line:1425)


End B0xObjects.is_proxy (Slither line:1428)


Begin B0xObjects.is_upgradeable_proxy (Slither line:1136)

Checking contract: B0xObjects 

End B0xObjects.is_upgradeable_proxy (Slither line:1407)


Begin B0xStorage.is_proxy (Slither line:1425)


End B0xStorage.is_proxy (Slither line:1428)


Begin B0xStorage.is_upgradeable_proxy (Slither line:1136)

Checking contract: B0xStorage 

End B0xStorage.is_upgradeable_proxy (Slither line:1407)


Begin Proxiable.is_proxy (Slither line:1425)


End Proxiable.is_proxy (Slither line:1428)


Begin Proxiable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxiable 

End Proxiable.is_upgradeable_proxy (Slither line:1407)


Begin B0xProxy.is_proxy (Slither line:1425)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin B0xProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let result := delegatecall(gas(), target, add(data, 0x20), mload(data), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'target'
Looking for corresponding Variable
Current function: fallback

Begin B0xProxy.find_delegate_variable_from_name
Searching for target (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking reentrancyLock (Slither line:1689)
Checking owner (Slither line:1689)
Checking gasUsed (Slither line:1689)
Checking DEBUG_MODE (Slither line:1689)
Checking MAX_UINT (Slither line:1689)
Checking B0X_TOKEN_CONTRACT (Slither line:1689)
Checking VAULT_CONTRACT (Slither line:1689)
Checking ORACLE_REGISTRY_CONTRACT (Slither line:1689)
Checking B0XTO0X_CONTRACT (Slither line:1689)
Checking orders (Slither line:1689)
Checking orderList (Slither line:1689)
Checking orderLender (Slither line:1689)
Checking orderTraders (Slither line:1689)
Checking orderFilledAmounts (Slither line:1689)
Checking orderCancelledAmounts (Slither line:1689)
Checking loanPositions (Slither line:1689)
Checking interestPaid (Slither line:1689)
Checking loanList (Slither line:1689)
Checking targets (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking target (Slither line:1703)
target is a Local Variable in B0xProxy.fallback (Slither line:1707)
Expression: targets[msg.sig] (Slither line:1719)
targets is a State Variable in contract Proxiable (Slither line:1749)

End B0xProxy.find_delegate_variable_by_name


End B0xProxy.find_delegatecall_in_asm (Slither line:1637)


End B0xProxy.is_proxy (Slither line:1476)


Begin B0xProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: B0xProxy 
B0xProxy is delegating to targets
Looking for setter (Slither line:1200)

Looking for setter in Proxiable (Slither line:1204)


Begin Proxiable.find_setter_in_contract (Slither line:3109)

Checking function: initialize(address) returns() (Slither line:3117)
Checking function: _replaceContract(address) returns() (Slither line:3117)
Visibility: internal

End Proxiable.find_setter_in_contract (Slither line:3315)


Could not find setter in Proxiable 
Looking in B0xProxy (Slither line:1213)

Begin B0xProxy.find_setter_in_contract (Slither line:3109)

Checking function: initialize(address) returns() (Slither line:3117)
Checking function: fallback() returns() (Slither line:3117)
Checking function: replaceContract(address) returns() (Slither line:3117)
Visibility: public
onlyOwner()
require(bool)(_target.delegatecall(bytes4(keccak256()(initialize(address))),_target))
require(bool)(msg.sender == owner)
_replaceContract(_target)
Checking function: setTarget(string,address) returns(bytes4) (Slither line:3117)
Visibility: public
onlyOwner()
targets[f] = _target
is an Assignment Operation (Slither line:3206)
Left side is an IndexAccess (Slither line:3235)

End B0xProxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: setTarget in contract: B0xProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin Proxiable.find_getter_in_contract (Slither line:2964)

targets is a Variable object
_target
Checking function: _replaceContract (Slither line:2978)

End Proxiable.find_getter_in_contract (Slither line:3073)


Begin B0xProxy.find_getter_in_contract (Slither line:2964)

targets is a Variable object
_target
Checking function: _replaceContract (Slither line:2978)
Checking function: voidOrRevert (Slither line:2978)
Checking function: intOrRevert (Slither line:2978)
intOrRevert returns uint256 variable  (Slither line:2998)
RETURN node expression: retVal (Slither line:3018)
Checking function: boolOrRevert (Slither line:2978)
boolOrRevert returns bool variable  (Slither line:2998)
RETURN node expression: retVal (Slither line:3018)
Checking function: constructor (Slither line:2978)
Checking function: renounceOwnership (Slither line:2978)
Checking function: transferOwnership (Slither line:2978)
Checking function: _transferOwnership (Slither line:2978)
Checking function: buildLoanOrderStruct (Slither line:2978)
buildLoanOrderStruct returns B0xObjects.LoanOrder variable  (Slither line:2998)
RETURN node expression: LoanOrder(addrs[0],addrs[1],addrs[2],addrs[3],addrs[4],addrs[5],uints[0],uints[1],uints[2],uints[3],uints[4],uints[5],uints[6],loanOrderHash) (Slither line:3018)
Checking function: initialize (Slither line:2978)
Checking function: fallback (Slither line:2978)
Checking function: replaceContract (Slither line:2978)
Checking function: setTarget (Slither line:2978)
setTarget returns bytes4 variable  (Slither line:2998)
RETURN node expression: f (Slither line:3018)
Checking function: setB0xAddresses (Slither line:2978)
Checking function: setDebugMode (Slither line:2978)
Checking function: setB0xToken (Slither line:2978)
Checking function: setVault (Slither line:2978)
Checking function: setOracleRegistry (Slither line:2978)
Checking function: set0xExchangeWrapper (Slither line:2978)
Checking function: getTarget (Slither line:2978)
getTarget returns address variable  (Slither line:2998)
RETURN node expression: targets[bytes4(keccak256()(abi.encodePacked(_funcId)))] (Slither line:3018)

End B0xProxy.find_getter_in_contract (Slither line:3073)


Implementation retrieved by function: getTarget in contract: B0xProxy (Slither line:1285)

End B0xProxy.is_upgradeable_proxy (Slither line:1293)

impl_address_from_contract_call: _target
impl_address_from_contract_call: StateVariable targets
impl_address_from_contract_call: getter is getTarget
getter.full_name = getTarget(string)
Checking public function initialize
Checking public function renounceOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function transferOwnership
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function initialize
Checking public function replaceContract
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function setTarget
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function setB0xAddresses
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function setDebugMode
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function setB0xToken
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function setVault
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function setOracleRegistry
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function set0xExchangeWrapper
Found 'msg.sender ==' in expression: require(bool)(msg.sender == owner)
Checking public function getTarget
Checking public function fallback
functions_writing_to_variable: targets
functions_writing_to_variable: checking function B0xProxy._replaceContract (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.set0xExchangeWrapper (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.replaceContract (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.buildLoanOrderStruct (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.getTarget (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.setTarget (proxy_features line:893)
functions_writing_to_variable: exp = f = bytes4(keccak256()(abi.encodePacked(_funcId))) (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: f = bytes4(keccak256()(abi.encodePacked(_funcId))) (proxy_features line:907)
functions_writing_to_variable: exp = targets[f] = _target (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: targets[f] = _target (proxy_features line:907)
functions_writing_to_variable: IndexAccess: targets[f] (proxy_features line:915)
functions_writing_to_variable: Identifier: targets (proxy_features line:919)
get_value_assigned: targets[f] = _target
functions_writing_to_variable: exp = f (proxy_features line:904)
functions_writing_to_variable: exp = onlyOwner() (proxy_features line:904)
functions_writing_to_variable: exp = require(bool)(msg.sender == owner) (proxy_features line:904)
functions_writing_to_variable: setTarget writes _target to targets (proxy_features line:924)
functions_writing_to_variable: checking function B0xProxy.voidOrRevert (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.setB0xAddresses (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.intOrRevert (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.setDebugMode (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.renounceOwnership (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.setB0xToken (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.transferOwnership (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.boolOrRevert (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.initialize (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.setVault (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.initialize (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy._transferOwnership (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.slitherConstructorVariables (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function B0xProxy.setOracleRegistry (proxy_features line:893)
has_compatibility_checks: dependencies: ['_target']
has_compatibility_checks: checking public function setTarget
require(bool)(msg.sender == owner)
has_compatibility_checks: condition msg.sender == owner
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    let result := delegatecall(gas(), target, add(data, 0x20), mload(data), 0, 0)
    let size := returndatasize()
    let ptr := mload(0x40)
    returndatacopy(ptr, 0, size)
    switch result
    case 0 {
        revert(ptr, size)
    }
    default {
        return(ptr, size)
    }
}
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: data = msg.data
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: target = targets[msg.sig]
Found public function: initialize
has_time_delay: (node.type) EXPRESSION
(Expression) onlyOwner()
has_time_delay: (node.type) NEW VARIABLE
(Expression) f = bytes4(keccak256()(abi.encodePacked(_funcId)))
has_time_delay: (node.type) EXPRESSION
(Expression) targets[f] = _target
has_time_delay: (node.type) RETURN
(Expression) f
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool)(msg.sender == owner)
