{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.24/ec./ethereum/contracts/ropsten/ec/EC2f4f9fF1F4C46A0bd6d0e7A1d1cAfC44f3950D_Passport.sol/EC2f4f9fF1F4C46A0bd6d0e7A1d1cAfC44f3950D_Passport.sol#238-278)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.24/ec./ethereum/contracts/ropsten/ec/EC2f4f9fF1F4C46A0bd6d0e7A1d1cAfC44f3950D_Passport.sol/EC2f4f9fF1F4C46A0bd6d0e7A1d1cAfC44f3950D_Passport.sol#238-278) is a proxy, but doesn't seem upgradeable.\n",
        "id": "cb70bcec6d81585d7521ef499de1dc4cc025c9eb09a62b94cfe4ec81796afff6",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "Passport (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.24/ec./ethereum/contracts/ropsten/ec/EC2f4f9fF1F4C46A0bd6d0e7A1d1cAfC44f3950D_Passport.sol/EC2f4f9fF1F4C46A0bd6d0e7A1d1cAfC44f3950D_Passport.sol#285-354)",
        "elements": [],
        "description": "Passport (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.24/ec./ethereum/contracts/ropsten/ec/EC2f4f9fF1F4C46A0bd6d0e7A1d1cAfC44f3950D_Passport.sol/EC2f4f9fF1F4C46A0bd6d0e7A1d1cAfC44f3950D_Passport.sol#285-354) may be an upgradeable proxy.\nimplementation is declared in the proxy.\nProxy._delegate(address).implementation (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.24/ec./ethereum/contracts/ropsten/ec/EC2f4f9fF1F4C46A0bd6d0e7A1d1cAfC44f3950D_Passport.sol/EC2f4f9fF1F4C46A0bd6d0e7A1d1cAfC44f3950D_Passport.sol#258) gets value from a cross-contract call: _getRegistry().getCurrentPassportLogic()\nIPassportLogicRegistry appears to be a Beacon contract for the proxy\nThe address of IPassportLogicRegistry is loaded from storage slot REGISTRY_SLOT = 0xa04bab69e45aeb4c94a78ba5bc1be67ef28977c4fdf815a30b829a794eb67a4a\nNo setter functions found to search for compatibility checks.\n",
        "id": "59120cbba471391ad60bcd1e76d8489d42aedc8538e85921c519a0b4535e30de",
        "features": {
          "upgradeable": "maybe",
          "impl_address_variable": "Proxy._delegate(address).implementation",
          "impl_address_setter": "not found",
          "impl_address_getter": "not found",
          "impl_address_location": "Passport (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.4.24/ec./ethereum/contracts/ropsten/ec/EC2f4f9fF1F4C46A0bd6d0e7A1d1cAfC44f3950D_Passport.sol/EC2f4f9fF1F4C46A0bd6d0e7A1d1cAfC44f3950D_Passport.sol#285-354)",
          "impl_address_scope": "LocalVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "_getRegistry().getCurrentPassportLogic()",
          "beacon": "IPassportLogicRegistry",
          "beacon_source_type": "bytes32 constant storage slot",
          "beacon_source_slot": "0xa04bab69e45aeb4c94a78ba5bc1be67ef28977c4fdf815a30b829a794eb67a4a",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": "no setters found"
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "destroy()",
              "destroyAndSend(address)",
              "renounceOwnership()",
              "transferOwnership(address)",
              "owner()",
              "pendingOwner()",
              "transferOwnership(address)",
              "claimOwnership()",
              "changePassportLogicRegistry(IPassportLogicRegistry)",
              "getPassportLogicRegistry()"
            ]
          }
        }
      }
    ]
  }
}