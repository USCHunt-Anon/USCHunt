{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#569-628)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#569-628) is a proxy, but doesn't seem upgradeable.\n",
        "id": "cb70bcec6d81585d7521ef499de1dc4cc025c9eb09a62b94cfe4ec81796afff6",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "BaseUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#637-684)",
        "elements": [],
        "description": "BaseUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#637-684) is a proxy, but doesn't seem upgradeable.\n",
        "id": "c667fa13bf5e18ab61b823c0ad9b6e92fc3f1c87b349a854e6819be3f724d050",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "BaseAdminUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#695-802)",
        "elements": [],
        "description": "BaseAdminUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#695-802) is an upgradeable proxy.\nIMPLEMENTATION_SLOT was found in a different contract.\n uses Unstructured Storage\n implements EIP-1967\n uses Inherited Storage\n uses Transparent Proxy pattern\nFound compatibility checks in all upgrade functions.\n",
        "id": "9f9b68fd3c04c35944fc87bcf1eb86ee431e2c324447ef194fd08bad9883ad01",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "BaseUpgradeabilityProxy.IMPLEMENTATION_SLOT",
          "impl_address_setter": "BaseAdminUpgradeabilityProxy.upgradeTo(address)",
          "impl_address_getter": "BaseUpgradeabilityProxy._implementation()",
          "impl_address_location": "BaseUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#637-684)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "unstructured_storage": true,
          "eip_1967": true,
          "inherited_storage": true,
          "transparent": true,
          "external_functions_require_specific_sender": true,
          "fallback_receive_not_callable_by_specific_sender": true,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "BaseAdminUpgradeabilityProxy.upgradeTo(address)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "BaseAdminUpgradeabilityProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      },
      {
        "contract": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#810-827)",
        "elements": [],
        "description": "UpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#810-827) is an upgradeable proxy.\nIMPLEMENTATION_SLOT was found in a different contract.\n uses Unstructured Storage\n implements EIP-1822 using slot from ERC-1967 (i.e. OpenZeppelin UUPS)\n uses Inherited Storage\nFound compatibility checks in all upgrade functions.\nTo remove upgradeability, delete upgradeTo from BaseAdminUpgradeabilityProxy\n",
        "id": "0229f10b9c730d48139931b683b79ce6029ff6c5c28f006d0a771c01edeb92ae",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "BaseUpgradeabilityProxy.IMPLEMENTATION_SLOT",
          "impl_address_setter": "BaseAdminUpgradeabilityProxy.upgradeTo(address)",
          "impl_address_getter": "BaseUpgradeabilityProxy._implementation()",
          "impl_address_location": "BaseUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#637-684)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "unstructured_storage": true,
          "eip_1967": true,
          "eip_1822": true,
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "UpgradeabilityProxy.constructor(address,bytes)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "BaseAdminUpgradeabilityProxy.upgradeTo(address)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "BaseAdminUpgradeabilityProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove upgradeTo from BaseAdminUpgradeabilityProxy"
        }
      },
      {
        "contract": "AdminUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#835-849)",
        "elements": [],
        "description": "AdminUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#835-849) is an upgradeable proxy.\nIMPLEMENTATION_SLOT was found in a different contract.\n uses Unstructured Storage\n implements EIP-1967\n uses Inherited Storage\n uses Transparent Proxy pattern\nFound compatibility checks in all upgrade functions.\n",
        "id": "303acb988d8296ab435d858d13acd72dd750914dbd7e7aed271b2eecb4a14df7",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "BaseUpgradeabilityProxy.IMPLEMENTATION_SLOT",
          "impl_address_setter": "BaseAdminUpgradeabilityProxy.upgradeTo(address)",
          "impl_address_getter": "BaseUpgradeabilityProxy._implementation()",
          "impl_address_location": "BaseUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#637-684)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "unstructured_storage": true,
          "eip_1967": true,
          "inherited_storage": true,
          "transparent": true,
          "external_functions_require_specific_sender": true,
          "fallback_receive_not_callable_by_specific_sender": true,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "BaseAdminUpgradeabilityProxy.upgradeTo(address)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "AdminUpgradeabilityProxy.constructor(address,address,bytes)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "BaseAdminUpgradeabilityProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "UpgradeabilityProxy.constructor(address,bytes)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)"
            ]
          }
        }
      },
      {
        "contract": "InitializableUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#857-875)",
        "elements": [],
        "description": "InitializableUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#857-875) is an upgradeable proxy.\nIMPLEMENTATION_SLOT was found in a different contract.\n uses Unstructured Storage\n uses Inherited Storage\nFound compatibility checks in all upgrade functions.\nTo remove upgradeability, delete upgradeTo from BaseAdminUpgradeabilityProxy\n",
        "id": "21730d8e7cac4d9a0d364df4cca8862a67289d1701aec5321fa2a577931e97d2",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "BaseUpgradeabilityProxy.IMPLEMENTATION_SLOT",
          "impl_address_setter": "BaseAdminUpgradeabilityProxy.upgradeTo(address)",
          "impl_address_getter": "BaseUpgradeabilityProxy._implementation()",
          "impl_address_location": "BaseUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#637-684)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "unstructured_storage": true,
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "BaseAdminUpgradeabilityProxy.upgradeTo(address)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "InitializableUpgradeabilityProxy.initialize(address,bytes)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "BaseAdminUpgradeabilityProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove upgradeTo from BaseAdminUpgradeabilityProxy",
          "immutable_functions": {
            "other": [
              "initialize(address,bytes)"
            ]
          }
        }
      },
      {
        "contract": "InitializableAdminUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#883-899)",
        "elements": [],
        "description": "InitializableAdminUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#883-899) is an upgradeable proxy.\nIMPLEMENTATION_SLOT was found in a different contract.\n uses Unstructured Storage\n implements EIP-1967\n uses Inherited Storage\nFound compatibility checks in all upgrade functions.\n",
        "id": "c371783c87ec6b43b370f9bdf85498ec028dcfc376e734e37f7fb3028c46c4e3",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "BaseUpgradeabilityProxy.IMPLEMENTATION_SLOT",
          "impl_address_setter": "BaseAdminUpgradeabilityProxy.upgradeTo(address)",
          "impl_address_getter": "BaseUpgradeabilityProxy._implementation()",
          "impl_address_location": "BaseUpgradeabilityProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#637-684)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "bytes32 constant storage slot",
          "impl_address_slot": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
          "unstructured_storage": true,
          "eip_1967": true,
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "BaseAdminUpgradeabilityProxy.upgradeTo(address)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "InitializableAdminUpgradeabilityProxy.initialize(address,address,bytes)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "BaseAdminUpgradeabilityProxy.upgradeToAndCall(address,bytes)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              },
              "InitializableUpgradeabilityProxy.initialize(address,bytes)": {
                "check": "require(bool,string)(size > 0,Cannot set a proxy implementation to a non-contract address)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "initialize(address,bytes)",
              "admin()",
              "implementation()",
              "changeAdmin(address)",
              "upgradeTo(address)",
              "upgradeToAndCall(address,bytes)",
              "initialize(address,address,bytes)"
            ]
          }
        }
      },
      {
        "contract": "ProductProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#913-959)",
        "elements": [],
        "description": "ProductProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#913-959) is an upgradeable proxy.\nproductImplementation was found in a different contract.\nproductImplementation is an address state variable.\nAiSwapFactory.productImplementation (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#1089) gets value from a cross-contract call: IProxyFactory(factory).productImplementation()\nAiSwapFactory appears to be a Beacon contract for the proxy\nMissing compatibility check in AiSwapFactory.initialize(address,address)\nMissing compatibility check in AiSwapFactory.setProductImplementation(address)\nTo remove upgradeability, delete setProductImplementation from AiSwapFactory\n",
        "id": "4b0ddaa2d1320d3fc823b84ef0427d47a88d42edd1ecae465285e1cfa0d178fc",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "AiSwapFactory.productImplementation",
          "impl_address_setter": "AiSwapFactory.setProductImplementation(address)",
          "impl_address_getter": "not found",
          "impl_address_location": "AiSwapFactory (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#1084-1212)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "IProxyFactory(factory).productImplementation()",
          "beacon": "AiSwapFactory",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "AiSwapFactory.initialize(address,address)": "missing",
              "AiSwapFactory.setProductImplementation(address)": "missing"
            }
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove setProductImplementation from AiSwapFactory"
        }
      },
      {
        "contract": "InitializableProductProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#967-985)",
        "elements": [],
        "description": "InitializableProductProxy (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#967-985) is an upgradeable proxy.\nproductImplementation was found in a different contract.\nproductImplementation is an address state variable.\nAiSwapFactory.productImplementation (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#1089) gets value from a cross-contract call: IProxyFactory(factory).productImplementation()\nAiSwapFactory appears to be a Beacon contract for the proxy\nMissing compatibility check in AiSwapFactory.initialize(address,address)\nMissing compatibility check in AiSwapFactory.setProductImplementation(address)\nTo remove upgradeability, delete setProductImplementation from AiSwapFactory\n",
        "id": "d7548746530dbdd6b0ac5cc265ebd1ffb905e07e4fc70163de70c600e80d9e19",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "AiSwapFactory.productImplementation",
          "impl_address_setter": "AiSwapFactory.setProductImplementation(address)",
          "impl_address_getter": "not found",
          "impl_address_location": "AiSwapFactory (../../smart-contract-sanctuary/ethereum/contracts/ropsten/sorted/0.5.16/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol/cb4efa3773e30313b54f776a55ab82227a63a203_AiSwapFactory.sol#1084-1212)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "impl_address_from_contract_call": "IProxyFactory(factory).productImplementation()",
          "beacon": "AiSwapFactory",
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": false,
            "functions": {
              "AiSwapFactory.initialize(address,address)": "missing",
              "AiSwapFactory.setProductImplementation(address)": "missing"
            }
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove setProductImplementation from AiSwapFactory",
          "immutable_functions": {
            "other": [
              "initialize(address,bytes)"
            ]
          }
        }
      }
    ]
  }
}