
Begin Initializable.is_proxy (Slither line:1425)


End Initializable.is_proxy (Slither line:1428)


Begin Initializable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Initializable 

End Initializable.is_upgradeable_proxy (Slither line:1407)


Begin Governable.is_proxy (Slither line:1425)


End Governable.is_proxy (Slither line:1428)


Begin Governable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Governable 

End Governable.is_upgradeable_proxy (Slither line:1407)


Begin Configurable.is_proxy (Slither line:1425)


End Configurable.is_proxy (Slither line:1428)


Begin Configurable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Configurable 

End Configurable.is_upgradeable_proxy (Slither line:1407)


Begin IUniswapV2Factory.is_proxy (Slither line:1425)


End IUniswapV2Factory.is_proxy (Slither line:1428)


Begin IUniswapV2Factory.is_upgradeable_proxy (Slither line:1136)

Checking contract: IUniswapV2Factory 

End IUniswapV2Factory.is_upgradeable_proxy (Slither line:1407)


Begin IUniswapV2Pair.is_proxy (Slither line:1425)


End IUniswapV2Pair.is_proxy (Slither line:1428)


Begin IUniswapV2Pair.is_upgradeable_proxy (Slither line:1136)

Checking contract: IUniswapV2Pair 

End IUniswapV2Pair.is_upgradeable_proxy (Slither line:1407)


Begin IUniswapV2ERC20.is_proxy (Slither line:1425)


End IUniswapV2ERC20.is_proxy (Slither line:1428)


Begin IUniswapV2ERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IUniswapV2ERC20 

End IUniswapV2ERC20.is_upgradeable_proxy (Slither line:1407)


Begin IERC20.is_proxy (Slither line:1425)


End IERC20.is_proxy (Slither line:1428)


Begin IERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20 

End IERC20.is_upgradeable_proxy (Slither line:1407)


Begin IUniswapV2Callee.is_proxy (Slither line:1425)


End IUniswapV2Callee.is_proxy (Slither line:1428)


Begin IUniswapV2Callee.is_upgradeable_proxy (Slither line:1136)

Checking contract: IUniswapV2Callee 

End IUniswapV2Callee.is_upgradeable_proxy (Slither line:1407)


Begin UniswapV2ERC20.is_proxy (Slither line:1425)


End UniswapV2ERC20.is_proxy (Slither line:1428)


Begin UniswapV2ERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: UniswapV2ERC20 

End UniswapV2ERC20.is_upgradeable_proxy (Slither line:1407)


Begin AiSwapPair.is_proxy (Slither line:1425)


End AiSwapPair.is_proxy (Slither line:1428)


Begin AiSwapPair.is_upgradeable_proxy (Slither line:1136)

Checking contract: AiSwapPair 

End AiSwapPair.is_upgradeable_proxy (Slither line:1407)


Begin Proxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2792)
Expression called: _fallback
Type of call: tuple() (Slither line:2807)
Args:

End Proxy.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin Proxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in Proxy._delegate (Slither line:1805)
CallExpression: _fallback() (Slither line:1819)
CallExpression: _willFallback() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin Proxy.find_delegate_from_call_exp

_implementation() (Slither line:1993)
called = _implementation (Slither line:2000)
Got abstract function, looking for overriding function (Slither line:2015)
Failure (Slither line:2023)
_implementation returns a variable of type address   (Slither line:2183)
Return value is LocalVariable:  (Slither line:2256)
has no expression (Slither line:2316)

End Proxy.find_delegate_from_call_exp (Slither line:2318)

_delegate contains assembly, searching for sload (Slither line:1875)

End Proxy.find_delegate_variable_from_name (Slither line:1939)


Begin Proxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2673)


End Proxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2700)


End Proxy.find_delegatecall_in_asm (Slither line:1637)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: _willFallback() (Slither line:2792)
Expression called: _willFallback
Type of call: tuple() (Slither line:2807)
Args:

End Proxy.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)

{ size := extcodesize(account) } (Slither line:1576)

End Proxy.find_delegatecall_in_asm (Slither line:1637)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)

{ size := extcodesize(account) } (Slither line:1576)

End Proxy.find_delegatecall_in_asm (Slither line:1637)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2792)
Expression called: _delegate
Type of call: tuple() (Slither line:2807)
Args:
_implementation()

End Proxy.find_delegatecall_in_exp_node (Slither line:2848)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 

End Proxy.is_upgradeable_proxy (Slither line:1407)


Begin BaseUpgradeabilityProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin BaseUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _willFallback() (Slither line:2792)
Expression called: _willFallback
Type of call: tuple() (Slither line:2807)
Args:

End BaseUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin BaseUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2792)
Expression called: _delegate
Type of call: tuple() (Slither line:2807)
Args:
_implementation()

End BaseUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin BaseUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ size := extcodesize(account) } (Slither line:1576)

End BaseUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)


Begin BaseUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ size := extcodesize(account) } (Slither line:1576)

End BaseUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin BaseUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ impl := sload(slot) } (Slither line:1576)

End BaseUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)


Begin BaseUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ impl := sload(slot) } (Slither line:1576)

End BaseUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin BaseUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2792)
Expression called: _fallback
Type of call: tuple() (Slither line:2807)
Args:

End BaseUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin BaseUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin BaseUpgradeabilityProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in BaseUpgradeabilityProxy._delegate (Slither line:1805)
CallExpression: _willFallback() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin BaseUpgradeabilityProxy.find_delegate_from_call_exp

_implementation() (Slither line:1993)
called = _implementation (Slither line:2000)
_implementation returns a variable of type address   called impl (Slither line:2183)
_implementation contains assembly - looking for sload (Slither line:2189)
Looking in ASSEMBLY node (Slither line:2196)
{ impl := sload(slot) }  (Slither line:2200)
Return value set by sload in asm (Slither line:2202)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2222)

End BaseUpgradeabilityProxy.find_delegate_from_call_exp (Slither line:2318)

AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
CallExpression: _fallback() (Slither line:1819)
_delegate contains assembly, searching for sload (Slither line:1875)

End BaseUpgradeabilityProxy.find_delegate_variable_from_name (Slither line:1939)


Begin BaseUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2673)


End BaseUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2700)


End BaseUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

Setting BaseUpgradeabilityProxy._delegate_variable = BaseUpgradeabilityProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End BaseUpgradeabilityProxy.is_proxy (Slither line:1476)


Begin BaseUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: BaseUpgradeabilityProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

BaseUpgradeabilityProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)


Begin BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3109)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3112)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3117)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3117)
Visibility: internal
Checking function: fallback() returns() (Slither line:3117)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3117)
Checking function: _fallback() returns() (Slither line:3117)

End BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3315)


Could not find implementation setter in BaseUpgradeabilityProxy (Slither line:1269)
Looking for getter (Slither line:1273)


Begin BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:2964)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: fallback (Slither line:2978)
Checking function: _delegate (Slither line:2978)
Checking function: _willFallback (Slither line:2978)
Checking function: _fallback (Slither line:2978)
Checking function: _implementation (Slither line:2978)
_implementation returns address variable called impl (Slither line:2998)
_implementation contains assembly (Slither line:3041)
_implementation contains assembly (Slither line:3041)

End BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:3073)


Implementation retrieved by function: _implementation in contract: BaseUpgradeabilityProxy (Slither line:1285)

Begin BaseUpgradeabilityProxy.getter_return_is_non_constant (Slither line:2873)

Found getter function but not setter
Checking if getter calls any other function
ENTRY_POINT: None (Slither line:2878)
INLINE ASM: None (Slither line:2878)
NEW VARIABLE: slot = IMPLEMENTATION_SLOT (Slither line:2878)

End BaseUpgradeabilityProxy.getter_return_is_non_constant (Slither line:2932)


End BaseUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1293)


Begin BaseAdminUpgradeabilityProxy.is_proxy (Slither line:1425)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin BaseAdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _willFallback() (Slither line:2792)
Expression called: _willFallback
Type of call: tuple() (Slither line:2807)
Args:

End BaseAdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin BaseAdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2792)
Expression called: _delegate
Type of call: tuple() (Slither line:2807)
Args:
_implementation()

End BaseAdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin BaseAdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2792)
Expression called: _fallback
Type of call: tuple() (Slither line:2807)
Args:

End BaseAdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin BaseAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ impl := sload(slot) } (Slither line:1576)

End BaseAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)


Begin BaseAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ impl := sload(slot) } (Slither line:1576)

End BaseAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin BaseAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin BaseAdminUpgradeabilityProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_SLOT (Slither line:1689)
Checking ADMIN_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in BaseAdminUpgradeabilityProxy._delegate (Slither line:1805)
CallExpression: _willFallback() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin BaseAdminUpgradeabilityProxy.find_delegate_from_call_exp

_implementation() (Slither line:1993)
called = _implementation (Slither line:2000)
_implementation returns a variable of type address   called impl (Slither line:2183)
_implementation contains assembly - looking for sload (Slither line:2189)
Looking in ASSEMBLY node (Slither line:2196)
{ impl := sload(slot) }  (Slither line:2200)
Return value set by sload in asm (Slither line:2202)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2222)

End BaseAdminUpgradeabilityProxy.find_delegate_from_call_exp (Slither line:2318)

CallExpression: _fallback() (Slither line:1819)
AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
CallExpression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:1819)
CallExpression: super._willFallback() (Slither line:1819)
AssignmentOperation: ADMIN_SLOT (Slither line:1811)
_delegate contains assembly, searching for sload (Slither line:1875)

End BaseAdminUpgradeabilityProxy.find_delegate_variable_from_name (Slither line:1939)


Begin BaseAdminUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2673)


End BaseAdminUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2700)


End BaseAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

Setting BaseAdminUpgradeabilityProxy._delegate_variable = BaseAdminUpgradeabilityProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End BaseAdminUpgradeabilityProxy.is_proxy (Slither line:1476)


Begin BaseAdminUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: BaseAdminUpgradeabilityProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

BaseAdminUpgradeabilityProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)

Looking for setter in BaseUpgradeabilityProxy (Slither line:1204)


Begin BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3109)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3112)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3117)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3117)
Visibility: internal
Checking function: fallback() returns() (Slither line:3117)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3117)
Checking function: _fallback() returns() (Slither line:3117)

End BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3315)


Could not find setter in BaseUpgradeabilityProxy 
Looking in BaseAdminUpgradeabilityProxy (Slither line:1213)

Begin BaseAdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3109)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3112)
Checking function: admin() returns(address) (Slither line:3117)
Visibility: external
_willFallback()
_delegate(_implementation())
_fallback()
_admin()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
ifAdmin()
size > 0
None
Checking function: implementation() returns(address) (Slither line:3117)
Visibility: external
_willFallback()
_delegate(_implementation())
_implementation()
ifAdmin()
_fallback()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
size > 0
None
Checking function: changeAdmin(address) returns() (Slither line:3117)
Visibility: external
_willFallback()
_delegate(_implementation())
{ sstore(slot, newAdmin) } (Slither line:3153)
changeAdmin reads and/or writes to variable slot (Slither line:3160)
changeAdmin reads and/or writes to variable ADMIN_SLOT (Slither line:3160)
_fallback()
require(bool,string)(newAdmin != address(0),Cannot change the admin of a proxy to the zero address)
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
AdminChanged(_admin(),newAdmin)
super._willFallback()
_setAdmin(newAdmin)
ifAdmin()
size > 0
None
Checking function: upgradeTo(address) returns() (Slither line:3117)
Visibility: external
ifAdmin()
_willFallback()
_delegate(_implementation())
_fallback()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
    sstore(slot, newImplementation) (Slither line:3153)
upgradeTo reads and/or writes to variable slot (Slither line:3160)
upgradeTo reads and/or writes to variable IMPLEMENTATION_SLOT (Slither line:3160)
upgradeTo reads and/or writes to variable OpenZeppelinUpgradesAddress (Slither line:3160)
upgradeTo reads and/or writes to variable newImplementation (Slither line:3160)

End BaseAdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: upgradeTo in contract: BaseAdminUpgradeabilityProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:2964)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:3073)


Implementation retrieved by function: _implementation in contract: BaseUpgradeabilityProxy (Slither line:1285)

End BaseAdminUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: BaseAdminUpgradeabilityProxy
Setter found in contract BaseAdminUpgradeabilityProxy
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable IMPLEMENTATION_SLOT
impl_address_from_contract_call: getter is _implementation
getter.full_name = _implementation()
library call: OpenZeppelinUpgradesAddress.isContract
impl_address_from_contract_call: CallExpression _willFallback()
impl_address_from_contract_call: CallExpression _delegate(_implementation())
impl_address_from_contract_call: arg is _implementation()
impl_address_from_contract_call: CallExpression _implementation()
impl_address_from_contract_call: CallExpression _fallback()
impl_address_from_contract_call: CallExpression require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
impl_address_from_contract_call: arg is msg.sender != _admin()
impl_address_from_contract_call: arg is Cannot call fallback function from the proxy admin
impl_address_from_contract_call: CallExpression super._willFallback()
Checking external function fallback
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
Checking external function admin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function implementation
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function changeAdmin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _admin()
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._setAdmin (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.upgradeTo (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.upgradeToAndCall (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._setImplementation (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._upgradeTo (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.admin (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._admin (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.changeAdmin (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:907)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:919)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: exp = ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:907)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._fallback (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._willFallback (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._willFallback (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._delegate (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.implementation (proxy_features line:893)
has_compatibility_checks: dependencies: []
has_compatibility_checks: checking external function upgradeTo
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
has_compatibility_checks: IF node exp = OpenZeppelinUpgradesAddress.isContract(msg.sender) && msg.data.length == 0 && gasleft()() <= 2300
has_compatibility_checks: IF node exp = msg.sender == _admin()
has_compatibility_checks: checking external function upgradeToAndCall
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
has_compatibility_checks: IF node exp = OpenZeppelinUpgradesAddress.isContract(msg.sender) && msg.data.length == 0 && gasleft()() <= 2300
has_compatibility_checks: IF node exp = msg.sender == _admin()
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: skipping internal function _upgradeTo
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
Found fallback
Found external function: admin
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) EXPRESSION
(Expression) _willFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_time_delay: (node.type) EXPRESSION
(Expression) super._willFallback()
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = ADMIN_SLOT
has_time_delay: (node.type) IF
(Expression) OpenZeppelinUpgradesAddress.isContract(msg.sender) && msg.data.length == 0 && gasleft()() <= 2300
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) IF
(Expression) msg.sender == _admin()

Begin UpgradeabilityProxy.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin UpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _willFallback() (Slither line:2792)
Expression called: _willFallback
Type of call: tuple() (Slither line:2807)
Args:

End UpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin UpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2792)
Expression called: _delegate
Type of call: tuple() (Slither line:2807)
Args:
_implementation()

End UpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin UpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ size := extcodesize(account) } (Slither line:1576)

End UpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)


Begin UpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ size := extcodesize(account) } (Slither line:1576)

End UpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin UpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2792)
Expression called: _fallback
Type of call: tuple() (Slither line:2807)
Args:

End UpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin UpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin UpgradeabilityProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in UpgradeabilityProxy._delegate (Slither line:1805)
CallExpression: _willFallback() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin UpgradeabilityProxy.find_delegate_from_call_exp

_implementation() (Slither line:1993)
called = _implementation (Slither line:2000)
_implementation returns a variable of type address   called impl (Slither line:2183)
_implementation contains assembly - looking for sload (Slither line:2189)
Looking in ASSEMBLY node (Slither line:2196)
{ impl := sload(slot) }  (Slither line:2200)
Return value set by sload in asm (Slither line:2202)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2222)

End UpgradeabilityProxy.find_delegate_from_call_exp (Slither line:2318)

AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
CallExpression: _fallback() (Slither line:1819)
_delegate contains assembly, searching for sload (Slither line:1875)

End UpgradeabilityProxy.find_delegate_variable_from_name (Slither line:1939)


Begin UpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2673)


End UpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2700)


End UpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

Setting UpgradeabilityProxy._delegate_variable = UpgradeabilityProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End UpgradeabilityProxy.is_proxy (Slither line:1476)


Begin UpgradeabilityProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: UpgradeabilityProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

UpgradeabilityProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)

Looking for setter in BaseUpgradeabilityProxy (Slither line:1204)


Begin BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3109)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3112)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3117)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3117)
Visibility: internal
Checking function: fallback() returns() (Slither line:3117)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3117)
Checking function: _fallback() returns() (Slither line:3117)

End BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3315)


Could not find setter in BaseUpgradeabilityProxy 
Looking in UpgradeabilityProxy (Slither line:1213)

Begin UpgradeabilityProxy.find_setter_in_contract (Slither line:3109)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3112)
Checking function: constructor(address,bytes) returns() (Slither line:3117)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3117)
Visibility: internal
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3117)
Visibility: internal
Checking function: fallback() returns() (Slither line:3117)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3117)
Checking function: _fallback() returns() (Slither line:3117)

End UpgradeabilityProxy.find_setter_in_contract (Slither line:3315)


Could not find setter in UpgradeabilityProxy (Slither line:1220)
Looking for setter in BaseAdminUpgradeabilityProxy (Slither line:1228)


Begin BaseAdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3109)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3112)
Checking function: admin() returns(address) (Slither line:3117)
Visibility: external
_willFallback()
_delegate(_implementation())
_fallback()
_admin()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
ifAdmin()
size > 0
None
Checking function: implementation() returns(address) (Slither line:3117)
Visibility: external
_willFallback()
_delegate(_implementation())
_implementation()
ifAdmin()
_fallback()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
size > 0
None
Checking function: changeAdmin(address) returns() (Slither line:3117)
Visibility: external
_willFallback()
_delegate(_implementation())
{ sstore(slot, newAdmin) } (Slither line:3153)
changeAdmin reads and/or writes to variable slot (Slither line:3160)
changeAdmin reads and/or writes to variable ADMIN_SLOT (Slither line:3160)
_fallback()
require(bool,string)(newAdmin != address(0),Cannot change the admin of a proxy to the zero address)
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
AdminChanged(_admin(),newAdmin)
super._willFallback()
_setAdmin(newAdmin)
ifAdmin()
size > 0
None
Checking function: upgradeTo(address) returns() (Slither line:3117)
Visibility: external
ifAdmin()
_willFallback()
_delegate(_implementation())
_fallback()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
    sstore(slot, newImplementation) (Slither line:3153)
upgradeTo reads and/or writes to variable slot (Slither line:3160)
upgradeTo reads and/or writes to variable IMPLEMENTATION_SLOT (Slither line:3160)
upgradeTo reads and/or writes to variable OpenZeppelinUpgradesAddress (Slither line:3160)
upgradeTo reads and/or writes to variable newImplementation (Slither line:3160)

End BaseAdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: upgradeTo in contract: BaseAdminUpgradeabilityProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:2964)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:3073)


Implementation retrieved by function: _implementation in contract: BaseUpgradeabilityProxy (Slither line:1285)

End UpgradeabilityProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: UpgradeabilityProxy
Setter found in contract BaseAdminUpgradeabilityProxy
Found fallback
Found public function: constructor
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable IMPLEMENTATION_SLOT
impl_address_from_contract_call: getter is _implementation
getter.full_name = _implementation()
library call: OpenZeppelinUpgradesAddress.isContract
impl_address_from_contract_call: CallExpression _willFallback()
impl_address_from_contract_call: CallExpression _delegate(_implementation())
impl_address_from_contract_call: arg is _implementation()
impl_address_from_contract_call: CallExpression _implementation()
impl_address_from_contract_call: CallExpression _fallback()
Checking external function fallback
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function UpgradeabilityProxy.constructor (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: constructor writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.changeAdmin (proxy_features line:893)
functions_writing_to_variable: checking function UpgradeabilityProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.upgradeTo (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function UpgradeabilityProxy._delegate (proxy_features line:893)
functions_writing_to_variable: checking function UpgradeabilityProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._delegate (proxy_features line:893)
functions_writing_to_variable: checking function UpgradeabilityProxy._upgradeTo (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.upgradeToAndCall (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function UpgradeabilityProxy._willFallback (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._upgradeTo (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._admin (proxy_features line:893)
functions_writing_to_variable: checking function UpgradeabilityProxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:907)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:919)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:907)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:919)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: exp = ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:907)
functions_writing_to_variable: checking function UpgradeabilityProxy._setImplementation (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._willFallback (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._setAdmin (proxy_features line:893)
functions_writing_to_variable: checking function UpgradeabilityProxy._fallback (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._setImplementation (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.admin (proxy_features line:893)
functions_writing_to_variable: checking function UpgradeabilityProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._fallback (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._willFallback (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.implementation (proxy_features line:893)
has_compatibility_checks: dependencies: []
has_compatibility_checks: checking public function constructor
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
has_compatibility_checks: IF node exp = _data.length > 0
has_compatibility_checks: checking external function upgradeTo
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
has_compatibility_checks: IF node exp = OpenZeppelinUpgradesAddress.isContract(msg.sender) && msg.data.length == 0 && gasleft()() <= 2300
has_compatibility_checks: IF node exp = msg.sender == _admin()
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: checking external function upgradeToAndCall
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
has_compatibility_checks: IF node exp = OpenZeppelinUpgradesAddress.isContract(msg.sender) && msg.data.length == 0 && gasleft()() <= 2300
has_compatibility_checks: IF node exp = msg.sender == _admin()
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: skipping internal function _setImplementation
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) EXPRESSION
(Expression) _willFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_time_delay: (node.type) EXPRESSION
(Expression) super._willFallback()
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = ADMIN_SLOT
has_time_delay: (node.type) IF
(Expression) OpenZeppelinUpgradesAddress.isContract(msg.sender) && msg.data.length == 0 && gasleft()() <= 2300
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) IF
(Expression) msg.sender == _admin()

Begin AdminUpgradeabilityProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin AdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _willFallback() (Slither line:2792)
Expression called: _willFallback
Type of call: tuple() (Slither line:2807)
Args:

End AdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin AdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2792)
Expression called: _delegate
Type of call: tuple() (Slither line:2807)
Args:
_implementation()

End AdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin AdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2792)
Expression called: _fallback
Type of call: tuple() (Slither line:2807)
Args:

End AdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin AdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:2792)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2807)
Args:
msg.sender != _admin()
Cannot call fallback function from the proxy admin

End AdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin AdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: super._willFallback() (Slither line:2792)
Expression called: super._willFallback
Type of call: tuple() (Slither line:2807)
Args:

End AdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin AdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ adm := sload(slot) } (Slither line:1576)

End AdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)


Begin AdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ adm := sload(slot) } (Slither line:1576)

End AdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin AdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin AdminUpgradeabilityProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_SLOT (Slither line:1689)
Checking ADMIN_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in AdminUpgradeabilityProxy._delegate (Slither line:1805)
CallExpression: _willFallback() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin AdminUpgradeabilityProxy.find_delegate_from_call_exp

_implementation() (Slither line:1993)
called = _implementation (Slither line:2000)
_implementation returns a variable of type address   called impl (Slither line:2183)
_implementation contains assembly - looking for sload (Slither line:2189)
Looking in ASSEMBLY node (Slither line:2196)
{ impl := sload(slot) }  (Slither line:2200)
Return value set by sload in asm (Slither line:2202)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2222)

End AdminUpgradeabilityProxy.find_delegate_from_call_exp (Slither line:2318)

CallExpression: _fallback() (Slither line:1819)
CallExpression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:1819)
CallExpression: super._willFallback() (Slither line:1819)
AssignmentOperation: ADMIN_SLOT (Slither line:1811)
AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
_delegate contains assembly, searching for sload (Slither line:1875)

End AdminUpgradeabilityProxy.find_delegate_variable_from_name (Slither line:1939)


Begin AdminUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2673)


End AdminUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2700)


End AdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

Setting AdminUpgradeabilityProxy._delegate_variable = AdminUpgradeabilityProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End AdminUpgradeabilityProxy.is_proxy (Slither line:1476)


Begin AdminUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: AdminUpgradeabilityProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

AdminUpgradeabilityProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)

Looking for setter in BaseUpgradeabilityProxy (Slither line:1204)


Begin BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3109)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3112)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3117)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3117)
Visibility: internal
Checking function: fallback() returns() (Slither line:3117)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3117)
Checking function: _fallback() returns() (Slither line:3117)

End BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3315)


Could not find setter in BaseUpgradeabilityProxy 
Looking in AdminUpgradeabilityProxy (Slither line:1213)

Begin AdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3109)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3112)
Checking function: constructor(address,address,bytes) returns() (Slither line:3117)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3117)
Visibility: internal
Checking function: constructor(address,bytes) returns() (Slither line:3117)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3117)
Visibility: internal
Checking function: fallback() returns() (Slither line:3117)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3117)
Checking function: _fallback() returns() (Slither line:3117)
Checking function: admin() returns(address) (Slither line:3117)
Visibility: external
_willFallback()
_delegate(_implementation())
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
_fallback()
_admin()
super._willFallback()
ifAdmin()
size > 0
None
Checking function: implementation() returns(address) (Slither line:3117)
Visibility: external
_willFallback()
_delegate(_implementation())
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
_fallback()
super._willFallback()
_implementation()
ifAdmin()
size > 0
None
Checking function: changeAdmin(address) returns() (Slither line:3117)
Visibility: external
_willFallback()
_delegate(_implementation())
require(bool,string)(newAdmin != address(0),Cannot change the admin of a proxy to the zero address)
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
_fallback()
AdminChanged(_admin(),newAdmin)
super._willFallback()
_setAdmin(newAdmin)
ifAdmin()
size > 0
None
{ sstore(slot, newAdmin) } (Slither line:3153)
changeAdmin reads and/or writes to variable slot (Slither line:3160)
changeAdmin reads and/or writes to variable ADMIN_SLOT (Slither line:3160)
Checking function: upgradeTo(address) returns() (Slither line:3117)
Visibility: external
_willFallback()
_delegate(_implementation())
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
_fallback()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
super._willFallback()
    sstore(slot, newImplementation) (Slither line:3153)
upgradeTo reads and/or writes to variable slot (Slither line:3160)
upgradeTo reads and/or writes to variable IMPLEMENTATION_SLOT (Slither line:3160)
upgradeTo reads and/or writes to variable OpenZeppelinUpgradesAddress (Slither line:3160)
upgradeTo reads and/or writes to variable newImplementation (Slither line:3160)

End AdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: upgradeTo in contract: AdminUpgradeabilityProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:2964)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:3073)


Implementation retrieved by function: _implementation in contract: BaseUpgradeabilityProxy (Slither line:1285)

End AdminUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: AdminUpgradeabilityProxy
Setter found in contract AdminUpgradeabilityProxy
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable IMPLEMENTATION_SLOT
impl_address_from_contract_call: getter is _implementation
getter.full_name = _implementation()
library call: OpenZeppelinUpgradesAddress.isContract
impl_address_from_contract_call: CallExpression _willFallback()
impl_address_from_contract_call: CallExpression _delegate(_implementation())
impl_address_from_contract_call: arg is _implementation()
impl_address_from_contract_call: CallExpression _implementation()
impl_address_from_contract_call: CallExpression _fallback()
impl_address_from_contract_call: CallExpression require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
impl_address_from_contract_call: arg is msg.sender != _admin()
impl_address_from_contract_call: arg is Cannot call fallback function from the proxy admin
impl_address_from_contract_call: CallExpression super._willFallback()
Checking external function fallback
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
Checking external function admin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function implementation
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function changeAdmin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _admin()
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function AdminUpgradeabilityProxy._setAdmin (proxy_features line:893)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy._upgradeTo (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy._willFallback (proxy_features line:893)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy.upgradeTo (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy.constructor (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: constructor writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy._willFallback (proxy_features line:893)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy._setImplementation (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy._fallback (proxy_features line:893)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy.upgradeToAndCall (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy.constructor (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: constructor writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy.admin (proxy_features line:893)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:907)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:919)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: exp = ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:907)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy.implementation (proxy_features line:893)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy._admin (proxy_features line:893)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy._delegate (proxy_features line:893)
functions_writing_to_variable: checking function AdminUpgradeabilityProxy.changeAdmin (proxy_features line:893)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: checking external function upgradeTo
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
has_compatibility_checks: IF node exp = OpenZeppelinUpgradesAddress.isContract(msg.sender) && msg.data.length == 0 && gasleft()() <= 2300
has_compatibility_checks: IF node exp = msg.sender == _admin()
has_compatibility_checks: checking public function constructor
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
has_compatibility_checks: IF node exp = _data.length > 0
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
assert(bool)(ADMIN_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.admin)) - 1))
has_compatibility_checks: condition ADMIN_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.admin)) - 1)
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: checking external function upgradeToAndCall
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
has_compatibility_checks: IF node exp = msg.sender == _admin()
has_compatibility_checks: IF node exp = OpenZeppelinUpgradesAddress.isContract(msg.sender) && msg.data.length == 0 && gasleft()() <= 2300
has_compatibility_checks: checking public function constructor
has_compatibility_checks: IF node exp = _data.length > 0
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: constructor
Found fallback
Found external function: admin
has_time_delay: (node.type) EXPRESSION
(Expression) _willFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) EXPRESSION
(Expression) super._willFallback()
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = ADMIN_SLOT
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) IF
(Expression) OpenZeppelinUpgradesAddress.isContract(msg.sender) && msg.data.length == 0 && gasleft()() <= 2300
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) IF
(Expression) msg.sender == _admin()
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)

Begin InitializableUpgradeabilityProxy.is_proxy (Slither line:1425)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin InitializableUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2792)
Expression called: _fallback
Type of call: tuple() (Slither line:2807)
Args:

End InitializableUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin InitializableUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin InitializableUpgradeabilityProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in InitializableUpgradeabilityProxy._delegate (Slither line:1805)
CallExpression: _fallback() (Slither line:1819)
CallExpression: _willFallback() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin InitializableUpgradeabilityProxy.find_delegate_from_call_exp

_implementation() (Slither line:1993)
called = _implementation (Slither line:2000)
_implementation returns a variable of type address   called impl (Slither line:2183)
_implementation contains assembly - looking for sload (Slither line:2189)
Looking in ASSEMBLY node (Slither line:2196)
{ impl := sload(slot) }  (Slither line:2200)
Return value set by sload in asm (Slither line:2202)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2222)

End InitializableUpgradeabilityProxy.find_delegate_from_call_exp (Slither line:2318)

AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
_delegate contains assembly, searching for sload (Slither line:1875)

End InitializableUpgradeabilityProxy.find_delegate_variable_from_name (Slither line:1939)


Begin InitializableUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2673)


End InitializableUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2700)


End InitializableUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

Setting InitializableUpgradeabilityProxy._delegate_variable = InitializableUpgradeabilityProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End InitializableUpgradeabilityProxy.is_proxy (Slither line:1476)


Begin InitializableUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: InitializableUpgradeabilityProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

InitializableUpgradeabilityProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)

Looking for setter in BaseUpgradeabilityProxy (Slither line:1204)


Begin BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3109)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3112)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3117)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3117)
Visibility: internal
Checking function: fallback() returns() (Slither line:3117)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3117)
Checking function: _fallback() returns() (Slither line:3117)

End BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3315)


Could not find setter in BaseUpgradeabilityProxy 
Looking in InitializableUpgradeabilityProxy (Slither line:1213)

Begin InitializableUpgradeabilityProxy.find_setter_in_contract (Slither line:3109)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3112)
Checking function: initialize(address,bytes) returns() (Slither line:3117)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3117)
Visibility: internal
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3117)
Visibility: internal
Checking function: fallback() returns() (Slither line:3117)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3117)
Checking function: _fallback() returns() (Slither line:3117)

End InitializableUpgradeabilityProxy.find_setter_in_contract (Slither line:3315)


Could not find setter in InitializableUpgradeabilityProxy (Slither line:1220)
Looking for setter in BaseAdminUpgradeabilityProxy (Slither line:1228)


Begin BaseAdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3109)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3112)
Checking function: admin() returns(address) (Slither line:3117)
Visibility: external
_willFallback()
_delegate(_implementation())
_fallback()
_admin()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
ifAdmin()
size > 0
None
Checking function: implementation() returns(address) (Slither line:3117)
Visibility: external
_willFallback()
_delegate(_implementation())
_implementation()
ifAdmin()
_fallback()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
size > 0
None
Checking function: changeAdmin(address) returns() (Slither line:3117)
Visibility: external
_willFallback()
_delegate(_implementation())
{ sstore(slot, newAdmin) } (Slither line:3153)
changeAdmin reads and/or writes to variable slot (Slither line:3160)
changeAdmin reads and/or writes to variable ADMIN_SLOT (Slither line:3160)
_fallback()
require(bool,string)(newAdmin != address(0),Cannot change the admin of a proxy to the zero address)
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
AdminChanged(_admin(),newAdmin)
super._willFallback()
_setAdmin(newAdmin)
ifAdmin()
size > 0
None
Checking function: upgradeTo(address) returns() (Slither line:3117)
Visibility: external
ifAdmin()
_willFallback()
_delegate(_implementation())
_fallback()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
    sstore(slot, newImplementation) (Slither line:3153)
upgradeTo reads and/or writes to variable slot (Slither line:3160)
upgradeTo reads and/or writes to variable IMPLEMENTATION_SLOT (Slither line:3160)
upgradeTo reads and/or writes to variable OpenZeppelinUpgradesAddress (Slither line:3160)
upgradeTo reads and/or writes to variable newImplementation (Slither line:3160)

End BaseAdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: upgradeTo in contract: BaseAdminUpgradeabilityProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:2964)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:3073)


Implementation retrieved by function: _implementation in contract: BaseUpgradeabilityProxy (Slither line:1285)

End InitializableUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: InitializableUpgradeabilityProxy
Setter found in contract BaseAdminUpgradeabilityProxy
Found fallback
Found public function: initialize
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable IMPLEMENTATION_SLOT
impl_address_from_contract_call: getter is _implementation
getter.full_name = _implementation()
library call: OpenZeppelinUpgradesAddress.isContract
impl_address_from_contract_call: CallExpression _fallback()
impl_address_from_contract_call: CallExpression _willFallback()
impl_address_from_contract_call: CallExpression _delegate(_implementation())
impl_address_from_contract_call: arg is _implementation()
impl_address_from_contract_call: CallExpression _implementation()
Checking public function initialize
Checking external function fallback
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy._upgradeTo (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.changeAdmin (proxy_features line:893)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy._willFallback (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.upgradeTo (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy._setImplementation (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy.initialize (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: initialize writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy._fallback (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._delegate (proxy_features line:893)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.upgradeToAndCall (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._upgradeTo (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._admin (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:907)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:919)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: exp = ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:907)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._willFallback (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._setAdmin (proxy_features line:893)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._setImplementation (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.admin (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._fallback (proxy_features line:893)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._willFallback (proxy_features line:893)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy._delegate (proxy_features line:893)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:907)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:919)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.implementation (proxy_features line:893)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: checking external function upgradeTo
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
has_compatibility_checks: IF node exp = OpenZeppelinUpgradesAddress.isContract(msg.sender) && msg.data.length == 0 && gasleft()() <= 2300
has_compatibility_checks: IF node exp = msg.sender == _admin()
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: checking public function initialize
has_compatibility_checks: IF node exp = _data.length > 0
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
has_compatibility_checks: checking external function upgradeToAndCall
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
has_compatibility_checks: IF node exp = OpenZeppelinUpgradesAddress.isContract(msg.sender) && msg.data.length == 0 && gasleft()() <= 2300
has_compatibility_checks: IF node exp = msg.sender == _admin()
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: skipping internal function _setImplementation
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) EXPRESSION
(Expression) _willFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_time_delay: (node.type) EXPRESSION
(Expression) super._willFallback()
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = ADMIN_SLOT
has_time_delay: (node.type) IF
(Expression) OpenZeppelinUpgradesAddress.isContract(msg.sender) && msg.data.length == 0 && gasleft()() <= 2300
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) IF
(Expression) msg.sender == _admin()

Begin InitializableAdminUpgradeabilityProxy.is_proxy (Slither line:1425)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _willFallback() (Slither line:2792)
Expression called: _willFallback
Type of call: tuple() (Slither line:2807)
Args:

End InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2792)
Expression called: _delegate
Type of call: tuple() (Slither line:2807)
Args:
_implementation()

End InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2792)
Expression called: _fallback
Type of call: tuple() (Slither line:2807)
Args:

End InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:2792)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2807)
Args:
msg.sender != _admin()
Cannot call fallback function from the proxy admin

End InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: super._willFallback() (Slither line:2792)
Expression called: super._willFallback
Type of call: tuple() (Slither line:2807)
Args:

End InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin InitializableAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ adm := sload(slot) } (Slither line:1576)

End InitializableAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)


Begin InitializableAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ adm := sload(slot) } (Slither line:1576)

End InitializableAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin InitializableAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ impl := sload(slot) } (Slither line:1576)

End InitializableAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)


Begin InitializableAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ impl := sload(slot) } (Slither line:1576)

End InitializableAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin InitializableAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin InitializableAdminUpgradeabilityProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_SLOT (Slither line:1689)
Checking ADMIN_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in InitializableAdminUpgradeabilityProxy._delegate (Slither line:1805)
CallExpression: _willFallback() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin InitializableAdminUpgradeabilityProxy.find_delegate_from_call_exp

_implementation() (Slither line:1993)
called = _implementation (Slither line:2000)
_implementation returns a variable of type address   called impl (Slither line:2183)
_implementation contains assembly - looking for sload (Slither line:2189)
Looking in ASSEMBLY node (Slither line:2196)
{ impl := sload(slot) }  (Slither line:2200)
Return value set by sload in asm (Slither line:2202)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2222)

End InitializableAdminUpgradeabilityProxy.find_delegate_from_call_exp (Slither line:2318)

CallExpression: _fallback() (Slither line:1819)
CallExpression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:1819)
CallExpression: super._willFallback() (Slither line:1819)
AssignmentOperation: ADMIN_SLOT (Slither line:1811)
AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
_delegate contains assembly, searching for sload (Slither line:1875)

End InitializableAdminUpgradeabilityProxy.find_delegate_variable_from_name (Slither line:1939)


Begin InitializableAdminUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2673)


End InitializableAdminUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2700)


End InitializableAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

Setting InitializableAdminUpgradeabilityProxy._delegate_variable = InitializableAdminUpgradeabilityProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End InitializableAdminUpgradeabilityProxy.is_proxy (Slither line:1476)


Begin InitializableAdminUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: InitializableAdminUpgradeabilityProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

InitializableAdminUpgradeabilityProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)

Looking for setter in BaseUpgradeabilityProxy (Slither line:1204)


Begin BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3109)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3112)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3117)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3117)
Visibility: internal
Checking function: fallback() returns() (Slither line:3117)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3117)
Checking function: _fallback() returns() (Slither line:3117)

End BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3315)


Could not find setter in BaseUpgradeabilityProxy 
Looking in InitializableAdminUpgradeabilityProxy (Slither line:1213)

Begin InitializableAdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3109)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3112)
Checking function: initialize(address,address,bytes) returns() (Slither line:3117)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3117)
Visibility: internal
Checking function: initialize(address,bytes) returns() (Slither line:3117)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3117)
Visibility: internal
Checking function: fallback() returns() (Slither line:3117)
Checking function: _implementation() returns(address) (Slither line:3117)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3117)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3117)
Checking function: _fallback() returns() (Slither line:3117)
Checking function: admin() returns(address) (Slither line:3117)
Visibility: external
_willFallback()
_delegate(_implementation())
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
_fallback()
_admin()
super._willFallback()
ifAdmin()
size > 0
None
Checking function: implementation() returns(address) (Slither line:3117)
Visibility: external
_willFallback()
_delegate(_implementation())
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
_fallback()
super._willFallback()
_implementation()
size > 0
ifAdmin()
None
Checking function: changeAdmin(address) returns() (Slither line:3117)
Visibility: external
_willFallback()
_delegate(_implementation())
require(bool,string)(newAdmin != address(0),Cannot change the admin of a proxy to the zero address)
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
AdminChanged(_admin(),newAdmin)
_fallback()
super._willFallback()
_setAdmin(newAdmin)
ifAdmin()
size > 0
None
{ sstore(slot, newAdmin) } (Slither line:3153)
changeAdmin reads and/or writes to variable slot (Slither line:3160)
changeAdmin reads and/or writes to variable ADMIN_SLOT (Slither line:3160)
Checking function: upgradeTo(address) returns() (Slither line:3117)
Visibility: external
_willFallback()
_delegate(_implementation())
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
_fallback()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
super._willFallback()
    sstore(slot, newImplementation) (Slither line:3153)
upgradeTo reads and/or writes to variable slot (Slither line:3160)
upgradeTo reads and/or writes to variable IMPLEMENTATION_SLOT (Slither line:3160)
upgradeTo reads and/or writes to variable OpenZeppelinUpgradesAddress (Slither line:3160)
upgradeTo reads and/or writes to variable newImplementation (Slither line:3160)

End InitializableAdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: upgradeTo in contract: InitializableAdminUpgradeabilityProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:2964)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:3073)


Implementation retrieved by function: _implementation in contract: BaseUpgradeabilityProxy (Slither line:1285)

End InitializableAdminUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: InitializableAdminUpgradeabilityProxy
Setter found in contract InitializableAdminUpgradeabilityProxy
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable IMPLEMENTATION_SLOT
impl_address_from_contract_call: getter is _implementation
getter.full_name = _implementation()
library call: OpenZeppelinUpgradesAddress.isContract
impl_address_from_contract_call: CallExpression _willFallback()
impl_address_from_contract_call: CallExpression _delegate(_implementation())
impl_address_from_contract_call: arg is _implementation()
impl_address_from_contract_call: CallExpression _implementation()
impl_address_from_contract_call: CallExpression _fallback()
impl_address_from_contract_call: CallExpression require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
impl_address_from_contract_call: arg is msg.sender != _admin()
impl_address_from_contract_call: arg is Cannot call fallback function from the proxy admin
impl_address_from_contract_call: CallExpression super._willFallback()
Checking public function initialize
Checking external function admin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function implementation
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function changeAdmin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking public function initialize
Checking external function fallback
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.changeAdmin (proxy_features line:893)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._upgradeTo (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._setAdmin (proxy_features line:893)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._willFallback (proxy_features line:893)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.upgradeTo (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._setImplementation (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._willFallback (proxy_features line:893)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._fallback (proxy_features line:893)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.initialize (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: initialize writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.upgradeToAndCall (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.initialize (proxy_features line:893)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:948)
newImplementation
functions_writing_to_variable: initialize writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:954)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.admin (proxy_features line:893)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:907)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:919)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: exp = ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:907)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._admin (proxy_features line:893)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.implementation (proxy_features line:893)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._delegate (proxy_features line:893)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: checking external function upgradeTo
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
has_compatibility_checks: IF node exp = OpenZeppelinUpgradesAddress.isContract(msg.sender) && msg.data.length == 0 && gasleft()() <= 2300
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: checking public function initialize
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
has_compatibility_checks: IF node exp = _data.length > 0
assert(bool)(ADMIN_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.admin)) - 1))
has_compatibility_checks: condition ADMIN_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.admin)) - 1)
has_compatibility_checks: checking external function upgradeToAndCall
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
has_compatibility_checks: IF node exp = OpenZeppelinUpgradesAddress.isContract(msg.sender) && msg.data.length == 0 && gasleft()() <= 2300
has_compatibility_checks: checking public function initialize
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
has_compatibility_checks: IF node exp = _data.length > 0
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: initialize
has_time_delay: (node.type) IF
(Expression) msg.sender == _admin()
has_time_delay: (node.type) EXPRESSION
(Expression) _willFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) EXPRESSION
(Expression) super._willFallback()
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = ADMIN_SLOT
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) IF
(Expression) OpenZeppelinUpgradesAddress.isContract(msg.sender) && msg.data.length == 0 && gasleft()() <= 2300
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)

Begin IProxyFactory.is_proxy (Slither line:1425)


End IProxyFactory.is_proxy (Slither line:1428)


Begin IProxyFactory.is_upgradeable_proxy (Slither line:1136)

Checking contract: IProxyFactory 

End IProxyFactory.is_upgradeable_proxy (Slither line:1407)


Begin ProductProxy.is_proxy (Slither line:1425)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin ProductProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin ProductProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking FACTORY_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in ProductProxy._delegate (Slither line:1805)
AssignmentOperation: FACTORY_SLOT (Slither line:1811)
CallExpression: _fallback() (Slither line:1819)
CallExpression: _willFallback() (Slither line:1819)
AssignmentOperation: _factory() (Slither line:1811)
CallExpression: _factory() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin ProductProxy.find_delegate_from_call_exp

_implementation() (Slither line:1993)
called = _implementation (Slither line:2000)
Return node of function ProductProxy._implementation(): RETURN IProxyFactory(factory).productImplementation() (Slither line:2031)
Encountered call expression at RETURN node: IProxyFactory(factory).productImplementation() (Slither line:2043)
Encountered member access expression: IProxyFactory(factory).productImplementation (Slither line:2047)

Begin ProductProxy.find_delegate_from_member_access

Expression: IProxyFactory(factory).productImplementation (Slither line:2348)
IProxyFactory(factory) (Slither line:2361)
productImplementation is a member of the contract type: IProxyFactory (Slither line:2406)
Which is an interface (Slither line:2410)
AiSwapFactory inherits IProxyFactory (Slither line:2417)
Looking for productImplementation in AiSwapFactory (Slither line:2513)
Found the function called productImplementation (Slither line:2517)
Returns a variable of type address (Slither line:2522)

End ProductProxy.find_delegate_from_member_access (Slither line:2635)


End ProductProxy.find_delegate_from_call_exp (Slither line:2094)


End ProductProxy.find_delegate_variable_from_name (Slither line:1939)


End ProductProxy.find_delegatecall_in_asm (Slither line:1637)


End ProductProxy.is_proxy (Slither line:1476)


Begin ProductProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: ProductProxy 
ProductProxy is delegating to productImplementation
Looking for setter (Slither line:1200)

Looking for setter in AiSwapFactory (Slither line:1204)


Begin AiSwapFactory.find_setter_in_contract (Slither line:3109)

Checking function: initialize(address,address) returns() (Slither line:3117)
Checking function: allPairsLength() returns(uint256) (Slither line:3117)
Visibility: external
allPairs.length
Checking function: createPair(address,address) returns(address) (Slither line:3117)
Visibility: external
createPair contains assembly (Slither line:3143)
PairCreated(token0,token1,pair,allPairs.length)
getPair[token0][token1] = pair
is an Assignment Operation (Slither line:3206)
Left side is an IndexAccess (Slither line:3235)
(token0,token1) = (tokenB,tokenA)
is an Assignment Operation (Slither line:3206)
(token0,token1) = (tokenA,tokenB)
is an Assignment Operation (Slither line:3206)
require(bool,string)(getPair[token0][token1] == address(0),UniswapV2: PAIR_EXISTS)
getPair[token1][token0] = pair
is an Assignment Operation (Slither line:3206)
Left side is an IndexAccess (Slither line:3235)
require(bool,string)(tokenA != tokenB,UniswapV2: IDENTICAL_ADDRESSES)
allPairs.push(pair)
require(bool,string)(token0 != address(0),UniswapV2: ZERO_ADDRESS)
InitializableProductProxy(uint160(pair)).initialize(address(this),abi.encodeWithSignature(initialize(address,address),token0,token1))
Checking function: setFeeTo(address) returns() (Slither line:3117)
Visibility: external
require(bool,string)(msg.sender == feeToSetter,UniswapV2: FORBIDDEN)
feeTo = _feeTo
is an Assignment Operation (Slither line:3206)
Checking function: setFeeToSetter(address) returns() (Slither line:3117)
Visibility: external
require(bool,string)(msg.sender == feeToSetter,UniswapV2: FORBIDDEN)
feeToSetter = _feeToSetter
is an Assignment Operation (Slither line:3206)
Checking function: setProductImplementation(address) returns() (Slither line:3117)
Visibility: public
require(bool,string)(msg.sender == feeToSetter,UniswapV2: FORBIDDEN)
productImplementation = _productImplementation
is an Assignment Operation (Slither line:3206)

End AiSwapFactory.find_setter_in_contract (Slither line:3315)


Implementation set by function: setProductImplementation in contract: AiSwapFactory (Slither line:1264)
Looking for getter (Slither line:1273)


Begin AiSwapFactory.find_getter_in_contract (Slither line:2964)

productImplementation is a Variable object
_productImplementation
Checking function: initialize (Slither line:2978)
Checking function: allPairsLength (Slither line:2978)
allPairsLength returns uint256 variable  (Slither line:2998)
RETURN node expression: allPairs.length (Slither line:3018)
Checking function: createPair (Slither line:2978)
createPair returns address variable called pair (Slither line:2998)
Checking function: setFeeTo (Slither line:2978)
Checking function: setFeeToSetter (Slither line:2978)
Checking function: setProductImplementation (Slither line:2978)
Checking function: sortTokens (Slither line:2978)
sortTokens returns address variable called token0 (Slither line:2998)
sortTokens returns address variable called token1 (Slither line:2998)
Checking function: pairFor (Slither line:2978)
pairFor returns address variable called pair (Slither line:2998)
Checking function: getReserves (Slither line:2978)
getReserves returns uint256 variable called reserveA (Slither line:2998)
getReserves returns uint256 variable called reserveB (Slither line:2998)
Checking function: quote (Slither line:2978)
quote returns uint256 variable called amountB (Slither line:2998)
Checking function: getAmountOut (Slither line:2978)
getAmountOut returns uint256 variable called amountOut (Slither line:2998)
Checking function: getAmountIn (Slither line:2978)
getAmountIn returns uint256 variable called amountIn (Slither line:2998)
Checking function: getAmountsOut (Slither line:2978)
getAmountsOut returns uint256[] variable called amounts (Slither line:2998)
Checking function: getAmountsIn (Slither line:2978)
getAmountsIn returns uint256[] variable called amounts (Slither line:2998)
Checking function: slitherConstructorConstantVariables (Slither line:2978)

End AiSwapFactory.find_getter_in_contract (Slither line:3073)


Begin ProductProxy.find_getter_in_contract (Slither line:2964)

productImplementation is a Variable object
_productImplementation
Checking function: fallback (Slither line:2978)
Checking function: _delegate (Slither line:2978)
Checking function: _willFallback (Slither line:2978)
Checking function: _fallback (Slither line:2978)
Checking function: _setFactory (Slither line:2978)
Checking function: _factory (Slither line:2978)
_factory returns address variable called factory (Slither line:2998)
Checking function: _implementation (Slither line:2978)
_implementation returns address variable  (Slither line:2998)
RETURN node expression: IProxyFactory(factory).productImplementation() (Slither line:3018)
RETURN node expression: address(0) (Slither line:3018)
Checking function: slitherConstructorConstantVariables (Slither line:2978)

End ProductProxy.find_getter_in_contract (Slither line:3073)

Could not find implementation getter in ProductProxy (Slither line:1305)
or in AiSwapFactory (Slither line:1319)

Begin Initializable.find_getter_in_contract (Slither line:2964)

productImplementation is a Variable object
_productImplementation
Checking function: isConstructor (Slither line:2978)
isConstructor returns bool variable  (Slither line:2998)
RETURN node expression: cs == 0 (Slither line:3018)

End Initializable.find_getter_in_contract (Slither line:3073)

impl_address_from_contract_call: _productImplementation
impl_address_from_contract_call: StateVariable productImplementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression IProxyFactory(factory).productImplementation()
found MemberAccess calling getter in another contract: IProxyFactory(factory).productImplementation()
called: IProxyFactory(factory).productImplementation
found MemberAccess: IProxyFactory(factory).productImplementation
TypeConversion: IProxyFactory(factory)
find_registry_address_source: IProxyFactory(factory).productImplementation()
MemberAccess: IProxyFactory(factory).productImplementation
TypeConversion: IProxyFactory(factory)
Identifier: factory
dependencies for factory in context ProductProxy: ['factory', 'TMP_616']
TemporaryVariable expression: _factory()
Checking external function fallback
functions_writing_to_variable: productImplementation
functions_writing_to_variable: checking function AiSwapFactory.createPair (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.quote (proxy_features line:893)
functions_writing_to_variable: checking function ProductProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.setFeeTo (proxy_features line:893)
functions_writing_to_variable: checking function ProductProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.getAmountOut (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.setFeeToSetter (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.allPairsLength (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.setFeeToSetter (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.feeTo (proxy_features line:893)
functions_writing_to_variable: checking function ProductProxy._delegate (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.feeToSetter (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.getAmountIn (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.initialize (proxy_features line:893)
functions_writing_to_variable: exp = require(bool,string)(feeToSetter == address(0) && _feeToSetter != address(0),AiSwapFactory.initialize can be delegatecall once by proxy only.) (proxy_features line:904)
functions_writing_to_variable: exp = feeToSetter = _feeToSetter (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: feeToSetter = _feeToSetter (proxy_features line:907)
functions_writing_to_variable: exp = productImplementation = _productImplementation (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: productImplementation = _productImplementation (proxy_features line:907)
functions_writing_to_variable: Identifier: productImplementation (proxy_features line:919)
get_value_assigned: productImplementation = _productImplementation
functions_writing_to_variable: initialize writes _productImplementation to productImplementation (proxy_features line:924)
functions_writing_to_variable: checking function AiSwapFactory.setProductImplementation (proxy_features line:893)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == feeToSetter,UniswapV2: FORBIDDEN) (proxy_features line:904)
functions_writing_to_variable: exp = productImplementation = _productImplementation (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: productImplementation = _productImplementation (proxy_features line:907)
functions_writing_to_variable: Identifier: productImplementation (proxy_features line:919)
get_value_assigned: productImplementation = _productImplementation
functions_writing_to_variable: setProductImplementation writes _productImplementation to productImplementation (proxy_features line:924)
functions_writing_to_variable: checking function AiSwapFactory.productImplementation (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.getAmountsOut (proxy_features line:893)
functions_writing_to_variable: checking function ProductProxy._willFallback (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.getPair (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.sortTokens (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.createPair (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.getAmountsIn (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.pairFor (proxy_features line:893)
functions_writing_to_variable: checking function ProductProxy._setFactory (proxy_features line:893)
functions_writing_to_variable: checking function ProductProxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: checking function ProductProxy._fallback (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.allPairs (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.setFeeTo (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.allPairsLength (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.getReserves (proxy_features line:893)
functions_writing_to_variable: checking function ProductProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function ProductProxy._factory (proxy_features line:893)
has_compatibility_checks: dependencies: ['_productImplementation', '_productImplementation']
has_compatibility_checks: checking public function initialize
require(bool,string)(feeToSetter == address(0) && _feeToSetter != address(0),AiSwapFactory.initialize can be delegatecall once by proxy only.)
has_compatibility_checks: condition feeToSetter == address(0) && _feeToSetter != address(0)
has_compatibility_checks: checking public function setProductImplementation
require(bool,string)(msg.sender == feeToSetter,UniswapV2: FORBIDDEN)
has_compatibility_checks: condition msg.sender == feeToSetter
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
Found fallback
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == feeToSetter,UniswapV2: FORBIDDEN)
has_time_delay: (node.type) EXPRESSION
(Expression) productImplementation = _productImplementation

Begin InitializableProductProxy.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin InitializableProductProxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2792)
Expression called: _fallback
Type of call: tuple() (Slither line:2807)
Args:

End InitializableProductProxy.find_delegatecall_in_exp_node (Slither line:2848)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin InitializableProductProxy.find_delegatecall_in_exp_node

Found Expression Node: _willFallback() (Slither line:2792)
Expression called: _willFallback
Type of call: tuple() (Slither line:2807)
Args:

End InitializableProductProxy.find_delegatecall_in_exp_node (Slither line:2848)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin InitializableProductProxy.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2792)
Expression called: _delegate
Type of call: tuple() (Slither line:2807)
Args:
_implementation()

End InitializableProductProxy.find_delegatecall_in_exp_node (Slither line:2848)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

RETURN (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin InitializableProductProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin InitializableProductProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking FACTORY_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in InitializableProductProxy._delegate (Slither line:1805)
CallExpression: _fallback() (Slither line:1819)
CallExpression: _willFallback() (Slither line:1819)
AssignmentOperation: _factory() (Slither line:1811)
CallExpression: _factory() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin InitializableProductProxy.find_delegate_from_call_exp

_implementation() (Slither line:1993)
called = _implementation (Slither line:2000)
Return node of function ProductProxy._implementation(): RETURN IProxyFactory(factory).productImplementation() (Slither line:2031)
Encountered call expression at RETURN node: IProxyFactory(factory).productImplementation() (Slither line:2043)
Encountered member access expression: IProxyFactory(factory).productImplementation (Slither line:2047)

Begin InitializableProductProxy.find_delegate_from_member_access

Expression: IProxyFactory(factory).productImplementation (Slither line:2348)
IProxyFactory(factory) (Slither line:2361)
productImplementation is a member of the contract type: IProxyFactory (Slither line:2406)
Which is an interface (Slither line:2410)
AiSwapFactory inherits IProxyFactory (Slither line:2417)
Looking for productImplementation in AiSwapFactory (Slither line:2513)
Found the function called productImplementation (Slither line:2517)
Returns a variable of type address (Slither line:2522)

End InitializableProductProxy.find_delegate_from_member_access (Slither line:2635)


End InitializableProductProxy.find_delegate_from_call_exp (Slither line:2094)


End InitializableProductProxy.find_delegate_variable_from_name (Slither line:1939)


End InitializableProductProxy.find_delegatecall_in_asm (Slither line:1637)


End InitializableProductProxy.is_proxy (Slither line:1476)


Begin InitializableProductProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: InitializableProductProxy 
InitializableProductProxy is delegating to productImplementation
Looking for setter (Slither line:1200)

Looking for setter in AiSwapFactory (Slither line:1204)


Begin AiSwapFactory.find_setter_in_contract (Slither line:3109)

Expression: _productImplementation (Slither line:3112)
Checking function: initialize(address,address) returns() (Slither line:3117)
Checking function: allPairsLength() returns(uint256) (Slither line:3117)
Visibility: external
allPairs.length
Checking function: createPair(address,address) returns(address) (Slither line:3117)
Visibility: external
createPair contains assembly (Slither line:3143)
PairCreated(token0,token1,pair,allPairs.length)
getPair[token0][token1] = pair
is an Assignment Operation (Slither line:3206)
_productImplementation
(token0,token1) = (tokenB,tokenA)
is an Assignment Operation (Slither line:3206)
_productImplementation
(token0,token1) = (tokenA,tokenB)
is an Assignment Operation (Slither line:3206)
_productImplementation
require(bool,string)(getPair[token0][token1] == address(0),UniswapV2: PAIR_EXISTS)
getPair[token1][token0] = pair
is an Assignment Operation (Slither line:3206)
_productImplementation
require(bool,string)(tokenA != tokenB,UniswapV2: IDENTICAL_ADDRESSES)
allPairs.push(pair)
require(bool,string)(token0 != address(0),UniswapV2: ZERO_ADDRESS)
InitializableProductProxy(uint160(pair)).initialize(address(this),abi.encodeWithSignature(initialize(address,address),token0,token1))
Checking function: setFeeTo(address) returns() (Slither line:3117)
Visibility: external
require(bool,string)(msg.sender == feeToSetter,UniswapV2: FORBIDDEN)
feeTo = _feeTo
is an Assignment Operation (Slither line:3206)
_productImplementation
Checking function: setFeeToSetter(address) returns() (Slither line:3117)
Visibility: external
require(bool,string)(msg.sender == feeToSetter,UniswapV2: FORBIDDEN)
feeToSetter = _feeToSetter
is an Assignment Operation (Slither line:3206)
_productImplementation
Checking function: setProductImplementation(address) returns() (Slither line:3117)
Visibility: public
require(bool,string)(msg.sender == feeToSetter,UniswapV2: FORBIDDEN)
productImplementation = _productImplementation
is an Assignment Operation (Slither line:3206)
_productImplementation

End AiSwapFactory.find_setter_in_contract (Slither line:3315)


Implementation set by function: setProductImplementation in contract: AiSwapFactory (Slither line:1264)
Looking for getter (Slither line:1273)


Begin AiSwapFactory.find_getter_in_contract (Slither line:2964)

productImplementation is a Variable object
_productImplementation
Checking function: initialize (Slither line:2978)
Checking function: allPairsLength (Slither line:2978)
allPairsLength returns uint256 variable  (Slither line:2998)
RETURN node expression: allPairs.length (Slither line:3018)
Checking function: createPair (Slither line:2978)
createPair returns address variable called pair (Slither line:2998)
Checking function: setFeeTo (Slither line:2978)
Checking function: setFeeToSetter (Slither line:2978)
Checking function: setProductImplementation (Slither line:2978)
Checking function: sortTokens (Slither line:2978)
sortTokens returns address variable called token0 (Slither line:2998)
sortTokens returns address variable called token1 (Slither line:2998)
Checking function: pairFor (Slither line:2978)
pairFor returns address variable called pair (Slither line:2998)
Checking function: getReserves (Slither line:2978)
getReserves returns uint256 variable called reserveA (Slither line:2998)
getReserves returns uint256 variable called reserveB (Slither line:2998)
Checking function: quote (Slither line:2978)
quote returns uint256 variable called amountB (Slither line:2998)
Checking function: getAmountOut (Slither line:2978)
getAmountOut returns uint256 variable called amountOut (Slither line:2998)
Checking function: getAmountIn (Slither line:2978)
getAmountIn returns uint256 variable called amountIn (Slither line:2998)
Checking function: getAmountsOut (Slither line:2978)
getAmountsOut returns uint256[] variable called amounts (Slither line:2998)
Checking function: getAmountsIn (Slither line:2978)
getAmountsIn returns uint256[] variable called amounts (Slither line:2998)
Checking function: slitherConstructorConstantVariables (Slither line:2978)

End AiSwapFactory.find_getter_in_contract (Slither line:3073)


Begin InitializableProductProxy.find_getter_in_contract (Slither line:2964)

productImplementation is a Variable object
_productImplementation
Checking function: _setFactory (Slither line:2978)
Checking function: _factory (Slither line:2978)
_factory returns address variable called factory (Slither line:2998)
Checking function: _implementation (Slither line:2978)
_implementation returns address variable  (Slither line:2998)
RETURN node expression: IProxyFactory(factory).productImplementation() (Slither line:3018)
RETURN node expression: address(0) (Slither line:3018)
Checking function: fallback (Slither line:2978)
Checking function: _delegate (Slither line:2978)
Checking function: _willFallback (Slither line:2978)
Checking function: _fallback (Slither line:2978)
Checking function: initialize (Slither line:2978)
Checking function: slitherConstructorConstantVariables (Slither line:2978)

End InitializableProductProxy.find_getter_in_contract (Slither line:3073)

Could not find implementation getter in InitializableProductProxy (Slither line:1305)
or in AiSwapFactory (Slither line:1319)

Begin Initializable.find_getter_in_contract (Slither line:2964)

productImplementation is a Variable object
_productImplementation
Checking function: isConstructor (Slither line:2978)
isConstructor returns bool variable  (Slither line:2998)
RETURN node expression: cs == 0 (Slither line:3018)

End Initializable.find_getter_in_contract (Slither line:3073)

impl_address_from_contract_call: _productImplementation
impl_address_from_contract_call: StateVariable productImplementation
impl_address_from_contract_call: getter is None
impl_address_from_contract_call: CallExpression _fallback()
impl_address_from_contract_call: CallExpression _willFallback()
impl_address_from_contract_call: CallExpression _factory()
impl_address_from_contract_call: CallExpression _delegate(_implementation())
impl_address_from_contract_call: arg is _implementation()
impl_address_from_contract_call: CallExpression _implementation()
impl_address_from_contract_call: CallExpression OpenZeppelinUpgradesAddress.isContract(factory)
impl_address_from_contract_call: CallExpression IProxyFactory(factory).productImplementation()
found MemberAccess calling getter in another contract: IProxyFactory(factory).productImplementation()
called: IProxyFactory(factory).productImplementation
found MemberAccess: IProxyFactory(factory).productImplementation
TypeConversion: IProxyFactory(factory)
find_registry_address_source: IProxyFactory(factory).productImplementation()
MemberAccess: IProxyFactory(factory).productImplementation
TypeConversion: IProxyFactory(factory)
Identifier: factory
dependencies for factory in context InitializableProductProxy: ['TMP_623', 'factory']
TemporaryVariable expression: _factory()
Checking public function initialize
Checking external function fallback
functions_writing_to_variable: productImplementation
functions_writing_to_variable: checking function AiSwapFactory.createPair (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.quote (proxy_features line:893)
functions_writing_to_variable: checking function InitializableProductProxy._factory (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.setFeeTo (proxy_features line:893)
functions_writing_to_variable: checking function InitializableProductProxy._willFallback (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.getAmountOut (proxy_features line:893)
functions_writing_to_variable: checking function InitializableProductProxy.initialize (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.setFeeToSetter (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.allPairsLength (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.setFeeToSetter (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.feeTo (proxy_features line:893)
functions_writing_to_variable: checking function InitializableProductProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.feeToSetter (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.getAmountIn (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.initialize (proxy_features line:893)
functions_writing_to_variable: exp = require(bool,string)(feeToSetter == address(0) && _feeToSetter != address(0),AiSwapFactory.initialize can be delegatecall once by proxy only.) (proxy_features line:904)
functions_writing_to_variable: exp = feeToSetter = _feeToSetter (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: feeToSetter = _feeToSetter (proxy_features line:907)
functions_writing_to_variable: exp = productImplementation = _productImplementation (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: productImplementation = _productImplementation (proxy_features line:907)
functions_writing_to_variable: Identifier: productImplementation (proxy_features line:919)
get_value_assigned: productImplementation = _productImplementation
functions_writing_to_variable: initialize writes _productImplementation to productImplementation (proxy_features line:924)
functions_writing_to_variable: checking function InitializableProductProxy._fallback (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.setProductImplementation (proxy_features line:893)
functions_writing_to_variable: exp = require(bool,string)(msg.sender == feeToSetter,UniswapV2: FORBIDDEN) (proxy_features line:904)
functions_writing_to_variable: exp = productImplementation = _productImplementation (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: productImplementation = _productImplementation (proxy_features line:907)
functions_writing_to_variable: Identifier: productImplementation (proxy_features line:919)
get_value_assigned: productImplementation = _productImplementation
functions_writing_to_variable: setProductImplementation writes _productImplementation to productImplementation (proxy_features line:924)
functions_writing_to_variable: checking function InitializableProductProxy.slitherConstructorConstantVariables (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.productImplementation (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.getAmountsOut (proxy_features line:893)
functions_writing_to_variable: checking function InitializableProductProxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.getPair (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.sortTokens (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.createPair (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.getAmountsIn (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.pairFor (proxy_features line:893)
functions_writing_to_variable: checking function InitializableProductProxy._implementation (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.allPairs (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.setFeeTo (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.allPairsLength (proxy_features line:893)
functions_writing_to_variable: checking function InitializableProductProxy._setFactory (proxy_features line:893)
functions_writing_to_variable: checking function AiSwapFactory.getReserves (proxy_features line:893)
functions_writing_to_variable: checking function InitializableProductProxy._delegate (proxy_features line:893)
has_compatibility_checks: dependencies: ['_productImplementation', '_productImplementation']
has_compatibility_checks: checking public function initialize
require(bool,string)(feeToSetter == address(0) && _feeToSetter != address(0),AiSwapFactory.initialize can be delegatecall once by proxy only.)
has_compatibility_checks: condition feeToSetter == address(0) && _feeToSetter != address(0)
has_compatibility_checks: checking public function setProductImplementation
require(bool,string)(msg.sender == feeToSetter,UniswapV2: FORBIDDEN)
has_compatibility_checks: condition msg.sender == feeToSetter
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
Found fallback
Found public function: initialize
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender == feeToSetter,UniswapV2: FORBIDDEN)
has_time_delay: (node.type) EXPRESSION
(Expression) productImplementation = _productImplementation

Begin AiSwapFactory.is_proxy (Slither line:1425)


End AiSwapFactory.is_proxy (Slither line:1428)


Begin AiSwapFactory.is_upgradeable_proxy (Slither line:1136)

Checking contract: AiSwapFactory 

End AiSwapFactory.is_upgradeable_proxy (Slither line:1407)


Begin OpenZeppelinUpgradesECDSA.is_proxy (Slither line:1425)


End OpenZeppelinUpgradesECDSA.is_proxy (Slither line:1428)


Begin OpenZeppelinUpgradesECDSA.is_upgradeable_proxy (Slither line:1136)

Checking contract: OpenZeppelinUpgradesECDSA 

End OpenZeppelinUpgradesECDSA.is_upgradeable_proxy (Slither line:1407)


Begin OpenZeppelinUpgradesAddress.is_proxy (Slither line:1425)


End OpenZeppelinUpgradesAddress.is_proxy (Slither line:1428)


Begin OpenZeppelinUpgradesAddress.is_upgradeable_proxy (Slither line:1136)

Checking contract: OpenZeppelinUpgradesAddress 

End OpenZeppelinUpgradesAddress.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin Math.is_proxy (Slither line:1425)


End Math.is_proxy (Slither line:1428)


Begin Math.is_upgradeable_proxy (Slither line:1136)

Checking contract: Math 

End Math.is_upgradeable_proxy (Slither line:1407)


Begin UQ112x112.is_proxy (Slither line:1425)


End UQ112x112.is_proxy (Slither line:1428)


Begin UQ112x112.is_upgradeable_proxy (Slither line:1136)

Checking contract: UQ112x112 

End UQ112x112.is_upgradeable_proxy (Slither line:1407)


Begin IUniswapV2Router01.is_proxy (Slither line:1425)


End IUniswapV2Router01.is_proxy (Slither line:1428)


Begin IUniswapV2Router01.is_upgradeable_proxy (Slither line:1136)

Checking contract: IUniswapV2Router01 

End IUniswapV2Router01.is_upgradeable_proxy (Slither line:1407)


Begin IUniswapV2Router02.is_proxy (Slither line:1425)


End IUniswapV2Router02.is_proxy (Slither line:1428)


Begin IUniswapV2Router02.is_upgradeable_proxy (Slither line:1136)

Checking contract: IUniswapV2Router02 

End IUniswapV2Router02.is_upgradeable_proxy (Slither line:1407)


Begin IWETH.is_proxy (Slither line:1425)


End IWETH.is_proxy (Slither line:1428)


Begin IWETH.is_upgradeable_proxy (Slither line:1136)

Checking contract: IWETH 

End IWETH.is_upgradeable_proxy (Slither line:1407)


Begin AiSwapRouter02.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Begin AiSwapRouter02.find_delegatecall_in_exp_node

Found Expression Node: assert(bool)(msg.sender == WETH) (Slither line:2792)
Expression called: assert(bool)
Type of call: tuple() (Slither line:2807)
Args:
msg.sender == WETH

End AiSwapRouter02.find_delegatecall_in_exp_node (Slither line:2848)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


End AiSwapRouter02.is_proxy (Slither line:1476)


Begin AiSwapRouter02.is_upgradeable_proxy (Slither line:1136)

Checking contract: AiSwapRouter02 

End AiSwapRouter02.is_upgradeable_proxy (Slither line:1407)


Begin UniswapV2Library.is_proxy (Slither line:1425)


End UniswapV2Library.is_proxy (Slither line:1428)


Begin UniswapV2Library.is_upgradeable_proxy (Slither line:1136)

Checking contract: UniswapV2Library 

End UniswapV2Library.is_upgradeable_proxy (Slither line:1407)


Begin TransferHelper.is_proxy (Slither line:1425)


End TransferHelper.is_proxy (Slither line:1428)


Begin TransferHelper.is_upgradeable_proxy (Slither line:1136)

Checking contract: TransferHelper 

End TransferHelper.is_upgradeable_proxy (Slither line:1407)


Begin DeployFactory.is_proxy (Slither line:1425)


End DeployFactory.is_proxy (Slither line:1428)


Begin DeployFactory.is_upgradeable_proxy (Slither line:1136)

Checking contract: DeployFactory 

End DeployFactory.is_upgradeable_proxy (Slither line:1407)


Begin DeployRouter.is_proxy (Slither line:1425)


End DeployRouter.is_proxy (Slither line:1428)


Begin DeployRouter.is_upgradeable_proxy (Slither line:1136)

Checking contract: DeployRouter 

End DeployRouter.is_upgradeable_proxy (Slither line:1407)


Begin Test.is_proxy (Slither line:1425)


End Test.is_proxy (Slither line:1428)


Begin Test.is_upgradeable_proxy (Slither line:1136)

Checking contract: Test 

End Test.is_upgradeable_proxy (Slither line:1407)


Begin AddressWETH.is_proxy (Slither line:1425)


End AddressWETH.is_proxy (Slither line:1428)


Begin AddressWETH.is_upgradeable_proxy (Slither line:1136)

Checking contract: AddressWETH 

End AddressWETH.is_upgradeable_proxy (Slither line:1407)

