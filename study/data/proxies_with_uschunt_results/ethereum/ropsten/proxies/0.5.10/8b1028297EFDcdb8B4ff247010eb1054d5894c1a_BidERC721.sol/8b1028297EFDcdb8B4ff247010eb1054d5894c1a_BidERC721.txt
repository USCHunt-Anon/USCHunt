
Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin IERC165.is_proxy (Slither line:1425)


End IERC165.is_proxy (Slither line:1428)


Begin IERC165.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC165 

End IERC165.is_upgradeable_proxy (Slither line:1407)


Begin ERC165.is_proxy (Slither line:1425)


End ERC165.is_proxy (Slither line:1428)


Begin ERC165.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC165 

End ERC165.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin Counters.is_proxy (Slither line:1425)


End Counters.is_proxy (Slither line:1428)


Begin Counters.is_upgradeable_proxy (Slither line:1136)

Checking contract: Counters 

End Counters.is_upgradeable_proxy (Slither line:1407)


Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin IERC721Receiver.is_proxy (Slither line:1425)


End IERC721Receiver.is_proxy (Slither line:1428)


Begin IERC721Receiver.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC721Receiver 

End IERC721Receiver.is_upgradeable_proxy (Slither line:1407)


Begin IERC721Metadata.is_proxy (Slither line:1425)


End IERC721Metadata.is_proxy (Slither line:1428)


Begin IERC721Metadata.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC721Metadata 

End IERC721Metadata.is_upgradeable_proxy (Slither line:1407)


Begin ERC721.is_proxy (Slither line:1425)


End ERC721.is_proxy (Slither line:1428)


Begin ERC721.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC721 

End ERC721.is_upgradeable_proxy (Slither line:1407)


Begin IERC721Enumerable.is_proxy (Slither line:1425)


End IERC721Enumerable.is_proxy (Slither line:1428)


Begin IERC721Enumerable.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC721Enumerable 

End IERC721Enumerable.is_upgradeable_proxy (Slither line:1407)


Begin ERC721Metadata.is_proxy (Slither line:1425)


End ERC721Metadata.is_proxy (Slither line:1428)


Begin ERC721Metadata.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC721Metadata 

End ERC721Metadata.is_upgradeable_proxy (Slither line:1407)


Begin ERC721Enumerable.is_proxy (Slither line:1425)


End ERC721Enumerable.is_proxy (Slither line:1428)


Begin ERC721Enumerable.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC721Enumerable 

End ERC721Enumerable.is_upgradeable_proxy (Slither line:1407)


Begin Royalty.is_proxy (Slither line:1425)


End Royalty.is_proxy (Slither line:1428)


Begin Royalty.is_upgradeable_proxy (Slither line:1136)

Checking contract: Royalty 

End Royalty.is_upgradeable_proxy (Slither line:1407)


Begin MyUtils.is_proxy (Slither line:1425)


End MyUtils.is_proxy (Slither line:1428)


Begin MyUtils.is_upgradeable_proxy (Slither line:1136)

Checking contract: MyUtils 

End MyUtils.is_upgradeable_proxy (Slither line:1407)


Begin ERC721Full.is_proxy (Slither line:1425)


End ERC721Full.is_proxy (Slither line:1428)


Begin ERC721Full.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC721Full 

End ERC721Full.is_upgradeable_proxy (Slither line:1407)


Begin IERC721TokenReceiver.is_proxy (Slither line:1425)


End IERC721TokenReceiver.is_proxy (Slither line:1428)


Begin IERC721TokenReceiver.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC721TokenReceiver 

End IERC721TokenReceiver.is_upgradeable_proxy (Slither line:1407)


Begin IRoyalty.is_proxy (Slither line:1425)


End IRoyalty.is_proxy (Slither line:1428)


Begin IRoyalty.is_upgradeable_proxy (Slither line:1136)

Checking contract: IRoyalty 

End IRoyalty.is_upgradeable_proxy (Slither line:1407)


Begin IERC721.is_proxy (Slither line:1425)


End IERC721.is_proxy (Slither line:1428)


Begin IERC721.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC721 

End IERC721.is_upgradeable_proxy (Slither line:1407)


Begin NFTAllowance.is_proxy (Slither line:1425)


End NFTAllowance.is_proxy (Slither line:1428)


Begin NFTAllowance.is_upgradeable_proxy (Slither line:1136)

Checking contract: NFTAllowance 

End NFTAllowance.is_upgradeable_proxy (Slither line:1407)


Begin BidERC721Data.is_proxy (Slither line:1425)


End BidERC721Data.is_proxy (Slither line:1428)


Begin BidERC721Data.is_upgradeable_proxy (Slither line:1136)

Checking contract: BidERC721Data 

End BidERC721Data.is_upgradeable_proxy (Slither line:1407)


Begin benefitable.is_proxy (Slither line:1425)


End benefitable.is_proxy (Slither line:1428)


Begin benefitable.is_upgradeable_proxy (Slither line:1136)

Checking contract: benefitable 

End benefitable.is_upgradeable_proxy (Slither line:1407)


Begin Adminable.is_proxy (Slither line:1425)


End Adminable.is_proxy (Slither line:1428)


Begin Adminable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Adminable 

End Adminable.is_upgradeable_proxy (Slither line:1407)


Begin SecondaryToken.is_proxy (Slither line:1425)


End SecondaryToken.is_proxy (Slither line:1428)


Begin SecondaryToken.is_upgradeable_proxy (Slither line:1136)

Checking contract: SecondaryToken 

End SecondaryToken.is_upgradeable_proxy (Slither line:1407)


Begin Proxy.is_proxy (Slither line:1425)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let ptr := mload(0x40) (Slither line:1576)
    calldatacopy(ptr, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), target, ptr, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'target'
Looking for corresponding Variable
Current function: fallback

Begin Proxy.find_delegate_variable_from_name
Searching for target (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking owner (Slither line:1689)
Checking delegatedAddress (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking target (Slither line:1703)
target is a Local Variable in Proxy.fallback (Slither line:1707)
Expression: delegatedAddress (Slither line:1719)
Identifier value: delegatedAddress (Slither line:1725)
delegatedAddress is a State Variable in contract Proxy (Slither line:1730)

End Proxy.find_delegate_variable_by_name


End Proxy.find_delegatecall_in_asm (Slither line:1637)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 
Proxy is delegating to delegatedAddress
Looking for setter (Slither line:1200)


Begin Proxy.find_setter_in_contract (Slither line:3109)

Checking function: setDelegatedAddress(address) returns() (Slither line:3117)
Visibility: public
require(bool,string)(delegatedAddress == address(0),Delegated address is set before.)
require(bool,string)(_delegatedAddress != address(0),Invalid new address.)
require(bool,string)(owner == msg.sender,You should be owner to call this function.)
delegatedAddress = _delegatedAddress
is an Assignment Operation (Slither line:3206)

End Proxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: setDelegatedAddress in contract: Proxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin Proxy.find_getter_in_contract (Slither line:2964)

delegatedAddress is a Variable object
_delegatedAddress
Checking function: constructor (Slither line:2978)
Checking function: changeOwner (Slither line:2978)
Checking function: getOwner (Slither line:2978)
getOwner returns address variable  (Slither line:2998)
RETURN node expression: (owner) (Slither line:3018)
Checking function: setDelegatedAddress (Slither line:2978)
Checking function: getDelegatedAddress (Slither line:2978)
getDelegatedAddress returns address variable  (Slither line:2998)
RETURN node expression: (delegatedAddress) (Slither line:3018)
Checking function: fallback (Slither line:2978)

End Proxy.find_getter_in_contract (Slither line:3073)

Could not find implementation getter in Proxy (Slither line:1305)
Checking for delegatedAddress at slot 1 in contract ERC165 (Slither line:1355)
Found _supportedInterfaces at slot 1 in contract ERC165 (Slither line:1362)
Checking for _supportedInterfaces at slot 1 in contract ERC721 (Slither line:1355)
Found _supportedInterfaces at slot 1 in contract ERC721 (Slither line:1362)
Checking for _supportedInterfaces at slot 1 in contract ERC721Metadata (Slither line:1355)
Found _supportedInterfaces at slot 1 in contract ERC721Metadata (Slither line:1362)
Checking for _supportedInterfaces at slot 1 in contract ERC721Enumerable (Slither line:1355)
Found _supportedInterfaces at slot 1 in contract ERC721Enumerable (Slither line:1362)
Checking for _supportedInterfaces at slot 1 in contract Royalty (Slither line:1355)
Found _INTERFACE_ID_ERC165 at slot 1 in contract Royalty (Slither line:1362)
Checking for _INTERFACE_ID_ERC165 at slot 1 in contract ERC721Full (Slither line:1355)
Found _supportedInterfaces at slot 1 in contract ERC721Full (Slither line:1362)
Checking for _supportedInterfaces at slot 1 in contract BidERC721Data (Slither line:1355)
Found userAuctions at slot 1 in contract BidERC721Data (Slither line:1362)
Checking for userAuctions at slot 1 in contract benefitable (Slither line:1355)
Found beneficiary at slot 1 in contract benefitable (Slither line:1362)
Checking for beneficiary at slot 1 in contract Adminable (Slither line:1355)
Found admin at slot 1 in contract Adminable (Slither line:1362)
Checking for admin at slot 1 in contract SecondaryToken (Slither line:1355)
Found _INTERFACE_ID_ERC165 at slot 1 in contract SecondaryToken (Slither line:1362)
Checking for _INTERFACE_ID_ERC165 at slot 1 in contract BidERC721Base (Slither line:1355)
Found userAuctions at slot 1 in contract BidERC721Base (Slither line:1362)
Checking for userAuctions at slot 1 in contract BidERC721 (Slither line:1355)
Found userAuctions at slot 1 in contract BidERC721 (Slither line:1362)

Begin Ownable.find_getter_in_contract (Slither line:2964)

delegatedAddress is a Variable object
_delegatedAddress
Checking function: constructor (Slither line:2978)
Checking function: changeOwner (Slither line:2978)
Checking function: getOwner (Slither line:2978)
getOwner returns address variable  (Slither line:2998)
RETURN node expression: (owner) (Slither line:3018)

End Ownable.find_getter_in_contract (Slither line:3073)

Checking public function changeOwner
Checking public function changeOwner
Checking public function getOwner
Checking public function setDelegatedAddress
Checking public function getDelegatedAddress
Checking external function fallback
functions_writing_to_variable: delegatedAddress
functions_writing_to_variable: checking function Proxy.getDelegatedAddress (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.setDelegatedAddress (proxy_features line:893)
functions_writing_to_variable: exp = require(bool,string)(delegatedAddress == address(0),Delegated address is set before.) (proxy_features line:904)
functions_writing_to_variable: exp = require(bool,string)(_delegatedAddress != address(0),Invalid new address.) (proxy_features line:904)
functions_writing_to_variable: exp = delegatedAddress = _delegatedAddress (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: delegatedAddress = _delegatedAddress (proxy_features line:907)
functions_writing_to_variable: Identifier: delegatedAddress (proxy_features line:919)
get_value_assigned: delegatedAddress = _delegatedAddress
functions_writing_to_variable: exp = isOwner() (proxy_features line:904)
functions_writing_to_variable: exp = require(bool,string)(owner == msg.sender,You should be owner to call this function.) (proxy_features line:904)
functions_writing_to_variable: setDelegatedAddress writes _delegatedAddress to delegatedAddress (proxy_features line:924)
functions_writing_to_variable: checking function Proxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.getOwner (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.changeOwner (proxy_features line:893)
has_compatibility_checks: dependencies: ['_delegatedAddress']
has_compatibility_checks: checking public function setDelegatedAddress
require(bool,string)(delegatedAddress == address(0),Delegated address is set before.)
has_compatibility_checks: condition delegatedAddress == address(0)
require(bool,string)(_delegatedAddress != address(0),Invalid new address.)
has_compatibility_checks: condition _delegatedAddress != address(0)
check_condition_from_expression: modifier calls: ['isOwner()']
check_condition_from_expression: condition _delegatedAddress != address(0)
require(bool,string)(owner == msg.sender,You should be owner to call this function.)
has_compatibility_checks: condition owner == msg.sender
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    let ptr := mload(0x40)
    calldatacopy(ptr, 0, calldatasize())
    let result := delegatecall(gas(), target, ptr, calldatasize(), 0, 0)
    let size := returndatasize()
    returndatacopy(ptr, 0, size)
    switch result
    case 0 { revert(ptr, size) }
    case 1 { return(ptr, size) }
}
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: target = delegatedAddress
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: constructor
Found public function: changeOwner
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(delegatedAddress == address(0),Delegated address is set before.)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(_delegatedAddress != address(0),Invalid new address.)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(owner == msg.sender,You should be owner to call this function.)
has_time_delay: (node.type) EXPRESSION
(Expression) delegatedAddress = _delegatedAddress
has_time_delay: (node.type) EXPRESSION
(Expression) isOwner()

Begin BidERC721Base.is_proxy (Slither line:1425)


End BidERC721Base.is_proxy (Slither line:1428)


Begin BidERC721Base.is_upgradeable_proxy (Slither line:1136)

Checking contract: BidERC721Base 

End BidERC721Base.is_upgradeable_proxy (Slither line:1407)


Begin BidERC721.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2727)


End Contract.find_delegatecall_in_ir (Slither line:2763)


Found Assembly Node (Slither line:1447)


Begin BidERC721.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    let ptr := mload(0x40) (Slither line:1576)
    calldatacopy(ptr, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), target, ptr, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'target'
Looking for corresponding Variable
Current function: fallback

Begin BidERC721.find_delegate_variable_from_name
Searching for target (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking auctions (Slither line:1689)
Checking userAuctions (Slither line:1689)
Checking myBids (Slither line:1689)
Checking activeAuction (Slither line:1689)
Checking nftTokenHistory (Slither line:1689)
Checking activeAuctions (Slither line:1689)
Checking maxBidStartGap (Slither line:1689)
Checking maxBidDuration (Slither line:1689)
Checking winnerCommission (Slither line:1689)
Checking primaryCreatorCommission (Slither line:1689)
Checking secondaryCreatorCommission (Slither line:1689)
Checking limitedToken (Slither line:1689)
Checking NFTAllowanceContract (Slither line:1689)
Checking owner (Slither line:1689)
Checking beneficiary (Slither line:1689)
Checking admin (Slither line:1689)
Checking delegatedAddress (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking target (Slither line:1703)
target is a Local Variable in BidERC721.fallback (Slither line:1707)
Expression: delegatedAddress (Slither line:1719)
Identifier value: delegatedAddress (Slither line:1725)
delegatedAddress is a State Variable in contract Proxy (Slither line:1730)

End BidERC721.find_delegate_variable_by_name


End BidERC721.find_delegatecall_in_asm (Slither line:1637)


End BidERC721.is_proxy (Slither line:1476)


Begin BidERC721.is_upgradeable_proxy (Slither line:1136)

Checking contract: BidERC721 
BidERC721 is delegating to delegatedAddress
Looking for setter (Slither line:1200)

Looking for setter in Proxy (Slither line:1204)


Begin Proxy.find_setter_in_contract (Slither line:3109)

Expression: _delegatedAddress (Slither line:3112)
Checking function: setDelegatedAddress(address) returns() (Slither line:3117)
Visibility: public
require(bool,string)(delegatedAddress == address(0),Delegated address is set before.)
require(bool,string)(_delegatedAddress != address(0),Invalid new address.)
require(bool,string)(owner == msg.sender,You should be owner to call this function.)
delegatedAddress = _delegatedAddress
is an Assignment Operation (Slither line:3206)
_delegatedAddress

End Proxy.find_setter_in_contract (Slither line:3315)


Implementation set by function: setDelegatedAddress in contract: Proxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin Proxy.find_getter_in_contract (Slither line:2964)

delegatedAddress is a Variable object
_delegatedAddress
Checking function: constructor (Slither line:2978)
Checking function: changeOwner (Slither line:2978)
Checking function: getOwner (Slither line:2978)
getOwner returns address variable  (Slither line:2998)
RETURN node expression: (owner) (Slither line:3018)
Checking function: setDelegatedAddress (Slither line:2978)
Checking function: getDelegatedAddress (Slither line:2978)
getDelegatedAddress returns address variable  (Slither line:2998)
RETURN node expression: (delegatedAddress) (Slither line:3018)
Checking function: fallback (Slither line:2978)

End Proxy.find_getter_in_contract (Slither line:3073)


Begin BidERC721.find_getter_in_contract (Slither line:2964)

delegatedAddress is a Variable object
_delegatedAddress
Checking function: setDelegatedAddress (Slither line:2978)
Checking function: getDelegatedAddress (Slither line:2978)
getDelegatedAddress returns address variable  (Slither line:2998)
RETURN node expression: (delegatedAddress) (Slither line:3018)
Checking function: fallback (Slither line:2978)
Checking function: constructor (Slither line:2978)
Checking function: changeOwner (Slither line:2978)
Checking function: getOwner (Slither line:2978)
getOwner returns address variable  (Slither line:2998)
RETURN node expression: (owner) (Slither line:3018)
Checking function: constructor (Slither line:2978)
Checking function: changeAdmin (Slither line:2978)
Checking function: getAdmin (Slither line:2978)
getAdmin returns address variable  (Slither line:2998)
RETURN node expression: (admin) (Slither line:3018)
Checking function: constructor (Slither line:2978)
Checking function: setAuction (Slither line:2978)
Checking function: cancelAuction (Slither line:2978)
Checking function: cancelAuctionById (Slither line:2978)
Checking function: setBid (Slither line:2978)
Checking function: setBidById (Slither line:2978)
Checking function: withdrawNft (Slither line:2978)
Checking function: withdrawNftById (Slither line:2978)
Checking function: _payToken (Slither line:2978)
Checking function: _payErc721Token (Slither line:2978)
Checking function: _removeActiveAuctionsElement (Slither line:2978)
Checking function: inArray (Slither line:2978)
inArray returns bool variable  (Slither line:2998)
RETURN node expression: (false) (Slither line:3018)
RETURN node expression: (true) (Slither line:3018)
Checking function: constructor (Slither line:2978)
Checking function: setBeneficiary (Slither line:2978)
Checking function: getBeneficiary (Slither line:2978)
getBeneficiary returns address variable  (Slither line:2998)
RETURN node expression: (beneficiary) (Slither line:3018)
Checking function: setMaxBidStartGap (Slither line:2978)
Checking function: setMaxBidDuration (Slither line:2978)
Checking function: setWinnerCommission (Slither line:2978)
Checking function: setPrimaryCreatorCommission (Slither line:2978)
Checking function: setSecondaryCreatorCommission (Slither line:2978)
Checking function: setNFTAllowanceContract (Slither line:2978)
Checking function: slitherConstructorVariables (Slither line:2978)

End BidERC721.find_getter_in_contract (Slither line:3073)

Could not find implementation getter in BidERC721 (Slither line:1305)
or in Proxy (Slither line:1319)
Checking for delegatedAddress at slot 16 in contract ERC721Full (Slither line:1355)
Found _INTERFACE_ID_ERC721_METADATA at slot 16 in contract ERC721Full (Slither line:1362)
Checking for _INTERFACE_ID_ERC721_METADATA at slot 16 in contract SecondaryToken (Slither line:1355)
Found _tokenURIs at slot 16 in contract SecondaryToken (Slither line:1362)

Begin Ownable.find_getter_in_contract (Slither line:2964)

delegatedAddress is a Variable object
_delegatedAddress
Checking function: constructor (Slither line:2978)
Checking function: changeOwner (Slither line:2978)
Checking function: getOwner (Slither line:2978)
getOwner returns address variable  (Slither line:2998)
RETURN node expression: (owner) (Slither line:3018)

End Ownable.find_getter_in_contract (Slither line:3073)

impl_address_from_contract_call: _delegatedAddress
impl_address_from_contract_call: StateVariable delegatedAddress
impl_address_from_contract_call: getter is None
Checking public function setDelegatedAddress
Checking public function setDelegatedAddress
Checking public function getDelegatedAddress
Checking public function changeOwner
Checking public function getOwner
Checking public function changeAdmin
Checking public function getAdmin
Checking public function setAuction
Checking public function cancelAuction
Checking public function cancelAuctionById
Checking public function setBid
Checking public function setBidById
Checking public function withdrawNft
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == _auction.tokenBidder || msg.sender == _auction.tokenSeller,You are not NFT token buyer or bider.)
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == _auction.tokenSeller,You are not NFT token owner.)
Checking public function withdrawNftById
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == _auction.tokenBidder || msg.sender == _auction.tokenSeller,You are not NFT token buyer or bider.)
Found 'msg.sender ==' in expression: require(bool,string)(msg.sender == _auction.tokenSeller,You are not NFT token owner.)
Checking public function setBeneficiary
Checking public function getBeneficiary
Checking public function setMaxBidStartGap
Checking public function setMaxBidDuration
Checking public function setWinnerCommission
Checking public function setPrimaryCreatorCommission
Checking public function setSecondaryCreatorCommission
Checking public function setNFTAllowanceContract
Checking external function fallback
functions_writing_to_variable: delegatedAddress
functions_writing_to_variable: checking function BidERC721.changeOwner (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.setWinnerCommission (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.withdrawNft (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.cancelAuctionById (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.getOwner (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.getOwner (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721._removeActiveAuctionsElement (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.setPrimaryCreatorCommission (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.constructor (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.setAuction (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.withdrawNftById (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.setDelegatedAddress (proxy_features line:893)
functions_writing_to_variable: exp = require(bool,string)(delegatedAddress == address(0),Delegated address is set before.) (proxy_features line:904)
functions_writing_to_variable: exp = require(bool,string)(_delegatedAddress != address(0),Invalid new address.) (proxy_features line:904)
functions_writing_to_variable: exp = delegatedAddress = _delegatedAddress (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: delegatedAddress = _delegatedAddress (proxy_features line:907)
functions_writing_to_variable: Identifier: delegatedAddress (proxy_features line:919)
get_value_assigned: delegatedAddress = _delegatedAddress
functions_writing_to_variable: exp = isOwner() (proxy_features line:904)
functions_writing_to_variable: exp = require(bool,string)(owner == msg.sender,You should be owner to call this function.) (proxy_features line:904)
functions_writing_to_variable: setDelegatedAddress writes _delegatedAddress to delegatedAddress (proxy_features line:924)
functions_writing_to_variable: checking function BidERC721.setBeneficiary (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.setSecondaryCreatorCommission (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.constructor (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.getDelegatedAddress (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.cancelAuction (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.setBid (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.getBeneficiary (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.setNFTAllowanceContract (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.setDelegatedAddress (proxy_features line:893)
functions_writing_to_variable: exp = require(bool,string)(delegatedAddress == address(0),Delegated address is set before.) (proxy_features line:904)
functions_writing_to_variable: exp = require(bool,string)(_delegatedAddress != address(0),Invalid new address.) (proxy_features line:904)
functions_writing_to_variable: exp = delegatedAddress = _delegatedAddress (proxy_features line:904)
functions_writing_to_variable: AssignmentOperation: delegatedAddress = _delegatedAddress (proxy_features line:907)
functions_writing_to_variable: Identifier: delegatedAddress (proxy_features line:919)
get_value_assigned: delegatedAddress = _delegatedAddress
functions_writing_to_variable: exp = isOwner() (proxy_features line:904)
functions_writing_to_variable: exp = require(bool,string)(owner == msg.sender,You should be owner to call this function.) (proxy_features line:904)
functions_writing_to_variable: setDelegatedAddress writes _delegatedAddress to delegatedAddress (proxy_features line:924)
functions_writing_to_variable: checking function BidERC721.inArray (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721._payToken (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.changeAdmin (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.fallback (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.setBidById (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.setMaxBidStartGap (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.getDelegatedAddress (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.getAdmin (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.constructor (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.slitherConstructorVariables (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721._payErc721Token (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.constructor (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.constructor (proxy_features line:893)
functions_writing_to_variable: checking function BidERC721.setMaxBidDuration (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.fallback (proxy_features line:893)
functions_writing_to_variable: checking function Proxy.changeOwner (proxy_features line:893)
has_compatibility_checks: dependencies: ['_delegatedAddress', '_delegatedAddress']
has_compatibility_checks: checking public function setDelegatedAddress
require(bool,string)(delegatedAddress == address(0),Delegated address is set before.)
has_compatibility_checks: condition delegatedAddress == address(0)
require(bool,string)(_delegatedAddress != address(0),Invalid new address.)
has_compatibility_checks: condition _delegatedAddress != address(0)
check_condition_from_expression: modifier calls: ['isOwner()']
check_condition_from_expression: condition _delegatedAddress != address(0)
require(bool,string)(owner == msg.sender,You should be owner to call this function.)
has_compatibility_checks: condition owner == msg.sender
has_compatibility_checks: checking public function setDelegatedAddress
require(bool,string)(delegatedAddress == address(0),Delegated address is set before.)
has_compatibility_checks: condition delegatedAddress == address(0)
require(bool,string)(_delegatedAddress != address(0),Invalid new address.)
has_compatibility_checks: condition _delegatedAddress != address(0)
check_condition_from_expression: modifier calls: ['isOwner()']
check_condition_from_expression: condition _delegatedAddress != address(0)
require(bool,string)(owner == msg.sender,You should be owner to call this function.)
has_compatibility_checks: condition owner == msg.sender
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    let ptr := mload(0x40)
    calldatacopy(ptr, 0, calldatasize())
    let result := delegatecall(gas(), target, ptr, calldatasize(), 0, 0)
    let size := returndatasize()
    returndatacopy(ptr, 0, size)
    switch result
    case 0 { revert(ptr, size) }
    case 1 { return(ptr, size) }
}
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: target = delegatedAddress
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
Found public function: setDelegatedAddress
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(delegatedAddress == address(0),Delegated address is set before.)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(_delegatedAddress != address(0),Invalid new address.)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(owner == msg.sender,You should be owner to call this function.)
has_time_delay: (node.type) EXPRESSION
(Expression) delegatedAddress = _delegatedAddress
has_time_delay: (node.type) EXPRESSION
(Expression) isOwner()
