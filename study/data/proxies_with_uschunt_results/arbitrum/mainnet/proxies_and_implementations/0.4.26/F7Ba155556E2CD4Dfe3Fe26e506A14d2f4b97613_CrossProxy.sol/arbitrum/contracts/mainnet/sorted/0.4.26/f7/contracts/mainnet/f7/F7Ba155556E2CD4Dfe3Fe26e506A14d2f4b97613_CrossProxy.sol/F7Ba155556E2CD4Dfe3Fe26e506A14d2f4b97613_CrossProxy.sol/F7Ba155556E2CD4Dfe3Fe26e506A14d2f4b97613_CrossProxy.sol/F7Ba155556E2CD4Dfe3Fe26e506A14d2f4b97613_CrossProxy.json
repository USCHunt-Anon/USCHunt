{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "Proxy (../../smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies_and_implementations/0.4.26/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/arbitrum/contracts/mainnet/sorted/0.4.26/f7/contracts/mainnet/f7/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol#40-66)",
        "elements": [],
        "description": "Proxy (../../smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies_and_implementations/0.4.26/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/arbitrum/contracts/mainnet/sorted/0.4.26/f7/contracts/mainnet/f7/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol#40-66) is a proxy, but doesn't seem upgradeable.\n",
        "id": "cb70bcec6d81585d7521ef499de1dc4cc025c9eb09a62b94cfe4ec81796afff6",
        "features": {
          "upgradeable": false
        }
      },
      {
        "contract": "CrossProxy (../../smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies_and_implementations/0.4.26/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/arbitrum/contracts/mainnet/sorted/0.4.26/f7/contracts/mainnet/f7/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol#1301-1311)",
        "elements": [],
        "description": "CrossProxy (../../smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies_and_implementations/0.4.26/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/arbitrum/contracts/mainnet/sorted/0.4.26/f7/contracts/mainnet/f7/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol#1301-1311) is an upgradeable proxy.\n_implementation was found in a different contract.\n_implementation is an address state variable.\n uses Inherited Storage\nFound compatibility checks in all upgrade functions.\n",
        "id": "85a5364035c7ce5eced2c5681c97826b35d977642c72c78133e26e78cb2a109a",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "Proxy._implementation",
          "impl_address_setter": "CrossProxy.upgradeTo(address)",
          "impl_address_getter": "Proxy.implementation()",
          "impl_address_location": "Proxy (../../smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies_and_implementations/0.4.26/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/arbitrum/contracts/mainnet/sorted/0.4.26/f7/contracts/mainnet/f7/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol#40-66)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "CrossProxy.upgradeTo(address)": {
                "check": "require(bool,string)(impl != _implementation,Cannot upgrade to the same implementation)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": false,
          "immutable_functions": {
            "other": [
              "implementation()",
              "setHalt(bool)",
              "transferOwner(address)",
              "changeOwner(address)",
              "acceptOwnership()",
              "renounceOwnership()",
              "upgradeTo(address)"
            ]
          }
        }
      },
      {
        "contract": "CrossStorageV2 (../../smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies_and_implementations/0.4.26/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/arbitrum/contracts/mainnet/sorted/0.4.26/f7/contracts/mainnet/f7/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol#1533-1562)",
        "elements": [],
        "description": "CrossStorageV2 (../../smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies_and_implementations/0.4.26/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/arbitrum/contracts/mainnet/sorted/0.4.26/f7/contracts/mainnet/f7/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol#1533-1562) is an upgradeable proxy.\n_implementation was found in a different contract.\n_implementation is an address state variable.\n uses Inherited Storage\nFound compatibility checks in all upgrade functions.\nTo remove upgradeability, delete upgradeTo from CrossProxy\n",
        "id": "f72d80722495f9b10744d5f8bfdca548eeabd560af91627f99d0ed03c862d3c2",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "Proxy._implementation",
          "impl_address_setter": "CrossProxy.upgradeTo(address)",
          "impl_address_getter": "Proxy.implementation()",
          "impl_address_location": "Proxy (../../smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies_and_implementations/0.4.26/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/arbitrum/contracts/mainnet/sorted/0.4.26/f7/contracts/mainnet/f7/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol#40-66)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "CrossProxy.upgradeTo(address)": {
                "check": "require(bool,string)(impl != _implementation,Cannot upgrade to the same implementation)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove upgradeTo from CrossProxy",
          "immutable_functions": {
            "other": [
              "implementation()",
              "setHalt(bool)",
              "transferOwner(address)",
              "changeOwner(address)",
              "acceptOwnership()",
              "renounceOwnership()"
            ]
          }
        }
      },
      {
        "contract": "CrossDelegateV2 (../../smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies_and_implementations/0.4.26/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/arbitrum/contracts/mainnet/sorted/0.4.26/f7/contracts/mainnet/f7/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol#2026-2440)",
        "elements": [],
        "description": "CrossDelegateV2 (../../smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies_and_implementations/0.4.26/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/arbitrum/contracts/mainnet/sorted/0.4.26/f7/contracts/mainnet/f7/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol#2026-2440) is an upgradeable proxy.\n_implementation was found in a different contract.\n_implementation is an address state variable.\n uses Inherited Storage\nFound compatibility checks in all upgrade functions.\nTo remove upgradeability, delete upgradeTo from CrossProxy\n",
        "id": "e56ca075576d2c42e52b30b2e81235e0790df8d12d216be8531ebda66c2e8225",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "Proxy._implementation",
          "impl_address_setter": "CrossProxy.upgradeTo(address)",
          "impl_address_getter": "Proxy.implementation()",
          "impl_address_location": "Proxy (../../smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies_and_implementations/0.4.26/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/arbitrum/contracts/mainnet/sorted/0.4.26/f7/contracts/mainnet/f7/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol/F7Ba155556E2CD4Dfe3Fe26e506A14d2f4b97613_CrossProxy.sol#40-66)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "address",
          "inherited_storage": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": {
              "CrossProxy.upgradeTo(address)": {
                "check": "require(bool,string)(impl != _implementation,Cannot upgrade to the same implementation)",
                "is_correct": true
              }
            }
          },
          "can_remove_upgradeability": true,
          "how_to_remove_upgradeability": "remove upgradeTo from CrossProxy",
          "immutable_functions": {
            "other": [
              "implementation()",
              "setHalt(bool)",
              "transferOwner(address)",
              "changeOwner(address)",
              "acceptOwnership()",
              "renounceOwnership()",
              "userLock(bytes32,uint256,uint256,bytes)",
              "userBurn(bytes32,uint256,uint256,uint256,address,bytes)",
              "smgMint(bytes32,bytes32,uint256,uint256,address,address,bytes,bytes32)",
              "smgRelease(bytes32,bytes32,uint256,uint256,address,address,bytes,bytes32)",
              "transferAsset(bytes32,bytes32,bytes32,bytes,bytes32)",
              "receiveDebt(bytes32,bytes32,bytes32,bytes,bytes32)",
              "setFee(CrossStorageV2.SetFeesParam)",
              "setFees(CrossStorageV2.SetFeesParam[])",
              "setChainID(uint256)",
              "setAdmin(address)",
              "setUintValue(bytes,bytes,uint256)",
              "delUintValue(bytes,bytes)",
              "setPartners(address,address,address,address,address)",
              "smgWithdrawFee(bytes32[])",
              "getUintValue(bytes,bytes)",
              "getStoremanFee(bytes32)",
              "getFee(CrossStorageV2.GetFeesParam)",
              "getFees(CrossStorageV2.GetFeesParam[])",
              "getPartners()"
            ]
          }
        }
      }
    ]
  }
}