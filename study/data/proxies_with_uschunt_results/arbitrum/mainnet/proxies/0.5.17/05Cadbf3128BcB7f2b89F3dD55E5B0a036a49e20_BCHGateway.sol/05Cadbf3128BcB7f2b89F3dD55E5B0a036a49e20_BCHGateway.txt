
Begin Initializable.is_proxy (Slither line:1425)


End Initializable.is_proxy (Slither line:1428)


Begin Initializable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Initializable 

End Initializable.is_upgradeable_proxy (Slither line:1407)


Begin SafeMath.is_proxy (Slither line:1425)


End SafeMath.is_proxy (Slither line:1428)


Begin SafeMath.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeMath 

End SafeMath.is_upgradeable_proxy (Slither line:1407)


Begin ECDSA.is_proxy (Slither line:1425)


End ECDSA.is_proxy (Slither line:1428)


Begin ECDSA.is_upgradeable_proxy (Slither line:1136)

Checking contract: ECDSA 

End ECDSA.is_upgradeable_proxy (Slither line:1407)


Begin Proxy.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2802)
Expression called: _delegate
Type of call: tuple() (Slither line:2817)
Args:
_implementation()

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2802)
Expression called: _fallback
Type of call: tuple() (Slither line:2817)
Args:

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin Proxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin Proxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in Proxy._delegate (Slither line:1805)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin Proxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
Got abstract function, looking for overriding function (Slither line:2025)
Failure (Slither line:2033)
_implementation returns a variable of type address   (Slither line:2193)
Return value is LocalVariable:  (Slither line:2266)
has no expression (Slither line:2326)

End Proxy.find_delegate_from_call_exp (Slither line:2328)

CallExpression: _fallback() (Slither line:1819)
CallExpression: _willFallback() (Slither line:1819)
_delegate contains assembly, searching for sload (Slither line:1875)

End Proxy.find_delegate_variable_from_name (Slither line:1949)


Begin Proxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2683)


End Proxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2710)


End Proxy.find_delegatecall_in_asm (Slither line:1637)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin Proxy.find_delegatecall_in_exp_node

Found Expression Node: _willFallback() (Slither line:2802)
Expression called: _willFallback
Type of call: tuple() (Slither line:2817)
Args:

End Proxy.find_delegatecall_in_exp_node (Slither line:2858)


End Proxy.is_proxy (Slither line:1476)


Begin Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: Proxy 

End Proxy.is_upgradeable_proxy (Slither line:1407)


Begin OpenZeppelinUpgradesAddress.is_proxy (Slither line:1425)


End OpenZeppelinUpgradesAddress.is_proxy (Slither line:1428)


Begin OpenZeppelinUpgradesAddress.is_upgradeable_proxy (Slither line:1136)

Checking contract: OpenZeppelinUpgradesAddress 

End OpenZeppelinUpgradesAddress.is_upgradeable_proxy (Slither line:1407)


Begin BaseUpgradeabilityProxy.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BaseUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2802)
Expression called: _fallback
Type of call: tuple() (Slither line:2817)
Args:

End BaseUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin BaseUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin BaseUpgradeabilityProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in BaseUpgradeabilityProxy._delegate (Slither line:1805)
CallExpression: _fallback() (Slither line:1819)
AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
CallExpression: _willFallback() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin BaseUpgradeabilityProxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
_implementation returns a variable of type address   called impl (Slither line:2193)
_implementation contains assembly - looking for sload (Slither line:2199)
Looking in ASSEMBLY node (Slither line:2206)
{ impl := sload(slot) }  (Slither line:2210)
Return value set by sload in asm (Slither line:2212)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2232)

End BaseUpgradeabilityProxy.find_delegate_from_call_exp (Slither line:2328)

_delegate contains assembly, searching for sload (Slither line:1875)

End BaseUpgradeabilityProxy.find_delegate_variable_from_name (Slither line:1949)


Begin BaseUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2683)


End BaseUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2710)


End BaseUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

Setting BaseUpgradeabilityProxy._delegate_variable = BaseUpgradeabilityProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End BaseUpgradeabilityProxy.is_proxy (Slither line:1476)


Begin BaseUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: BaseUpgradeabilityProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

BaseUpgradeabilityProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)


Begin BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)

End BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3345)


Could not find implementation setter in BaseUpgradeabilityProxy (Slither line:1269)
Looking for getter (Slither line:1273)


Begin BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
Checking function: fallback (Slither line:2988)
Checking function: _delegate (Slither line:2988)
Checking function: _willFallback (Slither line:2988)
Checking function: _fallback (Slither line:2988)
Checking function: _implementation (Slither line:2988)
_implementation returns address variable called impl (Slither line:3008)
_implementation contains assembly (Slither line:3051)
_implementation contains assembly (Slither line:3051)

End BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: _implementation in contract: BaseUpgradeabilityProxy (Slither line:1285)

Begin BaseUpgradeabilityProxy.getter_return_is_non_constant (Slither line:2883)

Found getter function but not setter
Checking if getter calls any other function
ENTRY_POINT: None (Slither line:2888)
INLINE ASM: None (Slither line:2888)
NEW VARIABLE: slot = IMPLEMENTATION_SLOT (Slither line:2888)

End BaseUpgradeabilityProxy.getter_return_is_non_constant (Slither line:2942)


End BaseUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1293)


Begin UpgradeabilityProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin UpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2802)
Expression called: _fallback
Type of call: tuple() (Slither line:2817)
Args:

End UpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin UpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin UpgradeabilityProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in UpgradeabilityProxy._delegate (Slither line:1805)
CallExpression: _fallback() (Slither line:1819)
CallExpression: _willFallback() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin UpgradeabilityProxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
_implementation returns a variable of type address   called impl (Slither line:2193)
_implementation contains assembly - looking for sload (Slither line:2199)
Looking in ASSEMBLY node (Slither line:2206)
{ impl := sload(slot) }  (Slither line:2210)
Return value set by sload in asm (Slither line:2212)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2232)

End UpgradeabilityProxy.find_delegate_from_call_exp (Slither line:2328)

AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
_delegate contains assembly, searching for sload (Slither line:1875)

End UpgradeabilityProxy.find_delegate_variable_from_name (Slither line:1949)


Begin UpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2683)


End UpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2710)


End UpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

Setting UpgradeabilityProxy._delegate_variable = UpgradeabilityProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End UpgradeabilityProxy.is_proxy (Slither line:1476)


Begin UpgradeabilityProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: UpgradeabilityProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

UpgradeabilityProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)

Looking for setter in BaseUpgradeabilityProxy (Slither line:1204)


Begin BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)

End BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3345)


Could not find setter in BaseUpgradeabilityProxy 
Looking in UpgradeabilityProxy (Slither line:1213)

Begin UpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: constructor(address,bytes) returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)

End UpgradeabilityProxy.find_setter_in_contract (Slither line:3345)


Could not find setter in UpgradeabilityProxy (Slither line:1220)
Looking for setter in BaseAdminUpgradeabilityProxy (Slither line:1228)


Begin BaseAdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
ifAdmin()
_willFallback()
_delegate(_implementation())
_fallback()
_admin()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
_willFallback()
_delegate(_implementation())
_implementation()
ifAdmin()
_fallback()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
_setAdmin(newAdmin)
_willFallback()
_delegate(_implementation())
ifAdmin()
{ sstore(slot, newAdmin) } (Slither line:3163)
changeAdmin reads and/or writes to variable slot (Slither line:3170)
changeAdmin reads and/or writes to variable ADMIN_SLOT (Slither line:3170)
_fallback()
require(bool,string)(newAdmin != address(0),Cannot change the admin of a proxy to the zero address)
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
AdminChanged(_admin(),newAdmin)
super._willFallback()
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
_willFallback()
_delegate(_implementation())
_setImplementation(newImplementation)
_upgradeTo(newImplementation)
Upgraded(newImplementation)
ifAdmin()
size > 0
_fallback()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
    sstore(slot, newImplementation) (Slither line:3163)
upgradeTo reads and/or writes to variable slot (Slither line:3170)
upgradeTo reads and/or writes to variable IMPLEMENTATION_SLOT (Slither line:3170)
upgradeTo reads and/or writes to variable OpenZeppelinUpgradesAddress (Slither line:3170)
upgradeTo reads and/or writes to variable newImplementation (Slither line:3170)

End BaseAdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: BaseAdminUpgradeabilityProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: _implementation in contract: BaseUpgradeabilityProxy (Slither line:1285)

End UpgradeabilityProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: UpgradeabilityProxy
Setter found in contract BaseAdminUpgradeabilityProxy
Found fallback
Found public function: constructor
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable IMPLEMENTATION_SLOT
impl_address_from_contract_call: getter is _implementation
getter.full_name = _implementation()
library call: OpenZeppelinUpgradesAddress.isContract
impl_address_from_contract_call: CallExpression _fallback()
impl_address_from_contract_call: CallExpression _willFallback()
impl_address_from_contract_call: CallExpression _delegate(_implementation())
impl_address_from_contract_call: arg is _implementation()
impl_address_from_contract_call: CallExpression _implementation()
Checking external function fallback
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._setImplementation (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function UpgradeabilityProxy._setImplementation (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function UpgradeabilityProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.upgradeToAndCall (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function UpgradeabilityProxy.constructor (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: constructor writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function UpgradeabilityProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._admin (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:924)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: exp = ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:912)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function UpgradeabilityProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function UpgradeabilityProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function UpgradeabilityProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function UpgradeabilityProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:924)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function UpgradeabilityProxy._upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function UpgradeabilityProxy._willFallback (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: checking external function upgradeTo
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
has_compatibility_checks: checking external function upgradeToAndCall
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
has_compatibility_checks: skipping constructor
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: skipping internal function _upgradeTo
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
has_time_delay: (node.type) EXPRESSION
(Expression) _willFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) IF
(Expression) msg.sender == _admin()
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_time_delay: (node.type) EXPRESSION
(Expression) super._willFallback()
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = ADMIN_SLOT

Begin BaseAdminUpgradeabilityProxy.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BaseAdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2802)
Expression called: _fallback
Type of call: tuple() (Slither line:2817)
Args:

End BaseAdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin BaseAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin BaseAdminUpgradeabilityProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_SLOT (Slither line:1689)
Checking ADMIN_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in BaseAdminUpgradeabilityProxy._delegate (Slither line:1805)
CallExpression: _fallback() (Slither line:1819)
CallExpression: _willFallback() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin BaseAdminUpgradeabilityProxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
_implementation returns a variable of type address   called impl (Slither line:2193)
_implementation contains assembly - looking for sload (Slither line:2199)
Looking in ASSEMBLY node (Slither line:2206)
{ impl := sload(slot) }  (Slither line:2210)
Return value set by sload in asm (Slither line:2212)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2232)

End BaseAdminUpgradeabilityProxy.find_delegate_from_call_exp (Slither line:2328)

CallExpression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:1819)
CallExpression: super._willFallback() (Slither line:1819)
AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
AssignmentOperation: ADMIN_SLOT (Slither line:1811)
_delegate contains assembly, searching for sload (Slither line:1875)

End BaseAdminUpgradeabilityProxy.find_delegate_variable_from_name (Slither line:1949)


Begin BaseAdminUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2683)


End BaseAdminUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2710)


End BaseAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

Setting BaseAdminUpgradeabilityProxy._delegate_variable = BaseAdminUpgradeabilityProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End BaseAdminUpgradeabilityProxy.is_proxy (Slither line:1476)


Begin BaseAdminUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: BaseAdminUpgradeabilityProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

BaseAdminUpgradeabilityProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)

Looking for setter in BaseUpgradeabilityProxy (Slither line:1204)


Begin BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)

End BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3345)


Could not find setter in BaseUpgradeabilityProxy 
Looking in BaseAdminUpgradeabilityProxy (Slither line:1213)

Begin BaseAdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
ifAdmin()
_willFallback()
_delegate(_implementation())
_fallback()
_admin()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
_willFallback()
_delegate(_implementation())
_implementation()
ifAdmin()
_fallback()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
_setAdmin(newAdmin)
_willFallback()
_delegate(_implementation())
ifAdmin()
{ sstore(slot, newAdmin) } (Slither line:3163)
changeAdmin reads and/or writes to variable slot (Slither line:3170)
changeAdmin reads and/or writes to variable ADMIN_SLOT (Slither line:3170)
_fallback()
require(bool,string)(newAdmin != address(0),Cannot change the admin of a proxy to the zero address)
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
AdminChanged(_admin(),newAdmin)
super._willFallback()
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
_willFallback()
_delegate(_implementation())
_setImplementation(newImplementation)
_upgradeTo(newImplementation)
Upgraded(newImplementation)
ifAdmin()
size > 0
_fallback()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
    sstore(slot, newImplementation) (Slither line:3163)
upgradeTo reads and/or writes to variable slot (Slither line:3170)
upgradeTo reads and/or writes to variable IMPLEMENTATION_SLOT (Slither line:3170)
upgradeTo reads and/or writes to variable OpenZeppelinUpgradesAddress (Slither line:3170)
upgradeTo reads and/or writes to variable newImplementation (Slither line:3170)

End BaseAdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: BaseAdminUpgradeabilityProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: _implementation in contract: BaseUpgradeabilityProxy (Slither line:1285)

End BaseAdminUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: BaseAdminUpgradeabilityProxy
Setter found in contract BaseAdminUpgradeabilityProxy
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable IMPLEMENTATION_SLOT
impl_address_from_contract_call: getter is _implementation
getter.full_name = _implementation()
library call: OpenZeppelinUpgradesAddress.isContract
impl_address_from_contract_call: CallExpression _fallback()
impl_address_from_contract_call: CallExpression _willFallback()
impl_address_from_contract_call: CallExpression _delegate(_implementation())
impl_address_from_contract_call: arg is _implementation()
impl_address_from_contract_call: CallExpression _implementation()
impl_address_from_contract_call: CallExpression require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
impl_address_from_contract_call: arg is msg.sender != _admin()
impl_address_from_contract_call: arg is Cannot call fallback function from the proxy admin
impl_address_from_contract_call: CallExpression super._willFallback()
Checking external function fallback
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
Checking external function admin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function implementation
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function changeAdmin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _admin()
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._setImplementation (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.upgradeToAndCall (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._admin (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:924)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: exp = ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:912)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._implementation (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: checking external function upgradeToAndCall
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
has_compatibility_checks: checking external function upgradeTo
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
Found fallback
Found external function: admin
has_time_delay: (node.type) EXPRESSION
(Expression) _willFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) IF
(Expression) msg.sender == _admin()
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_time_delay: (node.type) EXPRESSION
(Expression) super._willFallback()
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = ADMIN_SLOT

Begin InitializableUpgradeabilityProxy.is_proxy (Slither line:1425)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin InitializableUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ impl := sload(slot) } (Slither line:1576)

End InitializableUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)


Begin InitializableUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ impl := sload(slot) } (Slither line:1576)

End InitializableUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin InitializableUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _willFallback() (Slither line:2802)
Expression called: _willFallback
Type of call: tuple() (Slither line:2817)
Args:

End InitializableUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin InitializableUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin InitializableUpgradeabilityProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in InitializableUpgradeabilityProxy._delegate (Slither line:1805)
CallExpression: _willFallback() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin InitializableUpgradeabilityProxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
_implementation returns a variable of type address   called impl (Slither line:2193)
_implementation contains assembly - looking for sload (Slither line:2199)
Looking in ASSEMBLY node (Slither line:2206)
{ impl := sload(slot) }  (Slither line:2210)
Return value set by sload in asm (Slither line:2212)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2232)

End InitializableUpgradeabilityProxy.find_delegate_from_call_exp (Slither line:2328)

AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
CallExpression: _fallback() (Slither line:1819)
_delegate contains assembly, searching for sload (Slither line:1875)

End InitializableUpgradeabilityProxy.find_delegate_variable_from_name (Slither line:1949)


Begin InitializableUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2683)


End InitializableUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2710)


End InitializableUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

Setting InitializableUpgradeabilityProxy._delegate_variable = InitializableUpgradeabilityProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End InitializableUpgradeabilityProxy.is_proxy (Slither line:1476)


Begin InitializableUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: InitializableUpgradeabilityProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

InitializableUpgradeabilityProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)

Looking for setter in BaseUpgradeabilityProxy (Slither line:1204)


Begin BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)

End BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3345)


Could not find setter in BaseUpgradeabilityProxy 
Looking in InitializableUpgradeabilityProxy (Slither line:1213)

Begin InitializableUpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: initialize(address,bytes) returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)

End InitializableUpgradeabilityProxy.find_setter_in_contract (Slither line:3345)


Could not find setter in InitializableUpgradeabilityProxy (Slither line:1220)
Looking for setter in UpgradeabilityProxy (Slither line:1228)


Begin UpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: constructor(address,bytes) returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)

End UpgradeabilityProxy.find_setter_in_contract (Slither line:3345)

Looking for setter in BaseAdminUpgradeabilityProxy (Slither line:1228)


Begin BaseAdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
ifAdmin()
_willFallback()
_delegate(_implementation())
_fallback()
_admin()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
_willFallback()
_delegate(_implementation())
_implementation()
ifAdmin()
_fallback()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
_setAdmin(newAdmin)
_willFallback()
_delegate(_implementation())
ifAdmin()
{ sstore(slot, newAdmin) } (Slither line:3163)
changeAdmin reads and/or writes to variable slot (Slither line:3170)
changeAdmin reads and/or writes to variable ADMIN_SLOT (Slither line:3170)
_fallback()
require(bool,string)(newAdmin != address(0),Cannot change the admin of a proxy to the zero address)
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
AdminChanged(_admin(),newAdmin)
super._willFallback()
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
_willFallback()
_delegate(_implementation())
_setImplementation(newImplementation)
_upgradeTo(newImplementation)
Upgraded(newImplementation)
ifAdmin()
size > 0
_fallback()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
    sstore(slot, newImplementation) (Slither line:3163)
upgradeTo reads and/or writes to variable slot (Slither line:3170)
upgradeTo reads and/or writes to variable IMPLEMENTATION_SLOT (Slither line:3170)
upgradeTo reads and/or writes to variable OpenZeppelinUpgradesAddress (Slither line:3170)
upgradeTo reads and/or writes to variable newImplementation (Slither line:3170)

End BaseAdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: BaseAdminUpgradeabilityProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: _implementation in contract: BaseUpgradeabilityProxy (Slither line:1285)

End InitializableUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: InitializableUpgradeabilityProxy
Setter found in contract BaseAdminUpgradeabilityProxy
Found fallback
Found public function: initialize
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable IMPLEMENTATION_SLOT
impl_address_from_contract_call: getter is _implementation
getter.full_name = _implementation()
library call: OpenZeppelinUpgradesAddress.isContract
impl_address_from_contract_call: CallExpression _willFallback()
impl_address_from_contract_call: CallExpression _delegate(_implementation())
impl_address_from_contract_call: arg is _implementation()
impl_address_from_contract_call: CallExpression _implementation()
impl_address_from_contract_call: CallExpression _fallback()
Checking public function initialize
Checking external function fallback
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._setImplementation (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.upgradeToAndCall (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._admin (proxy_features line:898)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:924)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: exp = ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:912)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy._upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy._setImplementation (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy.initialize (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: initialize writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BaseAdminUpgradeabilityProxy._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function InitializableUpgradeabilityProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:924)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: checking external function upgradeTo
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
has_compatibility_checks: checking external function upgradeToAndCall
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: checking public function initialize
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
has_compatibility_checks: IF node exp = _data.length > 0
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
has_time_delay: (node.type) EXPRESSION
(Expression) _willFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) IF
(Expression) msg.sender == _admin()
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_time_delay: (node.type) EXPRESSION
(Expression) super._willFallback()
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = ADMIN_SLOT

Begin InitializableAdminUpgradeabilityProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2802)
Expression called: _delegate
Type of call: tuple() (Slither line:2817)
Args:
_implementation()

End InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin InitializableAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ adm := sload(slot) } (Slither line:1576)

End InitializableAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)


Begin InitializableAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ adm := sload(slot) } (Slither line:1576)

End InitializableAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: super._willFallback() (Slither line:2802)
Expression called: super._willFallback
Type of call: tuple() (Slither line:2817)
Args:

End InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:2802)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2817)
Args:
msg.sender != _admin()
Cannot call fallback function from the proxy admin

End InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2802)
Expression called: _fallback
Type of call: tuple() (Slither line:2817)
Args:

End InitializableAdminUpgradeabilityProxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin InitializableAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin InitializableAdminUpgradeabilityProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_SLOT (Slither line:1689)
Checking ADMIN_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in InitializableAdminUpgradeabilityProxy._delegate (Slither line:1805)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin InitializableAdminUpgradeabilityProxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
_implementation returns a variable of type address   called impl (Slither line:2193)
_implementation contains assembly - looking for sload (Slither line:2199)
Looking in ASSEMBLY node (Slither line:2206)
{ impl := sload(slot) }  (Slither line:2210)
Return value set by sload in asm (Slither line:2212)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2232)

End InitializableAdminUpgradeabilityProxy.find_delegate_from_call_exp (Slither line:2328)

CallExpression: super._willFallback() (Slither line:1819)
AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
CallExpression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:1819)
CallExpression: _fallback() (Slither line:1819)
CallExpression: _willFallback() (Slither line:1819)
AssignmentOperation: ADMIN_SLOT (Slither line:1811)
_delegate contains assembly, searching for sload (Slither line:1875)

End InitializableAdminUpgradeabilityProxy.find_delegate_variable_from_name (Slither line:1949)


Begin InitializableAdminUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2683)


End InitializableAdminUpgradeabilityProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2710)


End InitializableAdminUpgradeabilityProxy.find_delegatecall_in_asm (Slither line:1637)

Setting InitializableAdminUpgradeabilityProxy._delegate_variable = InitializableAdminUpgradeabilityProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End InitializableAdminUpgradeabilityProxy.is_proxy (Slither line:1476)


Begin InitializableAdminUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: InitializableAdminUpgradeabilityProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

InitializableAdminUpgradeabilityProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)

Looking for setter in BaseUpgradeabilityProxy (Slither line:1204)


Begin BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)

End BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3345)


Could not find setter in BaseUpgradeabilityProxy 
Looking in InitializableAdminUpgradeabilityProxy (Slither line:1213)

Begin InitializableAdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: initialize(address,address,bytes) returns() (Slither line:3127)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: initialize(address,bytes) returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
_willFallback()
_delegate(_implementation())
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
_admin()
super._willFallback()
_fallback()
ifAdmin()
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
_implementation()
_willFallback()
ifAdmin()
_delegate(_implementation())
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
_fallback()
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
_willFallback()
_delegate(_implementation())
{ sstore(slot, newAdmin) } (Slither line:3163)
changeAdmin reads and/or writes to variable slot (Slither line:3170)
changeAdmin reads and/or writes to variable ADMIN_SLOT (Slither line:3170)
require(bool,string)(newAdmin != address(0),Cannot change the admin of a proxy to the zero address)
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
AdminChanged(_admin(),newAdmin)
super._willFallback()
_setAdmin(newAdmin)
_fallback()
ifAdmin()
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
_willFallback()
_delegate(_implementation())
_setImplementation(newImplementation)
size > 0
Upgraded(newImplementation)
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
_fallback()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
_upgradeTo(newImplementation)
    sstore(slot, newImplementation) (Slither line:3163)
upgradeTo reads and/or writes to variable slot (Slither line:3170)
upgradeTo reads and/or writes to variable IMPLEMENTATION_SLOT (Slither line:3170)
upgradeTo reads and/or writes to variable OpenZeppelinUpgradesAddress (Slither line:3170)
upgradeTo reads and/or writes to variable newImplementation (Slither line:3170)

End InitializableAdminUpgradeabilityProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: InitializableAdminUpgradeabilityProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: _implementation in contract: BaseUpgradeabilityProxy (Slither line:1285)

End InitializableAdminUpgradeabilityProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: InitializableAdminUpgradeabilityProxy
Setter found in contract InitializableAdminUpgradeabilityProxy
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable IMPLEMENTATION_SLOT
impl_address_from_contract_call: getter is _implementation
getter.full_name = _implementation()
library call: OpenZeppelinUpgradesAddress.isContract
impl_address_from_contract_call: CallExpression _delegate(_implementation())
impl_address_from_contract_call: arg is _implementation()
impl_address_from_contract_call: CallExpression _implementation()
impl_address_from_contract_call: CallExpression super._willFallback()
impl_address_from_contract_call: CallExpression require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
impl_address_from_contract_call: arg is msg.sender != _admin()
impl_address_from_contract_call: arg is Cannot call fallback function from the proxy admin
impl_address_from_contract_call: CallExpression _fallback()
impl_address_from_contract_call: CallExpression _willFallback()
Checking public function initialize
Checking external function admin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function implementation
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function changeAdmin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking public function initialize
Checking external function fallback
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.initialize (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: initialize writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.initialize (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: initialize writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._admin (proxy_features line:898)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:924)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: exp = ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:912)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._setImplementation (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.upgradeToAndCall (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function InitializableAdminUpgradeabilityProxy.admin (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: checking public function initialize
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
has_compatibility_checks: IF node exp = _data.length > 0
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
has_compatibility_checks: checking public function initialize
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
has_compatibility_checks: IF node exp = _data.length > 0
assert(bool)(ADMIN_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.admin)) - 1))
has_compatibility_checks: condition ADMIN_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.admin)) - 1)
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: checking external function upgradeTo
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: checking external function upgradeToAndCall
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
Found public function: initialize
has_time_delay: (node.type) EXPRESSION
(Expression) _willFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) IF
(Expression) msg.sender == _admin()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_time_delay: (node.type) EXPRESSION
(Expression) super._willFallback()
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = ADMIN_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()

Begin Context.is_proxy (Slither line:1425)


End Context.is_proxy (Slither line:1428)


Begin Context.is_upgradeable_proxy (Slither line:1136)

Checking contract: Context 

End Context.is_upgradeable_proxy (Slither line:1407)


Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin Claimable.is_proxy (Slither line:1425)


End Claimable.is_proxy (Slither line:1428)


Begin Claimable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Claimable 

End Claimable.is_upgradeable_proxy (Slither line:1407)


Begin String.is_proxy (Slither line:1425)


End String.is_proxy (Slither line:1428)


Begin String.is_upgradeable_proxy (Slither line:1136)

Checking contract: String 

End String.is_upgradeable_proxy (Slither line:1407)


Begin IERC20.is_proxy (Slither line:1425)


End IERC20.is_proxy (Slither line:1428)


Begin IERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: IERC20 

End IERC20.is_upgradeable_proxy (Slither line:1407)


Begin ERC20.is_proxy (Slither line:1425)


End ERC20.is_proxy (Slither line:1428)


Begin ERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20 

End ERC20.is_upgradeable_proxy (Slither line:1407)


Begin ERC20Detailed.is_proxy (Slither line:1425)


End ERC20Detailed.is_proxy (Slither line:1428)


Begin ERC20Detailed.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20Detailed 

End ERC20Detailed.is_upgradeable_proxy (Slither line:1407)


Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin SafeERC20.is_proxy (Slither line:1425)


End SafeERC20.is_proxy (Slither line:1428)


Begin SafeERC20.is_upgradeable_proxy (Slither line:1136)

Checking contract: SafeERC20 

End SafeERC20.is_upgradeable_proxy (Slither line:1407)


Begin CanReclaimTokens.is_proxy (Slither line:1425)


End CanReclaimTokens.is_proxy (Slither line:1428)


Begin CanReclaimTokens.is_upgradeable_proxy (Slither line:1136)

Checking contract: CanReclaimTokens 

End CanReclaimTokens.is_upgradeable_proxy (Slither line:1407)


Begin ERC20WithRate.is_proxy (Slither line:1425)


End ERC20WithRate.is_proxy (Slither line:1428)


Begin ERC20WithRate.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20WithRate 

End ERC20WithRate.is_upgradeable_proxy (Slither line:1407)


Begin ERC20WithPermit.is_proxy (Slither line:1425)


End ERC20WithPermit.is_proxy (Slither line:1428)


Begin ERC20WithPermit.is_upgradeable_proxy (Slither line:1136)

Checking contract: ERC20WithPermit 

End ERC20WithPermit.is_upgradeable_proxy (Slither line:1407)


Begin RenERC20LogicV1.is_proxy (Slither line:1425)


End RenERC20LogicV1.is_proxy (Slither line:1428)


Begin RenERC20LogicV1.is_upgradeable_proxy (Slither line:1136)

Checking contract: RenERC20LogicV1 

End RenERC20LogicV1.is_upgradeable_proxy (Slither line:1407)


Begin RenERC20Proxy.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin RenERC20Proxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:2802)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2817)
Args:
msg.sender != _admin()
Cannot call fallback function from the proxy admin

End RenERC20Proxy.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin RenERC20Proxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2802)
Expression called: _fallback
Type of call: tuple() (Slither line:2817)
Args:

End RenERC20Proxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin RenERC20Proxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin RenERC20Proxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_SLOT (Slither line:1689)
Checking ADMIN_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in RenERC20Proxy._delegate (Slither line:1805)
AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
CallExpression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:1819)
CallExpression: _fallback() (Slither line:1819)
CallExpression: _willFallback() (Slither line:1819)
CallExpression: super._willFallback() (Slither line:1819)
AssignmentOperation: ADMIN_SLOT (Slither line:1811)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin RenERC20Proxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
_implementation returns a variable of type address   called impl (Slither line:2193)
_implementation contains assembly - looking for sload (Slither line:2199)
Looking in ASSEMBLY node (Slither line:2206)
{ impl := sload(slot) }  (Slither line:2210)
Return value set by sload in asm (Slither line:2212)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2232)

End RenERC20Proxy.find_delegate_from_call_exp (Slither line:2328)

_delegate contains assembly, searching for sload (Slither line:1875)

End RenERC20Proxy.find_delegate_variable_from_name (Slither line:1949)


Begin RenERC20Proxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2683)


End RenERC20Proxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2710)


End RenERC20Proxy.find_delegatecall_in_asm (Slither line:1637)

Setting RenERC20Proxy._delegate_variable = RenERC20Proxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End RenERC20Proxy.is_proxy (Slither line:1476)


Begin RenERC20Proxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: RenERC20Proxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

RenERC20Proxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)

Looking for setter in BaseUpgradeabilityProxy (Slither line:1204)


Begin BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)

End BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3345)


Could not find setter in BaseUpgradeabilityProxy 
Looking in RenERC20Proxy (Slither line:1213)

Begin RenERC20Proxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: initialize(address,address,bytes) returns() (Slither line:3127)
Checking function: initialize(address,bytes) returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
_admin()
super._willFallback()
ifAdmin()
_fallback()
_willFallback()
_delegate(_implementation())
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
_fallback()
_implementation()
_willFallback()
ifAdmin()
_delegate(_implementation())
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
AdminChanged(_admin(),newAdmin)
super._willFallback()
_setAdmin(newAdmin)
_fallback()
ifAdmin()
_willFallback()
_delegate(_implementation())
{ sstore(slot, newAdmin) } (Slither line:3163)
changeAdmin reads and/or writes to variable slot (Slither line:3170)
changeAdmin reads and/or writes to variable ADMIN_SLOT (Slither line:3170)
require(bool,string)(newAdmin != address(0),Cannot change the admin of a proxy to the zero address)
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
_fallback()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
_upgradeTo(newImplementation)
size > 0
ifAdmin()
    sstore(slot, newImplementation) (Slither line:3163)
upgradeTo reads and/or writes to variable slot (Slither line:3170)
upgradeTo reads and/or writes to variable IMPLEMENTATION_SLOT (Slither line:3170)
upgradeTo reads and/or writes to variable OpenZeppelinUpgradesAddress (Slither line:3170)
upgradeTo reads and/or writes to variable newImplementation (Slither line:3170)

End RenERC20Proxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: RenERC20Proxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: _implementation in contract: BaseUpgradeabilityProxy (Slither line:1285)

End RenERC20Proxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: RenERC20Proxy
Setter found in contract RenERC20Proxy
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable IMPLEMENTATION_SLOT
impl_address_from_contract_call: getter is _implementation
getter.full_name = _implementation()
library call: OpenZeppelinUpgradesAddress.isContract
impl_address_from_contract_call: CallExpression require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
impl_address_from_contract_call: arg is msg.sender != _admin()
impl_address_from_contract_call: arg is Cannot call fallback function from the proxy admin
impl_address_from_contract_call: CallExpression _fallback()
impl_address_from_contract_call: CallExpression _willFallback()
impl_address_from_contract_call: CallExpression super._willFallback()
impl_address_from_contract_call: CallExpression _delegate(_implementation())
impl_address_from_contract_call: arg is _implementation()
impl_address_from_contract_call: CallExpression _implementation()
Checking public function initialize
Checking public function initialize
Checking external function admin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function implementation
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function changeAdmin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function fallback
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function RenERC20Proxy._delegate (proxy_features line:898)
functions_writing_to_variable: checking function RenERC20Proxy.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function RenERC20Proxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function RenERC20Proxy._upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function RenERC20Proxy._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function RenERC20Proxy.upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function RenERC20Proxy.initialize (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: initialize writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function RenERC20Proxy._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function RenERC20Proxy.initialize (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: initialize writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function RenERC20Proxy._setImplementation (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function RenERC20Proxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function RenERC20Proxy.upgradeToAndCall (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function RenERC20Proxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function RenERC20Proxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function RenERC20Proxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function RenERC20Proxy._admin (proxy_features line:898)
functions_writing_to_variable: checking function RenERC20Proxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function RenERC20Proxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function RenERC20Proxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:924)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: exp = ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:912)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: checking external function upgradeTo
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
has_compatibility_checks: IF node exp = msg.sender == _admin()
has_compatibility_checks: checking public function initialize
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
has_compatibility_checks: IF node exp = _data.length > 0
assert(bool)(ADMIN_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.admin)) - 1))
has_compatibility_checks: condition ADMIN_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.admin)) - 1)
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
has_compatibility_checks: checking public function initialize
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
has_compatibility_checks: IF node exp = _data.length > 0
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: checking external function upgradeToAndCall
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: initialize
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_time_delay: (node.type) EXPRESSION
(Expression) super._willFallback()
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = ADMIN_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) EXPRESSION
(Expression) _willFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) IF
(Expression) msg.sender == _admin()

Begin IMintGateway.is_proxy (Slither line:1425)


End IMintGateway.is_proxy (Slither line:1428)


Begin IMintGateway.is_upgradeable_proxy (Slither line:1136)

Checking contract: IMintGateway 

End IMintGateway.is_upgradeable_proxy (Slither line:1407)


Begin IBurnGateway.is_proxy (Slither line:1425)


End IBurnGateway.is_proxy (Slither line:1428)


Begin IBurnGateway.is_upgradeable_proxy (Slither line:1136)

Checking contract: IBurnGateway 

End IBurnGateway.is_upgradeable_proxy (Slither line:1407)


Begin IGateway.is_proxy (Slither line:1425)


End IGateway.is_proxy (Slither line:1428)


Begin IGateway.is_upgradeable_proxy (Slither line:1136)

Checking contract: IGateway 

End IGateway.is_upgradeable_proxy (Slither line:1407)


Begin MintGatewayStateV1.is_proxy (Slither line:1425)


End MintGatewayStateV1.is_proxy (Slither line:1428)


Begin MintGatewayStateV1.is_upgradeable_proxy (Slither line:1136)

Checking contract: MintGatewayStateV1 

End MintGatewayStateV1.is_upgradeable_proxy (Slither line:1407)


Begin MintGatewayLogicV1.is_proxy (Slither line:1425)


End MintGatewayLogicV1.is_proxy (Slither line:1428)


Begin MintGatewayLogicV1.is_upgradeable_proxy (Slither line:1136)

Checking contract: MintGatewayLogicV1 

End MintGatewayLogicV1.is_upgradeable_proxy (Slither line:1407)


Begin BTCGateway.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin BTCGateway.find_delegatecall_in_asm (Slither line:1541)

{ adm := sload(slot) } (Slither line:1576)

End BTCGateway.find_delegatecall_in_asm (Slither line:1637)


Begin BTCGateway.find_delegatecall_in_asm (Slither line:1541)

{ adm := sload(slot) } (Slither line:1576)

End BTCGateway.find_delegatecall_in_asm (Slither line:1637)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BTCGateway.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:2802)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2817)
Args:
msg.sender != _admin()
Cannot call fallback function from the proxy admin

End BTCGateway.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BTCGateway.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2802)
Expression called: _fallback
Type of call: tuple() (Slither line:2817)
Args:

End BTCGateway.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin BTCGateway.find_delegatecall_in_asm (Slither line:1541)

{ impl := sload(slot) } (Slither line:1576)

End BTCGateway.find_delegatecall_in_asm (Slither line:1637)


Begin BTCGateway.find_delegatecall_in_asm (Slither line:1541)

{ impl := sload(slot) } (Slither line:1576)

End BTCGateway.find_delegatecall_in_asm (Slither line:1637)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BTCGateway.find_delegatecall_in_exp_node

Found Expression Node: _willFallback() (Slither line:2802)
Expression called: _willFallback
Type of call: tuple() (Slither line:2817)
Args:

End BTCGateway.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BTCGateway.find_delegatecall_in_exp_node

Found Expression Node: super._willFallback() (Slither line:2802)
Expression called: super._willFallback
Type of call: tuple() (Slither line:2817)
Args:

End BTCGateway.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin BTCGateway.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin BTCGateway.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_SLOT (Slither line:1689)
Checking ADMIN_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in BTCGateway._delegate (Slither line:1805)
AssignmentOperation: ADMIN_SLOT (Slither line:1811)
AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
CallExpression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:1819)
CallExpression: _fallback() (Slither line:1819)
CallExpression: _willFallback() (Slither line:1819)
CallExpression: super._willFallback() (Slither line:1819)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin BTCGateway.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
_implementation returns a variable of type address   called impl (Slither line:2193)
_implementation contains assembly - looking for sload (Slither line:2199)
Looking in ASSEMBLY node (Slither line:2206)
{ impl := sload(slot) }  (Slither line:2210)
Return value set by sload in asm (Slither line:2212)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2232)

End BTCGateway.find_delegate_from_call_exp (Slither line:2328)

_delegate contains assembly, searching for sload (Slither line:1875)

End BTCGateway.find_delegate_variable_from_name (Slither line:1949)


Begin BTCGateway.find_delegate_sloaded_from_hardcoded_slot (Slither line:2683)


End BTCGateway.find_delegate_sloaded_from_hardcoded_slot (Slither line:2710)


End BTCGateway.find_delegatecall_in_asm (Slither line:1637)

Setting BTCGateway._delegate_variable = BTCGateway._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End BTCGateway.is_proxy (Slither line:1476)


Begin BTCGateway.is_upgradeable_proxy (Slither line:1136)

Checking contract: BTCGateway 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

BTCGateway is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)

Looking for setter in BaseUpgradeabilityProxy (Slither line:1204)


Begin BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)

End BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3345)


Could not find setter in BaseUpgradeabilityProxy 
Looking in BTCGateway (Slither line:1213)

Begin BTCGateway.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: initialize(address,address,bytes) returns() (Slither line:3127)
Checking function: initialize(address,bytes) returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
_willFallback()
ifAdmin()
_delegate(_implementation())
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
_admin()
super._willFallback()
_fallback()
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
_implementation()
_willFallback()
ifAdmin()
_delegate(_implementation())
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
_fallback()
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
ifAdmin()
_willFallback()
_delegate(_implementation())
{ sstore(slot, newAdmin) } (Slither line:3163)
changeAdmin reads and/or writes to variable slot (Slither line:3170)
changeAdmin reads and/or writes to variable ADMIN_SLOT (Slither line:3170)
require(bool,string)(newAdmin != address(0),Cannot change the admin of a proxy to the zero address)
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
AdminChanged(_admin(),newAdmin)
super._willFallback()
_setAdmin(newAdmin)
_fallback()
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
_upgradeTo(newImplementation)
    sstore(slot, newImplementation) (Slither line:3163)
upgradeTo reads and/or writes to variable slot (Slither line:3170)
upgradeTo reads and/or writes to variable IMPLEMENTATION_SLOT (Slither line:3170)
upgradeTo reads and/or writes to variable OpenZeppelinUpgradesAddress (Slither line:3170)
upgradeTo reads and/or writes to variable newImplementation (Slither line:3170)

End BTCGateway.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: BTCGateway (Slither line:1264)
Looking for getter (Slither line:1273)


Begin BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: _implementation in contract: BaseUpgradeabilityProxy (Slither line:1285)

End BTCGateway.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: BTCGateway
Setter found in contract BTCGateway
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable IMPLEMENTATION_SLOT
impl_address_from_contract_call: getter is _implementation
getter.full_name = _implementation()
library call: OpenZeppelinUpgradesAddress.isContract
impl_address_from_contract_call: CallExpression require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
impl_address_from_contract_call: arg is msg.sender != _admin()
impl_address_from_contract_call: arg is Cannot call fallback function from the proxy admin
impl_address_from_contract_call: CallExpression _fallback()
impl_address_from_contract_call: CallExpression _willFallback()
impl_address_from_contract_call: CallExpression super._willFallback()
impl_address_from_contract_call: CallExpression _delegate(_implementation())
impl_address_from_contract_call: arg is _implementation()
impl_address_from_contract_call: CallExpression _implementation()
Checking public function initialize
Checking public function initialize
Checking external function admin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function implementation
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function changeAdmin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function fallback
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function BTCGateway._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BTCGateway._upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BTCGateway._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function BTCGateway.upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BTCGateway.initialize (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: initialize writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BTCGateway.initialize (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: initialize writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BTCGateway._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function BTCGateway._setImplementation (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BTCGateway._fallback (proxy_features line:898)
functions_writing_to_variable: checking function BTCGateway.upgradeToAndCall (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BTCGateway.admin (proxy_features line:898)
functions_writing_to_variable: checking function BTCGateway.fallback (proxy_features line:898)
functions_writing_to_variable: checking function BTCGateway.implementation (proxy_features line:898)
functions_writing_to_variable: checking function BTCGateway._admin (proxy_features line:898)
functions_writing_to_variable: checking function BTCGateway._implementation (proxy_features line:898)
functions_writing_to_variable: checking function BTCGateway._implementation (proxy_features line:898)
functions_writing_to_variable: checking function BTCGateway.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BTCGateway._delegate (proxy_features line:898)
functions_writing_to_variable: checking function BTCGateway.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:924)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: exp = ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:912)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: checking external function upgradeTo
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
has_compatibility_checks: checking public function initialize
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
has_compatibility_checks: IF node exp = _data.length > 0
assert(bool)(ADMIN_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.admin)) - 1))
has_compatibility_checks: condition ADMIN_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.admin)) - 1)
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
has_compatibility_checks: checking public function initialize
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
has_compatibility_checks: IF node exp = _data.length > 0
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: checking external function upgradeToAndCall
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
Found public function: initialize
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) _willFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) IF
(Expression) msg.sender == _admin()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_time_delay: (node.type) EXPRESSION
(Expression) super._willFallback()
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = ADMIN_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()

Begin ZECGateway.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin ZECGateway.find_delegatecall_in_asm (Slither line:1541)

{ adm := sload(slot) } (Slither line:1576)

End ZECGateway.find_delegatecall_in_asm (Slither line:1637)


Begin ZECGateway.find_delegatecall_in_asm (Slither line:1541)

{ adm := sload(slot) } (Slither line:1576)

End ZECGateway.find_delegatecall_in_asm (Slither line:1637)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin ZECGateway.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:2802)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2817)
Args:
msg.sender != _admin()
Cannot call fallback function from the proxy admin

End ZECGateway.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin ZECGateway.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2802)
Expression called: _fallback
Type of call: tuple() (Slither line:2817)
Args:

End ZECGateway.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin ZECGateway.find_delegatecall_in_asm (Slither line:1541)

{ impl := sload(slot) } (Slither line:1576)

End ZECGateway.find_delegatecall_in_asm (Slither line:1637)


Begin ZECGateway.find_delegatecall_in_asm (Slither line:1541)

{ impl := sload(slot) } (Slither line:1576)

End ZECGateway.find_delegatecall_in_asm (Slither line:1637)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin ZECGateway.find_delegatecall_in_exp_node

Found Expression Node: _willFallback() (Slither line:2802)
Expression called: _willFallback
Type of call: tuple() (Slither line:2817)
Args:

End ZECGateway.find_delegatecall_in_exp_node (Slither line:2858)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin ZECGateway.find_delegatecall_in_exp_node

Found Expression Node: super._willFallback() (Slither line:2802)
Expression called: super._willFallback
Type of call: tuple() (Slither line:2817)
Args:

End ZECGateway.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin ZECGateway.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin ZECGateway.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_SLOT (Slither line:1689)
Checking ADMIN_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in ZECGateway._delegate (Slither line:1805)
AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
CallExpression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:1819)
CallExpression: _fallback() (Slither line:1819)
CallExpression: _willFallback() (Slither line:1819)
CallExpression: super._willFallback() (Slither line:1819)
AssignmentOperation: ADMIN_SLOT (Slither line:1811)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin ZECGateway.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
_implementation returns a variable of type address   called impl (Slither line:2193)
_implementation contains assembly - looking for sload (Slither line:2199)
Looking in ASSEMBLY node (Slither line:2206)
{ impl := sload(slot) }  (Slither line:2210)
Return value set by sload in asm (Slither line:2212)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2232)

End ZECGateway.find_delegate_from_call_exp (Slither line:2328)

_delegate contains assembly, searching for sload (Slither line:1875)

End ZECGateway.find_delegate_variable_from_name (Slither line:1949)


Begin ZECGateway.find_delegate_sloaded_from_hardcoded_slot (Slither line:2683)


End ZECGateway.find_delegate_sloaded_from_hardcoded_slot (Slither line:2710)


End ZECGateway.find_delegatecall_in_asm (Slither line:1637)

Setting ZECGateway._delegate_variable = ZECGateway._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End ZECGateway.is_proxy (Slither line:1476)


Begin ZECGateway.is_upgradeable_proxy (Slither line:1136)

Checking contract: ZECGateway 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

ZECGateway is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)

Looking for setter in BaseUpgradeabilityProxy (Slither line:1204)


Begin BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)

End BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3345)


Could not find setter in BaseUpgradeabilityProxy 
Looking in ZECGateway (Slither line:1213)

Begin ZECGateway.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: initialize(address,address,bytes) returns() (Slither line:3127)
Checking function: initialize(address,bytes) returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
_admin()
super._willFallback()
ifAdmin()
_fallback()
_delegate(_implementation())
_willFallback()
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
_fallback()
_delegate(_implementation())
_implementation()
_willFallback()
ifAdmin()
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
require(bool,string)(newAdmin != address(0),Cannot change the admin of a proxy to the zero address)
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
AdminChanged(_admin(),newAdmin)
super._willFallback()
_setAdmin(newAdmin)
_fallback()
ifAdmin()
_delegate(_implementation())
_willFallback()
{ sstore(slot, newAdmin) } (Slither line:3163)
changeAdmin reads and/or writes to variable slot (Slither line:3170)
changeAdmin reads and/or writes to variable ADMIN_SLOT (Slither line:3170)
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
_setImplementation(newImplementation)
Upgraded(newImplementation)
size > 0
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
_fallback()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
_upgradeTo(newImplementation)
_delegate(_implementation())
    sstore(slot, newImplementation) (Slither line:3163)
upgradeTo reads and/or writes to variable slot (Slither line:3170)
upgradeTo reads and/or writes to variable IMPLEMENTATION_SLOT (Slither line:3170)
upgradeTo reads and/or writes to variable OpenZeppelinUpgradesAddress (Slither line:3170)
upgradeTo reads and/or writes to variable newImplementation (Slither line:3170)

End ZECGateway.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: ZECGateway (Slither line:1264)
Looking for getter (Slither line:1273)


Begin BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: _implementation in contract: BaseUpgradeabilityProxy (Slither line:1285)

End ZECGateway.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: ZECGateway
Setter found in contract ZECGateway
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable IMPLEMENTATION_SLOT
impl_address_from_contract_call: getter is _implementation
getter.full_name = _implementation()
library call: OpenZeppelinUpgradesAddress.isContract
impl_address_from_contract_call: CallExpression require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
impl_address_from_contract_call: arg is msg.sender != _admin()
impl_address_from_contract_call: arg is Cannot call fallback function from the proxy admin
impl_address_from_contract_call: CallExpression _fallback()
impl_address_from_contract_call: CallExpression _willFallback()
impl_address_from_contract_call: CallExpression super._willFallback()
impl_address_from_contract_call: CallExpression _delegate(_implementation())
impl_address_from_contract_call: arg is _implementation()
impl_address_from_contract_call: CallExpression _implementation()
Checking public function initialize
Checking public function initialize
Checking external function admin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function implementation
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function changeAdmin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function fallback
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function ZECGateway.fallback (proxy_features line:898)
functions_writing_to_variable: checking function ZECGateway.admin (proxy_features line:898)
functions_writing_to_variable: checking function ZECGateway._admin (proxy_features line:898)
functions_writing_to_variable: checking function ZECGateway.implementation (proxy_features line:898)
functions_writing_to_variable: checking function ZECGateway._implementation (proxy_features line:898)
functions_writing_to_variable: checking function ZECGateway._implementation (proxy_features line:898)
functions_writing_to_variable: checking function ZECGateway._delegate (proxy_features line:898)
functions_writing_to_variable: checking function ZECGateway.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function ZECGateway.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:924)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: exp = ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:912)
functions_writing_to_variable: checking function ZECGateway._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function ZECGateway._upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function ZECGateway._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function ZECGateway.initialize (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: initialize writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function ZECGateway.upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function ZECGateway.initialize (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: initialize writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function ZECGateway._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function ZECGateway._setImplementation (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function ZECGateway._fallback (proxy_features line:898)
functions_writing_to_variable: checking function ZECGateway.upgradeToAndCall (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: checking public function initialize
assert(bool)(ADMIN_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.admin)) - 1))
has_compatibility_checks: condition ADMIN_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.admin)) - 1)
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
has_compatibility_checks: IF node exp = _data.length > 0
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
has_compatibility_checks: checking external function upgradeTo
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
has_compatibility_checks: checking public function initialize
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
has_compatibility_checks: IF node exp = _data.length > 0
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: checking external function upgradeToAndCall
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: initialize
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) IF
(Expression) msg.sender == _admin()
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_time_delay: (node.type) EXPRESSION
(Expression) super._willFallback()
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = ADMIN_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) EXPRESSION
(Expression) _willFallback()

Begin BCHGateway.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BCHGateway.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2802)
Expression called: _delegate
Type of call: tuple() (Slither line:2817)
Args:
_implementation()

End BCHGateway.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin BCHGateway.find_delegatecall_in_asm (Slither line:1541)

{ adm := sload(slot) } (Slither line:1576)

End BCHGateway.find_delegatecall_in_asm (Slither line:1637)


Begin BCHGateway.find_delegatecall_in_asm (Slither line:1541)

{ adm := sload(slot) } (Slither line:1576)

End BCHGateway.find_delegatecall_in_asm (Slither line:1637)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BCHGateway.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:2802)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2817)
Args:
msg.sender != _admin()
Cannot call fallback function from the proxy admin

End BCHGateway.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin BCHGateway.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2802)
Expression called: _fallback
Type of call: tuple() (Slither line:2817)
Args:

End BCHGateway.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin BCHGateway.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin BCHGateway.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_SLOT (Slither line:1689)
Checking ADMIN_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in BCHGateway._delegate (Slither line:1805)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin BCHGateway.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
_implementation returns a variable of type address   called impl (Slither line:2193)
_implementation contains assembly - looking for sload (Slither line:2199)
Looking in ASSEMBLY node (Slither line:2206)
{ impl := sload(slot) }  (Slither line:2210)
Return value set by sload in asm (Slither line:2212)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2232)

End BCHGateway.find_delegate_from_call_exp (Slither line:2328)

CallExpression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:1819)
AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
CallExpression: _fallback() (Slither line:1819)
CallExpression: super._willFallback() (Slither line:1819)
CallExpression: _willFallback() (Slither line:1819)
AssignmentOperation: ADMIN_SLOT (Slither line:1811)
_delegate contains assembly, searching for sload (Slither line:1875)

End BCHGateway.find_delegate_variable_from_name (Slither line:1949)


Begin BCHGateway.find_delegate_sloaded_from_hardcoded_slot (Slither line:2683)


End BCHGateway.find_delegate_sloaded_from_hardcoded_slot (Slither line:2710)


End BCHGateway.find_delegatecall_in_asm (Slither line:1637)

Setting BCHGateway._delegate_variable = BCHGateway._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End BCHGateway.is_proxy (Slither line:1476)


Begin BCHGateway.is_upgradeable_proxy (Slither line:1136)

Checking contract: BCHGateway 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

BCHGateway is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)

Looking for setter in BaseUpgradeabilityProxy (Slither line:1204)


Begin BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)

End BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3345)


Could not find setter in BaseUpgradeabilityProxy 
Looking in BCHGateway (Slither line:1213)

Begin BCHGateway.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: initialize(address,address,bytes) returns() (Slither line:3127)
Checking function: initialize(address,bytes) returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
ifAdmin()
_fallback()
_willFallback()
_delegate(_implementation())
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
_admin()
super._willFallback()
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
_fallback()
_implementation()
_willFallback()
ifAdmin()
_delegate(_implementation())
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
_fallback()
ifAdmin()
_willFallback()
{ sstore(slot, newAdmin) } (Slither line:3163)
changeAdmin reads and/or writes to variable slot (Slither line:3170)
changeAdmin reads and/or writes to variable ADMIN_SLOT (Slither line:3170)
_delegate(_implementation())
require(bool,string)(newAdmin != address(0),Cannot change the admin of a proxy to the zero address)
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
AdminChanged(_admin(),newAdmin)
super._willFallback()
_setAdmin(newAdmin)
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
_fallback()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
_upgradeTo(newImplementation)
ifAdmin()
    sstore(slot, newImplementation) (Slither line:3163)
upgradeTo reads and/or writes to variable slot (Slither line:3170)
upgradeTo reads and/or writes to variable IMPLEMENTATION_SLOT (Slither line:3170)
upgradeTo reads and/or writes to variable OpenZeppelinUpgradesAddress (Slither line:3170)
upgradeTo reads and/or writes to variable newImplementation (Slither line:3170)

End BCHGateway.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: BCHGateway (Slither line:1264)
Looking for getter (Slither line:1273)


Begin BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: _implementation in contract: BaseUpgradeabilityProxy (Slither line:1285)

End BCHGateway.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: BCHGateway
Setter found in contract BCHGateway
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable IMPLEMENTATION_SLOT
impl_address_from_contract_call: getter is _implementation
getter.full_name = _implementation()
library call: OpenZeppelinUpgradesAddress.isContract
impl_address_from_contract_call: CallExpression _delegate(_implementation())
impl_address_from_contract_call: arg is _implementation()
impl_address_from_contract_call: CallExpression _implementation()
impl_address_from_contract_call: CallExpression require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
impl_address_from_contract_call: arg is msg.sender != _admin()
impl_address_from_contract_call: arg is Cannot call fallback function from the proxy admin
impl_address_from_contract_call: CallExpression _fallback()
impl_address_from_contract_call: CallExpression super._willFallback()
impl_address_from_contract_call: CallExpression _willFallback()
Checking public function initialize
Checking public function initialize
Checking external function admin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function implementation
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function changeAdmin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function fallback
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function BCHGateway._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function BCHGateway._upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BCHGateway._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function BCHGateway.upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BCHGateway.initialize (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: initialize writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BCHGateway.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:924)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: exp = ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:912)
functions_writing_to_variable: checking function BCHGateway.initialize (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: initialize writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BCHGateway._setImplementation (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BCHGateway._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function BCHGateway._fallback (proxy_features line:898)
functions_writing_to_variable: checking function BCHGateway.upgradeToAndCall (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function BCHGateway.fallback (proxy_features line:898)
functions_writing_to_variable: checking function BCHGateway.admin (proxy_features line:898)
functions_writing_to_variable: checking function BCHGateway._admin (proxy_features line:898)
functions_writing_to_variable: checking function BCHGateway.implementation (proxy_features line:898)
functions_writing_to_variable: checking function BCHGateway._implementation (proxy_features line:898)
functions_writing_to_variable: checking function BCHGateway._implementation (proxy_features line:898)
functions_writing_to_variable: checking function BCHGateway._delegate (proxy_features line:898)
functions_writing_to_variable: checking function BCHGateway.changeAdmin (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: checking external function upgradeTo
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
has_compatibility_checks: checking public function initialize
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
has_compatibility_checks: IF node exp = _data.length > 0
assert(bool)(ADMIN_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.admin)) - 1))
has_compatibility_checks: condition ADMIN_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.admin)) - 1)
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
has_compatibility_checks: checking public function initialize
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
has_compatibility_checks: IF node exp = _data.length > 0
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: checking external function upgradeToAndCall
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: initialize
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) _willFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) IF
(Expression) msg.sender == _admin()
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_time_delay: (node.type) EXPRESSION
(Expression) super._willFallback()
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = ADMIN_SLOT

Begin MintGatewayStateV2.is_proxy (Slither line:1425)


End MintGatewayStateV2.is_proxy (Slither line:1428)


Begin MintGatewayStateV2.is_upgradeable_proxy (Slither line:1136)

Checking contract: MintGatewayStateV2 

End MintGatewayStateV2.is_upgradeable_proxy (Slither line:1407)


Begin MintGatewayLogicV2.is_proxy (Slither line:1425)


End MintGatewayLogicV2.is_proxy (Slither line:1428)


Begin MintGatewayLogicV2.is_upgradeable_proxy (Slither line:1136)

Checking contract: MintGatewayLogicV2 

End MintGatewayLogicV2.is_upgradeable_proxy (Slither line:1407)


Begin MintGatewayProxy.is_proxy (Slither line:1425)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin MintGatewayProxy.find_delegatecall_in_exp_node

Found Expression Node: _delegate(_implementation()) (Slither line:2802)
Expression called: _delegate
Type of call: tuple() (Slither line:2817)
Args:
_implementation()

End MintGatewayProxy.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin MintGatewayProxy.find_delegatecall_in_asm (Slither line:1541)

{ impl := sload(slot) } (Slither line:1576)

End MintGatewayProxy.find_delegatecall_in_asm (Slither line:1637)


Begin MintGatewayProxy.find_delegatecall_in_asm (Slither line:1541)

{ impl := sload(slot) } (Slither line:1576)

End MintGatewayProxy.find_delegatecall_in_asm (Slither line:1637)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin MintGatewayProxy.find_delegatecall_in_asm (Slither line:1541)

{ adm := sload(slot) } (Slither line:1576)

End MintGatewayProxy.find_delegatecall_in_asm (Slither line:1637)


Begin MintGatewayProxy.find_delegatecall_in_asm (Slither line:1541)

{ adm := sload(slot) } (Slither line:1576)

End MintGatewayProxy.find_delegatecall_in_asm (Slither line:1637)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin MintGatewayProxy.find_delegatecall_in_exp_node

Found Expression Node: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:2802)
Expression called: require(bool,string)
Type of call: tuple() (Slither line:2817)
Args:
msg.sender != _admin()
Cannot call fallback function from the proxy admin

End MintGatewayProxy.find_delegatecall_in_exp_node (Slither line:2858)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin MintGatewayProxy.find_delegatecall_in_exp_node

Found Expression Node: _fallback() (Slither line:2802)
Expression called: _fallback
Type of call: tuple() (Slither line:2817)
Args:

End MintGatewayProxy.find_delegatecall_in_exp_node (Slither line:2858)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin MintGatewayProxy.find_delegatecall_in_asm (Slither line:1541)

{ (Slither line:1576)
    calldatacopy(0, 0, calldatasize()) (Slither line:1576)
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) (Slither line:1576)

Found delegatecall in inline asm (Slither line:1622)
Destination param is called 'implementation'
Looking for corresponding Variable
Current function: _delegate

Begin MintGatewayProxy.find_delegate_variable_from_name
Searching for implementation (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking IMPLEMENTATION_SLOT (Slither line:1689)
Checking ADMIN_SLOT (Slither line:1689)

Searching Local Variables (Slither line:1698)

Searching Parameter Variables (Slither line:1797)
Checking implementation (Slither line:1800)
implementation is a Parameter in MintGatewayProxy._delegate (Slither line:1805)
CallExpression: _delegate(_implementation()) (Slither line:1819)
Found where _delegate is called: _delegate(_implementation()) (Slither line:1832)
The value passed to parameter #0 is _implementation() (Slither line:1835)

Begin MintGatewayProxy.find_delegate_from_call_exp

_implementation() (Slither line:2003)
called = _implementation (Slither line:2010)
_implementation returns a variable of type address   called impl (Slither line:2193)
_implementation contains assembly - looking for sload (Slither line:2199)
Looking in ASSEMBLY node (Slither line:2206)
{ impl := sload(slot) }  (Slither line:2210)
Return value set by sload in asm (Slither line:2212)
Found storage slot: IMPLEMENTATION_SLOT (Slither line:2232)

End MintGatewayProxy.find_delegate_from_call_exp (Slither line:2328)

AssignmentOperation: IMPLEMENTATION_SLOT (Slither line:1811)
CallExpression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin) (Slither line:1819)
CallExpression: _fallback() (Slither line:1819)
CallExpression: _willFallback() (Slither line:1819)
CallExpression: super._willFallback() (Slither line:1819)
AssignmentOperation: ADMIN_SLOT (Slither line:1811)
_delegate contains assembly, searching for sload (Slither line:1875)

End MintGatewayProxy.find_delegate_variable_from_name (Slither line:1949)


Begin MintGatewayProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2683)


End MintGatewayProxy.find_delegate_sloaded_from_hardcoded_slot (Slither line:2710)


End MintGatewayProxy.find_delegatecall_in_asm (Slither line:1637)

Setting MintGatewayProxy._delegate_variable = MintGatewayProxy._proxy_impl_slot: IMPLEMENTATION_SLOT (Slither line:1473)


End MintGatewayProxy.is_proxy (Slither line:1476)


Begin MintGatewayProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: MintGatewayProxy 
Call destination IMPLEMENTATION_SLOT is constant (Slither line:1146)

IMPLEMENTATION_SLOT is the implementation storage slot (Slither line:1149)

MintGatewayProxy is delegating to IMPLEMENTATION_SLOT
Looking for setter (Slither line:1200)

Looking for setter in BaseUpgradeabilityProxy (Slither line:1204)


Begin BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)

End BaseUpgradeabilityProxy.find_setter_in_contract (Slither line:3345)


Could not find setter in BaseUpgradeabilityProxy 
Looking in MintGatewayProxy (Slither line:1213)

Begin MintGatewayProxy.find_setter_in_contract (Slither line:3119)

Expression: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (Slither line:3122)
Checking function: slitherConstructorConstantVariables() returns() (Slither line:3127)
Visibility: internal
Checking function: initialize(address,address,bytes) returns() (Slither line:3127)
Checking function: initialize(address,bytes) returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _upgradeTo(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _setImplementation(address) returns() (Slither line:3127)
Visibility: internal
Checking function: fallback() returns() (Slither line:3127)
Checking function: _implementation() returns(address) (Slither line:3127)
Visibility: internal
Checking function: _delegate(address) returns() (Slither line:3127)
Visibility: internal
Checking function: _willFallback() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)
Checking function: admin() returns(address) (Slither line:3127)
Visibility: external
ifAdmin()
_fallback()
_willFallback()
_delegate(_implementation())
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
_admin()
super._willFallback()
Checking function: implementation() returns(address) (Slither line:3127)
Visibility: external
_fallback()
_implementation()
_willFallback()
ifAdmin()
_delegate(_implementation())
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
super._willFallback()
Checking function: changeAdmin(address) returns() (Slither line:3127)
Visibility: external
_setAdmin(newAdmin)
_fallback()
ifAdmin()
_willFallback()
_delegate(_implementation())
{ sstore(slot, newAdmin) } (Slither line:3163)
changeAdmin reads and/or writes to variable slot (Slither line:3170)
changeAdmin reads and/or writes to variable ADMIN_SLOT (Slither line:3170)
require(bool,string)(newAdmin != address(0),Cannot change the admin of a proxy to the zero address)
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
AdminChanged(_admin(),newAdmin)
super._willFallback()
Checking function: upgradeTo(address) returns() (Slither line:3127)
Visibility: external
_fallback()
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
_upgradeTo(newImplementation)
ifAdmin()
    sstore(slot, newImplementation) (Slither line:3163)
upgradeTo reads and/or writes to variable slot (Slither line:3170)
upgradeTo reads and/or writes to variable IMPLEMENTATION_SLOT (Slither line:3170)
upgradeTo reads and/or writes to variable OpenZeppelinUpgradesAddress (Slither line:3170)
upgradeTo reads and/or writes to variable newImplementation (Slither line:3170)

End MintGatewayProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: upgradeTo in contract: MintGatewayProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:2974)

IMPLEMENTATION_SLOT is a Variable object
0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc

End BaseUpgradeabilityProxy.find_getter_in_contract (Slither line:3083)


Implementation retrieved by function: _implementation in contract: BaseUpgradeabilityProxy (Slither line:1285)

End MintGatewayProxy.is_upgradeable_proxy (Slither line:1293)

detect_storage_slot: MintGatewayProxy
Setter found in contract MintGatewayProxy
impl_address_from_contract_call: 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
impl_address_from_contract_call: StateVariable IMPLEMENTATION_SLOT
impl_address_from_contract_call: getter is _implementation
getter.full_name = _implementation()
library call: OpenZeppelinUpgradesAddress.isContract
impl_address_from_contract_call: CallExpression _delegate(_implementation())
impl_address_from_contract_call: arg is _implementation()
impl_address_from_contract_call: CallExpression _implementation()
impl_address_from_contract_call: CallExpression require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
impl_address_from_contract_call: arg is msg.sender != _admin()
impl_address_from_contract_call: arg is Cannot call fallback function from the proxy admin
impl_address_from_contract_call: CallExpression _fallback()
impl_address_from_contract_call: CallExpression _willFallback()
impl_address_from_contract_call: CallExpression super._willFallback()
Checking public function initialize
Checking public function initialize
Checking external function admin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function implementation
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function changeAdmin
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeTo
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function upgradeToAndCall
Found 'msg.sender ==' in expression: msg.sender == _admin()
Checking external function fallback
Found 'msg.sender !=' in expression: require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
functions_writing_to_variable: IMPLEMENTATION_SLOT
functions_writing_to_variable: checking function MintGatewayProxy._setAdmin (proxy_features line:898)
functions_writing_to_variable: checking function MintGatewayProxy._upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function MintGatewayProxy._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function MintGatewayProxy.upgradeTo (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeTo writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function MintGatewayProxy.initialize (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: initialize writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function MintGatewayProxy.initialize (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: initialize writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function MintGatewayProxy._willFallback (proxy_features line:898)
functions_writing_to_variable: checking function MintGatewayProxy._setImplementation (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: _setImplementation writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function MintGatewayProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function MintGatewayProxy.upgradeToAndCall (proxy_features line:898)
functions_writing_to_variable: found sstore:
    sstore(slot, newImplementation)
(proxy_features line:953)
newImplementation
functions_writing_to_variable: upgradeToAndCall writes newImplementation to IMPLEMENTATION_SLOT w/ sstore (proxy_features line:959)
functions_writing_to_variable: checking function MintGatewayProxy.slitherConstructorConstantVariables (proxy_features line:898)
functions_writing_to_variable: exp = IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc (proxy_features line:912)
functions_writing_to_variable: Identifier: IMPLEMENTATION_SLOT (proxy_features line:924)
get_value_assigned: IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc
functions_writing_to_variable: exp = ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 (proxy_features line:912)
functions_writing_to_variable: checking function MintGatewayProxy.admin (proxy_features line:898)
functions_writing_to_variable: checking function MintGatewayProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function MintGatewayProxy.implementation (proxy_features line:898)
functions_writing_to_variable: checking function MintGatewayProxy._admin (proxy_features line:898)
functions_writing_to_variable: checking function MintGatewayProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function MintGatewayProxy._implementation (proxy_features line:898)
functions_writing_to_variable: checking function MintGatewayProxy.changeAdmin (proxy_features line:898)
functions_writing_to_variable: checking function MintGatewayProxy._delegate (proxy_features line:898)
has_compatibility_checks: dependencies: []
has_compatibility_checks: skipping internal function _upgradeTo
has_compatibility_checks: checking external function upgradeTo
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
has_compatibility_checks: checking public function initialize
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
has_compatibility_checks: IF node exp = _data.length > 0
assert(bool)(ADMIN_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.admin)) - 1))
has_compatibility_checks: condition ADMIN_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.admin)) - 1)
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
has_compatibility_checks: checking public function initialize
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: condition size > 0
require(bool)(_implementation() == address(0))
has_compatibility_checks: condition _implementation() == address(0)
assert(bool)(IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1))
has_compatibility_checks: condition IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(bytes)(eip1967.proxy.implementation)) - 1)
has_compatibility_checks: IF node exp = _data.length > 0
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
has_compatibility_checks: skipping internal function _setImplementation
has_compatibility_checks: checking external function upgradeToAndCall
require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_compatibility_checks: condition OpenZeppelinUpgradesAddress.isContract(newImplementation)
check_condition_from_expression: modifier calls: ['ifAdmin()']
check_condition_from_expression: condition size > 0
has_compatibility_checks: IF node exp = msg.sender == _admin()
require(bool)(success)
has_compatibility_checks: condition success
check_condition_from_expression: Identifier success
require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_compatibility_checks: condition msg.sender != _admin()
can_toggle_delegatecall_on_off: found delegatecall in ASSEMBLY node: {
    calldatacopy(0, 0, calldatasize())
    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)
    returndatacopy(0, 0, returndatasize())
    switch result
    case 0 { revert(0, returndatasize()) }
    default { return(0, returndatasize()) }
}
can_toggle_delegatecall_on_off:
 dominator node type: INLINE ASM
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: ENTRY_POINT
 dominator expression: None
Found public function: initialize
has_time_delay: (node.type) EXPRESSION
(Expression) _fallback()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(OpenZeppelinUpgradesAddress.isContract(newImplementation),Cannot set a proxy implementation to a non-contract address)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) _upgradeTo(newImplementation)
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = IMPLEMENTATION_SLOT
has_time_delay: (node.type) EXPRESSION
(Expression) ifAdmin()
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) _willFallback()
has_time_delay: (node.type) EXPRESSION
(Expression) _delegate(_implementation())
has_time_delay: (node.type) EXPRESSION
(Expression) _setImplementation(newImplementation)
has_time_delay: (node.type) EXPRESSION
(Expression) Upgraded(newImplementation)
has_time_delay: (node.type) IF
(Expression) msg.sender == _admin()
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(msg.sender != _admin(),Cannot call fallback function from the proxy admin)
has_time_delay: (node.type) EXPRESSION
(Expression) super._willFallback()
has_time_delay: (node.type) NEW VARIABLE
(Expression) slot = ADMIN_SLOT
