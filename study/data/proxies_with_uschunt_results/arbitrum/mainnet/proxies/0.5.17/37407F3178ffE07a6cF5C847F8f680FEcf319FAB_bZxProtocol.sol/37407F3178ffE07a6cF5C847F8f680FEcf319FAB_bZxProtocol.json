{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "contract": "bZxProtocol (../../smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies/0.5.17/37407F3178ffE07a6cF5C847F8f680FEcf319FAB_bZxProtocol.sol/37407F3178ffE07a6cF5C847F8f680FEcf319FAB_bZxProtocol.sol#933-988)",
        "elements": [],
        "description": "bZxProtocol (../../smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies/0.5.17/37407F3178ffE07a6cF5C847F8f680FEcf319FAB_bZxProtocol.sol/37407F3178ffE07a6cF5C847F8f680FEcf319FAB_bZxProtocol.sol#933-988) is an upgradeable proxy.\nlogicTargets was found in a different contract.\nlogicTargets is a mapping of type mapping(bytes4 => address)\nlogicTargets maps function signatures to addresses, suggesting multiple implementations.\nNo setter functions found to search for compatibility checks.\nCan toggle delegatecall on/off: condition: gasleft()() <= 2300\n",
        "id": "9226885001cb1c1cbe6d54a5a741d05b1bbe62aab0230079b808840d6e6038b1",
        "features": {
          "upgradeable": true,
          "impl_address_variable": "State.logicTargets",
          "impl_address_setter": "bZxProtocol.setTargets(string[],address[])",
          "impl_address_getter": "bZxProtocol.getTarget(string)",
          "impl_address_location": "State (../../smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies/0.5.17/37407F3178ffE07a6cF5C847F8f680FEcf319FAB_bZxProtocol.sol/37407F3178ffE07a6cF5C847F8f680FEcf319FAB_bZxProtocol.sol#842-918)",
          "impl_address_scope": "StateVariable",
          "impl_address_type": "mapping(bytes4 => address)",
          "impl_mapping_from_msg_sig": true,
          "eip_2535": false,
          "eip_1538": true,
          "transparent": false,
          "external_functions_require_specific_sender": false,
          "fallback_receive_not_callable_by_specific_sender": false,
          "compatibility_checks": {
            "has_all_checks": true,
            "functions": "no setters found"
          },
          "can_remove_upgradeability": false,
          "can_toggle_delegatecall": true,
          "toggle_delegatecall_condition": "!gasleft()() <= 2300",
          "toggle_alternative_logic": "None",
          "immutable_functions": {
            "other": [
              "owner()",
              "isOwner()",
              "renounceOwnership()",
              "transferOwnership(address)",
              "replaceContract(address)",
              "setTargets(string[],address[])",
              "getTarget(string)"
            ]
          }
        }
      }
    ]
  }
}