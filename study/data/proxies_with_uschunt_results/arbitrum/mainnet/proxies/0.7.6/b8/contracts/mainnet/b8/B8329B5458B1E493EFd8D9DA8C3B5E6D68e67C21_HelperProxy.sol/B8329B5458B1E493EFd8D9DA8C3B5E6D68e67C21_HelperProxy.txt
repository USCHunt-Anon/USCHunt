
Begin Address.is_proxy (Slither line:1425)


End Address.is_proxy (Slither line:1428)


Begin Address.is_upgradeable_proxy (Slither line:1136)

Checking contract: Address 

End Address.is_upgradeable_proxy (Slither line:1407)


Begin Context.is_proxy (Slither line:1425)


End Context.is_proxy (Slither line:1428)


Begin Context.is_upgradeable_proxy (Slither line:1136)

Checking contract: Context 

End Context.is_upgradeable_proxy (Slither line:1407)


Begin Ownable.is_proxy (Slither line:1425)


End Ownable.is_proxy (Slither line:1428)


Begin Ownable.is_upgradeable_proxy (Slither line:1136)

Checking contract: Ownable 

End Ownable.is_upgradeable_proxy (Slither line:1407)


Begin HelperProxy.is_proxy (Slither line:1425)

EXPRESSION (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Begin HelperProxy.find_delegatecall_in_exp_node

Found Expression Node: revert(uint256,uint256)(0,returndatasize()()) (Slither line:2802)
Expression called: revert(uint256,uint256)
Type of call:  (Slither line:2817)
Args:
0
returndatasize()()

End HelperProxy.find_delegatecall_in_exp_node (Slither line:2858)

NEW VARIABLE (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

ENTRY_POINT (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

END_IF (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)

INLINE ASM (Slither line:1433)

Begin Contract.find_delegatecall_in_ir (Slither line:2737)


End Contract.find_delegatecall_in_ir (Slither line:2773)


Found Assembly Node (Slither line:1447)


Begin HelperProxy.find_delegatecall_in_asm (Slither line:1541)


Found delegatecall in YulFunctionCall (Slither line:1563)
Destination param is called 'impl'
Looking for corresponding Variable
Current function: _fallback

Begin HelperProxy.find_delegate_variable_from_name
Searching for impl (Slither line:1674)

Searching State Variables (Slither line:1687)
Checking _owner (Slither line:1689)
Checking implementation (Slither line:1689)

Searching Local Variables (Slither line:1698)
Checking impl (Slither line:1703)
impl is a Local Variable in HelperProxy._fallback (Slither line:1707)
Expression: implementation (Slither line:1719)
Identifier value: implementation (Slither line:1725)
implementation is a State Variable in contract HelperProxy (Slither line:1730)

End HelperProxy.find_delegate_variable_by_name


End HelperProxy.find_delegatecall_in_asm (Slither line:1637)


End HelperProxy.is_proxy (Slither line:1476)


Begin HelperProxy.is_upgradeable_proxy (Slither line:1136)

Checking contract: HelperProxy 
HelperProxy is delegating to implementation
Looking for setter (Slither line:1200)


Begin HelperProxy.find_setter_in_contract (Slither line:3119)

Checking function: constructor(address) returns() (Slither line:3127)
Checking function: fallback() returns() (Slither line:3127)
Checking function: receive() returns() (Slither line:3127)
Checking function: _fallback() returns() (Slither line:3127)
Checking function: replaceImplementation(address) returns() (Slither line:3127)
Visibility: public
_owner
require(bool,string)(Address.isContract(impl),not a contract)
size > 0
implementation = impl
is an Assignment Operation (Slither line:3216)

End HelperProxy.find_setter_in_contract (Slither line:3345)


Implementation set by function: replaceImplementation in contract: HelperProxy (Slither line:1264)
Looking for getter (Slither line:1273)


Begin HelperProxy.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
impl
Checking function: constructor (Slither line:2988)
Checking function: owner (Slither line:2988)
owner returns address variable  (Slither line:3008)
RETURN node expression: _owner (Slither line:3028)
Checking function: renounceOwnership (Slither line:2988)
Checking function: transferOwnership (Slither line:2988)
Checking function: _msgSender (Slither line:2988)
_msgSender returns address variable  (Slither line:3008)
RETURN node expression: msg.sender (Slither line:3028)
Checking function: _msgData (Slither line:2988)
_msgData returns bytes variable  (Slither line:3008)
RETURN node expression: msg.data (Slither line:3028)
Checking function: constructor (Slither line:2988)
Checking function: fallback (Slither line:2988)
Checking function: receive (Slither line:2988)
Checking function: _fallback (Slither line:2988)
Checking function: replaceImplementation (Slither line:2988)

End HelperProxy.find_getter_in_contract (Slither line:3083)

Could not find implementation getter in HelperProxy (Slither line:1305)

Begin Address.find_getter_in_contract (Slither line:2974)

implementation is a Variable object
impl
Checking function: isContract (Slither line:2988)
isContract returns bool variable  (Slither line:3008)
RETURN node expression: size > 0 (Slither line:3028)
Checking function: sendValue (Slither line:2988)
Checking function: functionCall (Slither line:2988)
functionCall returns bytes variable  (Slither line:3008)
RETURN node expression: functionCall(target,data,Address: low-level call failed) (Slither line:3028)
Checking function: functionCall (Slither line:2988)
functionCall returns bytes variable  (Slither line:3008)
RETURN node expression: functionCallWithValue(target,data,0,errorMessage) (Slither line:3028)
Checking function: functionCallWithValue (Slither line:2988)
functionCallWithValue returns bytes variable  (Slither line:3008)
RETURN node expression: functionCallWithValue(target,data,value,Address: low-level call with value failed) (Slither line:3028)
Checking function: functionCallWithValue (Slither line:2988)
functionCallWithValue returns bytes variable  (Slither line:3008)
RETURN node expression: _verifyCallResult(success,returndata,errorMessage) (Slither line:3028)
Checking function: functionStaticCall (Slither line:2988)
functionStaticCall returns bytes variable  (Slither line:3008)
RETURN node expression: functionStaticCall(target,data,Address: low-level static call failed) (Slither line:3028)
Checking function: functionStaticCall (Slither line:2988)
functionStaticCall returns bytes variable  (Slither line:3008)
RETURN node expression: _verifyCallResult(success,returndata,errorMessage) (Slither line:3028)
Checking function: functionDelegateCall (Slither line:2988)
functionDelegateCall returns bytes variable  (Slither line:3008)
RETURN node expression: functionDelegateCall(target,data,Address: low-level delegate call failed) (Slither line:3028)
Checking function: functionDelegateCall (Slither line:2988)
functionDelegateCall returns bytes variable  (Slither line:3008)
RETURN node expression: _verifyCallResult(success,returndata,errorMessage) (Slither line:3028)
Checking function: _verifyCallResult (Slither line:2988)
_verifyCallResult returns bytes variable  (Slither line:3008)
RETURN node expression: returndata (Slither line:3028)

End Address.find_getter_in_contract (Slither line:3083)

Checking public function owner
Checking public function renounceOwnership
Checking public function transferOwnership
Checking public function replaceImplementation
Checking external function fallback
Checking external function receive
functions_writing_to_variable: implementation
functions_writing_to_variable: checking function HelperProxy._fallback (proxy_features line:898)
functions_writing_to_variable: checking function HelperProxy.constructor (proxy_features line:898)
get_value_assigned: implementation = impl
functions_writing_to_variable: constructor writes impl to implementation (proxy_features line:1013)
functions_writing_to_variable: checking function HelperProxy.constructor (proxy_features line:898)
functions_writing_to_variable: checking function HelperProxy.transferOwnership (proxy_features line:898)
functions_writing_to_variable: checking function HelperProxy.renounceOwnership (proxy_features line:898)
functions_writing_to_variable: checking function HelperProxy.receive (proxy_features line:898)
functions_writing_to_variable: checking function HelperProxy.replaceImplementation (proxy_features line:898)
functions_writing_to_variable: exp = require(bool,string)(Address.isContract(impl),not a contract) (proxy_features line:909)
functions_writing_to_variable: exp = implementation = impl (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: implementation = impl (proxy_features line:912)
functions_writing_to_variable: Identifier: implementation (proxy_features line:924)
get_value_assigned: implementation = impl
functions_writing_to_variable: exp = onlyOwner() (proxy_features line:909)
functions_writing_to_variable: exp = require(bool,string)(owner() == _msgSender(),Ownable: caller is not the owner) (proxy_features line:909)
functions_writing_to_variable: exp = size = extcodesize(uint256)(account) (proxy_features line:909)
functions_writing_to_variable: AssignmentOperation: size = extcodesize(uint256)(account) (proxy_features line:912)
functions_writing_to_variable: exp = size > 0 (proxy_features line:909)
functions_writing_to_variable: exp = _owner (proxy_features line:909)
functions_writing_to_variable: exp = msg.sender (proxy_features line:909)
functions_writing_to_variable: replaceImplementation writes impl to implementation (proxy_features line:929)
functions_writing_to_variable: checking function HelperProxy.owner (proxy_features line:898)
functions_writing_to_variable: checking function HelperProxy.fallback (proxy_features line:898)
functions_writing_to_variable: checking function HelperProxy._msgData (proxy_features line:898)
functions_writing_to_variable: checking function HelperProxy._msgSender (proxy_features line:898)
has_compatibility_checks: dependencies: ['impl', '_impl']
has_compatibility_checks: skipping constructor
has_compatibility_checks: checking public function replaceImplementation
require(bool,string)(Address.isContract(impl),not a contract)
has_compatibility_checks: condition Address.isContract(impl)
check_condition_from_expression: modifier calls: ['onlyOwner()']
check_condition_from_expression: condition extcodesize(uint256)(account) > 0
require(bool,string)(owner() == _msgSender(),Ownable: caller is not the owner)
has_compatibility_checks: condition owner() == _msgSender()
can_toggle_delegatecall_on_off: found delegatecall in EXPRESSION node: None
can_toggle_delegatecall_on_off:
 dominator node type: NEW VARIABLE
 dominator expression: None
can_toggle_delegatecall_on_off:
 dominator node type: IF
 dominator expression: gasleft()() <= 2300
can_toggle_delegatecall_on_off: successors:
 NodeType: EXPRESSION  expression: revert(uint256,uint256)(0,returndatasize()())
 NodeType: NEW VARIABLE  expression: None
 NodeType: END_IF  expression: None
 NodeType: INLINE ASM  expression: {'AST': {'nodeType': 'YulBlock', 'src': '11693:317:0', 'statements': [{'expression': {'arguments': [{'kind': 'number', 'nodeType': 'YulLiteral', 'src': '11720:1:0', 'type': '', 'value': '0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '11723:1:0', 'type': '', 'value': '0'}, {'arguments': [], 'functionName': {'name': 'calldatasize', 'nodeType': 'YulIdentifier', 'src': '11726:12:0'}, 'nodeType': 'YulFunctionCall', 'src': '11726:14:0'}], 'functionName': {'name': 'calldatacopy', 'nodeType': 'YulIdentifier', 'src': '11707:12:0'}, 'nodeType': 'YulFunctionCall', 'src': '11707:34:0'}, 'nodeType': 'YulExpressionStatement', 'src': '11707:34:0'}, {'nodeType': 'YulVariableDeclaration', 'src': '11754:64:0', 'value': {'arguments': [{'arguments': [], 'functionName': {'name': 'gas', 'nodeType': 'YulIdentifier', 'src': '11781:3:0'}, 'nodeType': 'YulFunctionCall', 'src': '11781:5:0'}, {'name': 'impl', 'nodeType': 'YulIdentifier', 'src': '11788:4:0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '11794:1:0', 'type': '', 'value': '0'}, {'arguments': [], 'functionName': {'name': 'calldatasize', 'nodeType': 'YulIdentifier', 'src': '11797:12:0'}, 'nodeType': 'YulFunctionCall', 'src': '11797:14:0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '11813:1:0', 'type': '', 'value': '0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '11816:1:0', 'type': '', 'value': '0'}], 'functionName': {'name': 'delegatecall', 'nodeType': 'YulIdentifier', 'src': '11768:12:0'}, 'nodeType': 'YulFunctionCall', 'src': '11768:50:0'}, 'variables': [{'name': 'result', 'nodeType': 'YulTypedName', 'src': '11758:6:0', 'type': ''}]}, {'expression': {'arguments': [{'kind': 'number', 'nodeType': 'YulLiteral', 'src': '11847:1:0', 'type': '', 'value': '0'}, {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '11850:1:0', 'type': '', 'value': '0'}, {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '11853:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '11853:16:0'}], 'functionName': {'name': 'returndatacopy', 'nodeType': 'YulIdentifier', 'src': '11832:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '11832:38:0'}, 'nodeType': 'YulExpressionStatement', 'src': '11832:38:0'}, {'cases': [{'body': {'nodeType': 'YulBlock', 'src': '11917:31:0', 'statements': [{'expression': {'arguments': [{'kind': 'number', 'nodeType': 'YulLiteral', 'src': '11926:1:0', 'type': '', 'value': '0'}, {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '11929:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '11929:16:0'}], 'functionName': {'name': 'revert', 'nodeType': 'YulIdentifier', 'src': '11919:6:0'}, 'nodeType': 'YulFunctionCall', 'src': '11919:27:0'}, 'nodeType': 'YulExpressionStatement', 'src': '11919:27:0'}]}, 'nodeType': 'YulCase', 'src': '11910:38:0', 'value': {'kind': 'number', 'nodeType': 'YulLiteral', 'src': '11915:1:0', 'type': '', 'value': '0'}}, {'body': {'nodeType': 'YulBlock', 'src': '11969:31:0', 'statements': [{'expression': {'arguments': [{'kind': 'number', 'nodeType': 'YulLiteral', 'src': '11978:1:0', 'type': '', 'value': '0'}, {'arguments': [], 'functionName': {'name': 'returndatasize', 'nodeType': 'YulIdentifier', 'src': '11981:14:0'}, 'nodeType': 'YulFunctionCall', 'src': '11981:16:0'}], 'functionName': {'name': 'return', 'nodeType': 'YulIdentifier', 'src': '11971:6:0'}, 'nodeType': 'YulFunctionCall', 'src': '11971:27:0'}, 'nodeType': 'YulExpressionStatement', 'src': '11971:27:0'}]}, 'nodeType': 'YulCase', 'src': '11961:39:0', 'value': 'default'}], 'expression': {'name': 'result', 'nodeType': 'YulIdentifier', 'src': '11891:6:0'}, 'nodeType': 'YulSwitch', 'src': '11884:116:0'}]}, 'evmVersion': 'istanbul', 'externalReferences': [{'declaration': 466, 'isOffset': False, 'isSlot': False, 'src': '11788:4:0', 'valueSize': 1}], 'id': 469, 'nodeType': 'InlineAssembly', 'src': '11684:326:0'}
 NodeType: RETURN  expression: None
 NodeType: EXPRESSION  expression: return(uint256,uint256)(0,returndatasize()())
 NodeType: IF  expression: switch_expr_11884_116_0__fallback_asm_0 == 0
 NodeType: EXPRESSION  expression: switch_expr_11884_116_0__fallback_asm_0 = result__fallback_asm_0
 NodeType: NEW VARIABLE  expression: None
 NodeType: EXPRESSION  expression: calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())
 NodeType: END_IF  expression: None
 NodeType: NEW VARIABLE  expression: impl = implementation
 NodeType: EXPRESSION  expression: result__fallback_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),impl,0,calldatasize()(),0,0)
can_toggle_delegatecall_on_off: delegatecall_condition = False
 NodeType: EXPRESSION  expression: returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())
Found public function: owner
has_time_delay: (node.type) RETURN
(Expression) _owner
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(Address.isContract(impl),not a contract)
has_time_delay: (node.type) RETURN
(Expression) size > 0
has_time_delay: (node.type) EXPRESSION
(Expression) implementation = impl
has_time_delay: (node.type) EXPRESSION
(Expression) size = extcodesize(uint256)(account)
has_time_delay: (node.type) EXPRESSION
(Expression) require(bool,string)(owner() == _msgSender(),Ownable: caller is not the owner)
has_time_delay: (node.type) RETURN
(Expression) msg.sender
has_time_delay: (node.type) EXPRESSION
(Expression) onlyOwner()
