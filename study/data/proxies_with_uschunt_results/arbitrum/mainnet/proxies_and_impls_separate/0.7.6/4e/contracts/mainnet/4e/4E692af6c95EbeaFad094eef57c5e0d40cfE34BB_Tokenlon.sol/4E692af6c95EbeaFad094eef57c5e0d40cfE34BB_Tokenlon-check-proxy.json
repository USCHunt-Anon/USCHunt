{
  "success": false,
  "error": "Invalid compilation: \nInvalid solc compilation Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> /home/USCHunt/Documents/ethereum/smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies_and_impls_separate//0.7.6/4e/contracts/mainnet/4e/4E692af6c95EbeaFad094eef57c5e0d40cfE34BB_Tokenlon.sol/4E692af6c95EbeaFad094eef57c5e0d40cfE34BB_Tokenlonimplementation.sol\n\nError: ABI coder has already been selected for this source unit.\n   --> /home/USCHunt/Documents/ethereum/smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies_and_impls_separate//0.7.6/4e/contracts/mainnet/4e/4E692af6c95EbeaFad094eef57c5e0d40cfE34BB_Tokenlon.sol/4E692af6c95EbeaFad094eef57c5e0d40cfE34BB_Tokenlonimplementation.sol:167:1:\n    |\n167 | pragma abicoder v2;\n    | ^^^^^^^^^^^^^^^^^^^\n\nError: ABI coder has already been selected for this source unit.\n   --> /home/USCHunt/Documents/ethereum/smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies_and_impls_separate//0.7.6/4e/contracts/mainnet/4e/4E692af6c95EbeaFad094eef57c5e0d40cfE34BB_Tokenlon.sol/4E692af6c95EbeaFad094eef57c5e0d40cfE34BB_Tokenlonimplementation.sol:179:1:\n    |\n179 | pragma abicoder v2;\n    | ^^^^^^^^^^^^^^^^^^^\n\nError: Definition of base has to precede definition of derived contract\n   --> /home/USCHunt/Documents/ethereum/smart-contract-sanctuary/arbitrum/contracts/mainnet/proxies_and_impls_separate//0.7.6/4e/contracts/mainnet/4e/4E692af6c95EbeaFad094eef57c5e0d40cfE34BB_Tokenlon.sol/4E692af6c95EbeaFad094eef57c5e0d40cfE34BB_Tokenlonimplementation.sol:135:32:\n    |\n135 | abstract contract Multicall is IMulticall {\n    |                                ^^^^^^^^^^\n\n",
  "results": {
    "proxy-present": false,
    "contract_v2-present": false,
    "detectors": []
  }
}